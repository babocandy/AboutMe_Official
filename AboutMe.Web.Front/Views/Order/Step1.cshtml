@model AboutMe.Domain.Entity.Order.ORDER_STEP1_MODEL
@{
    ViewBag.Title = "주문/결제 - ABOUT ME";
    ViewBag.TopClass = "order";

    //  if (!Model.UserProfile.IS_LOGIN)
    // {
    ViewBag.TopClass += " nonmb";
    // }

    Layout = "~/Views/Shared/_AboutMeLayoutB.cshtml";
}
@section Scripts {
    <link href="/aboutCom/css/cart.css" rel="stylesheet" />
    <script language="javascript">
        function textCounter(field, maxlimit) {
	        var applycontents;
    
            var str_cnt = 0;
            var tempStr, tempStr2;	
	
            for(var i=0; i<field.value.length; i++)
            {
	            tempStr = field.value.charAt(i);
	            if(escape(tempStr).length > 4 || escape(tempStr)=="%0A") str_cnt += 2;
  	            else str_cnt += 1 ;
            }
    
             if (str_cnt > maxlimit){
	            alert("최대 " + maxlimit + "bytes까지만 입력 가능합니다.");		
	            str_cnt = 0;		
	            tempStr2 = "";
	            for(i = 0; i < field.value.length; i++) 
	            {
		            tempStr = field.value.charAt(i);	
		            if(escape(tempStr).length > 4 || escape(tempStr)=="%0A") str_cnt += 2;
      	            else str_cnt += 1 ;
      	            if (str_cnt > maxlimit)
      	            {
      		            if(escape(tempStr).length > 4 || escape(tempStr)=="%0A") str_cnt -= 2;
      		            else str_cnt -= 1 ;	
      		            break;	      		
      	            }
      	            else tempStr2 += tempStr;
                }	    
	            field.value = tempStr2;
            }
    
             $(".txtcnt").html("(<em>" + str_cnt + "자</em>/" + maxlimit + "자)");

        }

        function cancelOrder()
        {
            if (confirm("장바구니로 이동하시겠습니까?")) {
                location.href = "/Cart";
            }
        }

        //주문결제
        function payConfirm()
        {

        }
        //쿠폰팝업
        function CouponPopup(linkname) {
            var sw = screen.availWidth;
            var sh = screen.availHeight;
            var popNM = '/Order/CouponPop?OrderIdx=@Model.OrderIdx'+linkname;
            var width = 740;
            var height = 600;
            px = (sw - width) / 2;
            py = (sh - height) / 2;
            var set = 'top=' + py + ',left=' + px;
            set += ',width=' + width + ',height=' + height + ',menubar = no, toolbar = no, location = no, status = no, scrollbars = yes, resizable = yes';
            window.name = "CouponPopup";
            window.open(popNM, '', set);
        }

    </script>
}

@helper NoMemberBanner()
{
    <div class="banner boxtypef mt40">
        <h3>배너 이미지</h3>
        <a href="#" class="jointxt"><img src="/aboutCom/images/cart/nonmb_jointxt.png" alt="지금 어바웃미 멤버십에 가입 하세요" /></a>
        <span class="benefittxt"><img src="/aboutCom/images/cart/nonmb_bannertxt.png" alt="특별한 회원 혜택 - 구매 금액의 최대 5%  적립 - 회원가입 시 10,000원 할인쿠폰 - 구매금액별 사은품 지급 - 생일쿠폰 지급 VIP 추가 혜택 - 추가 5% 할인 - 무료배송 쿠폰(월 기준)" /></span>
        <div class="btn_nonmb">
            <a href="/MemberShip/JoinStep1" class="btn_white_w155h48">회원가입</a>
            <a href="/MemberShip/Login" class="btn_white_w155h48 mt5">로그인</a>
        </div>
    </div>
}

<!--container-->
order idx : @Model.OrderIdx
<div id="container">
    <div class="container1080">
        <h2><img src="/aboutCom/images/cart/h2_order.png" alt="주문/결제" /></h2>
        <ol class="orderstep">
            <li class="step1"><em>주문/결제</em></li>
            <li class="step2"><span>주문 완료</span></li>
        </ol>
        <div class="clear"></div>

        <div class="orderform">
            <form name="frm" action="">
                <fieldset>
                    <legend>주문 상품 결제옵션 폼</legend>
                    <div class="row1 tabletypeb">
                        @{Html.RenderAction("Step1ProductList", "Order", new { OrderIdx = @Model.OrderIdx});}
                    </div>
                    <div class="orderwrap">
                        <h3>주문 입력정보</h3>
                        @if (Model.UserProfile.IS_LOGIN == false)
                        { 
                            @NoMemberBanner()
                        }
                        else
                        {
                            Html.RenderAction("Step1DiscountInfo", "Order", new { OrderIdx = @Model.OrderIdx });
                        }
                        @{Html.RenderAction("Step1PriceInfo", "Order", new { OrderIdx = @Model.OrderIdx });}
                        
                        <div class="addrinfo contypea divstylea mt20">
                        @{Html.RenderAction("Step1AddressInfo", "Order", new { OrderIdx = @Model.OrderIdx });}
                        </div>
                        <div class="payinfo contypea divstylea mt20">
                        @{Html.RenderAction("Step1PayInfo", "Order", new { OrderIdx = @Model.OrderIdx });}
                        </div>
                    </div>
                </fieldset>
            </form>
        </div>


    </div>
    <div class="container100per notify">
        <div class="inner">
            <div class="boxtyped">
                <h3>알려<br />드립니다.</h3>
                <ul>
                    <li>- 결제금액 30,000원 이상 부터 배송비 무료입니다.</li>
                    <li>- 30,000원 미만시 2,500원 배송비 부과 (단, 도서지역, 제주도, 군부대등은 지역 특성상 추가 요금 발행 할수도 있습니다.)</li>
                    <li>- 최종 결제금액기준으로 포인트 적립됩니다.</li>
                    <li>- 교환 및 반품은 물품 수령 후 7일 이내에 접수(전화 및 게시판)후 당사에 입고된 상품에 한하여 처리됩니다.</li>
                    <li>- 배송 진행 이후에는 주문취소는 반품으로 진행되며, 반품배송비가 추가 발생할 수 있습니다.</li>
                </ul>
            </div>
        </div>
    </div>
</div>
<!--//container-->

<!-- 다음 우편번호 검색-->
<div id="layerPOST" style="display:none;position:fixed;overflow:hidden;z-index:1;-webkit-overflow-scrolling:touch;">
    <img src="//i1.daumcdn.net/localimg/localimages/07/postcode/320/close.png" id="btnCloseLayer" style="cursor:pointer;position:absolute;right:-3px;top:-3px;z-index:1" onclick="closeDaumPostcode()" alt="닫기 버튼">
</div>

<script src="http://dmaps.daum.net/map_js_init/postcode.v2.js"></script>
<script language="javascript">
    // 우편번호 찾기 화면을 넣을 element
    var element_layer = document.getElementById('layerPOST');

    function closeDaumPostcode() {
        // iframe을 넣은 element를 안보이게 한다.
        element_layer.style.display = 'none';
    }

    function sample2_execDaumPostcode(zip1, zip2, addr1) {
        new daum.Postcode({
            oncomplete: function (data) {
                // 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

                // 각 주소의 노출 규칙에 따라 주소를 조합한다.
                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                var fullAddr = data.address; // 최종 주소 변수
                var extraAddr = ''; // 조합형 주소 변수

                // 기본 주소가 도로명 타입일때 조합한다.
                if (data.addressType === 'R') {
                    //법정동명이 있을 경우 추가한다.
                    if (data.bname !== '') {
                        extraAddr += data.bname;
                    }
                    // 건물명이 있을 경우 추가한다.
                    if (data.buildingName !== '') {
                        extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                    }
                    // 조합형주소의 유무에 따라 양쪽에 괄호를 추가하여 최종 주소를 만든다.
                    fullAddr += (extraAddr !== '' ? ' (' + extraAddr + ')' : '');
                }
                var postsplit = data.postcode.split('-');
                // 우편번호와 주소 정보를 해당 필드에 넣는다.
                document.getElementById(zip1).value = postsplit[0]; //6자리 우편번호 사용
                document.getElementById(zip2).value = postsplit[1]; //6자리 우편번호 사용
                //document.getElementById("sample2_postcode").value = data.zonecode; //5자리 기초구역번호 사용
                document.getElementById(addr1).value = fullAddr;
                // document.getElementById('sample2_addressEnglish').value = data.addressEnglish;

                // iframe을 넣은 element를 안보이게 한다.
                element_layer.style.display = 'none';
            },
            width: '100%',
            height: '100%'
        }).embed(element_layer);

        // iframe을 넣은 element를 보이게 한다.
        element_layer.style.display = 'block';

        // iframe을 넣은 element의 위치를 화면의 가운데로 이동시킨다.
        initLayerPosition();
    }

    // 브라우저의 크기 변경에 따라 레이어를 가운데로 이동시키고자 하실때에는
    // resize이벤트나, orientationchange이벤트를 이용하여 값이 변경될때마다 아래 함수를 실행 시켜 주시거나,
    // 직접 element_layer의 top,left값을 수정해 주시면 됩니다.
    function initLayerPosition() {
        var width = 300; //우편번호서비스가 들어갈 element의 width
        var height = 460; //우편번호서비스가 들어갈 element의 height
        var borderWidth = 5; //샘플에서 사용하는 border의 두께

        // 위에서 선언한 값들을 실제 element에 넣는다.
        element_layer.style.width = width + 'px';
        element_layer.style.height = height + 'px';
        element_layer.style.border = borderWidth + 'px solid';
        // 실행되는 순간의 화면 너비와 높이 값을 가져와서 중앙에 뜰 수 있도록 위치를 계산한다.
        element_layer.style.left = (((window.innerWidth || document.documentElement.clientWidth) - width) / 2 - borderWidth) + 'px';
        element_layer.style.top = (((window.innerHeight || document.documentElement.clientHeight) - height) / 2 - borderWidth) + 'px';
    }
</script>
<!-- 다음 우편번호 검색-->