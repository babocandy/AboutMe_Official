@model AboutMe.Domain.Entity.OrderStat.OrderStatCateIndex


@{
    ViewBag.Title = "Report_OrderStat_Daily";
    Layout = "~/Views/Shared/_AboutMeAdminLayoutA.cshtml";
}

@section Scripts{
    <script language="javascript">
        function StatusAllClick1(c) {
            $(".mem_check").each(function (idx) {
                if (c.checked) {
                    $(this).prop('checked', true);
                }
                else {
                    $(this).prop('checked', false);
                }
            });

            if (!c.checked) {
                $("#MEMBER_GBN1").prop('checked', true);
            }

        }

        function StatusAllClick2(c) {
            $(".pat_check").each(function (idx) {
                if (c.checked) {
                    $(this).prop('checked', true);
                }
                else {
                    $(this).prop('checked', false);
                }
            });

            if (!c.checked) {
                $("#PAT_GUBUN1").prop('checked', true);
            }

        }



        $(function () {
            ajaxSelectCateCodeJavascriptInit();
        });

        //카테고리 3depth seleted value값
        function selectCateValue(d) {
            //alert(d.value);
            var f = document.sform;
            if(d.value!=''){
                f.cateCode.value = d.value;
            } else {
                f.cateCode.value = $("#P_CATE_CODE2 option:selected").val();
            }
            //alert("d:" + d.value + "C_CATE_CODE:" + f.cateCode.value);
        }


        //카테고리 유형별(PRODUCT_TYPE) 초기화 1
        function ajaxSelectCateCodeJavascriptInit() {

            var f = document.sform;

            $.ajax({
                url: '/AdminProduct/CategoryListJavascript',
                type: 'POST',
                data: {
                    CATE_GBN: 'PRODUCT_TYPE',
                    DEPTH1_CODE: '',
                    DEPTH2_CODE: ''
                },
                success: function (data) {
                    var result = "<select style='width:120px;' id='P_CATE_CODE1' name='P_CATE_CODE1' onchange='ajaxSelectCateCodeJavascriptProductType1();'>";
                    result += "<option value=''>=선택=</option>";
                    $('#ajaxPCateCode1').html('');
                    $.each(data.msg, function (id, category) {
                        if ((category.CATE_CODE).substring(0, 3) == "@this.ViewBag.cateCode1") {
                            result += '<option value=' + category.CATE_CODE + ' selected >' + category.DEPTH1_NAME + '</option>';
                        } else {
                            result += '<option value=' + category.CATE_CODE + ' >' + category.DEPTH1_NAME + '</option>';
                        }

                        //result += '<option value=' + category.CATE_CODE + '>' + category.DEPTH1_NAME + '</option>';
                    });
                    result += "</select>";

                    $('#ajaxPCateCode1').html(result);

                    @if (!string.IsNullOrEmpty(this.ViewBag.cateCode1))
                    {
                        <text>ajaxSelectCateCodeJavascriptProductType1();</text>
                    }


                },
                error: function (errorData) {
                    alert("ajaxSelectCateCodeJavascriptInit error");
                }
            });
        }

        //카테고리 유형별(PRODUCT_TYPE) ProductType 2
        function ajaxSelectCateCodeJavascriptProductType1() {

            var f = document.sform;
            var DEPTH1_CODE = $("#P_CATE_CODE1 option:selected").val().substring(0, 3);
            f.cateCode.value = $("#P_CATE_CODE1 option:selected").val();
            $('#ajaxPCateCode2').html('');
            $('#ajaxPCateCode3').html('');

            if (DEPTH1_CODE =='')
            {
                return;
            }

            $.ajax({
                url: '/AdminProduct/CategoryListJavascript',
                type: 'POST',
                data: {
                    CATE_GBN: 'PRODUCT_TYPE',
                    DEPTH1_CODE: DEPTH1_CODE,
                    DEPTH2_CODE: ''
                },
                success: function (data) {
                    var result = "<select style='width:120px;' id='P_CATE_CODE2' name='P_CATE_CODE2' onchange='ajaxSelectCateCodeJavascriptProductType2();'>";
                    result += "<option value=''>=선택=</option>";
                    $('#ajaxPCateCode2').html('');
                    $.each(data.msg, function (id, category) {
                        if ((category.CATE_CODE).substring(3, 6) == "@this.ViewBag.cateCode2") {
                            result += '<option value=' + category.CATE_CODE + ' selected >' + category.DEPTH2_NAME + '</option>';
                        } else {
                            result += '<option value=' + category.CATE_CODE + ' >' + category.DEPTH2_NAME + '</option>';
                        }
                    });
                    result += "</select>";

                    $('#ajaxPCateCode2').html(result);
                     @if ((!string.IsNullOrEmpty(this.ViewBag.cateCode2)) && (this.ViewBag.cateCode2 != "100") && (this.ViewBag.cateCode1 == "101"))
                     {
                         <text>ajaxSelectCateCodeJavascriptProductType2();</text>
                     }

                },
                error: function (errorData) {
                    alert("ajaxSelectCateCodeJavascriptProductType1 error");
                }
            });
        }

        //카테고리 유형별(PRODUCT_TYPE) ProductType 3
        function ajaxSelectCateCodeJavascriptProductType2() {

            var f = document.sform;
            var DEPTH1_CODE = $("#P_CATE_CODE1 option:selected").val().substring(0, 3);
            var DEPTH2_CODE = $("#P_CATE_CODE2 option:selected").val().substring(3, 6);

            $('#ajaxPCateCode3').html('');
            //alert("DEPTH1_CODE:" + DEPTH1_CODE + "DEPTH2_CODE:" + DEPTH2_CODE);
            if ((DEPTH1_CODE == '') || (DEPTH2_CODE == '')) {
                f.cateCode.value = $("#P_CATE_CODE1 option:selected").val();
                return;
            }
            f.cateCode.value = $("#P_CATE_CODE2 option:selected").val();


            //var DEPTH1_CODE = $("#P_CATE_CODE1 option:selected").val();
            //var DEPTH2_CODE = $("#P_CATE_CODE2 option:selected").val();
            $.ajax({
                url: '/AdminProduct/CategoryListJavascript',
                type: 'POST',
                data: {
                    CATE_GBN: 'PRODUCT_TYPE',
                    DEPTH1_CODE: DEPTH1_CODE,
                    DEPTH2_CODE: DEPTH2_CODE
                },
                success: function (data) {
                    if ((data.msg).length > 0) { //데이타가 있을때만 생성한다.
                        var result = "<select style='width:120px;' id='P_CATE_CODE3' name='P_CATE_CODE3' onchange='selectCateValue(this);'>";
                        result += "<option value=''>=선택=</option>";
                        $('#ajaxPCateCode3').html('');
                        $.each(data.msg, function (id, category) {
                            if ((category.CATE_CODE).substring(6, 9) == "@this.ViewBag.cateCode3") {
                                result += '<option value=' + category.CATE_CODE + ' selected >' + category.DEPTH3_NAME + '</option>';
                            } else {
                                result += '<option value=' + category.CATE_CODE + ' >' + category.DEPTH3_NAME + '</option>';
                            }
                        });
                        result += "</select>";

                        $('#ajaxPCateCode3').html(result);
                    }

                },
                error: function (errorData) {
                    alert("ajaxSelectCateCodeJavascriptProductType2 error");
                }
            });
        }


        function ChangeDate(d) {
            var from_date, to_date;

            if (d == "1") //오늘
            {
                from_date = '@DateTime.Now.ToString("yyyy-MM-dd")';
                to_date = '@DateTime.Now.ToString("yyyy-MM-dd")';
            }
            else if (d == "7") {
                from_date = '@DateTime.Now.AddDays(-7).ToString("yyyy-MM-dd")';
                to_date = '@DateTime.Now.ToString("yyyy-MM-dd")';
            }
            else if (d == "15") {
                from_date = '@DateTime.Now.AddDays(-15).ToString("yyyy-MM-dd")';
                to_date = '@DateTime.Now.ToString("yyyy-MM-dd")';
            }
            else if (d == "31") {
                from_date = '@DateTime.Now.AddMonths(-1).ToString("yyyy-MM-dd")';
                to_date = '@DateTime.Now.ToString("yyyy-MM-dd")';
            }
            else//  전체기간
            {
                from_date = '';
                to_date = '';
            }

            $("#FROM_DATE").val(from_date);
            $("#TO_DATE").val(to_date);

        }

    </script>
}
@section Left {

    @{Html.RenderPartial("~/Views/AboutMeAdminPartial/_AdminLeft.cshtml");}
}

@section Header{
    @{ Html.RenderPartial("~/Views/AboutMeAdminPartial/_AdminHeader.cshtml");}
}

@section Body{


    @using (Html.BeginForm("OrderStatCate", "OrderStat", FormMethod.Post, new { id = "sform", name = "sform", onsubmit = "return frmCheck();" }))
    {
        <div class="content">
            <input type="hidden" name="cateCode" id="cateCode" value="" />
            <!--path-->
            <div class="path">
                <a href="/">HOME</a> &gt; <a href="#">통계</a> &gt; <a href="#">주문통계</a> &gt; <strong>카테고리별 매출통계</strong>
            </div>
            <!--//path-->

            <div class="panel">
                <h3 class="sub-header">카테고리별 매출통계</h3>
                <div class="">

                    <table class="table table_row">
                        <colgroup></colgroup>
                        <tbody>
                            <tr>
                                <th>주문일자</th>
                                <td colspan="3">
                                    @(Html.Kendo().DatePicker()
                          .Name("FROM_DATE")
                          .Value(Model.searchParam.FROM_DATE)
                          .HtmlAttributes(new { style = "width:120px" })
                                    )
                                    ~
                                    @(Html.Kendo().DatePicker()
                          .Name("TO_DATE")
                          .Value(Model.searchParam.TO_DATE)
                          .HtmlAttributes(new { style = "width:120px" })
                                    )
                                    <a href="#" class="btn btn-primary small" onclick="ChangeDate('1')">오늘</a>
                                    <a href="#" class="btn btn-primary small" onclick="ChangeDate('7')">7일</a>
                                    <a href="#" class="btn btn-primary small" onclick="ChangeDate('15')">15일</a>
                                    <a href="#" class="btn btn-primary small" onclick="ChangeDate('31')">1개월</a><br />
                                </td>
                            </tr>
                            <tr>
                                <th>회원구분</th>
                                <td>
                                    <label for="MEMBER_GBN_All"> @Html.CheckBox("MEMBER_GBN_All", Model == null ? false : true, new { @value = "true", @onclick = "StatusAllClick1(this)" }) <span class="txt mr5">전체</span> </label>
                                    <label for="MEMBER_GBN1"> @Html.CheckBox("MEMBER_GBN1", Model == null ? true : (Model.searchParam.MEMBER_GBN1 == true ? true : false), new { @value = "true", @class = "mem_check" }) <span class="txt mr5">일반회원</span> </label>
                                    <label for="MEMBER_GBN2"> @Html.CheckBox("MEMBER_GBN2", Model == null ? true : (Model.searchParam.MEMBER_GBN2 == true ? true : false), new { @value = "true", @class = "mem_check" }) <span class="txt mr5">임직원</span> </label>
                                    <label for="MEMBER_GBN3"> @Html.CheckBox("MEMBER_GBN3", Model == null ? true : (Model.searchParam.MEMBER_GBN3 == true ? true : false), new { @value = "true", @class = "mem_check" }) <span class="txt mr5">비회원</span> </label>

                                </td>

                            </tr>
                            <tr>
                                <th>주문구분</th>
                                <td colspan="3">
                                    <label for="PAT_GBN_All"> @Html.CheckBox("PAT_GBN_All", Model == null ? false : true, new { @value = "true", @onclick = "StatusAllClick2(this)" }) <span class="txt mr5">전체</span> </label>
                                    <label for="PAT_GUBUN1"> @Html.CheckBox("PAT_GUBUN1", Model == null ? true : (Model.searchParam.PAT_GUBUN1 == true ? true : false), new { @value = "true", @class = "pat_check" }) <span class="txt mr5">Web</span> </label>
                                    <label for="PAT_GUBUN2"> @Html.CheckBox("PAT_GUBUN2", Model == null ? true : (Model.searchParam.PAT_GUBUN2 == true ? true : false), new { @value = "true", @class = "pat_check" }) <span class="txt mr5">Mobile</span> </label>
                                </td>
                            </tr>
                            <tr>
                                <th>카테고리</th>
                                <td colspan="3">
                                    <span id="ajaxPCateCode1"></span>
                                    <span id="ajaxPCateCode2"></span>
                                    <span id="ajaxPCateCode3"></span>
                                    @(Html.Kendo().Button()
                        .Name("submitbtn")
                        .HtmlAttributes(new { type = "submit", @class = "k-primary", @style = "width:100px" })
                        .Content("검색"))
                                    @*
                @(Html.Kendo().Button()
                .Name("resetform")
                .HtmlAttributes(new { type = "button", @class = "k-primary", @style = "width:100px" })
                .Events(ev => ev.Click("onFormReset"))
                .Content("초기화"))
                                    *@
                                </td>


                            </tr>

                        </tbody>
                    </table>

                </div>
            </div>
        </div>
                        <!--//end form-->
    }


<div class="panel">
    
    <!-- 처음과 마지막  th, td에 각각 "brnone" class 사용합니다.-->
    <table class="table table_col" >
        <colgroup><col /><col /><col /><col /></colgroup>
        <thead>
            <tr>
                <th scope="col">NO</th>
                <th scope="col">상품코드</th>
                <th scope="col">상품명</th>
                <th scope="col">주문건수</th>
                <th scope="col">판매수량</th>
                <th scope="col">총 매출액</th>
            </tr>
        </thead>
        <tbody>
            @{ var i = 0;
            foreach (var item in Model.OrderStatCateList)
            {
                i = i + 1;
                <tr>
                    <td>@Convert.ToInt64(i).ToString("#,#0.")</td>
                    <td>@item.P_CODE</td>
                    <td>@item.P_NAME</td>
                    <td>@Convert.ToInt64(item.ORDER_CNT).ToString("#,#0.")건</td>
                    <td>@Convert.ToInt64(item.P_COUNT).ToString("#,#0.")개</td>
                    <td>@Convert.ToInt64(item.REAL_PAY_PRICE).ToString("#,#0.")원</td>
                </tr>
            }
            }
        </tbody>
    </table>
</div>








}
