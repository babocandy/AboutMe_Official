
@*@model IEnumerable<MvcCsBoard.Controllers.PagingValue>*@
@model AboutMe.Common.Data.PagingProps
<div class="paging">
    @{
    //string pg_str = "" ;
    //pg_str = Request.Url.LocalPath + "?" + "page=zzz&page_size=" + Model.page_size;
    }

    @if (Model.HasPreviousBlock)
    {
        <a href="@(Html.Raw(Request.Url.LocalPath + "?" + "page=" + Model.GoPageOfPrevBlock + "&" + Model.QStr))" class="prev">«</a>
    }
    else
    {
        <a href="#" class="prev">«</a>
    }

    @for (var i = Model.StartPage; i <= Model.EndPage; i++)
    {
        if (i == Model.CurrentPage)
        {
            <strong>[@i]</strong>
        }
        else
        {
            @*<a href="@Url.Action(Request.Url.LocalPath, new { page = i, page_size = Model.page_size })" class="btn btn-default">*@
            <a href="@(Html.Raw(Request.Url.LocalPath + "?" + "page=" + i + "&" + Model.QStr))">@i</a>
        }
    }

    @if (Model.HasNextBlock)
    {
        <a href="@(Html.Raw(Request.Url.LocalPath + "?" + "page=" + Model.GoPageOfNextBlock + "&" + Model.QStr))" class="next">»</a>
    }
    else
    {
        <a href="#" class="next">»</a>
    }

</div>
   