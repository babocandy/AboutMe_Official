@*@model AboutMe.Domain.Entity.AdminPromotion.TB_PROMOTION_BY_TOTAL*@

@model AboutMe.Web.Admin.Controllers.AdminPromotionController.MyMultiModelForCreate

@{
    Layout = "~/Views/Shared/_AboutMeAdminLayoutA.cshtml";
}

@functions{
    protected string DisplayMemGradeCheck(string GradeVal) //val 에는 "A$B"값이 들어간다
    {
        /**
        Model.SP_ADMIN_PROMOTION_BY_TOTAL_MEM_GRADE_WITH_CD_SEL_Result[0] 을 LINQ로 뒤져서

       'val' 파라미터값이 있으면
       "checked" 를 리턴해준다.
         **/

        string rtn = "";

        string[] Gv = GradeVal.Split('$');

        var qry = from WD in Model.inst_PROMOTION_BY_TOTAL_MEM_GRADE_WITH_CD_SEL_Result
                  where WD.M_GBN == Gv[0] && WD.M_GRADE == Gv[1]
                  select WD;

        if (qry.Count() > 0)
        {
            rtn = "checked";
        }


        return rtn;
    }
}

@section Scripts{

    @if (TempData["jsMessage"] != null && TempData["jsMessage"] != "")
    {
        @Html.Raw(TempData["jsMessage"]);
    }
    
    <script language="javascript">


    function frmCheck() {

        /**
        alert("여기입니다");

        var f = document.frm01;

        if (f.SEL_PMO_TOTAL_CATEGORY.value == '') {
            alert("프로모션 종류를 선택하세요.");
            f.SEL_PMO_TOTAL_CATEGORY.focus();
            return false;
        }
        **/


        if (f.PMO_TOTAL_RATE_OR_MONEY.value == 'R') {
            //alert(getRadioVal(f, 'inst_TB_COUPON_MASTER_SERVICE_LIFE_GBN'));
            if (f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DISCOUNT_RATE.value == '') {
                alert("[정률/정액 구분]이 -정률-일때는 [쿠폰 할인율]를 입력해야 합니다.");
                f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DISCOUNT_RATE.focus();
                return false;
            }
            else
            {
                if(isNaN(f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DISCOUNT_RATE.value))
                {
                    alert("할인율에는 숫자만 입력하세요");
                    f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DISCOUNT_RATE.focus();
                    return false;
                }

            }
        }

        

        if (f.PMO_TOTAL_RATE_OR_MONEY.value == 'M') {
            //alert(getRadioVal(f, 'inst_TB_COUPON_MASTER_SERVICE_LIFE_GBN'));
            if (f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DISCOUNT_MONEYY.value == '') {
                alert("[정률/정액 구분]이 -정률-일때는 [쿠폰 금액]을 입력해야 합니다.");
                f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DISCOUNT_MONEY.focus();
                return false;
            }
            else {
                
                if (isNaN(f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DISCOUNT_MONEY.value)) {
                    alert("할인액에는 숫자만 입력하세요");
                    f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DISCOUNT_MONEY.focus();
                    return false;
                }

            }

        }

        var is_mem_checked = false;
        // alert(f.CheckMemGrade.length);


        for (var k = 0 ; f.CheckMemGrade.length > k ; k++) {
            if (f.CheckMemGrade[k].checked == true) {
                is_mem_checked = true;
                //alert(k);
                break;
            }
        }



        if (is_mem_checked == false) {

            alert("적용회원등급을 선택하세요");
            f.CheckMemGrade[0].focus();
            return false;

        }
              
        if (f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DATE_FROM.value != '' || f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DATE_TO.value != '') {

            if (f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DATE_FROM.value > f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DATE_TO.value) {
                alert("[프로모션시작일시]가 종료일시보다 먼저여야 합니다.");
                f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DATE_FROM.focus();
                return false;
            }
        }


    }




    function getRadioVal(form, name) {
        var val = "";
        // get list of radio buttons with specified name
        var radios = form.elements[name];


        // loop through list of radio buttons
        // for (var i = 0; radios.length < i; i++)
        for (var i = 0, len = radios.length; i < len; i++) {
            //alert('in:   ' +name + ':' + radios[i].value);
            if (radios[i].checked) { // radio checked?
                val = radios[i].value; // if so, hold its value in val
                break; // and break out of for loop
            }
        }
        return val; // return value of checked radio or undefined if none checked
    }


    function setTotalCategory(obj_selectbox, sel_index) {
        //alert(obj_selectbox[sel_index].value);
        var f = document.frm01;
        f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result.value = obj_selectbox.options[sel_index].value;

        //alert(obj_selectbox[sel_index].value);

        /**
        if (obj_selectbox[sel_index].value == "01") //일반회원 전용할인
        {

            f.CheckMemGrade[0].disabled = false;
            f.CheckMemGrade[1].disabled = false;
            f.CheckMemGrade[2].disabled = false;
            f.CheckMemGrade[3].disabled = false;

            f.CheckMemGrade[4].disabled = true;
            f.CheckMemGrade[5].disabled = true;
            f.CheckMemGrade[6].disabled = true;
            f.CheckMemGrade[7].disabled = true;

        }
        **/

        if (obj_selectbox[sel_index].value == "00") //임직원 전용할인
        {
            f.CheckMemGrade[0].disabled = true;
            f.CheckMemGrade[1].disabled = true;
            f.CheckMemGrade[2].disabled = true;
            f.CheckMemGrade[3].disabled = true;

            f.CheckMemGrade[4].disabled = false;
            f.CheckMemGrade[5].disabled = false;
            f.CheckMemGrade[6].disabled = false;
            f.CheckMemGrade[7].disabled = false;

        }

        if (obj_selectbox[sel_index].value == "03") //등급할인
        {
            f.CheckMemGrade[0].disabled = false;
            f.CheckMemGrade[1].disabled = false;
            f.CheckMemGrade[2].disabled = false;
            f.CheckMemGrade[3].disabled = false;

            f.CheckMemGrade[4].disabled = false;
            f.CheckMemGrade[5].disabled = false;
            f.CheckMemGrade[6].disabled = false;
            f.CheckMemGrade[7].disabled = false;

        }

    }
    </script>

}

@section Left {

    @{Html.RenderPartial("~/Views/AboutMeAdminPartial/_AdminLeft.cshtml");}
}

@section Header{
    @{ Html.RenderPartial("~/Views/AboutMeAdminPartial/_AdminHeader.cshtml");}
}

@section Body{

@if (TempData["jsMessage"] != null)
{ 
    <text>
        @Server.HtmlDecode(TempData["jsMessage"].ToString());
    </text>
}
    <div class="content">
        <!--path-->
        <div class="path">
            <a href="/">HOME</a> &gt;  <a href="#">프로모션 관리</a> &gt; <strong>전체할인 프로모션 수정</strong>
        </div>
        <!--//path-->

        <div class="panel">
            <h3 class="sub-header">전체할인 프로모션 수정</h3>
            @{ var selected_str = "selected";}
            @using (Html.BeginForm("Update", "AdminPromotion", FormMethod.Post, new { id = "frm01", name = "frm01", onsubmit = "return frmCheck();" }))
            {
                @Html.AntiForgeryToken()  //폼 데이터 위조 방지 토큰 생성

                                        <input type="hidden" name="CdPromotionTotal" value="@Request["CdPromotionTotal"].ToString()" />

                                        <table class="table table_row">
                                            <colgroup><col width="25%" /><col width="75%" /></colgroup>
                                            <tbody>

                                                <tr>
                                                    <th>프로모션명 </th>
                                                    <td>@Html.TextBoxFor(model => model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_NAME, new { cssClass = "input-sm text-left" })  <font color="red">@Html.ValidationMessageFor(model => model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_NAME)</font></td>

                                                </tr>
                                                <tr>
                                                    <th>프로모션 종류 </th>
                                                    <td>
                                                        @Html.HiddenFor(model => model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_CATEGORY, new { cssClass = "input-sm text-left" })  <font color="red">@Html.ValidationMessageFor(model => model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_CATEGORY)</font>
                                                        @if (Model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_CATEGORY == "00")
                                                        { 
                                                            @:임직원전용할인
                                                        }
                                                        
                                                        @*@if (Model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_CATEGORY == "01")
                                                        {
                                                            @:일반회원전용할인
                                                        }*@
                                                        
                                                        @if (Model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_CATEGORY == "03")
                                                        {
                                                            <text>
                                                            등급기준할인
                                                            </text>
                                                        }

                                                        
                                                        <!--
                                                        <select name="SEL_PMO_TOTAL_CATEGORY" style="width:270px;" onchange="setTotalCategory(this,this.selectedIndex);">
                                                            <option value="">==선택==</option>
                                                            <option value="00" @if (Model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_CATEGORY == "00") { @selected_str ; }>임직원 전용 할인</option>
                                                            <option value="01" @if (Model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_CATEGORY == "01") { @selected_str ; }>일반회원 전용 할인</option>
                                                            <option value="03" @if (Model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_CATEGORY == "03") { @selected_str ; }>등급기준 할인</option>
                                                        </select>
                                                         -->

                                                    </td>

                                                </tr>
                                            
                                                <tr>
                                                    <th>프로모션 적용 회원등급 </th>
                                                    <td>
                                                        일반 <input type="checkbox" id="CheckMemGrade" name="CheckMemGrade" value="A$B" @DisplayMemGradeCheck("A$B") />브론즈 , <input type="checkbox" id="CheckMemGrade" name="CheckMemGrade" value="A$S" @DisplayMemGradeCheck("A$S") />실버  , <input type="checkbox" id="CheckMemGrade" name="CheckMemGrade" value="A$G" @DisplayMemGradeCheck("A$G") />골드 , <input type="checkbox" id="CheckMemGrade" name="CheckMemGrade" value="A$V" @DisplayMemGradeCheck("A$V") /> VIP
                                                        <br>임직원 <input type="checkbox" id="CheckMemGrade" name="CheckMemGrade" value="S$B" @DisplayMemGradeCheck("S$B") />브론즈 , <input type="checkbox" id="CheckMemGrade" name="CheckMemGrade" value="S$S" @DisplayMemGradeCheck("S$S") />실버  , <input type="checkbox" id="CheckMemGrade" name="CheckMemGrade" value="S$G" @DisplayMemGradeCheck("S$G") / >골드 , <input type="checkbox" id="CheckMemGrade" name="CheckMemGrade" value="S$V" @DisplayMemGradeCheck("S$V") /> VIP
         
                                                    </td>

                                                </tr>
                                                <tr>
                                                    <th>정률/정액 </th>
                                                    <td>
                                                        <input type="hidden" id="PMO_TOTAL_RATE_OR_MONEY" name="PMO_TOTAL_RATE_OR_MONEY" value="@Model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_RATE_OR_MONEY" />
                                                        @if (Model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_RATE_OR_MONEY == "R")
                                                        {
                                                            @:정률할인 (%)
                                                        }
                                                        @if (Model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_RATE_OR_MONEY == "M")
                                                        {
                                                            @:정액할인
                                                        }
                                                    </td>

                                                </tr>
                                                
                                            
                                                <tr>
                                                    <th>할인율 </th>
                                                    <td>@Html.TextBoxFor(model => model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_DISCOUNT_RATE, new { cssClass = "input-sm text-left" })
                                                    @if (DateTime.Now > Model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_DATE_FROM) 
                                                    {
                                                        @:<font color="red">수정불가</font> 
                                                    }  
                                                    @Html.ValidationMessageFor(model => model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_DISCOUNT_RATE) </td>

                                                </tr>
                                                <tr>
                                                    <th>할인액 </th>
                                                    <td>@Html.TextBoxFor(model => model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_DISCOUNT_MONEY, new { cssClass = "input-sm text-left" })
                                                     @if (DateTime.Now > Model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_DATE_FROM) 
                                                     { 
                                                         @:<font color="red">수정불가</font> 
                                                     }
                                                     @Html.ValidationMessageFor(model => model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_DISCOUNT_MONEY)</td>

                                                </tr>
                                              
                                                <tr>
                                                    <th>프로모션시작일시 (YYYY-MM-DD) </th>
                                                    <td>@Html.TextBoxFor(model => model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_DATE_FROM, new { cssClass = "input-sm text-left", value = "2015-09-15 00:00:00"  })  @Html.ValidationMessageFor(model => model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_DATE_FROM)</td>

                                                </tr>
                                                <tr>
                                                    <th>프로모션종료일시 (YYYY-MM-DD) </th>
                                                    <td>@Html.TextBoxFor(model => model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_DATE_TO, new { cssClass = "input-sm text-left", value = "2015-09-20 23:59:59" })  @Html.ValidationMessageFor(model => model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_DATE_TO)</td>

                                                </tr>
                                                <tr>
                                                    <th>활성화/비활성화 </th>
                                                    <td>@Html.RadioButtonFor(model => model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].USABLE_YN, "Y")  활성화  @Html.RadioButtonFor(model => model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].USABLE_YN, "N") 비활성화 @Html.ValidationMessageFor(model => model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].USABLE_YN)</td>

                                                </tr>


                                                <tr>
                                                    <th>저장</th>
                                                    <td>
                                                        <input type="submit" value="저장" class="btn btn-default middium" />
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>

            }
        </div>

        <div class="btn_area">
            <a class="btn btn-primary small" href="/AdminMember/Index">목록</a>
        </div>


    </div>

    <script lang="javascript">
        
        var f = document.frm01;

    @if (Model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_CATEGORY == "00") // 임직원 전용할인
    {

        @:f.CheckMemGrade[0].disabled = true;
        @:f.CheckMemGrade[1].disabled = true;
        @:f.CheckMemGrade[2].disabled = true;
        @:f.CheckMemGrade[3].disabled = true;

        @:f.CheckMemGrade[4].disabled = false;
        @:f.CheckMemGrade[5].disabled = false;
        @:f.CheckMemGrade[6].disabled = false;
        @:f.CheckMemGrade[7].disabled = false;


    }
     @if (Model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_CATEGORY == "01") //  일반 전용할인
     {

         <text>
         f.CheckMemGrade[0].disabled = false;
         f.CheckMemGrade[1].disabled = false;
         f.CheckMemGrade[2].disabled = false;
         f.CheckMemGrade[3].disabled = false;

         f.CheckMemGrade[4].disabled = true;
         f.CheckMemGrade[5].disabled = true;
         f.CheckMemGrade[6].disabled = true;
         f.CheckMemGrade[7].disabled = true;
         </text>


     }
     
    @if (DateTime.Now > Model.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result[0].PMO_TOTAL_DATE_FROM ) //  프로모션이 시작된 경우 수정불가한 항목들 disable 혹은 readonly  처리 
    {

              <text>
              f.CheckMemGrade[0].disabled = true;
              f.CheckMemGrade[1].disabled = true;
              f.CheckMemGrade[2].disabled = true;
              f.CheckMemGrade[3].disabled = true;

              f.CheckMemGrade[4].disabled = true;
              f.CheckMemGrade[5].disabled = true;
              f.CheckMemGrade[6].disabled = true;
              f.CheckMemGrade[7].disabled = true;

             // 할인액 , 할인율 readonly 처리
              f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DISCOUNT_RATE.readOnly = true;
              //f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DISCOUNT_RATE.onClick("alert('프로모션이 시작 되어서 수정불가합니다.')")
              f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DISCOUNT_MONEY.readOnly = true;
              
              //시작일시
              f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DATE_FROM.readOnly = true;
              //종료일시
              f.inst_PROMOTION_BY_TOTAL_DETAIL_SEL_Result_0__PMO_TOTAL_DATE_TO.readOnly = true;
              </text>


    }
      
    </script>
}

