@model  IEnumerable<AboutMe.Domain.Entity.AdminPromotion.SP_ADMIN_PROMOTION_BY_PRODUCT_DETAIL_SEL_Result>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AboutMeAdminLayoutA.cshtml";
}


@functions{

    //시작일자가 현재보다 이전인지
    protected bool IsOverStartTime(DateTime StartDate)
    {

        bool rtn = false;

        if (DateTime.Now > StartDate)
        {
            rtn = true;
        }


        return rtn;
    }


    //종료일자가 지났는지
    protected bool IsOverEndingTime(DateTime ToDate)
    {

        bool rtn = false;

        if (DateTime.Now > ToDate)
        {
            rtn = true;
        }


        return rtn;
    }

    protected string GetStatusStr(DateTime StartDate, DateTime EndDate , string UsableYN)
    {

        string rtn = "";

        if (StartDate < DateTime.Now && EndDate > DateTime.Now) 
        {
            if (UsableYN == "Y")
                rtn = "진행";
            else
                rtn = "비활성화";
        }
        else if (StartDate > DateTime.Now)
        {
            if (UsableYN == "Y")
                rtn = "예정";
            else
                rtn = "비활성화";
        }
        else if (EndDate < DateTime.Now)
        {
            if (UsableYN == "Y")
                rtn = "종료";
            else
                rtn = "비활성화";
        }

        return rtn;
    }

    //카테고리네임
    protected string GetPmoProductCatName(string cat)
    {

        string rtn = "";

        switch(cat)
        {
            case "01" :
                rtn ="세트상품";
                break;
            case "02" :
                rtn = "1+1";
                break;
            case "03" :
                rtn = "타임세일";
                break;
            case "04" :
                rtn = "일반할인";
                break;
            case "05" :
                rtn = "아웃렛";
                break;
            default :
                break;
        }

        return rtn;
    }


    //카테고리별 프런트  url 
    protected string GetPmoProductFrontUrl(string cat)
    {
        string url = "";
        string front_url = "";

        AboutMe.Common.Helper.Config.GetConfigValue("FrontUrl");

        if (cat == "01") //세트상품
        {
            url = AboutMe.Common.Helper.Config.GetConfigValue("FrontUrl") + "/Event/SetPromotion";
            front_url = string.Format("<a href='{0}' target='_default'>{1}<a>", url, url); 
           
        }
        else if (cat == "03") //타임세일
        {
            url = AboutMe.Common.Helper.Config.GetConfigValue("FrontUrl") + "/Event/TimeSale";
            front_url = string.Format("<a href='{0}' target='_default'>{1}<a>", url, url); 
           
        }
        else if (cat == "05") //아웃렛
        {
            url = AboutMe.Common.Helper.Config.GetConfigValue("FrontUrl") + "Event/Outlet";
            front_url = string.Format("<a href='{0}' target='_default'>{1}<a>", url, url); 
        }
        else 
        {
            front_url = "-"; 
        }


        return front_url;
    }

}
@section Scripts{

    <script type="text/javascript">

        $(document).ready(function(){

            var bSuccess = '@TempData["bSuccess"]';
            if(bSuccess){
                alert("프로모션정보가 등록되었습니다!");
            }
        });
    </script>
}

@section Left {

    @{Html.RenderPartial("~/Views/AboutMeAdminPartial/_AdminLeft.cshtml");}
}

@section Header{
    @{ Html.RenderPartial("~/Views/AboutMeAdminPartial/_AdminHeader.cshtml");}
}

@section Body{

    <div class="content">
        <!--path-->
        <div class="path">
            <a href="/">HOME</a> &gt;  <a href="#">프로모션 관리</a> &gt; <strong>상품별 프로모션 정책 리스트</strong>
        </div>
        <!--//path-->

        <div class="tar mb10">
            <a class="btn btn-default middium" href="/AdminPromotion/PrdCreate">신규 프로모션 등록 </a>
            <a class="btn btn-default middium" href="#">EXEL 다운로드</a>
        </div>

        <!---
        <div class="panel">
            <h3 class="sub-header">기본설정</h3>
            <div class="alert alert-info">
                <ul>
                    <li>· 배송료에 대한 금액 및 조건을 설정하고 배송회사, 송장번호를 조회할 주소 등을 설정합니다.</li>
                    <li>· 입점업체에서 사용중인 배송사는 삭제할 수 없습니다.</li>
                </ul>
            </div>
        </div>
    -->
        <div class="panel">
            <h4>상품별프로모션 정책 리스트</h4>

            @{ var selected_str = "selected";}
            @using (Html.BeginForm("PrdIndex", "AdminPromotion", FormMethod.Post, new { id = "frm01", name = "frm01", onsubmit = "return frmCheck();" }))
            {
                @Html.AntiForgeryToken()  //폼 데이터 위조 방지 토큰 생성


                                        <table class="table table_row">
                                            <colgroup><col width="20%" /><col width="*" /></colgroup>
                                            <tbody>
                                                <tr>
                                                    <th scope="row" class="vam">검색</th>
                                                    <td class="condition_seacth">
                                                        <select name="SearchCol" style="width:170px;">
                                                            <option>-선택하세요-</option>
                                                            <option value="PMO_TOTAL_NAME" @if (ViewBag.SearchCol == "PMO_TOTAL_NAME") { @selected_str     ; }>프로모션명</option>
                                                        </select>  <input type="text" class="input-sm text-left" name="SearchKeyword" value="@ViewBag.SearchKeyword" />
                                                        <a href="javascript:document.frm01.submit();" class="btn btn-default small">search</a>
                                                        <!---<input type="submit" value=" Search >> "> -->
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
            }

        </div>

        <div class="panel">
            <h4>상품별 프로모션 정책 리스트</h4>
            <!-- 처음과 마지막  th, td에 각각 "brnone" class 사용합니다.-->
            <table class="table table_col">
                <colgroup>
                    <col width="3%" />
                    <col width="10%" />
                    <col width="10%" />
                    <col width="*" />
                    
                   
                   
                    <col width="8%" />
                    <col width="8%" />
                    
                    <col width="8%" />
                    <col width="8%" />
                    <col width="4%" />
                    <col width="8%" />
                </colgroup>
                <thead>
                    <tr>
                        <th scope="col" class="brnone">No</th>
                        <th scope="col">프로모션명</th>
                        <th scope="col">카테고리</th>
                        <th scope="col">FRONT URL</th>
                        <!--<th scope="col">정률/정액</th>-->
                        <!--
                        <th scope="col">할인적용율</th>
                        <th scope="col">할인액</th>
                        -->
                        <th scope="col">시작일자</th>
                        <th scope="col">종료일자</th>
                        <th scope="col">작성일자</th>
                        <th scope="col">상태</th>
                        <th scope="col">활성화</th>
                        <th scope="col">관련상품edit</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="brnone">@item.IDX</td>

                            <td class="brnone"><b>@Html.ActionLink(item.PMO_PRODUCT_NAME, "PrdUpdate", new { CdPromotionPRODUCT = item.CD_PROMOTION_PRODUCT })</b></td>
                            <!--<td>@GetPmoProductCatName(item.PMO_PRODUCT_CATEGORY.ToString())</td>-->
                            <td>@GetPmoProductCatName(item.PMO_PRODUCT_CATEGORY.ToString())</td>
                            <td>@Html.Raw(GetPmoProductFrontUrl(item.PMO_PRODUCT_CATEGORY.ToString()))</td>
                          
                           
                            
                            <!--
                            <td>@Html.DisplayFor(modelItem => item.PMO_PRODUCT_RATE_OR_MONEY)</td>
                            <td>@Html.DisplayFor(modelItem => item.PMO_PRODUCT_DISCOUNT_RATE)%</td>
                            <td>@Html.DisplayFor(modelItem => item.PMO_PRODUCT_DISCOUNT_MONEY)</td>
                            -->
                            <td>@Html.DisplayFor(modelItem => item.PMO_PRODUCT_DATE_FROM)</td>
                            <td>@Html.DisplayFor(modelItem => item.PMO_PRODUCT_DATE_TO)</td>
                            <td>@item.INS_DATE</td>
                            <td>@GetStatusStr(item.PMO_PRODUCT_DATE_FROM.Value, item.PMO_PRODUCT_DATE_TO.Value, item.USABLE_YN)</td>
                          
                            <td>@item.USABLE_YN</td>
                            <td > <b>@Html.ActionLink("[상품가격정책추가/편집]", "PrdPricingIndex", new { CdPromotionProduct = item.CD_PROMOTION_PRODUCT })</b></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>


        @{Html.RenderAction("Paging", "CommonChildAction", new { TotalRecord = ViewBag.TotalRecord, RecordPerPage = ViewBag.PageSize, PagePerBlock = 10, CurrentPage = ViewBag.Page, QueryStr = "SearchCol=" + ViewBag.SearchCol + "&SearchKeyword=" + ViewBag.SearchKeyword });}


        <!--버튼모음--
        ************************************************<br />
        버튼가이드 <br /><br />
        대버튼 : <br />
        <a href="#" class="btn btn-default large">확인</a>
        <a href="#" class="btn btn-primary large">취소</a>
        <br /><br />
        중버튼 : <br />
        <a href="#" class="btn btn-default middium">편집중인 설정으로 저장</a>
        <br /><br />
        소버튼 : <br />
        <a href="#" class="btn btn-default small">저장</a>
        <a href="#" class="btn btn-success small">수정</a>
        <a href="#" class="btn btn-primary small">삭제</a><br />
        ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑<br />
        3가지 타입 버튼이 필요할때 적용<br />
        <a href="#" class="btn btn-info small">추가</a>
        --//버튼모음-->

    </div>
}
