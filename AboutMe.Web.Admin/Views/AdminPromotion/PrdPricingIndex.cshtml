@*@model  IEnumerable<AboutMe.Domain.Entity.AdminPromotion.SP_ADMIN_PROMOTION_BY_PRODUCT_DETAIL_SEL_Result>*@

@model  IEnumerable<AboutMe.Domain.Entity.AdminPromotion.SP_ADMIN_PROMOTION_BY_PRODUCT_PRICE_SEL_Result>


@functions{
    protected string DisplayPromotionByTotalCheck(string CdPromotionTotal, int PRODUCT_PRICE_IDX)
    {

        string rtn = "";

        //string[] Gv = GradeVal.Split('$');

        List<AboutMe.Domain.Entity.AdminPromotion.SP_ADMIN_PROMOTION_BY_PRODUCT_VS_TOTAL_SEL_Result> PRD_VS_TOTAL =
       ViewData["SP_PROMOTION_BY_PRODUCT_VS_TOTAL_SEL_Result"] as List<AboutMe.Domain.Entity.AdminPromotion.SP_ADMIN_PROMOTION_BY_PRODUCT_VS_TOTAL_SEL_Result>;


        var qry = from PT in PRD_VS_TOTAL
                  where PT.CD_PROMOTION_TOTAL == CdPromotionTotal && PT.PRODUCT_PRICE_IDX == PRODUCT_PRICE_IDX
                  select PT;

        if (qry.Count() > 0)
        {
            rtn = "checked";
        }


        return rtn;
    }
    
    //---------------------------------------------------------------------------------------------

    protected bool IsOverStartTime(DateTime StartDate)
    {

        bool rtn = false;

        if(DateTime.Now > StartDate )
        {
            rtn = true ;
        }


        return rtn;
    }


    protected bool IsOverEndingTime(DateTime EndDate)
    {

        bool rtn = false;

        if (DateTime.Now > EndDate )
        {
            rtn = true;
        }


        return rtn;
    }
}


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AboutMeAdminLayoutA.cshtml";
}



@section Scripts{

    <script type="text/javascript">

        $(document).ready(function(){

            var bSuccess = '@TempData["bSuccess"]';
            if(bSuccess){
                alert("프로모션정보가 등록되었습니다!");
            }
        });
    </script>


        @if (TempData["jsMessage"] != null && TempData["jsMessage"] != "")
        {
            if (TempData["jsMessage"] == "-1")
            {
                <text>
                    <script language='javascript'>alert('데이터 insert 과정에서 에러 발생.')</script>
                </text>
            }

            if (TempData["jsMessage"] == "-2")
            {
                <text>
                    <script language='javascript'>alert('상품코드 중복이 있습니다. 동일 날짜대에 실행될 프로모션에 같은 상품이 존재합니다.')</script>
                </text>
            }

            if (TempData["jsMessage"] == "-3")
            {
                <text>
                    <script language='javascript'>alert('입력한 상품코드가 존재하지 않거나 비전시 상태입니다.')</script>
                </text>
            }
        }
}

@section Left {

    @{Html.RenderPartial("~/Views/AboutMeAdminPartial/_AdminLeft.cshtml");}
}

@section Header{
    @{ Html.RenderPartial("~/Views/AboutMeAdminPartial/_AdminHeader.cshtml");}
}

@section Body{

    <div class="content">
        <!--path-->
        <div class="path">
            <a href="/index.asp">HOME</a> &gt; <a href="#">환경설정</a> &gt; <a href="#">전체운영설정</a> &gt; <strong>배송설정</strong>
        </div>
        <!--//path-->

        <div class="tar mb10">
            
            @if (IsOverEndingTime(Convert.ToDateTime(ViewData["PromotionEndTime"])) != true )
            { 
                <a class="btn btn-default middium" href="/AdminPromotion/PrdPricingCreate?CdPromotionProduct=@Request["CdPromotionProduct"].ToString()">신규 상품 가격정보 등록 </a>
            }
            else
            {
                <a class="btn btn-default middium" href="javascript:alert('종료된 프로모션에는 상품등록이 불가합니다.')">신규 상품 가격정보 등록 </a>
            }
            <a class="btn btn-default middium" href="/AdminPromotion/PrdIndex">상위리스트로</a>
            <a class="btn btn-default middium" href="#">EXEL 다운로드</a>
        </div>
        <!--
        <div class="panel">
            <h3 class="sub-header">기본설정</h3>
            <div class="alert alert-info">
                <ul>
                    <li>· 배송료에 대한 금액 및 조건을 설정하고 배송회사, 송장번호를 조회할 주소 등을 설정합니다.</li>
                    <li>· 입점업체에서 사용중인 배송사는 삭제할 수 없습니다.</li>
                </ul>
            </div>
        </div>
            
        <div class="panel">
            <h4>배송정책</h4>
        </div>
            -->
        <div class="panel">
            <h4>상품별 프로모션 소속 상품 Pricing</h4>
            <!-- 처음과 마지막  th, td에 각각 "brnone" class 사용합니다.-->
            <table class="table table_col">
                <colgroup>
                    <col width="4%" />
                    <col width="8%" />
                    <col width="8%" />
                    <col width="8%" />
                    <col width="8%" />
                    <col width="8%" />
                    <col width="8%" />
                    <col width="10%" />
                    <col width="12%" />
                    <col width="12%" />
                    <col width="*" />
                    <col width="10%" />
                </colgroup>
                <thead>
                    <tr>
                        <th scope="col" class="brnone">No</th>
                        <th scope="col">상품코드</th>
                        <th scope="col">상품명</th>
                        
                        <th scope="col">정상가</th>
                        <!--
                        <th scope="col">정률/정액</th>
                        <th scope="col">할인율</th>
                        <th scope="col">할인액</th>
                        -->
                        <th scope="col">최종가</th>

                        <th scope="col">1+1 증정품 상품코드</th>
                        <th scope="col">1+1 증정품 가격</th>
                        <th scope="col">생성일자</th>
                        <th scope="col">활성화</th>
                        <th scope="col">전체할인 적용</th>
                        <th scope="col">Edit</th>
                        
                    </tr>
                </thead>
                <tbody>
                    @{
                        
                        int xx = 1;
                     }
                    @foreach (var item in Model)
                    {
                        using (Html.BeginForm("PrdPricingUpdate", "AdminPromotion", FormMethod.Post, new { id = "frm" + xx.ToString(), name = "frm" + xx.ToString() }))
                        {
                            @Html.AntiForgeryToken()                      //폼 데이터 위조 방지 토큰 생성

                            <input type="hidden" name="CdPromotionProduct" value="@Request["CdPromotionProduct"].ToString()">
                            <input type="hidden" name="Pcode" value="@item.P_CODE">
                            <input type="hidden" name="idx" value="@item.IDX">
                           <tr>
                            <td class="brnone">@item.IDX</td>
                          
                              
                            <td class="brnone">@Html.DisplayFor(modelItem => item.P_CODE)</td>
                            <td>상품명</td>
                            <td>정상가</td>

                            <!--
                            <td>@Html.DisplayFor(modelItem => item.PMO_PRODUCT_RATE_OR_MONEY)</td>
                            <td>@Html.DisplayFor(modelItem => item.PMO_PRODUCT_DISCOUNT_RATE)%</td>
                            <td>@Html.DisplayFor(modelItem => item.PMO_PRODUCT_DISCOUNT_MONEY)</td>
                            -->

                            <td>
                                @Html.DisplayFor(modelItem => item.PMO_PRICE, new { cssClass = "input-sm text-left" })
                            </td>
                            <td>

                                @Html.DisplayFor(modelItem => item.PMO_ONE_ONE_P_CODE)
                            </td>

                            <td>

                                   @Html.DisplayFor(modelItem => item.PMO_ONE_ONE_PRICE)

                            </td>

                            <td>-</td>

                            <td>
                                 @*
                                    @Html.RadioButtonFor(modelItem => item.USABLE_YN, "Y")  활성화  @Html.RadioButtonFor(modelItem => item.USABLE_YN, "N") 비활성화 @Html.ValidationMessageFor(modelItem => item.USABLE_YN, "Y")
                                 *@

                                @if (ViewData["PromotionUsableYN"].ToString() == "N")
                                {
                                    
                                    <input type="radio" name="UsableYN" value="Y" disabled="true"   @if (item.USABLE_YN == "Y") { <text> checked</text> } /> @:활성화
                                    <input type="radio" name="UsableYN" value="N" @if (item.USABLE_YN == "N") { <text> checked</text> } /> @:비활성화 
                                    <br>
                                    <text><font color="red">-프로모션이 비활성화 상태이면 소속상품을 활성화상태로 변경 할 수 없습니다</font></text>
                                }
                                else
                                {
                                     <input type="radio" name="UsableYN" value="Y" @if(item.USABLE_YN == "Y"){ <text>Checked</text> } /> @:활성화 
                                     <input type="radio" name="UsableYN" value="N" @if (item.USABLE_YN == "N") { <text> checked</text> } /> @:비활성화 
                                }                                                                                                                                                                                                             
                                <font color="RED">@Html.ValidationMessageFor(modelItem => item.USABLE_YN)</font>
                               </td>

                            <td>
                    

                                @foreach (var item2 in ViewData["SP_ADMIN_PROMOTION_BY_PRODUCT_VS_TOTAL_SEL_Result"] as List<AboutMe.Domain.Entity.AdminPromotion.SP_ADMIN_PROMOTION_BY_PRODUCT_VS_TOTAL_SEL_Result>)
                                {
                                    if (item2.PRODUCT_PRICE_IDX.ToString() == item.IDX.ToString())
                                    { 
                                        <text>
                                        @item2.PMO_TOTAL_NAME <br />
                                        </text>
                                    }
                                }


                            </td>

                            <td>
                              @if (IsOverEndingTime(Convert.ToDateTime(ViewData["PromotionEndTime"])) == false)
                              {
                                   @:<input type="submit" value="수정" class="btn btn-default middium" />
                              }
                              else
                              {
                                  @:<font color="red">수정불가</font>
                              }
                            </td>
                        </tr>
                        }


                        
                        xx =  xx + 1 ;  // 폼을 별개로 생성하기 위해 xx COUNT를 증가시켜줘야한다!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                        
                        
                   }
                    

                </tbody>
            </table>
        </div>



        <!--버튼모음--
        ************************************************<br />
        버튼가이드 <br /><br />
        대버튼 : <br />
        <a href="#" class="btn btn-default large">확인</a>
        <a href="#" class="btn btn-primary large">취소</a>
        <br /><br />
        중버튼 : <br />
        <a href="#" class="btn btn-default middium">편집중인 설정으로 저장</a>
        <br /><br />
        소버튼 : <br />
        <a href="#" class="btn btn-default small">저장</a>
        <a href="#" class="btn btn-success small">수정</a>
        <a href="#" class="btn btn-primary small">삭제</a><br />
        ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑<br />
        3가지 타입 버튼이 필요할때 적용<br />
        <a href="#" class="btn btn-info small">추가</a>
        --//버튼모음-->

    </div>
}
