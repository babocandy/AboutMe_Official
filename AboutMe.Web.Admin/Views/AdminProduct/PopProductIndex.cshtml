@model AboutMe.Domain.Entity.AdminProduct.PRODUCT_INDEX_MODEL
@using System.Reflection;
@{
    ViewBag.Title = "PopProductIndex";
    Layout = null;
}

<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <link href="/cmsManager/aboutCom/css/bootstrap.css" rel="stylesheet">
    <link href="/cmsManager/aboutCom/css/jquery-ui.min.css" rel="stylesheet">
    <link href="/cmsManager/aboutCom/css/style.css" rel="stylesheet">
    <script src="/cmsManager/aboutCom/js/jquery-1.11.3.min.js"></script>
    <script src="/cmsManager/aboutCom/js/bootstrap.min.js"></script>
    <script src="/cmsManager/aboutCom/js/jquery-ui.js"></script>
    <script src="/cmsManager/aboutCom/js/ui.datepicker-ko.js"></script>
    <script src="/cmsManager/aboutCom/js/script.js"></script>
    <!--[if lt IE 9]>
         <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <![endif]-->
    <link href="/Content/kendo/2015.1.318/kendo.common.min.css" rel="stylesheet" />
    <link href="/Content/kendo/2015.1.318/kendo.Bootstrap.min.css" rel="stylesheet" />

    <script src="/Scripts/kendo/2015.1.318/kendo.all.min.js"></script>
    <script src="/Scripts/kendo/2015.1.318/kendo.aspnetmvc.min.js"></script>

    <script language="javascript">

        function ChangeDate(d) {
            var from_date, to_date;

            if (d == "1") //오늘
            {
                from_date = '@DateTime.Now.ToString("yyyy-MM-dd")';
                to_date = '@DateTime.Now.ToString("yyyy-MM-dd")';
            }
            else if (d == "7") {
                from_date = '@DateTime.Now.AddDays(-7).ToString("yyyy-MM-dd")';
                to_date = '@DateTime.Now.ToString("yyyy-MM-dd")';
            }
            else if (d == "15") {
                from_date = '@DateTime.Now.AddDays(-15).ToString("yyyy-MM-dd")';
                to_date = '@DateTime.Now.ToString("yyyy-MM-dd")';
            }
            else if (d == "31") {
                from_date = '@DateTime.Now.AddMonths(-1).ToString("yyyy-MM-dd")';
                to_date = '@DateTime.Now.ToString("yyyy-MM-dd")';
            }
            else//  전체기간
            {
                from_date = '';
                to_date = '';
            }

            $("#FROM_DATE").val(from_date);
            $("#TO_DATE").val(to_date);

        }


        $(function () {
            ajaxSelectCateCodeJavascriptInit();
        });

        //카테고리 3depth seleted value값
        function selectCateValue(d) {
            var f = document.bform;
            if (d.value != '') {
                f.cateCode.value = d.value;
            } else {
                f.cateCode.value = $("#P_CATE_CODE2 option:selected").val();
            }
        }


        //카테고리 유형별(PRODUCT_TYPE) 초기화 1
        function ajaxSelectCateCodeJavascriptInit() {

            var f = document.bform;

            $.ajax({
                url: '/AdminProduct/CategoryListJavascript',
                type: 'POST',
                data: {
                    CATE_GBN: 'PRODUCT_TYPE',
                    DEPTH1_CODE: '',
                    DEPTH2_CODE: ''
                },
                success: function (data) {
                    //var result = "<select style='width:170px;' id='P_CATE_CODE1' name='P_CATE_CODE1' onchange='alert(this.options[this.selectedIndex].value)'>";
                    var result = "<select style='width:120px;' id='P_CATE_CODE1' name='P_CATE_CODE1' onchange='ajaxSelectCateCodeJavascriptProductType1();'>";
                    result += "<option value=''>=선택=</option>";
                    $('#ajaxPCateCode1').html('');
                    $.each(data.msg, function (id, category) {
                        if ((category.CATE_CODE).substring(0, 3) == "@this.ViewBag.cateCode1") {
                            result += '<option value=' + category.CATE_CODE + ' selected >' + category.DEPTH1_NAME + '</option>';
                        } else {
                            result += '<option value=' + category.CATE_CODE + ' >' + category.DEPTH1_NAME + '</option>';
                        }

                        //result += '<option value=' + category.CATE_CODE + '>' + category.DEPTH1_NAME + '</option>';
                    });
                    result += "</select>";

                    $('#ajaxPCateCode1').html(result);

                    @if (!string.IsNullOrEmpty(this.ViewBag.cateCode1))
                 {
                    <text>ajaxSelectCateCodeJavascriptProductType1();</text>
                 }


                },
                error: function (errorData) {
                    alert("ajaxSelectCateCodeJavascriptInit error");
                }
            });
        }

        //카테고리 유형별(PRODUCT_TYPE) ProductType 2
        function ajaxSelectCateCodeJavascriptProductType1() {

            var f = document.bform;
            var DEPTH1_CODE = $("#P_CATE_CODE1 option:selected").val().substring(0, 3);
            f.cateCode.value = $("#P_CATE_CODE1 option:selected").val();
            $('#ajaxPCateCode2').html('');
            $('#ajaxPCateCode3').html('');

            if (DEPTH1_CODE == '') {
                return;
            }

            $.ajax({
                url: '/AdminProduct/CategoryListJavascript',
                type: 'POST',
                data: {
                    CATE_GBN: 'PRODUCT_TYPE',
                    DEPTH1_CODE: DEPTH1_CODE,
                    DEPTH2_CODE: ''
                },
                success: function (data) {
                    var result = "<select style='width:120px;' id='P_CATE_CODE2' name='P_CATE_CODE2' onchange='ajaxSelectCateCodeJavascriptProductType2();'>";
                    result += "<option value=''>=선택=</option>";
                    $('#ajaxPCateCode2').html('');
                    $.each(data.msg, function (id, category) {
                        if ((category.CATE_CODE).substring(3, 6) == "@this.ViewBag.cateCode2") {
                            result += '<option value=' + category.CATE_CODE + ' selected >' + category.DEPTH2_NAME + '</option>';
                        } else {
                            result += '<option value=' + category.CATE_CODE + ' >' + category.DEPTH2_NAME + '</option>';
                        }
                    });
                    result += "</select>";

                    $('#ajaxPCateCode2').html(result);
                    @if ((!string.IsNullOrEmpty(this.ViewBag.cateCode2)) && (this.ViewBag.cateCode2 != "100") && (this.ViewBag.cateCode1 == "101"))
                {
                    <text>ajaxSelectCateCodeJavascriptProductType2();</text>
                }

                },
                error: function (errorData) {
                    alert("ajaxSelectCateCodeJavascriptProductType1 error");
                }
            });
        }

        //카테고리 유형별(PRODUCT_TYPE) ProductType 3
        function ajaxSelectCateCodeJavascriptProductType2() {

            var f = document.bform;
            var DEPTH1_CODE = $("#P_CATE_CODE1 option:selected").val().substring(0, 3);
            var DEPTH2_CODE = $("#P_CATE_CODE2 option:selected").val().substring(3, 6);

            $('#ajaxPCateCode3').html('');
            //alert("DEPTH1_CODE:" + DEPTH1_CODE + "DEPTH2_CODE:" + DEPTH2_CODE);
            if ((DEPTH1_CODE == '') || (DEPTH2_CODE == '')) {
                f.cateCode.value = $("#P_CATE_CODE1 option:selected").val();
                return;
            }
            f.cateCode.value = $("#P_CATE_CODE2 option:selected").val();


            //var DEPTH1_CODE = $("#P_CATE_CODE1 option:selected").val();
            //var DEPTH2_CODE = $("#P_CATE_CODE2 option:selected").val();
            $.ajax({
                url: '/AdminProduct/CategoryListJavascript',
                type: 'POST',
                data: {
                    CATE_GBN: 'PRODUCT_TYPE',
                    DEPTH1_CODE: DEPTH1_CODE,
                    DEPTH2_CODE: DEPTH2_CODE
                },
                success: function (data) {
                    if ((data.msg).length > 0) { //데이타가 있을때만 생성한다.
                        var result = "<select style='width:120px;' id='P_CATE_CODE3' name='P_CATE_CODE3' onchange='selectCateValue(this);'>";
                        result += "<option value=''>=선택=</option>";
                        $('#ajaxPCateCode3').html('');
                        $.each(data.msg, function (id, category) {
                            if ((category.CATE_CODE).substring(6, 9) == "@this.ViewBag.cateCode3") {
                                result += '<option value=' + category.CATE_CODE + ' selected >' + category.DEPTH3_NAME + '</option>';
                            } else {
                                result += '<option value=' + category.CATE_CODE + ' >' + category.DEPTH3_NAME + '</option>';
                            }
                        });
                        result += "</select>";

                        $('#ajaxPCateCode3').html(result);
                    }

                },
                error: function (errorData) {
                    alert("ajaxSelectCateCodeJavascriptProductType2 error");
                }
            });
        }





        function bsearch() {
            var f = document.bform;

            f.target = "";
            f.page.value = "";
            f.submit();

        }

        function rePageSize() {
            var f = document.bform;

            f.Page.value = "";
            //f.searchStatus.value = "N"; //검색상태:Y
            f.action = "/AdminProduct/PopProductIndex";
            f.target = "";
            f.method = "post"
            f.submit();
        }

        //검색
        function frmCheck() {
            var f = document.bform;
            f.searchStatus.value = "Y"; //검색상태:Y
            //alert(f.searchStatus.value);
            f.action = "/AdminProduct/PopProductIndex";
            f.target = "";
            f.method = "post"
            f.submit();
        }


        //문자열 안의 공백 지우기
        function deleteSpace(str) {
            var out = "";

            for (common_i = 0; common_i < str.length; common_i++) {
                if (str.charAt(common_i) == " ") {
                    continue;
                }
                out += str.charAt(common_i);
            }
            return out.length;
        }


        //숫자값만 입력가능하게
        function NumObj(obj) {
            if (isNaN(obj.value)) {
                alert("숫자만 가능합니다.");
                obj.value = "";
                return false;
            }
            else {
                //alert("숫자");
                return true;
            }

        }





    </script>


        <!--content-->
        <div class="content">
            <!--path-->
            <div class="path">
                <a href="/index.asp">HOME</a> &gt; <a href="#">환경설정</a> &gt; <a href="#">전체운영설정</a> &gt; <strong>배송설정</strong>
            </div>
            <!--//path-->

            <div class="panel">
                <h3 class="sub-header">상품관리</h3>
                <form action="" id="bform" method="post" name="bform">
                    <input type="hidden" name="searchStatus" id="searchStatus" value="@Model.productSearch_Entity.searchStatus" />
                    <input type="hidden" name="Page" id="Page" value="@Model.productSearch_Entity..Page" />
                    <input type="hidden" name="cateCode" id="cateCode" value="@Model.productSearch_Entity.cateCode" />

                    @Html.AntiForgeryToken()<div class="tar mb10">
                        @if (Model.productSearch_Entity.searchStatus == "Y")
                        {
                            <a class="btn btn-default middium" href="/AdminProduct/PopProductIndex">검색초기화</a>
                        }
                    </div>

                    <div class="">
                        <table class="table table_row">
                            <colgroup><col width="15%" /><col width="*" /><col width="8%" /><col width="9%" /><col width="10%" /></colgroup>
                            <tfoot>
                            </tfoot>
                            <tbody>
                                <tr>
                                    <th>일자</th>
                                    <td>
                                        @(Html.Kendo().DatePicker()
                          .Name("FROM_DATE")
                                  .Value(Model.productSearch_Entity.FROM_DATE)
                          .HtmlAttributes(new { style = "width:120px" })
                                        )
                                        ~
                                        @(Html.Kendo().DatePicker()
                          .Name("TO_DATE")
                                  .Value(Model.productSearch_Entity.TO_DATE)
                          .HtmlAttributes(new { style = "width:120px" })
                                        )
                                        <a href="#" class="btn btn-primary small" onclick="ChangeDate('')">전체</a>
                                        <a href="#" class="btn btn-primary small" onclick="ChangeDate('1')">오늘</a>
                                        <a href="#" class="btn btn-primary small" onclick="ChangeDate('7')">7일</a>
                                        <a href="#" class="btn btn-primary small" onclick="ChangeDate('15')">15일</a>
                                        <a href="#" class="btn btn-primary small" onclick="ChangeDate('31')">1개월</a><br />
                                    </td>
                                    <th rowspan="4">검색조건</th>
                                    <td rowspan="4" class="condition_seacth">
                                        <select name="SearchKey" style="width:170px;">
                                            <option value="P_CODE" @if (Model.productSearch_Entity.SearchKey == "P_CODE")
                                                                   { <text> selected</text> }>상품품번</option>
                                            <option value="P_NAME" @if (Model.productSearch_Entity.SearchKey == "P_NAME")
                                                                   { <text> selected</text> }>상품명</option>
                                        </select><br />
                                        <input type="text" value="@Model.productSearch_Entity.SearchKeyword" placeholder="다중검색" class="input-sm mt10" name="SearchKeyword" id="SearchKeyword" style="width:170px; height:125px;">
                                    </td>
									<td rowspan="4">
										<a href="javascript:frmCheck();" class="btn btn-default large btn_search" style="height:150px; line-height:120px;">검색</a>
									</td>
                                </tr>

                                <tr>
                                    <th>판매상태</th>
                                    <td>
                                        <label for="sale1"><input type="checkbox" id="searchDisplayY" value="Y" name="searchDisplayY" @if (Model.productSearch_Entity.searchDisplayY == "Y")
                                                                                                                                      { <text> checked</text> } /><span class="txt mr5">전시</span></label>
                                        <label for="sale2"><input type="checkbox" id="searchDisplayN" value="Y" name="searchDisplayN" @if (Model.productSearch_Entity.searchDisplayN == "Y")
                                                                                                                                      { <text> checked</text> } /><span class="txt mr5">비전시</span></label>
                                        <label for="sale4"><input type="checkbox" id="soldoutYn" value="Y" name="soldoutYn" @if (Model.productSearch_Entity.soldoutYn == "Y")
                                                                                                                            { <text> checked</text> } /><span class="txt mr5">품절</span></label>
                                        <label for="sale4"><input type="checkbox" id="POutletYn" value="Y" name="POutletYn" @if (Model.productSearch_Entity.POutletYn == "Y")
                                                                                                                            { <text> checked</text> } /><span class="txt mr5">아울렛</span></label>
                                    </td>
                                </tr>
                                <tr>
                                    <th>카테고리</th>
                                    <td>
                                        <span id="ajaxPCateCode1"></span>
                                        <span id="ajaxPCateCode2"></span>
                                        <span id="ajaxPCateCode3"></span>
                                    </td>
                                </tr>
                                <tr>
                                    <th>아이콘</th>
                                    <td>
                                        <label for="icon1"><input type="checkbox" id="iconYn" name="iconYn" value="N" @if (Model.productSearch_Entity.iconYn.ToString().IndexOf('N') != -1)
                                                                                                                      { <text> checked</text> } /><span class="txt mr5">NEW</span></label>
                                        <label for="icon4"><input type="checkbox" id="iconYn" name="iconYn" value="B" @if (Model.productSearch_Entity.iconYn.ToString().IndexOf('B') != -1)
                                                                                                                      { <text> checked</text> } /><span class="txt mr5">BEST</span></label>
                                        <label for="icon4"><input type="checkbox" id="iconYn" name="iconYn" value="C" @if (Model.productSearch_Entity.iconYn.ToString().IndexOf('C') != -1)
                                                                                                                      { <text> checked</text> } /><span class="txt mr5">커스텀</span></label>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

            </div>
            <div class="panel">
                <div class="">
                    <table class="table table_row">
                        <colgroup><col width="9%" /><col width="11%" /><col width="5%" /><col width="5%" /><col width="9%" /><col width="30%" /><col width="6%" /><col width="5%" /></colgroup>
                        <tr>
                            <th>총검색</th>
                            <td>@Model.TotalCount 건</td>
                            <th>출력수</th>
                            <td>
                                <select name="PageSize" onchange="javascript:rePageSize();">
                                    <option value="10" @if (Model.productSearch_Entity.PageSize == 10)
                                                       { <text> selected</text> }>10개</option>
                                    <option value="20" @if (Model.productSearch_Entity.PageSize == 20)
                                                       { <text> selected</text> }>20개</option>
                                    <option value="50" @if (Model.productSearch_Entity.PageSize == 50)
                                                       { <text> selected</text> }>50개</option>
                                    <option value="100" @if (Model.productSearch_Entity.PageSize == 100)
                                                        { <text> selected</text> }>100개</option>
                                    <option value="200" @if (Model.productSearch_Entity.PageSize == 200)
                                                        { <text> selected</text> }>200개</option>
                                </select>
                            </td>
                        </tr>
                    </table>
                </div>
                <table class="table table_col addtable">
                    <colgroup></colgroup>
                    <thead>
                        <tr>
                            <th scope="col">이미지</th>
                            <th scope="col">상품품번</th>
                            <th scope="col">아이콘</th>
                            <th scope="col">상품명</th>
                            <th scope="col">판매가</th>
                            <th scope="col">할인가</th>
                            <th scope="col">할인률</th>
                            <th scope="col">상품<br />전시여부</th>
                            <th scope="col">품절여부</th>
                            <th scope="col">아울렛<br />전시여부</th>
                            <th scope="col">등록일</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            if (Model.TotalCount < 1)
                            {
                                <tr>
                                    <td colspan="11" class="brnone">No data...</td>
                                </tr>
                            }
                        }
                        @{ var i = 0;
                           string Product_path = AboutMe.Common.Helper.Config.GetConfigValue("ProductPhotoPath");
                           Type type = Model.productSearch_Entity.GetType();
                           PropertyInfo[] properties = type.GetProperties();}
                        @foreach (var item in Model.ProductList)
                        {
                            //query string만들기 idx를 맨처음으로
                            RouteValueDictionary param = new RouteValueDictionary();
                            param.Add("pcode", item.P_CODE);
                            foreach (PropertyInfo property in properties)
                            {
                                param.Add(property.Name, property.GetValue(Model.productSearch_Entity));
                            }
                            <tr>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.MAIN_IMG))
                                    {
                                        <span id="SPAN_MAIN_IMG"><img src="@Product_path@item.MAIN_IMG" width="70" height="70" /></span>
                                    }
                                </td>
                                <td>
                                    @item.P_CODE
                                </td>
                                <td>
                                    @{ string ICON_NAME = "";}
                                    @if (!String.IsNullOrEmpty(@item.ICON_YN))
                                    {
                                        if (item.ICON_YN.ToString().IndexOf('N') != -1)
                                        { ICON_NAME = ICON_NAME + ",NEW"; }
                                        if (item.ICON_YN.ToString().IndexOf('B') != -1)
                                        { ICON_NAME = ICON_NAME + ",BEST"; }
                                        if (item.ICON_YN.ToString().IndexOf('C') != -1)
                                        { ICON_NAME = ICON_NAME + ",커스텀"; }
                                    }
                                    @if (item.SOLDOUT_YN == "Y")
                                    { ICON_NAME = ICON_NAME + ",SOLD OUT"; }

                                    @if (ICON_NAME.Length > 1)
                                    {
                                        ICON_NAME = ICON_NAME.Substring(1, (ICON_NAME.Length - 1));
                                    }
                                    @ICON_NAME
                                </td>
                                <td class="tal">@item.P_NAME</td>
                                <td>@string.Format("{0:#,##0}", item.SELLING_PRICE) </td>
                                <td>@string.Format("{0:#,##0}", item.DISCOUNT_PRICE) </td>
                                <td>@item.DISCOUNT_RATE%</td>
                                <td>@item.DISPLAY_YN</td>
                                <td>@item.SOLDOUT_YN</td>
                                <td>@item.P_OUTLET_YN</td>
                                <td>@item.REGDATE</td>
                            </tr>
i++;
                        }
                    </tbody>
                </table>
            </div>
            @{
                //paging 파라메터
                string PagingParam = "";
                foreach (PropertyInfo property in properties)
                {
                    if (property.Name != "Page")
                    {
                        PagingParam = PagingParam + property.Name + "=" + property.GetValue(Model.productSearch_Entity) + "&";
                    }
                }
            }
            @{Html.RenderAction("Paging", "CommonChildAction", new { TotalRecord = Model.TotalCount, RecordPerPage = Model.productSearch_Entity.PageSize, PagePerBlock = 10, CurrentPage = Model.productSearch_Entity.Page, QueryStr = PagingParam });}
        </div>
        <!--//content-->
