USE [AboutMe]
GO
/****** Object:  User [about]    Script Date: 09/11/2015 16:07:02 ******/
CREATE USER [about] FOR LOGIN [about] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_WINNER_CNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_WINNER

EXEC SP_TB_WINNER_CNT 'TITLE','테스트','Y'

*/
CREATE PROCEDURE [dbo].[SP_TB_WINNER_CNT]
 @SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@DISPLAY_YN CHAR(1) = 'A'
AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	-----------------------------
	set @v_SQL_WHERE = 'WHERE (1=1) '

	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '

	IF @DISPLAY_YN <> 'A'
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( DISPLAY_YN = ''' + @DISPLAY_YN + ''') '

	set @v_SQL = 'SELECT COUNT(IDX) AS COUNT 
				  FROM TB_WINNER  WITH (NOLOCK) ' 

	set @v_SQL = @v_SQL + @v_SQL_WHERE 
	exec(@v_SQL)

	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_FAQ_CNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_FAQ

exec [SP_TB_FAQ_CNT] 'TITLE','테스트','Y'

*/
CREATE PROCEDURE [dbo].[SP_TB_FAQ_CNT]
 @SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@DISPLAY_YN CHAR(1) = 'A'
AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	-----------------------------
	set @v_SQL_WHERE = 'WHERE (1=1) '

	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
	BEGIN
		IF (@SEARCH_COL = 'CATEGORY')
		BEGIN
			set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (CATEGORY =  ''' + @SEARCH_KEYWORD + ''') '
		END
		ELSE IF (@SEARCH_COL = 'ALL')
		BEGIN
			set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ((QUESTION like ''%' + @SEARCH_KEYWORD + '%'') or (ANSWER like ''%' + @SEARCH_KEYWORD + '%'') ) '
		END
		ELSE
		BEGIN
			set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
		END
	END
	
	IF @DISPLAY_YN <> 'A'
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( DISPLAY_YN = ''' + @DISPLAY_YN + ''') '

	set @v_SQL = 'SELECT COUNT(IDX) AS COUNT 
				  FROM TB_FAQ  WITH (NOLOCK) ' 

	set @v_SQL = @v_SQL + @v_SQL_WHERE 
	exec(@v_SQL)

	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_NOTICE_CNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_NOTICE

exec [SP_TB_NOTICE_CNT] 'TITLE','테스트','Y'

*/
CREATE PROCEDURE [dbo].[SP_TB_NOTICE_CNT]
 @SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@DISPLAY_YN CHAR(1) = 'A'
AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	-----------------------------
	set @v_SQL_WHERE = 'WHERE (1=1) '

	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '

	IF @DISPLAY_YN <> 'A'
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( DISPLAY_YN = ''' + @DISPLAY_YN + ''') '

	set @v_SQL = 'SELECT COUNT(IDX) AS COUNT 
				  FROM TB_NOTICE  WITH (NOLOCK) ' 

	set @v_SQL = @v_SQL + @v_SQL_WHERE 
	exec(@v_SQL)

	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_QNA_CNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_QNA

exec [SP_TB_QNA_CNT] 'TEST'

*/
CREATE PROCEDURE [dbo].[SP_TB_QNA_CNT]
  @M_ID VARCHAR(12)
AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	-----------------------------
	set @v_SQL_WHERE = 'WHERE (1=1) '

    set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( M_ID = ''' + @M_ID + ''') '
 
	set @v_SQL = 'SELECT COUNT(IDX) AS COUNT 
				  FROM TB_QNA  WITH (NOLOCK) ' 

	set @v_SQL = @v_SQL + @v_SQL_WHERE 
	exec(@v_SQL)

	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_RECALL_BBS_CNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

exec [SP_TB_RECALL_BBS_CNT]
*/
CREATE PROCEDURE [dbo].[SP_TB_RECALL_BBS_CNT]
 @START_DATE	varchar(10) = ''
,@END_DATE	varchar(10) = ''
,@REG_ID     VARCHAR(20) = ''
,@ORDER_CODE     VARCHAR(20) = ''  

AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ; 
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
		 
	set @v_SQL_WHERE = ' WHERE (1=1)'

	 
	
	IF @START_DATE <> '' AND @END_DATE <> ''
	begin
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( CONVERT(VARCHAR(10) , REG_DATE ,23) >= ''' + @START_DATE + ''' AND CONVERT(VARCHAR(10) , REG_DATE ,23) <= ''' + @END_DATE + ''' ) '
	end
		
	IF @REG_ID <> '' 
	begin
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( REG_ID = ''' + @REG_ID + ''') '
	end
	
	IF @REG_ID = '' AND @ORDER_CODE <> ''
	 begin
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( ORDER_CODE = ''' + @ORDER_CODE + ''') '
	 end 
	
	set @v_SQL = 'SELECT COUNT(IDX) AS COUNT 
				  FROM TB_RECALL_BBS  WITH (NOLOCK) ' 

	set @v_SQL = @v_SQL + @v_SQL_WHERE 
	exec(@v_SQL)
	--print @v_SQL
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_PRODUCT_SEARCH_CNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품검색 총 카운트 
 * Modified  :   2015.07.24
 ============================================================*/  
 --exec [SP_PRODUCT_SEARCH_CNT] '','','','','N'
CREATE PROCEDURE [dbo].[SP_PRODUCT_SEARCH_CNT]
 @SEARCH_KEYWORD		VARCHAR(50)  =''		--상품명,상품코드,태그

AS
	SET NOCOUNT ON

	DECLARE @V_SQL NVARCHAR(MAX);
	
	SET @V_SQL  ='SELECT COUNT(IDX) AS COUNT';
	SET @V_SQL  =@V_SQL + ' FROM VIEW_PRODUCT_VS_PROMOTION_LIST WITH (NOLOCK) ' ;
	SET @V_SQL  =@V_SQL + '    WHERE DISPLAY_YN=''Y'' ';
		
	IF @SEARCH_KEYWORD <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND ( P_NAME LIKE ''%'+@SEARCH_KEYWORD+'%'' OR P_CODE LIKE ''%'+@SEARCH_KEYWORD+'%'' OR P_TAG LIKE ''%'+@SEARCH_KEYWORD+'%'' ) '
		END 
	
	EXEC(@V_SQL);
	PRINT @V_SQL

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[sp_song_test02]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[sp_song_test02]
as

select  GETDATE() as dt into #temp
select dt from #temp
GO
/****** Object:  StoredProcedure [dbo].[sp_song_test]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[sp_song_test]
as
select GETDATE()
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_MEMBER_CNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_MEMBER_CNT]
@SEARCH_KEY		VARCHAR(100) = ''	--검색 필드
,@SEARCH_VALUE		VARCHAR(100) = ''	--검색 값
AS
BEGIN
/**
	To Create Complex Type
*/
IF (1=0) 
BEGIN 
    SET FMTONLY OFF 
        BEGIN
            -- declaration + dummy query 
            -- to allow EF obtain complex data type:
            DECLARE @MyStoredProcResult TABLE(
					M_NO INT NOT NULL
                );
            SELECT COUNT(M_NO) AS CNT FROM @MyStoredProcResult WHERE (1=0)
        END
END   



	----------------------------------------	
	DECLARE @LISTCOUNT INT	

	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @V_SQL NVARCHAR(MAX);
	 
	-----------------------------

	set @v_SQL_WHERE = ' (1=1) AND M_IS_RETIRE<>''Y''';
	
	IF @SEARCH_KEY <>'' AND @SEARCH_VALUE <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_KEY + ' like ''%' + @SEARCH_VALUE + '%'') ';
		
	SET @V_SQL  = 'SELECT count(M_ID) ';
	SET @V_SQL  = @V_SQL + ' FROM TB_MEMBER WITH (NOLOCK) ';
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;

	print @V_SQL;

	EXEC(@V_SQL);
	
	SET ROWCOUNT 0 ; --기본값 복원 
	

	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PRODUCT_CNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품 총 카운트 
 * Modified  :   2015.07.10
 * Modified  :   2015.07.15
 * Modified  :   2015.07.16
 * Modified  :   2015.08.28
 * Modified  :   2015.09.03
 * Modified  :   2015.09.04
 ============================================================*/  
  --exec SP_PRODUCT_CNT '','','','','N'
CREATE PROCEDURE [dbo].[SP_PRODUCT_CNT]
 @P_CATE_CODE		VARCHAR(150) =''		--유형별 카테고리 ( 여러개 가능)
,@C_CATE_CODE			CHAR(9) =''			--피부고민별 카테고리 
,@L_CATE_CODE			CHAR(9) =''			--라인별 카테고리 
,@SORT_GBN			VARCHAR(10) =''			--NEW, LIKE ,UP, DOWN (신상품,인기,최고가,최저가)
,@P_OUTLET_YN		VARCHAR(1)  =''			--아울렛 상품 구분 아울렛상품:Y
,@P_CATE_CODE_3DEPTH	VARCHAR(150) =''		--유형별 카테고리 ( 여러개 가능)

AS

	SET NOCOUNT ON

	
	DECLARE @V_SQL NVARCHAR(MAX);
	
	SET @V_SQL  ='SELECT COUNT(IDX) AS COUNT';
	SET @V_SQL  =@V_SQL + ' FROM VIEW_PRODUCT_VS_PROMOTION_LIST WITH (NOLOCK) ' ;
	SET @V_SQL  =@V_SQL + '    WHERE DISPLAY_YN=''Y'' ';
		
		
	IF @P_OUTLET_YN = 'Y' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND P_OUTLET_YN = ''Y'' '
		END 
	ELSE
		BEGIN
		SET @V_SQL = @V_SQL + ' AND ISNULL(P_OUTLET_YN,''N'') != ''Y'' '
		END 
	
	
	--다중검색일경우
	IF @C_CATE_CODE = '' AND  @L_CATE_CODE = '' 
	BEGIN
		IF @P_CATE_CODE_3DEPTH <> '' 
			BEGIN
			set @P_CATE_CODE_3DEPTH		= REPLACE(@P_CATE_CODE_3DEPTH,',',''',''')
			SET @V_SQL = @V_SQL + ' AND ( P_CATE_CODE IN (''' + @P_CATE_CODE_3DEPTH + ''') ) '	
			END 

		ELSE IF @P_CATE_CODE <> '' 
			BEGIN
				IF SUBSTRING(@P_CATE_CODE,4,3) = '100'
				BEGIN
				SET @V_SQL = @V_SQL + ' AND ( SUBSTRING(P_CATE_CODE,0,4) = ''' + SUBSTRING(@P_CATE_CODE,0,4) + ''' ) '	
				END
				ELSE IF SUBSTRING(@P_CATE_CODE,7,3) = '100'
				BEGIN
				SET @V_SQL = @V_SQL + ' AND ( SUBSTRING(P_CATE_CODE,0,7) = ''' + SUBSTRING(@P_CATE_CODE,0,7) + ''' ) '	
				END
				ELSE
				BEGIN
				SET @V_SQL = @V_SQL + ' AND ( P_CATE_CODE = ''' + @P_CATE_CODE + ''' ) '	
				END
			END 
	END
		
	IF @C_CATE_CODE <> '' 
		BEGIN
		--SET @V_SQL = @V_SQL + ' AND C_CATE_CODE = '''+@C_CATE_CODE+''' '
		SET @V_SQL = @V_SQL + ' AND (C_CATE_CODE = '''+@C_CATE_CODE+''') '
		END 
	
	IF @L_CATE_CODE <> '' 
		BEGIN
		--SET @V_SQL = @V_SQL + ' AND L_CATE_CODE = '''+@L_CATE_CODE+''' '
		SET @V_SQL = @V_SQL + ' AND (L_CATE_CODE = '''+@L_CATE_CODE+''') '
		END 			


	
	EXEC(@V_SQL);
	PRINT @V_SQL

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_MYPAGE_ORDERLIST_CNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_MYPAGE_ORDERLIST_CNT
마이페이지 주문내역 리스트 건수

파라미터 설명
@ORDER_CODE VARCHAR(20)='' -- 주문번호
,@M_ID VARCHAR(13)=''   -- 회원ID
,@FROM_DATE VARCHAR(10) = ''		-- 시작 주문일자 (ex 2015-07-09)
,@TO_DATE VARCHAR(10) = ''		-- 종료 주문일자 (ex 2015-07-09)

SELECT * 
--	UPDATE A SET A.M_GRADE = 'V'
FROM TB_MEMBER A
WHERE M_ID = 'KMG5302'

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec SP_MYPAGE_ORDERLIST_CNT '','test_b1s','2015-01-01','2015-12-31'
exec SP_MYPAGE_ORDERLIST '','test_b1s','2015-01-01','2015-12-31'
exec SP_MYPAGE_ORDERLIST_CNT '20150722-100048'
exec SP_MYPAGE_ORDERLIST '20150722-100048'

*/
CREATE PROCEDURE [dbo].[SP_MYPAGE_ORDERLIST_CNT]
@ORDER_CODE VARCHAR(20)='' -- 주문번호
,@M_ID VARCHAR(13)=''   -- 회원ID
,@FROM_DATE VARCHAR(10) = ''		-- 시작 주문일자 (ex 2015-07-09)
,@TO_DATE VARCHAR(10) = ''		-- 종료 주문일자 (ex 2015-07-09)
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @v_SQL_WHERE VARCHAR(3000) = '' ;
	DECLARE @v_SQL VARCHAR(3000) = '' ;
	DECLARE @LISTCOUNT INT

	IF @ORDER_CODE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND A.ORDER_CODE = '''+@ORDER_CODE+''' ';
	END
	ELSE BEGIN
		IF @M_ID <> ''
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND A.M_ID = '''+@M_ID+''' ';
		END
		IF @FROM_DATE <> ''
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,A.ORDER_DATE ,121) >= '''+@FROM_DATE+''' ';
		END
		IF @TO_DATE <> ''
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,A.ORDER_DATE ,121) <= '''+@TO_DATE+''' ';
		END
	END

	

	IF OBJECT_ID('tempdb..#TMP_ORDERLIST') is not null
	BEGIN
	  DROP TABLE #TMP_ORDERLIST;
	END

	CREATE TABLE #TMP_ORDERLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		ORDER_IDX	INT
	)

	SET @v_SQL  = '
		insert into #TMP_ORDERLIST (ORDER_IDX)
		SELECT A.ORDER_IDX 
		FROM TB_ORDER_MASTER A WITH (NOLOCK)
			, TB_ORDER_DETAIL B WITH (NOLOCK)
		WHERE A.ORDER_IDX = B.ORDER_IDX
		' + @v_SQL_WHERE + 
		' GROUP BY A.ORDER_IDX , A.ORDER_DATE
		  ORDER BY A.ORDER_DATE DESC ' ;
	--	PRINT @v_SQL;
	EXEC(@v_SQL);
	
	SELECT COUNT(*) AS COUNT
	FROM #TMP_ORDERLIST T

	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_DISPLAY_SEL]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2015-08-09
-- Description:	전시관리. 웹 메인 배너 조회
-- ussage: exec SP_DISPLAY_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_DISPLAY_SEL]
	@KIND VARCHAR(3) = NULL,
	@SUB_KIND VARCHAR(3) = NULL,
	@SEQ INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				DECLARE @MyStoredProcResult TABLE(
						IDX INT,
						URL VARCHAR(300),
						IMG VARCHAR(30),
						P_CODE VARCHAR(10),
						P_NAME VARCHAR(100),
						P_MAIN_IMG VARCHAR(100),
						P_SUB_TITLE VARCHAR(100),
						SELLING_PRICE INT ,
						DISCOUNT_PRICE INT,
						TITLE1 VARCHAR(300),
						TITLE2 VARCHAR(300),
						SEQ INT,
						INS_DATE DATETIME
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END 
	
	DECLARE @v_SQL_WHERE NVARCHAR(MAX) ;
	DECLARE @v_SQL_ORDERBY NVARCHAR(MAX) ;
	DECLARE @V_SQL NVARCHAR(MAX);
	
	SET @v_SQL_WHERE = ' (1=1) AND KIND='+@KIND ;
	SET @v_SQL_ORDERBY = ' SEQ ASC, INS_DATE DESC ' ;	
	
	IF @SUB_KIND IS NOT NULL
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND SUB_KIND=' + @SUB_KIND;
		END 
		
	IF @SEQ IS NOT NULL
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND SEQ=' + CONVERT(VARCHAR,@SEQ);
		END 

	SET @V_SQL  = ' SELECT IDX,URL,IMG,P_CODE,TITLE1,TITLE2,P_NAME,P_MAIN_IMG,P_SUB_TITLE,SELLING_PRICE,DISCOUNT_PRICE,SEQ,INS_DATE ';
	SET @V_SQL  = @V_SQL + ' FROM TB_DISPLAY WITH (NOLOCK) '
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	SET @V_SQL  = @V_SQL + ' ORDER BY ' +  @v_SQL_ORDERBY;
	
	PRINT @V_SQL;
	
	EXEC(@V_SQL);

		
    SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_PRODUCT_LIST_CNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 개별 쿠폰당 사용가능 상품리스트  COUNT  
 * Modified  :   2015.07.21 .7.22  
 * Modified  :     
 * Modified  :    
 ============================================================*/    
-- exec [SP_COUPON_AVAILABLE_LIST_CNT] 'test_b2','',''  
  
  
CREATE PROCEDURE  [dbo].[SP_COUPON_PRODUCT_LIST_CNT]  
 @M_ID VARCHAR(13)  
,@IDX_COUPON_SERIAL INT  
,@SEARCH_KEY  VARCHAR(100) ='' --검색 필드  
,@SEARCH_KEYWORD VARCHAR(100) ='' --검색 키워드  
AS  
  
BEGIN  
--SET FMTONLY OFF --complex type 생성시 필요  
--IF 1=0 BEGIN  
--   SET FMTONLY OFF  
--END  
  
 SET NOCOUNT ON  
 --SET FMTONLY OFF  
   
   
 DECLARE @LISTCOUNT INT  
 DECLARE @V_SQL NVARCHAR(MAX);  
   
 SET @V_SQL = '' ;  
 SET @V_SQL  =@V_SQL + ' SELECT COUNT(*) AS CNT ';  
 SET @V_SQL  =@V_SQL + ' FROM [VIEW_USABLE_COUPON_PRODUCT_LIST] '  
 SET @V_SQL  =@V_SQL + '    WHERE 1=1 AND M_ID=''' +@M_ID+ ''' '  
 SET @V_SQL  =@V_SQL + '    AND IDX_COUPON_NUMBER ='+cast(@IDX_COUPON_SERIAL as varchar(12))+' ' -- P=PC AND 모바일 , M=모바일 전용   
  
 IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''  
    BEGIN  
  SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '   
 END  
  
    
 --SET @V_SQL  =@V_SQL + ' ORDER BY IDX_COUPON_NUMBER DESC' ;  
   
 EXEC(@V_SQL);  
 --PRINT @V_SQL  
   
  
  
 SET NOCOUNT OFF  
   
END
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_CLOSED_LIST_COUNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 사용 가능 쿠폰 리스트 COUNT (모바일 OR PC)  
                    
 * Modified  :   2015.08.18 
 * Modified  :       
 * Modified  :      
 ============================================================*/     
  
CREATE PROC [dbo].[SP_COUPON_CLOSED_LIST_COUNT]  
 @M_ID VARCHAR(13)  
,@USABLE_DEVICE_GBN VARCHAR(1) --  디바이스구분 P=PC AND 모바일 , M=모바일 전용 
,@PAGE    INT   --현재 PAGE  
,@PAGESIZE   INT   --페이지 사이즈  
,@SEARCH_KEY  VARCHAR(100) ='' --검색 필드  
,@SEARCH_KEYWORD VARCHAR(100) ='' --검색 키워드  
  
AS  
  
  
 SET NOCOUNT ON  
 --SET FMTONLY OFF  
   
 DECLARE @LISTCOUNT INT  
 DECLARE @V_SQL NVARCHAR(MAX);     
 
  
 SET @LISTCOUNT = @PAGE * @PAGESIZE  
 SET ROWCOUNT @LISTCOUNT  
  
 SET @V_SQL  ='SELECT COUNT(IDX_COUPON_NUMBER) AS CNT ';  
 SET @V_SQL  =@V_SQL + ' FROM VIEW_CLOSED_COUPON_LIST '  
 SET @V_SQL  =@V_SQL + '    WHERE 1=1 AND (M_ID=''' +@M_ID+ ''' '  
 
 IF @USABLE_DEVICE_GBN = 'P'
 BEGIN	
	SET @V_SQL  =@V_SQL + '    AND USABLE_DEVICE_GBN =''P''' -- P=PC AND 모바일 , M=모바일 전용   
 END 
 SET @V_SQL  =@V_SQL + '      )'      
  
 IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''  
 BEGIN  
    SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '   
 END  
  
 
 EXEC(@V_SQL)
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_DOWNLOADABLE_ON_MOBILE_CNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================        
 * Author  : 송선우 (swsong2@cstone.co.kr)        
 * Company  : 코너스톤 인터랙티브        
 * Description : 다운로드 가능 쿠폰 리스트   (모바일버전- 모바일에서만 사용)  
                      
 * Modified  :   2015.08.25   
 * Modified  :         
 * Modified  :        
 ============================================================*/       
    
CREATE PROC [dbo].[SP_COUPON_DOWNLOADABLE_ON_MOBILE_CNT]    
 @M_ID VARCHAR(13)
,@SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드
     
AS    
    
SET NOCOUNT ON
	--SET FMTONLY OFF
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	


	SET @V_SQL  =' SELECT COUNT(IDX_COUPON_NUMBER) AS CNT ';
	SET @V_SQL  =@V_SQL + ' FROM VIEW_USABLE_COUPON_LIST '
	SET @V_SQL  =@V_SQL + '    WHERE 1=1 AND (M_ID=''' +@M_ID+ ''' '
	SET @V_SQL  =@V_SQL + '    AND USE_STATUS=''1''   )'      -- 쿠폰사용단계 : 발행(다운로드가능) = 1 , 사용가능(인증,다운로드완료)= 5 , 사용완료 = 10  ;

	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
	BEGIN
		  SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
	END

		
	SET @V_SQL  =@V_SQL + '	ORDER BY IDX_COUPON_NUMBER DESC' ;
	
	EXEC(@V_SQL);
	--PRINT @V_SQL
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_AVAILABLE_ON_MOBILE_LIST_CNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 사용가능 쿠폰리스트 COUNT -- 모바일에서 
 * Modified  :   2015.08.26
 * Modified  :   
 * Modified  :  
 ============================================================*/  
-- exec [SP_COUPON_AVAILABLE_LIST_CNT] 'test_b2','',''


CREATE PROCEDURE  [dbo].[SP_COUPON_AVAILABLE_ON_MOBILE_LIST_CNT]
 @M_ID VARCHAR(13)
,@SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드
AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

	SET NOCOUNT ON
	--SET FMTONLY OFF
	
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	SET @V_SQL = '' ;
	SET @V_SQL  =@V_SQL + ' SELECT COUNT(IDX_COUPON_NUMBER) AS CNT ';
	SET @V_SQL  =@V_SQL + ' FROM VIEW_USABLE_COUPON_LIST '
	SET @V_SQL  =@V_SQL + '    WHERE 1=1 AND (M_ID=''' +@M_ID+ ''' '
	-- SET @V_SQL  =@V_SQL + '    AND USABLE_DEVICE_GBN =''P'' ' -- P=PC AND 모바일 , M=모바일 전용 
	SET @V_SQL  =@V_SQL + '    AND USE_STATUS=''5''   )'      -- 쿠폰사용단계 : 발행(다운로드가능) = 1 , 사용가능(인증,다운로드완료)= 5 , 사용완료 = 10  ;

	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
    BEGIN
		SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
	END

		
	--SET @V_SQL  =@V_SQL + '	ORDER BY IDX_COUPON_NUMBER DESC' ;
	
	EXEC(@V_SQL);
	--PRINT @V_SQL
	


	SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_APP_ERROR_LOG_CNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE  [dbo].[SP_APP_ERROR_LOG_CNT]  
 @SEARCH_KEY  VARCHAR(100) ='' --검색 필드  
,@SEARCH_KEYWORD VARCHAR(100) ='' --검색 키워드   
AS  
  
BEGIN  

  
 SET NOCOUNT ON  

   
   
 DECLARE @LISTCOUNT INT  
 DECLARE @V_SQL NVARCHAR(MAX);  
   
 SET @V_SQL  ='SELECT COUNT(SEQNO) AS COUNT ';  
 SET @V_SQL  =@V_SQL + ' FROM TB_APP_ERROR_LOG WITH (NOLOCK) '  
 SET @V_SQL  =@V_SQL + '    WHERE 1=1 ';  
  
 IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''  
  BEGIN  
  SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '   
  END  
   
   
 EXEC(@V_SQL);  
 --PRINT @V_SQL  
  
  
 SET NOCOUNT OFF  
   
END
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_AVAILABLE_LIST_CNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 사용가능 쿠폰리스트 COUNT
 * Modified  :   2015.07.21 .7.22
 * Modified  :   
 * Modified  :  
 ============================================================*/  
-- exec [SP_COUPON_AVAILABLE_LIST_CNT] 'test_b2','',''


CREATE PROCEDURE  [dbo].[SP_COUPON_AVAILABLE_LIST_CNT]
 @M_ID VARCHAR(13)
,@SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드
AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

	SET NOCOUNT ON
	--SET FMTONLY OFF
	
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	SET @V_SQL = '' ;
	SET @V_SQL  =@V_SQL + ' SELECT COUNT(IDX_COUPON_NUMBER) AS CNT ';
	SET @V_SQL  =@V_SQL + ' FROM VIEW_USABLE_COUPON_LIST '
	SET @V_SQL  =@V_SQL + '    WHERE 1=1 AND (M_ID=''' +@M_ID+ ''' '
	SET @V_SQL  =@V_SQL + '    AND USABLE_DEVICE_GBN =''P'' ' -- P=PC AND 모바일 , M=모바일 전용 
	SET @V_SQL  =@V_SQL + '    AND USE_STATUS=''5''   )'      -- 쿠폰사용단계 : 발행(다운로드가능) = 1 , 사용가능(인증,다운로드완료)= 5 , 사용완료 = 10  ;

	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
    BEGIN
		SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
	END

		
	--SET @V_SQL  =@V_SQL + '	ORDER BY IDX_COUPON_NUMBER DESC' ;
	
	EXEC(@V_SQL);
	--PRINT @V_SQL
	


	SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PRODUCT_CNT]    Script Date: 09/11/2015 16:07:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품리스트 (admin)
 * Modified  :   2015.06.11
 * Modified  :   2015.07.01
 * Modified  :   2015.07.03
 * Modified  :   2015.07.08
 * Modified  :   2015.07.21
 * Modified  :   2015.08.05
 * Modified  :   2015.08.25
 * Modified  :   2015.08.27
 * Modified  :   2015.09.04
 ============================================================*/  
 --EXEC [SP_ADMIN_PRODUCT_CNT] 'P_CODE','1111118,1111117,1111116','','','','','','','2015-07-01','2015-07-21'
CREATE PROCEDURE [dbo].[SP_ADMIN_PRODUCT_CNT]
@SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(2000) =''	--검색 키워드
,@CATE_CODE			CHAR(9) =''			--카테고리 
,@ICON_YN			VARCHAR(20) =''		--R:추천, P:인기, D:백화점 전용,F:빠른배송, O:온라인전용
,@SEARCH_DISPLAY_Y	VARCHAR(1) =''		--Y  전시
,@SEARCH_DISPLAY_N	VARCHAR(1) =''		--Y 비전시
,@SOLDOUT_YN		VARCHAR(1) =''		--Y 품절
,@P_OUTLET_YN		VARCHAR(1) =''		--Y 아울렛
,@FROM_DATE			VARCHAR(10) =''		--시작일
,@TO_DATE			VARCHAR(10) =''		--마감일

AS

BEGIN

	SET NOCOUNT ON
	--SET FMTONLY OFF
	--IF 1=0 BEGIN
	--   SET FMTONLY OFF
	--END
	
	DECLARE @V_SQL NVARCHAR(MAX);

	--아이콘 검색
	DECLARE @string varchar(20)
	SET @string = @ICON_YN
	DECLARE @pos numeric(20)
	DECLARE @piece varchar(50)
	DECLARE @NUM INT
	SET @NUM = 0
	
	
	
	SET @V_SQL  ='SELECT COUNT(IDX) AS COUNT, SUM(IDX) AS SUMCOUNT ';
	SET @V_SQL  =@V_SQL + ' FROM TB_PRODUCT_INFO WITH (NOLOCK) ' ;
	SET @V_SQL  =@V_SQL + ' WHERE 1=1 ';	
	 
	IF @SEARCH_KEY = 'P_CODE' AND @SEARCH_KEYWORD <> ''
		BEGIN
		--SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '
		set @SEARCH_KEYWORD		= REPLACE(@SEARCH_KEYWORD,',',''',''')
		SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' IN (''' + @SEARCH_KEYWORD + ''') ) '	
		END
	
	IF @SEARCH_KEY = 'P_NAME' AND @SEARCH_KEYWORD <> ''
		BEGIN
		SET @V_SQL = @V_SQL + ' AND P_NAME LIKE ''%'+@SEARCH_KEYWORD+'%'' '	
		END

	IF @FROM_DATE <> '' AND @TO_DATE <> ''
		BEGIN
		SET @V_SQL = @V_SQL + ' AND INS_DATE >= '''+@FROM_DATE+''' AND INS_DATE <= '''+@TO_DATE+' 23:59:59'''	
		END
		
	IF @CATE_CODE <> '' 
		BEGIN
			IF SUBSTRING(@CATE_CODE,4,3) = '100'
			BEGIN
			SET @V_SQL = @V_SQL + ' AND ( SUBSTRING(P_CATE_CODE,0,4) = ''' + SUBSTRING(@CATE_CODE,0,4) + ''' ) '	
			END
			ELSE IF SUBSTRING(@CATE_CODE,7,3) = '100'
			BEGIN
			SET @V_SQL = @V_SQL + ' AND ( SUBSTRING(P_CATE_CODE,0,7) = ''' + SUBSTRING(@CATE_CODE,0,7) + ''' ) '	
			END
			ELSE
			BEGIN
			SET @V_SQL = @V_SQL + ' AND ( P_CATE_CODE = ''' + @CATE_CODE + ''' ) '	
			END
		END 	
		
	IF @string <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + 'AND ( '
		SET @pos = patindex('%,%' , @string)
		while @pos <> 0
		begin
			IF @NUM > 0 
			BEGIN
				SET @V_SQL = @V_SQL + ' OR'
			END
			SET @piece = LEFT(@string, @pos-1)
			SET @V_SQL = @V_SQL + ' ICON_YN LIKE ''%'+@piece+'%'' '
			--print @piece
			SET @string = stuff(@string, 1, @pos, NULL)
			SET @pos = charindex(',' , @string)
			SET @NUM = @NUM + 1
		end
		IF @NUM > 0 
			BEGIN
				SET @V_SQL = @V_SQL + ' OR'
			END
		SET @V_SQL = @V_SQL + ' ICON_YN LIKE ''%'+@string+'%'' '
		SET @V_SQL = @V_SQL + ') '

		
		END 

	IF @SEARCH_DISPLAY_Y = 'Y' AND  @SEARCH_DISPLAY_N = '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND DISPLAY_YN = ''Y'' '
		END 				

	IF @SEARCH_DISPLAY_N = 'Y' AND  @SEARCH_DISPLAY_Y = '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND ISNULL(DISPLAY_YN,''N'') = ''N'' '
		END 

	IF @SOLDOUT_YN <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND ISNULL(SOLDOUT_YN,''N'')  = '''+@SOLDOUT_YN+''' '
		END 	

	IF @P_OUTLET_YN <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND ISNULL(P_OUTLET_YN,''N'')  = '''+@P_OUTLET_YN+''' '
		END 								
	
	EXEC(@V_SQL);
	--PRINT @V_SQL


	SET NOCOUNT OFF
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_CNT]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품별 할인 프로모션리스트 (admin)
 * Modified  :   2015.07.07
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_CNT] '',''
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_CNT]
 @SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드
AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

	SET NOCOUNT ON
	--SET FMTONLY OFF
	
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	SET @V_SQL  ='SELECT COUNT(IDX) AS CNT ';
	SET @V_SQL  =@V_SQL + ' FROM TB_PROMOTION_BY_PRODUCT WITH (NOLOCK) '
	SET @V_SQL  =@V_SQL + '    WHERE 1=1 ';

	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
		BEGIN
		SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
		END
	
	/**
	IF @SEARCH_DISPLAY_YN <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND DISPLAY_YN = '''+@SEARCH_DISPLAY_YN+''' '
		END 				
	**/
		
	--SET @V_SQL  =@V_SQL + '	ORDER BY IDX DESC' ;
	
	EXEC(@V_SQL);
	--PRINT @V_SQL


	SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_QNA_CNT]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_QNA

exec [SP_ADMIN_QNA_CNT]  'TEST'
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_QNA_CNT]
 @SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@STATUS_YN	CHAR(1) = 'A'

AS
BEGIN
SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	 
	set @v_SQL_WHERE = ' WHERE (1=1)'

	
	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '

	IF @STATUS_YN <> 'A'
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( STATUS = ''' + @STATUS_YN + ''') '
 

	set @v_SQL = 'SELECT COUNT(IDX) AS COUNT 
				  FROM TB_QNA  WITH (NOLOCK) ' 

	set @v_SQL = @v_SQL + @v_SQL_WHERE 
	exec(@v_SQL)
	
		
	SET NOCOUNT OFF ;
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_SAMPLE_CNT]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_SAMPLE_CNT
어드민의 샘플/체험단 관리페이지에서 리스트조회시 검색건수 리턴

SELECT * FROM TB_SAMPLE

exec SP_ADMIN_SAMPLE_CNT  '2015-08-05','2015-08-05','0','A','SAMPLE_NAME','샘플'
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_SAMPLE_CNT]
@FROM_DATE CHAR(10)			-- 신청 시작일   ( ex) 2015-08-05 )
,@TO_DATE CHAR(10)			-- 신청 종료일   ( ex) 2015-08-05 )
,@ING_GBN CHAR(1)			-- 진행구분  0:전체, 1:예약, 2:진행, 3:종료
,@USE_YN CHAR(1)			-- 전시구분 A:전체, Y:전시, N:비전시
,@SEARCH_COL VARCHAR(50)	='' 
,@SEARCH_KEYWORD VARCHAR(50)	='' 
AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ; 
	DECLARE @v_SQL VARCHAR(3000) ;
	-----------------------------

	SET @v_SQL_WHERE = ' WHERE (1=1)' 
	
	IF @FROM_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  <= ''' + @FROM_DATE + ''' + '' 00'') '
	END
	IF @TO_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  >= ''' + @TO_DATE + ''' + '' 00'') '
	END
	IF @ING_GBN = '1'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  > CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @ING_GBN = '2'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 ) ) '
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @ING_GBN = '3'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  < CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @USE_YN <> 'A'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( USE_YN = ''' + @USE_YN + ''' ) '
	END
	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
	END

	-------------------------------------------------

	SET @v_SQL  ='SELECT  COUNT(IDX) AS COUNT ';
	SET @v_SQL  =@v_SQL + ' FROM TB_SAMPLE WITH (NOLOCK) ';
	SET @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	EXEC(@v_SQL);

	-- PRINT @v_SQL
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_CNT]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 전체할인 프로모션리스트 (admin)
 * Modified  :   2015.07.03
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_CNT] '',''
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_CNT]
 @SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드
AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

	SET NOCOUNT ON
	--SET FMTONLY OFF
	
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	SET @V_SQL  ='SELECT COUNT(IDX) AS CNT ';
	SET @V_SQL  =@V_SQL + ' FROM TB_PROMOTION_BY_TOTAL WITH (NOLOCK) '
	SET @V_SQL  =@V_SQL + '    WHERE 1=1 ';

	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
		BEGIN
		SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
		END
	
	/**
	IF @SEARCH_DISPLAY_YN <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND DISPLAY_YN = '''+@SEARCH_DISPLAY_YN+''' '
		END 				
	**/
		
	--SET @V_SQL  =@V_SQL + '	ORDER BY IDX DESC' ;
	
	EXEC(@V_SQL);
	--PRINT @V_SQL


	SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_RECALL_BBS_CNT]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_RECALL_BBS

exec [SP_ADMIN_RECALL_BBS_CNT]  'TEST'
*/
create PROCEDURE [dbo].[SP_ADMIN_RECALL_BBS_CNT]
 @SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@STATUS_YN	CHAR(1) = 'A'

AS
BEGIN
SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	 
	set @v_SQL_WHERE = ' WHERE (1=1)'

	
	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '

	IF @STATUS_YN <> 'A'
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( STATUS = ''' + @STATUS_YN + ''') '
 

	set @v_SQL = 'SELECT COUNT(IDX) AS COUNT 
				  FROM TB_RECALL_BBS  WITH (NOLOCK) ' 

	set @v_SQL = @v_SQL + @v_SQL_WHERE 
	exec(@v_SQL)
	
		
	SET NOCOUNT OFF ;
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_SHOPINFO_CNT]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_SHOPINFO_CNT
어드민의 매장관리페이지에서 리스트조회시 검색건수 리턴

SELECT * FROM TB_SHOPINFO

exec SP_ADMIN_SHOPINFO_CNT  'A','SHOP_NAME','1'
exec SP_ADMIN_SHOPINFO_CNT  'A','LOCATION_INFO','오시는'
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_SHOPINFO_CNT]
@USE_YN CHAR(1)			-- 전시구분 A:전체, Y:전시, N:비전시
,@SEARCH_COL VARCHAR(50)	='' 
,@SEARCH_KEYWORD VARCHAR(50)	='' 
AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ; 
	DECLARE @v_SQL VARCHAR(3000) ;
	-----------------------------

	SET @v_SQL_WHERE = ' WHERE (1=1)' 
	
	IF @USE_YN <> 'A'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( USE_YN = ''' + @USE_YN + ''' ) '
	END
	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
	END

	-------------------------------------------------

	SET @v_SQL  ='SELECT  COUNT(IDX) AS COUNT ';
	SET @v_SQL  =@v_SQL + ' FROM TB_SHOPINFO WITH (NOLOCK) ';
	SET @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	EXEC(@v_SQL);

	-- PRINT @v_SQL
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_TAB_PRODUCT_SEARCH]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EXHIBIT_TAB_PRODUCT_SEARCH
어드민의 기획전관리페이지에서 기획전의 탭에 상품 등록

SELECT * FROM TB_EXHIBIT
SELECT * FROM TB_EXHIBIT_TAB
SELECT * FROM TB_EXHIBIT_TAB_PRODUCT
SELECT * FROM TB_PRODUCT_INFO

EXEC SP_ADMIN_EXHIBIT_TAB_PRODUCT_SEARCH 'P_CODE','RAA00001'
EXEC SP_ADMIN_EXHIBIT_TAB_PRODUCT_SEARCH 'P_NAME','스킨'

*/
CREATE PROC [dbo].[SP_ADMIN_EXHIBIT_TAB_PRODUCT_SEARCH]
@SEARCH_COL VARCHAR(40) = ''		-- 검색필드명 (P_CODE 상품코드, ,P_NAME 상품명)
,@SEARCH_KEYWORD VARCHAR(100) = ''	-- 검색값
AS
BEGIN

	DECLARE @v_SQL VARCHAR(3000) = '' ;

	SET @v_SQL = '
		SELECT A.P_CODE, A.P_NAME, A.P_SUB_TITLE
			, A.SELLING_PRICE, A.DISCOUNT_PRICE
			, CASE WHEN B.PROMOTION_PRODUCT_YN = ''Y'' THEN ''있음'' ELSE ''없음'' END AS PROMOTION_YN
			, CASE WHEN C.P_CODE IS NULL THEN ''없음'' ELSE ''있음'' END AS COUPON_YN
		FROM TB_PRODUCT_INFO A WITH (NOLOCK)
			LEFT JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
			LEFT JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST_ALL C WITH (NOLOCK)
				ON A.P_CODE = C.P_CODE
		WHERE 1=1
	'
	
	IF UPPER(@SEARCH_COL) = 'P_CODE'
	BEGIN
		SET @v_SQL = @v_SQL + '
			AND A.P_CODE = ''' + @SEARCH_KEYWORD + '''
		'
	END
	IF UPPER(@SEARCH_COL) = 'P_NAME'
	BEGIN
		SET @v_SQL = @v_SQL + '
			AND A.P_NAME LIKE ''' + @SEARCH_KEYWORD + '%''
		'
	END
	
		
	EXEC(@v_SQL);

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_GIFT_CNT]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 사은품 카운트 (admin)
 * Modified  :   2015.07.28
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_ADMIN_GIFT_CNT]
 @SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드
,@SEARCH_DISPLAY_YN	VARCHAR(1) =''		--Y  전시, N 비전시, 값없을때 모든 데이타

AS

BEGIN

	SET NOCOUNT ON
	
	DECLARE @V_SQL NVARCHAR(MAX);


	
	SET @V_SQL  ='SELECT COUNT(IDX) AS COUNT ';
	SET @V_SQL  =@V_SQL + ' FROM TB_FREE_GIFT_INFO WITH (NOLOCK) ' ;
	SET @V_SQL  =@V_SQL + ' WHERE 1=1 ';	
	 
	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
		BEGIN
		SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '
		END

	IF @SEARCH_DISPLAY_YN <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND DISPLAY_YN  = '''+@SEARCH_DISPLAY_YN+''' '
		END 	

	EXEC(@V_SQL);
	--PRINT @V_SQL


	SET NOCOUNT OFF
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MAGAZINE_CNT]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_MAGAZINE_CNT
어드민의 매거진관리페이지에서 리스트조회시 검색건수 리턴

SELECT * FROM TB_MAGAZINE

exec SP_ADMIN_MAGAZINE_CNT  'A','TITLE','1'
exec SP_ADMIN_MAGAZINE_CNT  'A','SUB_TITLE','222'
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_MAGAZINE_CNT]
@USE_YN CHAR(1)			-- 전시구분 A:전체, Y:전시, N:비전시
,@SEARCH_COL VARCHAR(50)	='' 
,@SEARCH_KEYWORD VARCHAR(50)	='' 
AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ; 
	DECLARE @v_SQL VARCHAR(3000) ;
	-----------------------------

	SET @v_SQL_WHERE = ' WHERE (1=1)' 
	
	IF @USE_YN <> 'A'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( USE_YN = ''' + @USE_YN + ''' ) '
	END
	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
	END

	-------------------------------------------------

	SET @v_SQL  ='SELECT  COUNT(IDX) AS COUNT ';
	SET @v_SQL  =@v_SQL + ' FROM TB_MAGAZINE WITH (NOLOCK) ';
	SET @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	EXEC(@v_SQL);

	-- PRINT @v_SQL
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_CNT]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EXHIBIT_CNT
어드민의 기획전관리페이지에서 리스트조회시 검색건수 리턴

SELECT * FROM TB_EXHIBIT

exec SP_ADMIN_EXHIBIT_CNT  '2015-08-05','2015-08-05','0','A','EXHIBIT_NAME','기획전'
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_EXHIBIT_CNT]
@FROM_DATE CHAR(10)			-- 기획전 시작일   ( ex) 2015-08-05 )
,@TO_DATE CHAR(10)			-- 기획전 종료일   ( ex) 2015-08-05 )
,@ING_GBN CHAR(1)			-- 진행구분  0:전체, 1:예약, 2:진행, 3:종료
,@USE_YN CHAR(1)			-- 전시구분 A:전체, Y:전시, N:비전시
,@SEARCH_COL VARCHAR(50)	='' 
,@SEARCH_KEYWORD VARCHAR(50)	='' 
AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ; 
	DECLARE @v_SQL VARCHAR(3000) ;
	-----------------------------

	SET @v_SQL_WHERE = ' WHERE (1=1)' 
	
	IF @FROM_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  <= ''' + @FROM_DATE + ''' + '' 00'') '
	END
	IF @TO_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  >= ''' + @TO_DATE + ''' + '' 00'') '
	END
	IF @ING_GBN = '1'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  > CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @ING_GBN = '2'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 ) ) '
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @ING_GBN = '3'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  < CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @USE_YN <> 'A'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( USE_YN = ''' + @USE_YN + ''' ) '
	END
	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
	END

	-------------------------------------------------

	SET @v_SQL  ='SELECT  COUNT(IDX) AS COUNT ';
	SET @v_SQL  =@v_SQL + ' FROM TB_EXHIBIT WITH (NOLOCK) ';
	SET @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	EXEC(@v_SQL);

	-- PRINT @v_SQL
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_FRONT_MEMBER_CNT]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-01
-- Description:	관리자> 회원관리- 목록 COUNT
-- ussage: exec SP_ADMIN_FRONT_MEMBER_CNT '2015-05-01','2015-05-30','B,S,G,','A','','',''
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_FRONT_MEMBER_CNT]
 @DATE_FROM	varchar(10)	='' -- YYYY-MM-DD  --가입기간
,@DATE_TO	varchar(10)	='' -- YYYY-MM-DD  --가입기간
,@GRADE_LIST varchar(20)	='' -- B,S,G,V
,@GBN varchar(1)	='' -- 임직원구분 A(일반회원)/S(임직원)/공란(전체)
,@IS_RETIRE varchar(1) =''   --  Y/N/공란(ALL)

,@SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
 
	set @v_SQL_WHERE = ' (1=1) '

	--IF @DATE_FROM<>'' AND @DATE_TO <>''  
	--	set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (M_CREDATE < ''' + @DATE_TO +' 23:59:59'' AND M_CREDATE > ''' + @DATE_FROM +''') '  

	IF @DATE_FROM<>'' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (M_CREDATE >= ''' + @DATE_FROM  +''') '  
	IF @DATE_TO <>''  
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (M_CREDATE <= ''' + @DATE_TO +' 23:59:59'') '  

	IF @GRADE_LIST <>'' 
	begin
		set @GRADE_LIST = REPLACE(@GRADE_LIST,',',''',''');
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (M_GRADE in(''' + @GRADE_LIST + ''')) '
    end

	IF @GBN <>'' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (M_GBN=''' + @GBN + ''') '
	IF @IS_RETIRE <>'' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (M_IS_RETIRE=''' + @IS_RETIRE + ''') '

	IF @SEARCH_COL <>'' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '

	 

	set @v_SQL = 'select count(M_ID) as COUNT from VIEW_MEMBER_TOTAL  WITH (NOLOCK) ' 
	set @v_SQL = @v_SQL + '     where ' + @v_SQL_WHERE 
	--print @v_SQL
	exec(@v_SQL)


	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_SLEEPING_CNT]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-08-11
-- Description:	관리자> 휴면계정 관리- 목록 CNT
-- ussage: exec [SP_ADMIN_MEMBER_SLEEPING_CNT] '2015-05-01','',''
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_MEMBER_SLEEPING_CNT]
@M_LASTVISITDATE	varchar(10)	='' -- YYYY-MM-DD  --최종 로그인 일
,@SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	 if(@M_LASTVISITDATE='')
		SELECT @M_LASTVISITDATE = Left(CONVERT(VARCHAR, DATEADD(month,-12,getdate()), 120),10); -- 기본 1년이전 로그인  
 
	set @v_SQL_WHERE = ' (1=1) '
	set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (M_LASTVISITDATE <= ''' + @M_LASTVISITDATE +' 23:59:59'') '  

	IF @SEARCH_COL <>'' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
 
	set @v_SQL = 'select count(M_ID) as COUNT from TB_MEMBER  WITH (NOLOCK) ' 
	set @v_SQL = @v_SQL + '     where ' + @v_SQL_WHERE 
	--print @v_SQL
	exec(@v_SQL)


	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_CNT]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-08-06
-- Description:	관리자- 임직원기준DB-목록 COUNT
-- ussage: exec SP_ADMIN_MEMBER_STAFF_BASE_CNT '2015-05-01','2015-05-30','',''
-- =============================================
CREATE procedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_CNT] 
 @DATE_FROM	varchar(10)	='' -- YYYY-MM-DD  --등록기간
,@DATE_TO	varchar(10)	='' -- YYYY-MM-DD  --등록기간

,@SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
 
	set @v_SQL_WHERE = ' (1=1) '


	--IF @DATE_FROM<>'' AND @DATE_TO <>''  
	--	set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (INS_DATE < ''' + @DATE_TO +' 23:59:59'' AND INS_DATE > ''' + @DATE_FROM +''') '  

	IF @DATE_FROM<>'' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (INS_DATE >= ''' + @DATE_FROM  +''') '  
	IF @DATE_TO <>''  
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (INS_DATE <= ''' + @DATE_TO +' 23:59:59'') '  

	
	IF @SEARCH_COL <>'' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '

	 

	set @v_SQL = 'select count(IDX) as COUNT from TB_MEMBER_STAFF_BASE  WITH (NOLOCK) ' 
	set @v_SQL = @v_SQL + '     where ' + @v_SQL_WHERE 
	--print @v_SQL
	exec(@v_SQL)


	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_REQUST_CNT]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-08
-- Description:	관리자- 임직원신청내역- 목록 CNT
-- ussage: exec SP_ADMIN_MEMBER_STAFF_REQUST_CNT '','','','M_ID','aaaa'
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_MEMBER_STAFF_REQUST_CNT]
 @DATE_FROM	varchar(10)	='' -- YYYY-MM-DD  --신청기간
,@DATE_TO	varchar(10)	='' -- YYYY-MM-DD  --신청기간
,@STATUS varchar(10) =''   --  처리상태: 접수/승인/반려/공란(ALL)

,@SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------

	set @v_SQL_WHERE = ' (1=1) '

	--IF @DATE_FROM<>'' AND @DATE_TO <>''  
	--	set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (INS_DATE < ''' + @DATE_TO +' 23:59:59'' AND INS_DATE > ''' + @DATE_FROM +''') '  

	IF @DATE_FROM<>'' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (INS_DATE >= ''' + @DATE_FROM  +''') '  
	IF @DATE_TO <>''  
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (INS_DATE <= ''' + @DATE_TO +' 23:59:59'') '  


	IF @STATUS<>''
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( STATUS  = ''' + @STATUS + ''') ' ;

	IF @SEARCH_COL <>'' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') ' ;


	set @v_SQL = 'select count(IDX) as COUNT from TB_MEMBER_STAFF_REQUST  WITH (NOLOCK) ' 
	set @v_SQL = @v_SQL + '     where ' + @v_SQL_WHERE 
	--print @v_SQL
	exec(@v_SQL)


	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_MEMBER_CNT]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 [SP_ADMIN_ORDER_MEMBER_CNT]
사용자상세정보 > 주문내역 개수

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec [SP_ADMIN_ORDER_MEMBER_CNT] 'test_b1s'

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_MEMBER_CNT]
@M_ID          VARCHAR(13)
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @v_SQL_WHERE VARCHAR(3000) = '' ;
	DECLARE @v_SQL VARCHAR(3000) = '' ;
	DECLARE @LISTCOUNT INT

	SET @v_SQL_WHERE = 'AND M_ID = '''+@M_ID+''' ';

	
	IF OBJECT_ID('tempdb..#TMP_ORDERLIST') is not null
	BEGIN
	  DROP TABLE #TMP_ORDERLIST;
	END

	CREATE TABLE #TMP_ORDERLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		ORDER_IDX	INT
	)
	
	SET @v_SQL  = '
		insert into #TMP_ORDERLIST (ORDER_IDX)
		SELECT A.ORDER_IDX 
		FROM TB_ORDER_MASTER A WITH (NOLOCK)
			, TB_ORDER_DETAIL B WITH (NOLOCK)
		WHERE A.ORDER_IDX = B.ORDER_IDX
		' + @v_SQL_WHERE + 
		' GROUP BY A.ORDER_IDX , A.ORDER_DATE
		  ORDER BY A.ORDER_DATE DESC ' ;
	--	PRINT @v_SQL;
	EXEC(@v_SQL);
	


	SELECT COUNT(*) AS COUNT
	FROM #TMP_ORDERLIST T
		

	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_LIST_CNT]    Script Date: 09/11/2015 16:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDER_LIST
관리자페이지에서 주문내역 조회

파라미터 설명
@FROM_DATE		-- 시작 주문일자 (ex 2015-07-09)
@TO_DATE		-- 종료 주문일자 (ex 2015-07-09)
@MEMBER_GBN		-- 회원구분 (전체:0, 일반:1, 비회원:2, 임직원:3)
@MEMBER_GRADE_B	-- 브론즈회원조건 (1 또는 0)
@MEMBER_GRADE_S	-- 실버회원조건 (1 또는 0)
@MEMBER_GRADE_G	-- 골드회원조건 (1 또는 0)
@MEMBER_GRADE_V	-- VIP회원조건 (1 또는 0)
@PAY_GBN		-- 결제수단 (A:전체, 1:신용카드, 2:실시간계좌이체, 3:가상계좌, 4:포인트결제 , E:실시간계좌이체 에스크로)
@PAT_GUBUN_W	-- 주문구분조건(Web)
@PAT_GUBUN_M	-- 주문구분조건(Mobile)
@DETAIL_STATUS_20	-- 주문상태조건 (결제완료)
@DETAIL_STATUS_10	-- 주문상태조건 (결제대기)
@DETAIL_STATUS_30	-- 주문상태조건 (상품준비중)
@DETAIL_STATUS_40	-- 주문상태조건 (배송중)
@DETAIL_STATUS_50	-- 주문상태조건 (배송완료)
@DETAIL_STATUS_60	-- 주문상태조건 (구매확정)
@DETAIL_STATUS_90	-- 주문상태조건 (취소)
@DETAIL_STATUS_80	-- 주문상태조건 (반품)
@DETAIL_STATUS_70	-- 주문상태조건 (교환)
@DELIVERY_FROM_DATE	-- 시작 출고일자 (ex 2015-07-09)
@DELIVERY_TO_DATE	-- 종료 출고일자 (ex 2015-07-09)
@SEARCH_COL			-- 기타검색필드명
@SEARCH_KEYWORD		-- 기타검색값


@PAGE			--현재 PAGE (기본값 1)
@PAGESIZE		--페이지 사이즈  (기본값 20)



SELECT * 
--	UPDATE A SET A.M_GRADE = 'V'
FROM TB_MEMBER A
WHERE M_ID = 'KMG5302'

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec SP_ADMIN_ORDER_LIST '2015-01-01','2015-12-31'
exec SP_ADMIN_ORDER_LIST '','','0', 1,1,1,1,'A',1,1, 1,1,1,1,1,1,1,1,1, '','','',''

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_LIST_CNT]
@FROM_DATE VARCHAR(10) = ''		-- 시작 주문일자 (ex 2015-07-09)
,@TO_DATE VARCHAR(10) = ''		-- 종료 주문일자 (ex 2015-07-09)
,@MEMBER_GBN CHAR(1) = '0'		-- 회원구분 (0:전체, 일반:1, 비회원:2, 임직원:3)
,@MEMBER_GRADE_B BIT 
,@MEMBER_GRADE_S BIT
,@MEMBER_GRADE_G BIT
,@MEMBER_GRADE_V BIT
,@PAY_GBN	CHAR(1) = 'A'		-- 결제수단 (A:전체, 1:신용카드, 2:실시간계좌이체, 3:가상계좌, 4:포인트결제, E: 실시간계좌이체(에스크로))
,@PAT_GUBUN_W BIT
,@PAT_GUBUN_M BIT
,@DETAIL_STATUS_20 BIT
,@DETAIL_STATUS_10 BIT
,@DETAIL_STATUS_30 BIT
,@DETAIL_STATUS_40 BIT
,@DETAIL_STATUS_50 BIT
,@DETAIL_STATUS_60 BIT
,@DETAIL_STATUS_90 BIT
,@DETAIL_STATUS_80 BIT
,@DETAIL_STATUS_70 BIT
,@DELIVERY_FROM_DATE VARCHAR(10) = ''	-- 시작 출고일자 (ex 2015-07-09)
,@DELIVERY_TO_DATE VARCHAR(10) = ''		-- 종료 출고일자 (ex 2015-07-09)
,@SEARCH_COL VARCHAR(40) = ''		-- 기타검색필드명 (ORDER_CODE 주문코드,M_ID 회원아이디,P_NAME 상품명,M_NAME 주문자명,RECEIVER_NAME 수취인명,SENDER_HP 보낸사람HP,SENDER_TEL 보낸사람TEL,RECEIVER_HP 수취인HP,RECEIVER_TEL 수취인TEL )
,@SEARCH_KEYWORD VARCHAR(100) = ''	-- 기타검색값

AS
BEGIN
	SET NOCOUNT ON

	DECLARE @v_SQL_WHERE VARCHAR(3000) = '' ;
	DECLARE @v_SQL VARCHAR(3000) = '' ;
	DECLARE @LISTCOUNT INT

	IF @FROM_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,A.ORDER_DATE ,121) >= '''+@FROM_DATE+''' ';
	END
	IF @TO_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,A.ORDER_DATE ,121) <= '''+@TO_DATE+''' ';
	END
	IF @MEMBER_GBN = '1'		-- 회원
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND A.MEMBER_ORDER_GBN = ''1'' AND A.M_GBN = ''A'' ';
	END
	ELSE IF @MEMBER_GBN = '2'	-- 비회원
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND A.MEMBER_ORDER_GBN = ''2'' ';
	END
	ELSE IF @MEMBER_GBN = '3'	-- 임직원
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND A.MEMBER_ORDER_GBN = ''1'' AND A.M_GBN = ''S'' ';
	END
	IF ( ( @MEMBER_GRADE_B = 1 ) OR ( @MEMBER_GRADE_S = 1 ) OR ( @MEMBER_GRADE_G = 1 ) OR ( @MEMBER_GRADE_V = 1 ) )
	BEGIN
		IF ( ( @MEMBER_GRADE_B = 0 ) OR ( @MEMBER_GRADE_S = 0 ) OR ( @MEMBER_GRADE_G = 0 ) OR ( @MEMBER_GRADE_V = 0 ) )
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND ( (1=2) ';
			IF @MEMBER_GRADE_B = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (A.M_GRADE = ''B'') ';
			END
			IF @MEMBER_GRADE_S = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (A.M_GRADE = ''S'') ';
			END
			IF @MEMBER_GRADE_G = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (A.M_GRADE = ''G'') ';
			END
			IF @MEMBER_GRADE_V = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (A.M_GRADE = ''V'') ';
			END
			SET @v_SQL_WHERE = @v_SQL_WHERE + ') ';
		END;
	END
	
	IF @PAY_GBN <> 'A'
	BEGIN
		IF(@PAY_GBN = 'E')
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (A.PAY_GBN = ''2'' AND isnull(A.ESCROW_YN,''N'')=''Y'') ';
		END
		ELSE IF(@PAY_GBN = '2')
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (A.PAY_GBN = ''2'' AND isnull(A.ESCROW_YN,''N'') <> ''Y'') ';
		END
		ELSE
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND A.PAY_GBN = '''+@PAY_GBN+''' ';
		END
		
	END
	
	IF ( ( @PAT_GUBUN_W = 1 ) OR ( @PAT_GUBUN_M = 1 ) )
	BEGIN
		IF ( ( @PAT_GUBUN_W = 0 ) OR ( @PAT_GUBUN_M = 0 ) )
		BEGIN
			IF @PAT_GUBUN_W = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND A.PAT_GUBUN = ''Web'' ';
			END
			IF @PAT_GUBUN_M = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND A.PAT_GUBUN = ''Mobile'' ';
			END
		END;
	END
	IF ( ( @DETAIL_STATUS_20 = 1 ) OR ( @DETAIL_STATUS_10 = 1 ) OR ( @DETAIL_STATUS_30 = 1 ) OR ( @DETAIL_STATUS_40 = 1 ) OR ( @DETAIL_STATUS_50 = 1 ) OR ( @DETAIL_STATUS_60 = 1 ) OR ( @DETAIL_STATUS_90 = 1 ) OR ( @DETAIL_STATUS_80 = 1 ) OR ( @DETAIL_STATUS_70 = 1 ) )
	BEGIN
		IF ( ( @DETAIL_STATUS_20 = 0 ) OR ( @DETAIL_STATUS_10 = 0 ) OR ( @DETAIL_STATUS_30 = 0 ) OR ( @DETAIL_STATUS_40 = 0 ) OR ( @DETAIL_STATUS_50 = 0 ) OR ( @DETAIL_STATUS_60 = 0 ) OR ( @DETAIL_STATUS_90 = 0 ) OR ( @DETAIL_STATUS_80 = 0 ) OR ( @DETAIL_STATUS_70 = 0 ) )
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND ( (1=2) ';
			IF @DETAIL_STATUS_20 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''20'') ';
			END
			IF @DETAIL_STATUS_10 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''10'') ';
			END
			IF @DETAIL_STATUS_30 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''30'') ';
			END
			IF @DETAIL_STATUS_40 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''40'') ';
			END
			IF @DETAIL_STATUS_50 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''50'') ';
			END
			IF @DETAIL_STATUS_60 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''60'') ';
			END
			IF @DETAIL_STATUS_90 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''90'') ';
			END
			IF @DETAIL_STATUS_80 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''80'') ';
			END
			IF @DETAIL_STATUS_70 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''70'') ';
			END
			SET @v_SQL_WHERE = @v_SQL_WHERE + ') ';
		END;
	END
	IF @DELIVERY_FROM_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,B.DELIVERY_DATE ,121) >= '''+@DELIVERY_FROM_DATE+''' ';
	END
	IF @DELIVERY_TO_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,B.DELIVERY_DATE ,121) <= '''+@DELIVERY_TO_DATE+''' ';
	END
	IF @SEARCH_KEYWORD <> ''
	BEGIN
		IF ( @SEARCH_COL = 'A.ORDER_CODE' ) OR ( @SEARCH_COL = 'A.M_ID' )
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND '+@SEARCH_COL+' = '''+@SEARCH_KEYWORD+''' ';
		END
		ELSE BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND '+@SEARCH_COL+' LIKE ''%'+@SEARCH_KEYWORD+'%'' ';
		END
	END

	

	IF OBJECT_ID('tempdb..#TMP_ORDERLIST') is not null
	BEGIN
	  DROP TABLE #TMP_ORDERLIST;
	END

	CREATE TABLE #TMP_ORDERLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		ORDER_IDX	INT
	)

	
	SET @v_SQL  = '
		insert into #TMP_ORDERLIST (ORDER_IDX)
		SELECT A.ORDER_IDX 
		FROM TB_ORDER_MASTER A WITH (NOLOCK)
			, TB_ORDER_DETAIL B WITH (NOLOCK)
		WHERE A.ORDER_IDX = B.ORDER_IDX
		' + @v_SQL_WHERE + 
		' GROUP BY A.ORDER_IDX , A.ORDER_DATE
		  ORDER BY A.ORDER_DATE DESC ' ;
	--	PRINT @v_SQL;
	EXEC(@v_SQL);

	
	SELECT COUNT(*) AS COUNT
	FROM #TMP_ORDERLIST T
		



	SET NOCOUNT OFF ;
END
GO
/****** Object:  Table [dbo].[Sheet2$]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Sheet2$](
	[상품코드] [nvarchar](255) NULL,
	[상품명] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Sheet1$]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Sheet1$](
	[상품코드] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MMS_FILE_UPLOAD]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MMS_FILE_UPLOAD](
	[FILE_GRP_ID] [int] NOT NULL,
	[CONN_NO] [int] NOT NULL,
	[UPLOAD_FLAG] [char](1) NOT NULL,
	[UPLOAD_TIME] [char](19) NULL,
 CONSTRAINT [PK_MMS_FILE_UPLOAD] PRIMARY KEY CLUSTERED 
(
	[FILE_GRP_ID] DESC,
	[CONN_NO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MMS_FILE]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MMS_FILE](
	[FILE_GRP_ID] [int] NOT NULL,
	[INC_INX] [bigint] IDENTITY(1,1) NOT NULL,
	[FILE_CNT] [int] NOT NULL,
	[FILE_PATH] [varchar](1000) NULL,
 CONSTRAINT [PK_MMS_FILE] PRIMARY KEY CLUSTERED 
(
	[FILE_GRP_ID] DESC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MFLY_SEND_MSG]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MFLY_SEND_MSG](
	[SMS_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[CONN_NO] [int] NOT NULL,
	[REQUEST_TIME] [char](19) NULL,
	[S_INX] [int] NULL,
	[SEND_FLAG] [char](1) NOT NULL,
	[SEND_TIME] [char](19) NOT NULL,
	[HANDPHONE] [varchar](15) NOT NULL,
	[CALLBACK_NO] [varchar](15) NOT NULL,
	[SEND_MSG] [varchar](90) NOT NULL,
	[ETC1] [varchar](20) NULL,
	[ETC2] [varchar](20) NULL,
	[ETC3] [int] NULL,
	[ETC4] [int] NULL,
	[GRP_NO] [int] NOT NULL,
	[PROC_GRP_NO] [int] NOT NULL,
	[PROC_TIME] [int] NOT NULL,
	[CANCEL_FLAG] [char](1) NOT NULL,
	[RESULT_FLAG] [char](1) NOT NULL,
	[RESULT_CODE] [int] NOT NULL,
	[RESULT_INFO] [varchar](8) NULL,
	[RESULT_TIME] [char](19) NULL,
	[SENT_TIME] [char](19) NULL,
	[REPORT_TIME] [char](19) NULL,
	[TRANS_STATUS] [char](1) NOT NULL,
	[ST_FLAG] [char](1) NOT NULL,
	[ST_CNT] [int] NOT NULL,
	[ST_TIME] [int] NOT NULL,
	[INSERT_TIME] [char](19) NOT NULL,
 CONSTRAINT [PK_MFLY_SEND_MSG] PRIMARY KEY CLUSTERED 
(
	[SMS_ID] DESC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_SEND_MSG] ON [dbo].[MFLY_SEND_MSG] 
(
	[TRANS_STATUS] ASC,
	[SEND_FLAG] ASC,
	[SEND_TIME] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_SEND_MSG_3] ON [dbo].[MFLY_SEND_MSG] 
(
	[TRANS_STATUS] ASC,
	[PROC_GRP_NO] ASC,
	[PROC_TIME] ASC,
	[SMS_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_SEND_MSG_4] ON [dbo].[MFLY_SEND_MSG] 
(
	[CONN_NO] ASC,
	[REQUEST_TIME] DESC,
	[S_INX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_SEND_MSG_5] ON [dbo].[MFLY_SEND_MSG] 
(
	[ST_FLAG] ASC,
	[CONN_NO] ASC,
	[ST_TIME] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MFLY_SEND_MMS]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MFLY_SEND_MMS](
	[MMS_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[CONN_NO] [int] NOT NULL,
	[REQUEST_TIME] [char](19) NULL,
	[S_INX] [int] NULL,
	[SEND_FLAG] [char](1) NOT NULL,
	[SEND_TIME] [char](19) NOT NULL,
	[HANDPHONE] [varchar](15) NOT NULL,
	[CALLBACK_NO] [varchar](15) NOT NULL,
	[FILE_GRP_ID] [int] NOT NULL,
	[TITLE] [varchar](40) NOT NULL,
	[SEND_MSG] [varchar](2000) NOT NULL,
	[ETC1] [varchar](20) NULL,
	[ETC2] [varchar](20) NULL,
	[ETC3] [int] NULL,
	[ETC4] [int] NULL,
	[GRP_NO] [int] NOT NULL,
	[PROC_GRP_NO] [int] NOT NULL,
	[PROC_TIME] [int] NOT NULL,
	[CANCEL_FLAG] [char](1) NOT NULL,
	[RESULT_FLAG] [char](1) NOT NULL,
	[RESULT_CODE] [int] NOT NULL,
	[RESULT_INFO] [varchar](8) NULL,
	[RESULT_TIME] [char](19) NULL,
	[SENT_TIME] [char](19) NULL,
	[REPORT_TIME] [char](19) NULL,
	[TRANS_STATUS] [char](1) NOT NULL,
	[ST_FLAG] [char](1) NOT NULL,
	[ST_CNT] [int] NOT NULL,
	[ST_TIME] [int] NOT NULL,
	[INSERT_TIME] [char](19) NOT NULL,
 CONSTRAINT [PK_MFLY_SEND_MMS] PRIMARY KEY CLUSTERED 
(
	[MMS_ID] DESC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_SEND_MMS] ON [dbo].[MFLY_SEND_MMS] 
(
	[TRANS_STATUS] ASC,
	[SEND_FLAG] ASC,
	[SEND_TIME] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_SEND_MMS_3] ON [dbo].[MFLY_SEND_MMS] 
(
	[TRANS_STATUS] ASC,
	[PROC_GRP_NO] ASC,
	[PROC_TIME] ASC,
	[MMS_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_SEND_MMS_4] ON [dbo].[MFLY_SEND_MMS] 
(
	[CONN_NO] ASC,
	[REQUEST_TIME] DESC,
	[S_INX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_SEND_MMS_5] ON [dbo].[MFLY_SEND_MMS] 
(
	[ST_FLAG] ASC,
	[CONN_NO] ASC,
	[ST_TIME] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MFLY_RESULT_MSG]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MFLY_RESULT_MSG](
	[SMS_ID] [bigint] NOT NULL,
	[CONN_NO] [int] NOT NULL,
	[REQUEST_TIME] [char](19) NULL,
	[S_INX] [int] NULL,
	[SEND_FLAG] [char](1) NOT NULL,
	[SEND_TIME] [char](19) NOT NULL,
	[HANDPHONE] [varchar](15) NULL,
	[CALLBACK_NO] [varchar](15) NULL,
	[SEND_MSG] [varchar](90) NULL,
	[ETC1] [varchar](20) NULL,
	[ETC2] [varchar](20) NULL,
	[ETC3] [int] NULL,
	[ETC4] [int] NULL,
	[GRP_NO] [int] NOT NULL,
	[RESULT_FLAG] [char](1) NOT NULL,
	[RESULT_CODE] [int] NOT NULL,
	[RESULT_INFO] [varchar](8) NULL,
	[RESULT_TIME] [char](19) NULL,
	[SENT_TIME] [char](19) NULL,
	[REPORT_TIME] [char](19) NULL,
	[WORK_FLAG] [char](1) NOT NULL,
	[WORK_TIME] [char](19) NULL,
	[TRANS_STATUS] [char](1) NOT NULL,
	[INSERT_TIME] [char](19) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_RESULT_MSG] ON [dbo].[MFLY_RESULT_MSG] 
(
	[SMS_ID] DESC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_RESULT_MSG_1] ON [dbo].[MFLY_RESULT_MSG] 
(
	[CONN_NO] ASC,
	[REQUEST_TIME] DESC,
	[S_INX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_RESULT_MSG_2] ON [dbo].[MFLY_RESULT_MSG] 
(
	[RESULT_TIME] DESC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_RESULT_MSG_3] ON [dbo].[MFLY_RESULT_MSG] 
(
	[WORK_FLAG] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MFLY_RESULT_MMS]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MFLY_RESULT_MMS](
	[MMS_ID] [bigint] NOT NULL,
	[CONN_NO] [int] NOT NULL,
	[REQUEST_TIME] [char](19) NULL,
	[S_INX] [int] NULL,
	[SEND_FLAG] [char](1) NOT NULL,
	[SEND_TIME] [char](19) NOT NULL,
	[HANDPHONE] [varchar](15) NULL,
	[CALLBACK_NO] [varchar](15) NULL,
	[FILE_GRP_ID] [int] NOT NULL,
	[TITLE] [varchar](40) NULL,
	[SEND_MSG] [varchar](2000) NULL,
	[ETC1] [varchar](20) NULL,
	[ETC2] [varchar](20) NULL,
	[ETC3] [int] NULL,
	[ETC4] [int] NULL,
	[GRP_NO] [int] NOT NULL,
	[RESULT_FLAG] [char](1) NOT NULL,
	[RESULT_CODE] [int] NOT NULL,
	[RESULT_INFO] [varchar](8) NULL,
	[RESULT_TIME] [char](19) NULL,
	[SENT_TIME] [char](19) NULL,
	[REPORT_TIME] [char](19) NULL,
	[WORK_FLAG] [char](1) NOT NULL,
	[WORK_TIME] [char](19) NULL,
	[TRANS_STATUS] [char](1) NOT NULL,
	[INSERT_TIME] [char](19) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_RESULT_MMS] ON [dbo].[MFLY_RESULT_MMS] 
(
	[MMS_ID] DESC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_RESULT_MMS_1] ON [dbo].[MFLY_RESULT_MMS] 
(
	[CONN_NO] ASC,
	[REQUEST_TIME] DESC,
	[S_INX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_RESULT_MMS_2] ON [dbo].[MFLY_RESULT_MMS] 
(
	[RESULT_TIME] DESC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_MFLY_RESULT_MMS_3] ON [dbo].[MFLY_RESULT_MMS] 
(
	[WORK_FLAG] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MFLY_CONN_NO]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MFLY_CONN_NO](
	[CONN_NO] [int] NOT NULL,
	[SMS_REQUEST_TIME] [char](19) NULL,
	[MMS_REQUEST_TIME] [char](19) NULL,
	[GRP_NO] [int] NOT NULL,
 CONSTRAINT [PK_MFLY_CONN_NO] PRIMARY KEY CLUSTERED 
(
	[CONN_NO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[AdminProduct$]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AdminProduct$](
	[IDX] [float] NULL,
	[P_CODE] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ADMIN_MEMBER_DEPT]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ADMIN_MEMBER_DEPT](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[DEPT_CODE] [varchar](3) NULL,
	[DEPT_NAME] [varchar](20) NULL,
	[INS_DATE] [datetime] NULL,
 CONSTRAINT [PK_ADMIN_MEMBER_DEPT] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ADMIN_MEMBER]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ADMIN_MEMBER](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[ADM_ID] [varchar](20) NOT NULL,
	[ADM_PASS] [varchar](20) NULL,
	[ADM_NAME] [varchar](50) NULL,
	[ADM_DEPT] [varchar](50) NULL,
	[PHONE] [varchar](50) NULL,
	[MOBILE] [varchar](50) NULL,
	[EMAIL] [varchar](128) NULL,
	[ADM_ROLE_GRADE] [int] NULL,
	[MEMO] [varchar](512) NULL,
	[INS_DATE] [datetime] NULL,
	[POINT] [int] NULL,
	[ADM_PHOTO] [varchar](128) NULL,
 CONSTRAINT [PK_ADMIN_MEMBER] PRIMARY KEY CLUSTERED 
(
	[ADM_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[상품정보$]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[상품정보$](
	[상품코드] [nvarchar](255) NULL,
	[상품명] [nvarchar](255) NULL,
	[유형별] [nvarchar](255) NULL,
	[피부타입] [nvarchar](255) NULL,
	[라인] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_ISSUED_CNT]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 발행된 쿠폰 리스트 COUNT (admin)  
 * Modified  :   2015.07.17 , 09.10 
 * Modified  :     
 * Modified  :    
 ============================================================*/    
  
  
 --EXEC [SP_ADMIN_COUPON_MASTER_CNT] '',''  
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_ISSUED_CNT]  
 @SEARCH_KEY  VARCHAR(100) ='' --검색 필드  
,@SEARCH_KEYWORD VARCHAR(100) ='' --검색 키워드  
,@CD_COUPON  VARCHAR(6)  
AS  
  
BEGIN  
--SET FMTONLY OFF --complex type 생성시 필요  
--IF 1=0 BEGIN  
--   SET FMTONLY OFF  
--END  
  
 SET NOCOUNT ON  
 --SET FMTONLY OFF  
   
   
 DECLARE @LISTCOUNT INT  
 DECLARE @V_SQL NVARCHAR(MAX);  
   
 SET @V_SQL  ='SELECT COUNT(IDX_COUPON_NUMBER) AS CNT ';  
 SET @V_SQL  =@V_SQL + ' FROM TB_COUPON_ISSUED_DETAIL WITH (NOLOCK) '  
 SET @V_SQL  =@V_SQL + '    WHERE 1=1 AND CD_COUPON=''' +@CD_COUPON+ '''';  
  
 IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''  
  BEGIN  
  SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '   
  END  
   
   
 EXEC(@V_SQL);  
 PRINT @V_SQL  
  
  
 SET NOCOUNT OFF  
   
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ADMIN_MEMBER_CNT]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-06-19
-- Description:	관리자 관리-목록COUNT
-- ussage: exec SP_ADMIN_ADMIN_MEMBER_CNT '',''
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_ADMIN_MEMBER_CNT]
 @SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
 
	set @v_SQL_WHERE = ' (1=1) '

	IF @SEARCH_COL <>'' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '

	 

	set @v_SQL = 'select count(ADM_ID) as COUNT from TB_ADMIN_MEMBER  WITH (NOLOCK) ' 
	set @v_SQL = @v_SQL + '     where ' + @v_SQL_WHERE 
	--print @v_SQL
	exec(@v_SQL)


	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADM_ADMIN_MEMBER_CNT]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-05-12
-- Description:	BBS_LIST
-- ussage: exec SP_BBS_LIST 'SUBJECT','01','GBN','DESC',1,10
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADM_ADMIN_MEMBER_CNT]
 @SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	set @v_SQL_WHERE = ' (1=1) '

	IF @SEARCH_COL <>'' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '


	set @v_SQL = 'select count(IDX) as COUNT from ADMIN_MEMBER  WITH (NOLOCK) ' 
	set @v_SQL = @v_SQL + '     where ' + @v_SQL_WHERE 
	--print @v_SQL
	exec(@v_SQL)

	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 


END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_MASTER_CNT]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 쿠폰 리스트 COUNT (admin)
 * Modified  :   2015.07.13
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_COUPON_MASTER_CNT] '',''
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_MASTER_CNT]
 @SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드
AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

	SET NOCOUNT ON
	--SET FMTONLY OFF
	
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	SET @V_SQL  ='SELECT COUNT(IDX) AS CNT ';
	SET @V_SQL  =@V_SQL + ' FROM TB_COUPON_MASTER WITH (NOLOCK) '
	SET @V_SQL  =@V_SQL + '    WHERE 1=1 ';

	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
		BEGIN
		SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
		END
	
	/**
	IF @SEARCH_DISPLAY_YN <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND DISPLAY_YN = '''+@SEARCH_DISPLAY_YN+''' '
		END 				
	**/
		
	--SET @V_SQL  =@V_SQL + '	ORDER BY IDX DESC' ;
	
	EXEC(@V_SQL);
	--PRINT @V_SQL


	SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_PRODUCT_CNT]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 쿠폰 적용상품 리스트 COUNT (admin)
 * Modified  :   2015.07.13
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_COUPON_MASTER_CNT] '',''
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_PRODUCT_CNT]
 @SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드
,@CD_COUPON			VARCHAR(6)  -- 쿠폰 코드  
AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

	SET NOCOUNT ON
	--SET FMTONLY OFF
	
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	SET @V_SQL  ='SELECT COUNT(A.IDX) AS CNT ';
	SET @V_SQL  =@V_SQL + ' FROM TB_COUPON_PRODUCT A WITH (NOLOCK) INNER JOIN TB_PRODUCT_INFO B '
	SET @V_SQL  =@V_SQL + ' ON A.P_CODE = B.P_CODE    '
	SET @V_SQL  =@V_SQL + ' WHERE B.DISPLAY_YN=''Y'' and A.CD_COUPON=''' + @CD_COUPON + '''' ;

	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
    BEGIN
		IF @SEARCH_KEY = 'P_NAME' --상품명
			SET @V_SQL = @V_SQL + ' AND (B.P_NAME LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
		IF @SEARCH_KEY = 'P_CODE' --상품코드
			SET @V_SQL = @V_SQL + ' AND (B.P_CODE LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
    END
	
    /**
	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
		BEGIN
		SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
		END
	**/
	

	
	EXEC(@V_SQL);
	--PRINT @V_SQL


	SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EVENT_CNT]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EVENT_CNT
어드민의 이벤트관리페이지에서 리스트조회시 검색건수 리턴

SELECT * FROM TB_EVENT

exec SP_ADMIN_EVENT_CNT  '2015-08-05','2015-08-05','0','A','EVENT_NAME','이벤트'
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_EVENT_CNT]
@FROM_DATE CHAR(10)			-- 이벤트 시작일   ( ex) 2015-08-05 )
,@TO_DATE CHAR(10)			-- 이벤트 종료일   ( ex) 2015-08-05 )
,@ING_GBN CHAR(1)			-- 진행구분  0:전체, 1:예약, 2:진행, 3:종료
,@USE_YN CHAR(1)			-- 전시구분 A:전체, Y:전시, N:비전시
,@SEARCH_COL VARCHAR(50)	='' 
,@SEARCH_KEYWORD VARCHAR(50)	='' 
AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ; 
	DECLARE @v_SQL VARCHAR(3000) ;
	-----------------------------

	SET @v_SQL_WHERE = ' WHERE (1=1)' 
	
	IF @FROM_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  <= ''' + @FROM_DATE + ''' + '' 00'') '
	END
	IF @TO_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  >= ''' + @TO_DATE + ''' + '' 00'') '
	END
	IF @ING_GBN = '1'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  > CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @ING_GBN = '2'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 ) ) '
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @ING_GBN = '3'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  < CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @USE_YN <> 'A'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( USE_YN = ''' + @USE_YN + ''' ) '
	END
	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
	END

	-------------------------------------------------

	SET @v_SQL  ='SELECT  COUNT(IDX) AS COUNT ';
	SET @v_SQL  =@v_SQL + ' FROM TB_EVENT WITH (NOLOCK) ';
	SET @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	EXEC(@v_SQL);

	-- PRINT @v_SQL
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_DISPLAY_SEL]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-29
-- Description:	전시관리. 웹 메인 배너 조회
-- ussage: exec SP_ADMIN_DISPLAY_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_DISPLAY_SEL]
	@KIND VARCHAR(3) = NULL,
	@SUB_KIND VARCHAR(3) = NULL,
	@SEQ INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				DECLARE @MyStoredProcResult TABLE(
						IDX INT,
						URL VARCHAR(300),
						IMG VARCHAR(30),
						P_CODE VARCHAR(10),
						P_NAME VARCHAR(100),
						P_MAIN_IMG VARCHAR(100),
						TITLE1 VARCHAR(300),
						TITLE2 VARCHAR(300),
						SEQ INT
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END   

	DECLARE @v_SQL_WHERE NVARCHAR(MAX) ;
	DECLARE @v_SQL_ORDERBY NVARCHAR(MAX) ;
	DECLARE @V_SQL NVARCHAR(MAX);
	
	SET @v_SQL_WHERE = ' (1=1) AND KIND='+@KIND ;
	SET @v_SQL_ORDERBY = ' SEQ ASC, INS_DATE DESC ' ;	
	
	IF @SUB_KIND IS NOT NULL
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND SUB_KIND=' + @SUB_KIND;
		END 
		
	IF @SEQ IS NOT NULL
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND SEQ=' + CONVERT(VARCHAR,@SEQ);
		END 
 
	SET @V_SQL  = ' SELECT IDX,URL,IMG,P_CODE,TITLE1,TITLE2,P_NAME,P_MAIN_IMG,SEQ ';
	SET @V_SQL  = @V_SQL + ' FROM TB_DISPLAY WITH (NOLOCK) '
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	SET @V_SQL  = @V_SQL + ' ORDER BY ' +  @v_SQL_ORDERBY;
	
	PRINT @V_SQL;
	
	EXEC(@V_SQL);

		
    SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_PRODUCT_FOR_CREATE_CNT]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 쿠폰 적용 대상 상품 리스트 COUNT (admin)    
 * Modified  :   2015.07.13  , 07.24  
 * Modified  :       
 * Modified  :      
 ============================================================*/      
    
    
 --EXEC [SP_ADMIN_COUPON_MASTER_CNT] '',''    
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_PRODUCT_FOR_CREATE_CNT]    
 @SEARCH_KEY  VARCHAR(100) ='' --검색 필드    
,@SEARCH_KEYWORD VARCHAR(100) ='' --검색 키워드    
,@CD_COUPON   VARCHAR(6)  -- 쿠폰 코드      
AS    
    
BEGIN    
--SET FMTONLY OFF --complex type 생성시 필요    
--IF 1=0 BEGIN    
--   SET FMTONLY OFF    
--END    
    
 SET NOCOUNT ON    
 --SET FMTONLY OFF    
    
 DECLARE @V_SQL NVARCHAR(MAX);    
    
    
 SET @V_SQL  ='SELECT COUNT(A.IDX) AS CNT ';    
 SET @V_SQL  =@V_SQL + ' FROM TB_PRODUCT_INFO A WITH (NOLOCK) LEFT OUTER JOIN TB_COUPON_PRODUCT B '    
 SET @V_SQL  =@V_SQL + ' ON A.P_CODE = B.P_CODE AND A.DISPLAY_YN=''Y'' AND B.CD_COUPON=''' + @CD_COUPON + ''' ' ;    
 SET @V_SQL  =@V_SQL + ' WHERE 1=1 '  
 IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''    
 BEGIN    
	  IF @SEARCH_KEY = 'P_NAME' --상품명    
	   SET @V_SQL = @V_SQL + ' AND (A.P_NAME LIKE ''%' + @SEARCH_KEYWORD + '%'') '     
	  IF @SEARCH_KEY = 'P_CODE' --상품코드    
	   SET @V_SQL = @V_SQL + ' AND (B.P_CODE LIKE ''%' + @SEARCH_KEYWORD + '%'') '     
 END    
     
     
 EXEC(@V_SQL);  
 --PRINT(@V_SQL);  
    
 SET NOCOUNT OFF    
     
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EVENT_MAIN_DEL]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EVENT_MAIN_DEL
어드민의 이벤트전시관리에서 등록된 배너삭제

파라미터 설명
@BANNER_GBN	CHAR(2)		-- 배너위치구분 (메인배너1~5 : M1~M5 / 우측배너1 : R1 / 중간배너1~4 : B1~B4 [BOTTOM] )
,@ADM_ID VARCHAR(20)	-- 등록자ID

SELECT * FROM TB_EVENT_MAIN

EXEC SP_ADMIN_EVENT_MAIN_DEL 'M1','KMG5302'
EXEC SP_ADMIN_EVENT_MAIN_DEL 'B2','KMG5302'


*/


CREATE PROC [dbo].[SP_ADMIN_EVENT_MAIN_DEL]
@BANNER_GBN	CHAR(2)		-- 배너위치구분 (메인배너1~5 : M1~M5 / 우측배너1 : R1 / 중간배너1~4 : B1~B4 [BOTTOM] )
,@ADM_ID VARCHAR(20)	-- 등록자ID
AS
BEGIN

SET NOCOUNT ON ;

DECLARE @IMG_FIELD VARCHAR(20) = ''
	, @URL_FILED VARCHAR(200) = ''

IF @BANNER_GBN = 'M1'
BEGIN
	SET @IMG_FIELD = 'MAIN_IMG1'
	SET @URL_FILED = 'MAIN_URL1'
END
ELSE IF @BANNER_GBN = 'M2'
BEGIN
	SET @IMG_FIELD = 'MAIN_IMG2'
	SET @URL_FILED = 'MAIN_URL2'
END
ELSE IF @BANNER_GBN = 'M3'
BEGIN
	SET @IMG_FIELD = 'MAIN_IMG3'
	SET @URL_FILED = 'MAIN_URL3'
END
ELSE IF @BANNER_GBN = 'M4'
BEGIN
	SET @IMG_FIELD = 'MAIN_IMG4'
	SET @URL_FILED = 'MAIN_URL4'
END
ELSE IF @BANNER_GBN = 'M5'
BEGIN
	SET @IMG_FIELD = 'MAIN_IMG5'
	SET @URL_FILED = 'MAIN_URL5'
END
ELSE IF @BANNER_GBN = 'R1'
BEGIN
	SET @IMG_FIELD = 'RIGHT_IMG'
	SET @URL_FILED = 'RIGHT_URL'
END
ELSE IF @BANNER_GBN = 'B1'
BEGIN
	SET @IMG_FIELD = 'MIDDLE_IMG1'
	SET @URL_FILED = 'MIDDLE_URL1 = NULL , MIDDLE_TITLE1 = NULL , MIDDLE_DESC1 '
END
ELSE IF @BANNER_GBN = 'B2'
BEGIN
	SET @IMG_FIELD = 'MIDDLE_IMG2'
	SET @URL_FILED = 'MIDDLE_URL2 = NULL , MIDDLE_TITLE2 = NULL , MIDDLE_DESC2 '
END
ELSE IF @BANNER_GBN = 'B3'
BEGIN
	SET @IMG_FIELD = 'MIDDLE_IMG3'
	SET @URL_FILED = 'MIDDLE_URL3 = NULL , MIDDLE_TITLE3 = NULL , MIDDLE_DESC3 '
END
ELSE IF @BANNER_GBN = 'B4'
BEGIN
	SET @IMG_FIELD = 'MIDDLE_IMG4'
	SET @URL_FILED = 'MIDDLE_URL4'
END


DECLARE @v_SQL VARCHAR(3000) ;

SET @v_SQL = ' UPDATE TB_EVENT_MAIN
		SET ' + @IMG_FIELD + ' = NULL 
			, ' + @URL_FILED + ' = NULL 
			, ADM_ID = ''' + @ADM_ID + '''
			, REG_DATE = GETDATE()
'
--	PRINT @v_SQL
EXEC(@v_SQL);

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EVENT_MAIN_UPD]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EVENT_MAIN_UPD
어드민의 이벤트관리페이지에서 이벤트전시관리 수정

파라미터 설명
@BANNER_GBN	CHAR(2)		-- 배너위치구분 (메인배너1~5 : M1~M5 / 우측배너1 : R1 / 중간배너1~4 : B1~B4 [BOTTOM] )
,@IMG VARCHAR(255)		-- 파일위치
,@URL VARCHAR(255)		-- URL
,@ADM_ID VARCHAR(20)	-- 등록자ID

SELECT * FROM TB_EVENT_MAIN

EXEC SP_ADMIN_EVENT_MAIN_UPD 'M1','메인1배너 파일위치','메인1배너 URL','','','KMG5302'
EXEC SP_ADMIN_EVENT_MAIN_UPD 'M2','메인2배너 파일위치','메인2배너 URL','','','KMG5302'

EXEC SP_ADMIN_EVENT_MAIN_UPD 'B1','중간1배너 파일위치','중간1배너 URL','중간1타이틀','중간1설명','KMG5302'

*/


CREATE PROC [dbo].[SP_ADMIN_EVENT_MAIN_UPD]
@BANNER_GBN	CHAR(2)		-- 배너위치구분 (메인배너1~5 : M1~M5 / 우측배너1 : R1 / 중간배너1~4 : B1~B4 [BOTTOM] )
,@IMG VARCHAR(255)		-- 파일위치
,@URL VARCHAR(255)		-- URL
,@TITLE VARCHAR(100) = ''	-- 타이틀 (중간배너1~3까지만 전달)
,@DESC VARCHAR(200) = ''	-- 설명 (중간배너1~3까지만 전달)
,@ADM_ID VARCHAR(20)	-- 등록자ID
AS
BEGIN

SET NOCOUNT ON ;

DECLARE @IMG_FIELD VARCHAR(20) = ''
	, @URL_FILED VARCHAR(20) = ''
	, @TITLE_FIELD VARCHAR(300) = ''
	, @DESC_FIELD VARCHAR(300) = ''

IF @BANNER_GBN = 'M1'
BEGIN
	SET @IMG_FIELD = 'MAIN_IMG1'
	SET @URL_FILED = 'MAIN_URL1'
END
ELSE IF @BANNER_GBN = 'M2'
BEGIN
	SET @IMG_FIELD = 'MAIN_IMG2'
	SET @URL_FILED = 'MAIN_URL2'
END
ELSE IF @BANNER_GBN = 'M3'
BEGIN
	SET @IMG_FIELD = 'MAIN_IMG3'
	SET @URL_FILED = 'MAIN_URL3'
END
ELSE IF @BANNER_GBN = 'M4'
BEGIN
	SET @IMG_FIELD = 'MAIN_IMG4'
	SET @URL_FILED = 'MAIN_URL4'
END
ELSE IF @BANNER_GBN = 'M5'
BEGIN
	SET @IMG_FIELD = 'MAIN_IMG5'
	SET @URL_FILED = 'MAIN_URL5'
END
ELSE IF @BANNER_GBN = 'R1'
BEGIN
	SET @IMG_FIELD = 'RIGHT_IMG'
	SET @URL_FILED = 'RIGHT_URL'
END
ELSE IF @BANNER_GBN = 'B1'
BEGIN
	SET @IMG_FIELD = 'MIDDLE_IMG1'
	SET @URL_FILED = 'MIDDLE_URL1'
	SET @TITLE_FIELD = ' , MIDDLE_TITLE1 = ''' + @TITLE + ''' '
	SET @DESC_FIELD = ' , MIDDLE_DESC1 = ''' + @DESC + ''' '
END
ELSE IF @BANNER_GBN = 'B2'
BEGIN
	SET @IMG_FIELD = 'MIDDLE_IMG2'
	SET @URL_FILED = 'MIDDLE_URL2'
	SET @TITLE_FIELD = ' , MIDDLE_TITLE2 = ''' + @TITLE + ''' '
	SET @DESC_FIELD = ' , MIDDLE_DESC2 = ''' + @DESC + ''' '
END
ELSE IF @BANNER_GBN = 'B3'
BEGIN
	SET @IMG_FIELD = 'MIDDLE_IMG3'
	SET @URL_FILED = 'MIDDLE_URL3'
	SET @TITLE_FIELD = ' , MIDDLE_TITLE3 = ''' + @TITLE + ''' '
	SET @DESC_FIELD = ' , MIDDLE_DESC3 = ''' + @DESC + ''' '
END
ELSE IF @BANNER_GBN = 'B4'
BEGIN
	SET @IMG_FIELD = 'MIDDLE_IMG4'
	SET @URL_FILED = 'MIDDLE_URL4'
END


DECLARE @v_SQL VARCHAR(3000) ;

SET @v_SQL = ' UPDATE TB_EVENT_MAIN
		SET ' + @IMG_FIELD + ' = ''' + @IMG + '''
			, ' + @URL_FILED + ' = ''' + @URL + '''
			' + @TITLE_FIELD + '
			' + @DESC_FIELD + '
			, ADM_ID = ''' + @ADM_ID + '''
			, REG_DATE = GETDATE()
'
--	PRINT @v_SQL
EXEC(@v_SQL);

END
GO
/****** Object:  Table [dbo].[TEMP_SMS_STAT]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TEMP_SMS_STAT](
	[RESULT_CODE] [int] NOT NULL,
	[RESULT_CNT] [int] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TEMP_MMS_STAT]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TEMP_MMS_STAT](
	[RESULT_CODE] [int] NOT NULL,
	[RESULT_CNT] [int] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TB_WISHLIST]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_WISHLIST](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[M_ID] [varchar](13) NULL,
	[P_CODE] [varchar](50) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_WISHLIST] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_WINNER]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_WINNER](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[TITLE] [varchar](100) NOT NULL,
	[CONTENTS] [text] NOT NULL,
	[VIEW_CNT] [int] NOT NULL,
	[DISPLAY_YN] [char](1) NOT NULL,
	[M_ID] [varchar](13) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_WINNER] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tb_test02]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tb_test02](
	[num] [int] IDENTITY(1,1) NOT NULL,
	[user_name] [varchar](20) NOT NULL,
	[test] [nchar](10) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tb_test01]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tb_test01](
	[num] [int] IDENTITY(1,1) NOT NULL,
	[user_name] [varchar](20) NULL,
 CONSTRAINT [PK_tb_test01] PRIMARY KEY CLUSTERED 
(
	[num] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_SHOPINFO]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_SHOPINFO](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[SHOP_NAME] [varchar](100) NOT NULL,
	[TEL_NUM] [varchar](20) NULL,
	[POST] [varchar](7) NULL,
	[ADDR1] [varchar](200) NULL,
	[ADDR2] [varchar](200) NULL,
	[LOCATION_INFO] [varchar](200) NULL,
	[LATITUDE] [varchar](20) NOT NULL,
	[LONGITUDE] [varchar](20) NOT NULL,
	[DISPLAY_ORDER] [int] NOT NULL,
	[USE_YN] [char](1) NOT NULL,
	[ADM_ID] [varchar](20) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_SHOPINFO] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_SAMPLE_MEMBER]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_SAMPLE_MEMBER](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[SAMPLE_IDX] [int] NOT NULL,
	[M_ID] [varchar](13) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_SAMPLE_MEMBER] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_SAMPLE]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_SAMPLE](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[SAMPLE_NAME] [varchar](200) NOT NULL,
	[FROM_DATE] [char](10) NOT NULL,
	[FROM_TIME] [char](2) NOT NULL,
	[TO_DATE] [char](10) NOT NULL,
	[TO_TIME] [char](2) NOT NULL,
	[SAMPLE_GBN] [char](1) NOT NULL,
	[WEB_CONTENTS] [text] NOT NULL,
	[MOBILE_FILE] [varchar](255) NOT NULL,
	[WEB_BANNER] [varchar](255) NOT NULL,
	[MOBILE_BANNER] [varchar](255) NOT NULL,
	[DISPLAY_ORDER] [int] NOT NULL,
	[USE_YN] [char](1) NOT NULL,
	[ADM_ID] [varchar](20) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_SAMPLE] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_REVIEW_PRODUCT_BAK]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_REVIEW_PRODUCT_BAK](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[M_ID] [varchar](13) NOT NULL,
	[M_NAME] [varchar](30) NULL,
	[M_SEX] [char](1) NULL,
	[M_BIRTHDAY] [varchar](10) NULL,
	[ORDER_DETAIL_IDX] [int] NULL,
	[P_CODE] [varchar](10) NOT NULL,
	[P_NAME] [varchar](100) NULL,
	[P_SUB_TITLE] [varchar](200) NULL,
	[C_CATE_CODE] [char](9) NULL,
	[P_MAIN_IMG] [varchar](100) NULL,
	[CATE_GBN] [varchar](3) NULL,
	[SKIN_TYPE] [char](2) NULL,
	[COMMENT] [text] NULL,
	[ADD_IMAGE] [varchar](100) NULL,
	[IS_AGREE] [varchar](1) NOT NULL,
	[IS_PHOTO] [varchar](1) NULL,
	[IS_DISPLAY] [varchar](1) NULL,
	[IS_BEST] [varchar](1) NULL,
	[MEDIA_GBN] [varchar](2) NULL,
	[VIEW_CNT] [int] NULL,
	[MOD_DATE] [datetime] NULL,
	[INS_DATE] [datetime] NOT NULL,
	[IS_MOST_CNT] [varchar](1) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_REVIEW_PRODUCT]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_REVIEW_PRODUCT](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[M_ID] [varchar](13) NOT NULL,
	[M_NAME] [varchar](30) NULL,
	[M_SEX] [char](1) NULL,
	[M_BIRTHDAY] [varchar](10) NULL,
	[ORDER_DETAIL_IDX] [int] NULL,
	[P_CODE] [varchar](10) NOT NULL,
	[P_NAME] [varchar](100) NULL,
	[P_SUB_TITLE] [varchar](200) NULL,
	[C_CATE_CODE] [char](9) NULL,
	[P_MAIN_IMG] [varchar](100) NULL,
	[CATE_GBN] [varchar](3) NULL,
	[SKIN_TYPE] [char](2) NULL,
	[COMMENT] [text] NULL,
	[ADD_IMAGE] [varchar](100) NULL,
	[IS_AGREE] [varchar](1) NOT NULL,
	[IS_PHOTO] [varchar](1) NULL,
	[IS_DISPLAY] [varchar](1) NULL,
	[IS_BEST] [varchar](1) NULL,
	[MEDIA_GBN] [varchar](2) NULL,
	[VIEW_CNT] [int] NULL,
	[MOD_DATE] [datetime] NULL,
	[INS_DATE] [datetime] NOT NULL,
	[IS_MOST_CNT] [varchar](1) NULL,
 CONSTRAINT [PK_TB_REVIEW_PRODUCT] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_REVIEW_EXP_MEMBER]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_REVIEW_EXP_MEMBER](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[EXP_MASTER_IDX] [int] NULL,
	[M_ID] [varchar](13) NULL,
	[M_NAME] [varchar](30) NULL,
	[INS_DATE] [datetime] NULL,
 CONSTRAINT [PK_TB_REVIEW_EXP_MEMBER] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_REVIEW_EXP_MASTER]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_REVIEW_EXP_MASTER](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[IS_AUTH] [varchar](1) NULL,
	[FROM_DATE] [datetime] NULL,
	[TO_DATE] [datetime] NULL,
	[P_CODE] [varchar](10) NULL,
	[P_NAME] [varchar](100) NULL,
	[INS_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_REVIEW_EXP_MASTER] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_REVIEW_EXP_ARTICLE]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_REVIEW_EXP_ARTICLE](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[EXP_MASTER_IDX] [int] NULL,
	[M_ID] [varchar](13) NULL,
	[M_NAME] [varchar](30) NULL,
	[M_SEX] [varchar](1) NULL,
	[M_BIRTHDAY] [varchar](10) NULL,
	[P_CODE] [varchar](10) NULL,
	[P_NAME] [varchar](100) NULL,
	[P_SUB_TITLE] [varchar](200) NULL,
	[C_CATE_CODE] [char](9) NULL,
	[P_MAIN_IMG] [varchar](100) NULL,
	[IS_BEST] [varchar](1) NULL,
	[IS_DISPLAY] [varchar](1) NULL,
	[VIEW_CNT] [int] NULL,
	[COMMENT] [text] NULL,
	[TAG] [varchar](100) NULL,
	[SUB_IMG_1] [varchar](300) NULL,
	[SUB_IMG_2] [varchar](300) NULL,
	[SUB_IMG_3] [varchar](300) NULL,
	[TITLE] [varchar](100) NULL,
	[SKIN_TYPE] [varchar](2) NULL,
	[INS_DATE] [datetime] NULL,
 CONSTRAINT [PK_TB_REVIEW_EXP_ARTICLE] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_REVIEW_CATE_THEMA]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_REVIEW_CATE_THEMA](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[TITLE] [varchar](200) NULL,
	[IS_DISPLAY] [varchar](1) NULL,
	[TAG] [varchar](300) NULL,
	[CODE] [varchar](3) NULL,
 CONSTRAINT [PK_TB_REVIEW_CATE_THEMA] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_RECALL_BBS]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_RECALL_BBS](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[ORDER_CODE] [varchar](20) NOT NULL,
	[ORDER_DETAIL_IDX] [int] NOT NULL,
	[GUBUN] [int] NOT NULL,
	[TITLE] [varchar](1000) NOT NULL,
	[CONTENTS] [text] NOT NULL,
	[CONFIRM_CONTENTS] [text] NULL,
	[STATUS] [int] NOT NULL,
	[ADM_ID] [varchar](20) NULL,
	[REG_ID] [varchar](20) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
	[CONFIRM_DATE] [datetime] NULL,
 CONSTRAINT [PK_TB_RECALL_BBS] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_QNA]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_QNA](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[CATEGORY] [char](1) NOT NULL,
	[TITLE] [varchar](100) NOT NULL,
	[QUESTION] [text] NOT NULL,
	[ANSWER] [text] NULL,
	[STATUS] [char](1) NOT NULL,
	[M_ID] [varchar](13) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
	[ANS_DATE] [datetime] NULL,
 CONSTRAINT [PK_TB_QNA] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_PROMOTION_PRODUCT_VS_TOTAL]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_PROMOTION_PRODUCT_VS_TOTAL](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[CD_PROMOTION_PRODUCT] [varchar](7) NOT NULL,
	[CD_PROMOTION_TOTAL] [varchar](7) NOT NULL,
	[PRODUCT_PRICE_IDX] [int] NULL,
	[P_CODE] [varchar](10) NOT NULL,
	[INS_DATE] [datetime] NULL,
	[USABLE_YN] [varchar](1) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_PROMOTION_PRODUCT_CATEGORY]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_PROMOTION_PRODUCT_CATEGORY](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[PMO_PRODUCT_CATEGORY] [varchar](7) NULL,
	[PMO_PRODUCT_CATEGORY_NAME] [varchar](20) NULL,
	[INS_DATE] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_PROMOTION_BY_TOTAL_NUMBERING]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_PROMOTION_BY_TOTAL_NUMBERING](
	[CD_PROMOTION_TOTAL] [varchar](7) NULL,
	[INS_DATE] [datetime] NULL,
	[UPD_DATE] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_PROMOTION_BY_TOTAL_MEM_GRADE]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_PROMOTION_BY_TOTAL_MEM_GRADE](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[CD_PROMOTION_TOTAL] [varchar](7) NULL,
	[M_GBN] [varchar](1) NULL,
	[M_GRADE] [varchar](1) NULL,
	[USABLE_YN] [varchar](1) NULL,
	[INS_DATE] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_PROMOTION_BY_TOTAL_CATEGORY]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_PROMOTION_BY_TOTAL_CATEGORY](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[PMO_TOTAL_CATEGORY] [varchar](2) NULL,
	[PMO_TOTAL_CATEGORY_NAME] [varchar](40) NULL,
	[INS_DATE] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_PROMOTION_BY_TOTAL]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_PROMOTION_BY_TOTAL](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[CD_PROMOTION_TOTAL] [varchar](7) NOT NULL,
	[PMO_TOTAL_NAME] [varchar](50) NULL,
	[PMO_TOTAL_CATEGORY] [varchar](2) NULL,
	[PMO_TOTAL_CATEGORY_NAME] [varchar](40) NULL,
	[PMO_TOTAL_RATE_OR_MONEY] [varchar](1) NULL,
	[PMO_TOTAL_DISCOUNT_RATE] [tinyint] NULL,
	[PMO_TOTAL_DISCOUNT_MONEY] [int] NULL,
	[PMO_TOTAL_DATE_FROM] [datetime] NULL,
	[PMO_TOTAL_DATE_TO] [datetime] NULL,
	[USABLE_YN] [varchar](1) NULL,
	[INS_DATE] [datetime] NULL,
 CONSTRAINT [PK_TB_PROMOTION_BY_TOTAL] PRIMARY KEY CLUSTERED 
(
	[CD_PROMOTION_TOTAL] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_PROMOTION_BY_PRODUCT_PRICE]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_PROMOTION_BY_PRODUCT_PRICE](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[CD_PROMOTION_PRODUCT] [varchar](7) NULL,
	[P_CODE] [varchar](10) NULL,
	[P_DISCOUNT_PRICE] [int] NULL,
	[PMO_PRODUCT_RATE_OR_MONEY] [varchar](1) NULL,
	[PMO_PRODUCT_DISCOUNT_RATE] [tinyint] NULL,
	[PMO_PRODUCT_DISCOUNT_MONEY] [int] NULL,
	[PMO_PRICE] [int] NULL,
	[PMO_ONE_ONE_P_CODE] [varchar](10) NULL,
	[PMO_ONE_ONE_PRICE] [int] NULL,
	[USABLE_YN] [varchar](1) NULL,
	[INS_DATE] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_PROMOTION_BY_PRODUCT_NUMBERING]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_PROMOTION_BY_PRODUCT_NUMBERING](
	[CD_PROMOTION_PRODUCT] [varchar](7) NULL,
	[INS_DATE] [datetime] NULL,
	[UPD_DATE] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_PROMOTION_BY_PRODUCT]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_PROMOTION_BY_PRODUCT](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[CD_PROMOTION_PRODUCT] [varchar](7) NULL,
	[PMO_PRODUCT_NAME] [varchar](50) NULL,
	[PMO_PRODUCT_CATEGORY] [varchar](2) NULL,
	[PMO_PRODUCT_CATEGORY_NAME] [varchar](20) NULL,
	[PMO_PRODUCT_MAIN_TITLE] [varchar](100) NULL,
	[PMO_PRODUCT_SUB_TITLE] [varchar](100) NULL,
	[PMO_PRODUCT_SHOPPING_TIP] [varchar](100) NULL,
	[PMO_PRODUCT_MAIN_IMG] [varchar](128) NULL,
	[PMO_PRODUCT_PC_MAINPG_IMG] [varchar](128) NULL,
	[PMO_PRODUCT_PC_EVENT_MAINPG_IMG] [varchar](128) NULL,
	[PMO_PRODUCT_PC_MAINPG_SMALL_IMG] [varchar](128) NULL,
	[PMO_PRODUCT_MOBILE_MAIN_IMG] [varchar](128) NULL,
	[PMO_PRODUCT_MOBILE_MAINPG_IMG] [varchar](128) NULL,
	[PMO_PRODUCT_MOBILE_EVENT_MAINPG_IMG] [varchar](128) NULL,
	[PMO_PRODUCT_RATE_OR_MONEY] [varchar](1) NULL,
	[PMO_PRODUCT_DISCOUNT_RATE] [tinyint] NULL,
	[PMO_PRODUCT_DISCOUNT_MONEY] [int] NULL,
	[PMO_ONEONE_MULTIPLE_CNT] [tinyint] NULL,
	[PMO_SET_DISCOUNT_CNT] [tinyint] NULL,
	[PMO_PRODUCT_DATE_FROM] [datetime] NULL,
	[PMO_PRODUCT_DATE_TO] [datetime] NULL,
	[USABLE_YN] [varchar](1) NULL,
	[INS_DATE] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_PRODUCT_INFO_20150908]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_PRODUCT_INFO_20150908](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[P_CATE_CODE] [char](9) NULL,
	[C_CATE_CODE] [char](9) NULL,
	[L_CATE_CODE] [char](9) NULL,
	[P_CODE] [varchar](10) NULL,
	[P_NAME] [varchar](100) NULL,
	[P_SUB_TITLE] [varchar](200) NULL,
	[P_COUNT] [int] NULL,
	[SELLING_PRICE] [int] NULL,
	[DISCOUNT_RATE] [int] NULL,
	[DISCOUNT_PRICE] [int] NULL,
	[SOLDOUT_YN] [varchar](1) NULL,
	[P_INFO_DETAIL_WEB] [text] NULL,
	[P_INFO_DETAIL_MOBILE] [text] NULL,
	[MV_URL] [varchar](200) NULL,
	[P_COMPONENT_INFO] [varchar](1000) NULL,
	[P_TAG] [varchar](300) NULL,
	[MAIN_IMG] [varchar](100) NULL,
	[OTHER_IMG1] [varchar](100) NULL,
	[OTHER_IMG2] [varchar](100) NULL,
	[OTHER_IMG3] [varchar](100) NULL,
	[OTHER_IMG4] [varchar](100) NULL,
	[OTHER_IMG5] [varchar](100) NULL,
	[RE_SORT] [int] NULL,
	[DISPLAY_YN] [varchar](1) NULL,
	[ICON_YN] [varchar](20) NULL,
	[SELLING_COUNT] [int] NULL,
	[SELLING_MONTH_COUNT] [int] NULL,
	[P_VIEW_COUNT] [int] NULL,
	[WITH_PRODUCT_LIST] [varchar](300) NULL,
	[P_OUTLET_YN] [varchar](1) NULL,
	[UPD_DATE] [datetime] NULL,
	[INS_DATE] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_PRODUCT_INFO_20150904_1]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_PRODUCT_INFO_20150904_1](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[P_CATE_CODE] [char](9) NULL,
	[C_CATE_CODE] [char](9) NULL,
	[L_CATE_CODE] [char](9) NULL,
	[P_CODE] [varchar](10) NULL,
	[P_NAME] [varchar](100) NULL,
	[P_SUB_TITLE] [varchar](200) NULL,
	[P_COUNT] [int] NULL,
	[SELLING_PRICE] [int] NULL,
	[DISCOUNT_RATE] [int] NULL,
	[DISCOUNT_PRICE] [int] NULL,
	[SOLDOUT_YN] [varchar](1) NULL,
	[P_INFO_DETAIL_WEB] [text] NULL,
	[P_INFO_DETAIL_MOBILE] [text] NULL,
	[MV_URL] [varchar](200) NULL,
	[P_COMPONENT_INFO] [varchar](1000) NULL,
	[P_TAG] [varchar](300) NULL,
	[MAIN_IMG] [varchar](100) NULL,
	[OTHER_IMG1] [varchar](100) NULL,
	[OTHER_IMG2] [varchar](100) NULL,
	[OTHER_IMG3] [varchar](100) NULL,
	[OTHER_IMG4] [varchar](100) NULL,
	[OTHER_IMG5] [varchar](100) NULL,
	[RE_SORT] [int] NULL,
	[DISPLAY_YN] [varchar](1) NULL,
	[ICON_YN] [varchar](20) NULL,
	[SELLING_COUNT] [int] NULL,
	[SELLING_MONTH_COUNT] [int] NULL,
	[P_VIEW_COUNT] [int] NULL,
	[WITH_PRODUCT_LIST] [varchar](300) NULL,
	[P_OUTLET_YN] [varchar](1) NULL,
	[UPD_DATE] [datetime] NULL,
	[INS_DATE] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_PRODUCT_INFO_20150904]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_PRODUCT_INFO_20150904](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[P_CATE_CODE] [char](9) NULL,
	[C_CATE_CODE] [char](9) NULL,
	[L_CATE_CODE] [char](9) NULL,
	[P_CODE] [varchar](10) NULL,
	[P_NAME] [varchar](100) NULL,
	[P_SUB_TITLE] [varchar](200) NULL,
	[P_COUNT] [int] NULL,
	[SELLING_PRICE] [int] NULL,
	[DISCOUNT_RATE] [int] NULL,
	[DISCOUNT_PRICE] [int] NULL,
	[SOLDOUT_YN] [varchar](1) NULL,
	[P_INFO_DETAIL_WEB] [text] NULL,
	[P_INFO_DETAIL_MOBILE] [text] NULL,
	[MV_URL] [varchar](200) NULL,
	[P_COMPONENT_INFO] [varchar](1000) NULL,
	[P_TAG] [varchar](300) NULL,
	[MAIN_IMG] [varchar](100) NULL,
	[OTHER_IMG1] [varchar](100) NULL,
	[OTHER_IMG2] [varchar](100) NULL,
	[OTHER_IMG3] [varchar](100) NULL,
	[OTHER_IMG4] [varchar](100) NULL,
	[OTHER_IMG5] [varchar](100) NULL,
	[RE_SORT] [int] NULL,
	[DISPLAY_YN] [varchar](1) NULL,
	[ICON_YN] [varchar](20) NULL,
	[SELLING_COUNT] [int] NULL,
	[SELLING_MONTH_COUNT] [int] NULL,
	[P_VIEW_COUNT] [int] NULL,
	[WITH_PRODUCT_LIST] [varchar](300) NULL,
	[P_OUTLET_YN] [varchar](1) NULL,
	[UPD_DATE] [datetime] NULL,
	[INS_DATE] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_PRODUCT_INFO_20150903]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_PRODUCT_INFO_20150903](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[P_CATE_CODE] [char](9) NULL,
	[C_CATE_CODE] [char](9) NULL,
	[L_CATE_CODE] [char](9) NULL,
	[P_CODE] [varchar](10) NULL,
	[P_NAME] [varchar](100) NULL,
	[P_SUB_TITLE] [varchar](200) NULL,
	[P_COUNT] [int] NULL,
	[SELLING_PRICE] [int] NULL,
	[DISCOUNT_RATE] [int] NULL,
	[DISCOUNT_PRICE] [int] NULL,
	[SOLDOUT_YN] [varchar](1) NULL,
	[P_INFO_DETAIL_WEB] [text] NULL,
	[P_INFO_DETAIL_MOBILE] [text] NULL,
	[MV_URL] [varchar](200) NULL,
	[P_COMPONENT_INFO] [varchar](1000) NULL,
	[P_TAG] [varchar](300) NULL,
	[MAIN_IMG] [varchar](100) NULL,
	[OTHER_IMG1] [varchar](100) NULL,
	[OTHER_IMG2] [varchar](100) NULL,
	[OTHER_IMG3] [varchar](100) NULL,
	[OTHER_IMG4] [varchar](100) NULL,
	[OTHER_IMG5] [varchar](100) NULL,
	[RE_SORT] [int] NULL,
	[DISPLAY_YN] [varchar](1) NULL,
	[ICON_YN] [varchar](20) NULL,
	[SELLING_COUNT] [int] NULL,
	[SELLING_MONTH_COUNT] [int] NULL,
	[P_VIEW_COUNT] [int] NULL,
	[WITH_PRODUCT_LIST] [varchar](300) NULL,
	[P_OUTLET_YN] [varchar](1) NULL,
	[UPD_DATE] [datetime] NULL,
	[INS_DATE] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_PRODUCT_INFO]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_PRODUCT_INFO](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[P_CATE_CODE] [char](9) NULL,
	[C_CATE_CODE] [char](9) NULL,
	[L_CATE_CODE] [char](9) NULL,
	[P_CODE] [varchar](10) NULL,
	[P_NAME] [varchar](100) NULL,
	[P_SUB_TITLE] [varchar](200) NULL,
	[P_COUNT] [int] NULL,
	[SELLING_PRICE] [int] NULL,
	[DISCOUNT_RATE] [int] NULL,
	[DISCOUNT_PRICE] [int] NULL,
	[SOLDOUT_YN] [varchar](1) NULL,
	[P_INFO_DETAIL_WEB] [text] NULL,
	[P_INFO_DETAIL_MOBILE] [text] NULL,
	[MV_URL] [varchar](200) NULL,
	[P_COMPONENT_INFO] [varchar](1000) NULL,
	[P_TAG] [varchar](300) NULL,
	[MAIN_IMG] [varchar](100) NULL,
	[OTHER_IMG1] [varchar](100) NULL,
	[OTHER_IMG2] [varchar](100) NULL,
	[OTHER_IMG3] [varchar](100) NULL,
	[OTHER_IMG4] [varchar](100) NULL,
	[OTHER_IMG5] [varchar](100) NULL,
	[RE_SORT] [int] NULL,
	[DISPLAY_YN] [varchar](1) NULL,
	[ICON_YN] [varchar](20) NULL,
	[SELLING_COUNT] [int] NULL,
	[SELLING_MONTH_COUNT] [int] NULL,
	[P_VIEW_COUNT] [int] NULL,
	[WITH_PRODUCT_LIST] [varchar](300) NULL,
	[P_OUTLET_YN] [varchar](1) NULL,
	[UPD_DATE] [datetime] NULL,
	[INS_DATE] [datetime] NULL,
 CONSTRAINT [PK_TB_PRODUCT_INFO] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_PCODE_TB_PRODUCT_INFO] ON [dbo].[TB_PRODUCT_INFO] 
(
	[P_CODE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TB_POPUP]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_POPUP](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[MEDIA_GBN] [varchar](2) NULL,
	[TITLE] [varchar](200) NULL,
	[IS_DISPLAY] [varchar](1) NULL,
	[DISPLAY_START] [datetime] NULL,
	[DISPLAY_END] [datetime] NULL,
	[POS_TOP] [int] NULL,
	[POS_LEFT] [int] NULL,
	[SIZE_WIDTH] [int] NULL,
	[SIZE_HEIGHT] [int] NULL,
	[WEB_IMG] [varchar](100) NULL,
	[WEB_LINK] [varchar](300) NULL,
	[WEB_TARGET] [varchar](2) NULL,
	[MOBILE_IMG] [varchar](100) NULL,
	[MOBILE_LINK] [varchar](300) NULL,
	[IS_REMOVE] [varchar](1) NULL,
	[INS_DATE] [datetime] NULL,
 CONSTRAINT [PK_TB_POPUP] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_POINT_USE_CODES]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_POINT_USE_CODES](
	[CODE] [varchar](3) NOT NULL,
	[USE_AMOUNT] [int] NULL,
	[DETAIL] [varchar](100) NULL,
 CONSTRAINT [PK_TB_POINT_USE_CODES] PRIMARY KEY CLUSTERED 
(
	[CODE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_POINT_USE]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_POINT_USE](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[M_ID] [varchar](13) NOT NULL,
	[USE_POINT] [int] NOT NULL,
	[SAVE_SUM_POINT] [int] NOT NULL,
	[USE_CODE] [varchar](3) NOT NULL,
	[EXPIRE_YN] [varchar](1) NOT NULL,
	[ORDER_CODE] [varchar](20) NULL,
	[ORDER_DETAIL_IDX] [int] NULL,
	[P_NAME] [varchar](100) NULL,
	[ADDITION_REASON] [varchar](300) NULL,
	[ADM_ID] [varchar](13) NULL,
	[ADM_NAME] [varchar](30) NULL,
	[INS_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_POINT_USE] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_POINT_SAVE_CODES]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_POINT_SAVE_CODES](
	[CODE] [varchar](3) NOT NULL,
	[SUB_CODE] [varchar](3) NULL,
	[SAVE_AMOUNT] [int] NULL,
	[SAVE_RATE] [int] NULL,
	[SAVE_RATE_YN] [varchar](1) NULL,
	[M_GBN] [varchar](1) NULL,
	[M_GRADE] [varchar](1) NULL,
	[DETAIL] [varchar](100) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [IX_TB_POINT_SAVE_CODES] ON [dbo].[TB_POINT_SAVE_CODES] 
(
	[CODE] ASC,
	[SUB_CODE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TB_POINT_SAVE_BY_USE]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_POINT_SAVE_BY_USE](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[M_ID] [varchar](13) NOT NULL,
	[SAVE_POINT_IDX] [int] NOT NULL,
	[USE_POINT_IDX] [int] NOT NULL,
	[OFFSET_POINT] [int] NOT NULL,
	[INS_DATE] [datetime] NULL,
 CONSTRAINT [PK_TB_POINT_SAVE_BY_USE] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_POINT_SAVE]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_POINT_SAVE](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[M_ID] [varchar](13) NOT NULL,
	[SAVE_POINT] [int] NULL,
	[SAVE_OFFSET_POINT] [int] NULL,
	[SAVE_SUM_POINT] [int] NULL,
	[SAVE_CODE] [varchar](3) NULL,
	[EXPIRE_YN] [varchar](1) NOT NULL,
	[ORDER_CODE] [varchar](20) NULL,
	[ORDER_DETAIL_IDX] [int] NULL,
	[P_NAME] [varchar](100) NULL,
	[REVIEW_IDX] [int] NULL,
	[ADDITION_REASON] [varchar](300) NULL,
	[ADM_ID] [varchar](13) NULL,
	[ADM_NAME] [varchar](30) NULL,
	[INS_DATE] [datetime] NULL,
 CONSTRAINT [PK_TB_POINT_SAVE_1] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_TB_POINT_SAVE] ON [dbo].[TB_POINT_SAVE] 
(
	[EXPIRE_YN] ASC,
	[M_ID] ASC,
	[SAVE_POINT] ASC,
	[SAVE_OFFSET_POINT] ASC,
	[INS_DATE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_TB_POINT_SAVE_1] ON [dbo].[TB_POINT_SAVE] 
(
	[M_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TB_POINT_LOG]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_POINT_LOG](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[CODE] [varchar](5) NULL,
	[M_ID] [varchar](30) NULL,
	[POINT] [int] NULL,
	[COMMENT] [varchar](4000) NULL,
	[ORDER_CODE] [varchar](20) NULL,
	[ORDER_DETAIL_IDX] [int] NULL,
	[INS_DATE] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_ORDER_PART_CANCEL]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_ORDER_PART_CANCEL](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[ORDER_IDX] [int] NOT NULL,
	[PAT_TID] [varchar](250) NOT NULL,
	[OLD_PAT_TID] [varchar](250) NOT NULL,
	[CANCEL_PRICE] [bigint] NOT NULL,
	[REMAINS_PRICE] [bigint] NOT NULL,
	[EMAIL] [varchar](255) NULL,
	[PRTC_Remains] [bigint] NULL,
	[PRTC_Type] [char](1) NULL,
	[PRTC_Price] [bigint] NULL,
	[PRTC_Cnt] [int] NULL,
	[REG_DATE] [datetime] NULL,
	[REG_ID] [varchar](50) NULL,
	[REG_IP] [varchar](15) NULL,
 CONSTRAINT [PK_TB_ORDER_PART_CANCEL] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_ORDER_MASTER_TMP]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_ORDER_MASTER_TMP](
	[ORDER_IDX] [int] IDENTITY(1,1) NOT NULL,
	[MEMBER_ORDER_GBN] [char](1) NOT NULL,
	[M_ID] [varchar](13) NULL,
	[M_NAME] [varchar](30) NULL,
	[M_GRADE] [varchar](1) NOT NULL,
	[M_GBN] [varchar](1) NOT NULL,
	[SESSION_ID] [varchar](50) NULL,
	[NOMEMBER_PASS] [varchar](20) NULL,
	[ORDER_DATE] [datetime] NOT NULL,
	[ORDER_STATUS] [char](2) NOT NULL,
	[TOTAL_ORDER_PRICE] [int] NOT NULL,
	[TRANS_PRICE] [int] NOT NULL,
	[TRANS_COUPON] [int] NULL,
	[EMP_DISCOUNT_AMT] [int] NOT NULL,
	[COUPON_DISCOUNT_AMT] [int] NOT NULL,
	[POINT_USE_PRICE] [int] NOT NULL,
	[GRADE_DISCOUNT_AMT] [int] NOT NULL,
	[DISCOUNT_AMT] [int] NOT NULL,
	[TOTAL_PAY_PRICE] [int] NOT NULL,
	[FREEGIFT_GBN] [char](1) NOT NULL,
	[FREEGIFT_NAME] [varchar](100) NULL,
	[ACCML_POINT] [int] NOT NULL,
	[PAY_GBN] [char](1) NOT NULL,
	[ESCROW_YN] [char](1) NOT NULL,
	[CARD_GBN] [char](2) NULL,
	[INSTLMT_AT] [char](1) NULL,
	[BANK_CODE] [char](2) NULL,
	[PAT_TID] [varchar](250) NULL,
	[REAL_ACCOUNT_AT] [char](1) NULL,
	[CASHRECEIPT_SE_CODE] [char](1) NULL,
	[CASHRECEIPT_RESULT_CODE] [varchar](10) NULL,
	[SENDER_NAME] [varchar](30) NULL,
	[SENDER_POST] [varchar](7) NULL,
	[SENDER_ADDR1] [varchar](255) NULL,
	[SENDER_ADDR2] [varchar](255) NULL,
	[SENDER_TEL] [varchar](20) NULL,
	[SENDER_HP] [varchar](20) NULL,
	[SENDER_EMAIL] [varchar](200) NULL,
	[RECEIVER_NAME] [varchar](30) NULL,
	[RECEIVER_POST] [varchar](7) NULL,
	[RECEIVER_ADDR1] [varchar](255) NULL,
	[RECEIVER_ADDR2] [varchar](255) NULL,
	[RECEIVER_TEL] [varchar](20) NULL,
	[RECEIVER_HP] [varchar](20) NULL,
	[ORDER_MEMO] [varchar](500) NULL,
	[MANAGER_MEMO] [varchar](2000) NULL,
	[REFUN_ACCOUNT] [varchar](20) NULL,
	[REFUN_BANKCODE] [char](2) NULL,
	[REFUN_NAME] [varchar](30) NULL,
	[REFUN_DATE] [datetime] NULL,
	[REFUN_PRICE] [int] NULL,
	[REG_DATE] [datetime] NOT NULL,
	[HTTP_USER_AGENT] [varchar](1000) NULL,
	[PAT_GUBUN] [varchar](10) NULL,
	[SVR_DOMAIN] [varchar](50) NULL,
 CONSTRAINT [PK_TB_ORDER_MASTER_TMP] PRIMARY KEY CLUSTERED 
(
	[ORDER_IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_ORDER_MASTER]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_ORDER_MASTER](
	[ORDER_IDX] [int] IDENTITY(1,1) NOT NULL,
	[ORDER_CODE] [varchar](20) NOT NULL,
	[MEMBER_ORDER_GBN] [char](1) NOT NULL,
	[M_ID] [varchar](13) NULL,
	[M_NAME] [varchar](30) NULL,
	[M_GRADE] [varchar](1) NOT NULL,
	[M_GBN] [varchar](1) NOT NULL,
	[SESSION_ID] [varchar](50) NULL,
	[NOMEMBER_PASS] [varchar](20) NULL,
	[ORDER_DATE] [datetime] NOT NULL,
	[ORDER_STATUS] [char](2) NOT NULL,
	[TOTAL_ORDER_PRICE] [int] NOT NULL,
	[TRANS_PRICE] [int] NOT NULL,
	[TRANS_COUPON] [int] NULL,
	[EMP_DISCOUNT_AMT] [int] NOT NULL,
	[COUPON_DISCOUNT_AMT] [int] NOT NULL,
	[POINT_USE_PRICE] [int] NOT NULL,
	[GRADE_DISCOUNT_AMT] [int] NOT NULL,
	[DISCOUNT_AMT] [int] NOT NULL,
	[TOTAL_PAY_PRICE] [int] NOT NULL,
	[FREEGIFT_GBN] [char](1) NOT NULL,
	[FREEGIFT_NAME] [varchar](100) NULL,
	[ACCML_POINT] [int] NOT NULL,
	[PAY_GBN] [char](1) NOT NULL,
	[ESCROW_YN] [char](1) NOT NULL,
	[CARD_GBN] [char](2) NULL,
	[INSTLMT_AT] [char](1) NULL,
	[BANK_CODE] [char](2) NULL,
	[PAT_TID] [varchar](250) NULL,
	[REAL_ACCOUNT_AT] [char](1) NULL,
	[CASHRECEIPT_SE_CODE] [char](1) NULL,
	[CASHRECEIPT_RESULT_CODE] [varchar](10) NULL,
	[SENDER_NAME] [varchar](30) NULL,
	[SENDER_POST] [varchar](7) NULL,
	[SENDER_ADDR1] [varchar](255) NULL,
	[SENDER_ADDR2] [varchar](255) NULL,
	[SENDER_TEL] [varchar](20) NULL,
	[SENDER_HP] [varchar](20) NULL,
	[SENDER_EMAIL] [varchar](200) NULL,
	[RECEIVER_NAME] [varchar](30) NULL,
	[RECEIVER_POST] [varchar](7) NULL,
	[RECEIVER_ADDR1] [varchar](255) NULL,
	[RECEIVER_ADDR2] [varchar](255) NULL,
	[RECEIVER_TEL] [varchar](20) NULL,
	[RECEIVER_HP] [varchar](20) NULL,
	[ORDER_MEMO] [varchar](500) NULL,
	[MANAGER_MEMO] [varchar](2000) NULL,
	[REFUN_ACCOUNT] [varchar](20) NULL,
	[REFUN_BANKCODE] [char](2) NULL,
	[REFUN_NAME] [varchar](30) NULL,
	[REFUN_DATE] [datetime] NULL,
	[REFUN_PRICE] [int] NULL,
	[OLD_ORDER_IDX] [int] NULL,
	[REG_DATE] [datetime] NOT NULL,
	[HTTP_USER_AGENT] [varchar](1000) NULL,
	[PAT_GUBUN] [varchar](10) NULL,
	[SVR_DOMAIN] [varchar](50) NULL,
	[VACT_Num] [varchar](20) NULL,
	[VACT_BankCode] [varchar](2) NULL,
	[VACT_Name] [varchar](20) NULL,
	[VACT_InputName] [varchar](20) NULL,
	[VACT_Date] [varchar](8) NULL,
	[VACT_Time] [varchar](6) NULL,
	[INIESCROW_DELIVERY] [varchar](15) NULL,
	[INIESCROW_CONFIRM] [varchar](15) NULL,
	[INIESCROW_CANCEL] [varchar](15) NULL,
	[ESCROW_USER_CMD] [char](1) NULL,
	[ESCROW_USER_DATE] [datetime] NULL,
	[ESCROW_USER_DESC] [varchar](500) NULL,
 CONSTRAINT [PK_TB_ORDER_MASTER] PRIMARY KEY CLUSTERED 
(
	[ORDER_IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_ORDER_LOG]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_ORDER_LOG](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[ORDER_IDX] [int] NOT NULL,
	[ORDER_CODE] [varchar](20) NOT NULL,
	[PROCESS_MEMO] [varchar](2000) NULL,
	[REG_ID] [varchar](20) NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_ORDER_LOG] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_ORDER_DETAIL_TMP]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_ORDER_DETAIL_TMP](
	[ORDER_DETAIL_IDX] [int] IDENTITY(1,1) NOT NULL,
	[ORDER_IDX] [int] NOT NULL,
	[ORDER_DETAIL_STATUS] [char](2) NOT NULL,
	[DELIVERY_NUM] [varchar](40) NULL,
	[DELIVERY_DATE] [datetime] NULL,
	[P_CODE] [varchar](10) NOT NULL,
	[P_CATE_CODE] [char](9) NULL,
	[P_CATE_NAME] [varchar](50) NULL,
	[C_CATE_CODE] [char](9) NULL,
	[C_CATE_NAME] [varchar](50) NULL,
	[L_CATE_CODE] [char](9) NULL,
	[L_CATE_NAME] [varchar](50) NULL,
	[P_NAME] [varchar](100) NOT NULL,
	[P_SUB_TITLE] [varchar](200) NULL,
	[P_IMG1_S] [varchar](100) NULL,
	[ICON_NEW] [int] NOT NULL,
	[ICON_BEST] [int] NOT NULL,
	[ICON_SOLDOUT] [int] NOT NULL,
	[ICON_CUSTOM] [int] NOT NULL,
	[ICON_ONEPLUS] [int] NOT NULL,
	[ICON_SET] [int] NOT NULL,
	[ICON_TIME] [int] NOT NULL,
	[ICON_COUPON] [int] NOT NULL,
	[SELLING_PRICE] [int] NOT NULL,
	[DISCOUNT_RATE] [int] NOT NULL,
	[DISCOUNT_PRICE] [int] NOT NULL,
	[PROMOTION_TYPE] [char](2) NOT NULL,
	[CD_PROMOTION_PRODUCT] [varchar](7) NULL,
	[EMP_DISCOUNT] [int] NOT NULL,
	[EMP_PMO_TOTAL_RATE_OR_MONEY] [varchar](1) NULL,
	[EMP_PMO_TOTAL_DISCOUNT_RATE] [int] NOT NULL,
	[EMP_PMO_TOTAL_DISCOUNT_MONEY] [int] NOT NULL,
	[EMP_DISCOUNT_AMT] [int] NOT NULL,
	[EMP_DISCOUNT_PRICE] [int] NOT NULL,
	[ORDER_PRICE] [int] NOT NULL,
	[IDX_COUPON_NUMBER] [int] NULL,
	[CD_COUPON] [varchar](6) NULL,
	[RATE_OR_MONEY] [varchar](1) NULL,
	[COUPON_DISCOUNT_MONEY] [int] NOT NULL,
	[COUPON_DISCOUNT_RATE] [int] NOT NULL,
	[COUPON_DISCOUNT_AMT] [int] NOT NULL,
	[COUPON_DISCOUNT_PRICE] [int] NOT NULL,
	[USE_POINT] [int] NOT NULL,
	[GRADE_DISCOUNT] [int] NOT NULL,
	[GRADE_PMO_TOTAL_RATE_OR_MONEY] [varchar](1) NULL,
	[GRADE_PMO_TOTAL_DISCOUNT_RATE] [int] NOT NULL,
	[GRADE_PMO_TOTAL_DISCOUNT_MONEY] [int] NOT NULL,
	[GRADE_DISCOUNT_AMT] [int] NOT NULL,
	[POINT_ACCML] [int] NOT NULL,
	[POINT_ACCML_DATE] [datetime] NULL,
	[P_COUNT] [int] NOT NULL,
	[REAL_PAY_PRICE] [int] NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_ORDER_DETAIL_TMP] PRIMARY KEY CLUSTERED 
(
	[ORDER_DETAIL_IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_ORDER_DETAIL]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_ORDER_DETAIL](
	[ORDER_DETAIL_IDX] [int] IDENTITY(1,1) NOT NULL,
	[ORDER_IDX] [int] NOT NULL,
	[ORDER_CODE] [varchar](20) NOT NULL,
	[ORDER_DETAIL_STATUS] [char](2) NOT NULL,
	[DELIVERY_NUM] [varchar](40) NULL,
	[DELIVERY_DATE] [datetime] NULL,
	[P_CODE] [varchar](50) NOT NULL,
	[P_CATE_CODE] [char](9) NULL,
	[P_CATE_NAME] [varchar](50) NULL,
	[C_CATE_CODE] [char](9) NULL,
	[C_CATE_NAME] [varchar](50) NULL,
	[L_CATE_CODE] [char](9) NULL,
	[L_CATE_NAME] [varchar](50) NULL,
	[P_NAME] [varchar](100) NOT NULL,
	[P_SUB_TITLE] [varchar](200) NULL,
	[P_IMG1_S] [varchar](100) NULL,
	[ICON_NEW] [int] NOT NULL,
	[ICON_BEST] [int] NOT NULL,
	[ICON_SOLDOUT] [int] NOT NULL,
	[ICON_CUSTOM] [int] NOT NULL,
	[ICON_ONEPLUS] [int] NOT NULL,
	[ICON_SET] [int] NOT NULL,
	[ICON_TIME] [int] NOT NULL,
	[ICON_COUPON] [int] NOT NULL,
	[SELLING_PRICE] [int] NOT NULL,
	[DISCOUNT_RATE] [int] NOT NULL,
	[DISCOUNT_PRICE] [int] NOT NULL,
	[PROMOTION_TYPE] [char](2) NOT NULL,
	[CD_PROMOTION_PRODUCT] [varchar](7) NULL,
	[EMP_DISCOUNT] [int] NOT NULL,
	[EMP_PMO_TOTAL_RATE_OR_MONEY] [varchar](1) NULL,
	[EMP_PMO_TOTAL_DISCOUNT_RATE] [int] NOT NULL,
	[EMP_PMO_TOTAL_DISCOUNT_MONEY] [int] NOT NULL,
	[EMP_DISCOUNT_AMT] [int] NOT NULL,
	[EMP_DISCOUNT_PRICE] [int] NOT NULL,
	[ORDER_PRICE] [int] NOT NULL,
	[IDX_COUPON_NUMBER] [int] NULL,
	[CD_COUPON] [varchar](6) NULL,
	[RATE_OR_MONEY] [varchar](1) NULL,
	[COUPON_DISCOUNT_MONEY] [int] NOT NULL,
	[COUPON_DISCOUNT_RATE] [int] NOT NULL,
	[COUPON_DISCOUNT_AMT] [int] NOT NULL,
	[COUPON_DISCOUNT_PRICE] [int] NOT NULL,
	[USE_POINT] [int] NOT NULL,
	[GRADE_DISCOUNT] [int] NOT NULL,
	[GRADE_PMO_TOTAL_RATE_OR_MONEY] [varchar](1) NULL,
	[GRADE_PMO_TOTAL_DISCOUNT_RATE] [int] NOT NULL,
	[GRADE_PMO_TOTAL_DISCOUNT_MONEY] [int] NOT NULL,
	[GRADE_DISCOUNT_AMT] [int] NOT NULL,
	[POINT_ACCML] [int] NOT NULL,
	[POINT_ACCML_DATE] [datetime] NULL,
	[P_COUNT] [int] NOT NULL,
	[REAL_PAY_PRICE] [int] NULL,
	[ORDER_DETAIL_STATUS_DATE] [datetime] NOT NULL,
	[EXCHANGE_YN] [char](1) NOT NULL,
	[EXCHANGE_DATE] [datetime] NULL,
	[EXCHANGE_COUNT] [int] NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_ORDER_DETAIL] PRIMARY KEY CLUSTERED 
(
	[ORDER_DETAIL_IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_ORDER_CODE]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TB_ORDER_CODE](
	[IDX] [int] IDENTITY(100000,1) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_ORDER_CODE] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TB_NOTICE]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_NOTICE](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[TITLE] [varchar](100) NOT NULL,
	[CONTENTS] [text] NOT NULL,
	[VIEW_CNT] [int] NOT NULL,
	[DISPLAY_YN] [char](1) NOT NULL,
	[M_ID] [varchar](13) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_NOTICE] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_MEMBER_STAFF_REQUST]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_MEMBER_STAFF_REQUST](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[M_ID] [varchar](13) NULL,
	[M_NAME] [varchar](30) NULL,
	[M_GRADE] [varchar](1) NULL,
	[INS_DATE] [datetime] NOT NULL,
	[STAFF_COMPANY] [varchar](50) NULL,
	[STAFF_ID] [varchar](50) NULL,
	[STAFF_NAME] [varchar](30) NULL,
	[REQ_COMMENT] [varchar](500) NULL,
	[STATUS] [varchar](10) NULL,
	[PROC_DATE] [datetime] NULL,
	[PROC_COMMENT] [varchar](500) NULL,
	[PROC_ADM_ID] [varchar](13) NULL,
 CONSTRAINT [PK_TB_MEMBER_STAFF_REQUST] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'idx' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_REQUST', @level2type=N'COLUMN',@level2name=N'IDX'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'신청자아이디' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_REQUST', @level2type=N'COLUMN',@level2name=N'M_ID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'신청자이름' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_REQUST', @level2type=N'COLUMN',@level2name=N'M_NAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'신청자회원등급(신청당시)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_REQUST', @level2type=N'COLUMN',@level2name=N'M_GRADE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'신청일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_REQUST', @level2type=N'COLUMN',@level2name=N'INS_DATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'임직원_회사명' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_REQUST', @level2type=N'COLUMN',@level2name=N'STAFF_COMPANY'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'임직원_사번' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_REQUST', @level2type=N'COLUMN',@level2name=N'STAFF_ID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'임직원_이름' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_REQUST', @level2type=N'COLUMN',@level2name=N'STAFF_NAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'처리상태(접수/승인/반려)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_REQUST', @level2type=N'COLUMN',@level2name=N'STATUS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'최종처리일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_REQUST', @level2type=N'COLUMN',@level2name=N'PROC_DATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'처리코멘트' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_REQUST', @level2type=N'COLUMN',@level2name=N'PROC_COMMENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'처리자ID' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_REQUST', @level2type=N'COLUMN',@level2name=N'PROC_ADM_ID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'회원_임직원신청접수' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_REQUST'
GO
/****** Object:  Table [dbo].[TB_MEMBER_STAFF_BASE_TMP]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_MEMBER_STAFF_BASE_TMP](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[STAFF_COMPANY] [varchar](50) NULL,
	[STAFF_ID] [varchar](50) NULL,
	[STAFF_NAME] [varchar](30) NULL,
	[INS_DATE] [datetime] NOT NULL,
	[WORK_TEMP_ID] [varchar](30) NULL,
	[APP_RESULT] [varchar](10) NULL,
	[ADM_ID] [varchar](13) NULL,
	[IP] [varchar](20) NULL,
 CONSTRAINT [PK_TB_MEMBER_STAFF_BASE_TMP] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'idx' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE_TMP', @level2type=N'COLUMN',@level2name=N'IDX'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'임직원_회사명' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE_TMP', @level2type=N'COLUMN',@level2name=N'STAFF_COMPANY'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'임직원_사번' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE_TMP', @level2type=N'COLUMN',@level2name=N'STAFF_ID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'임직원_이름' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE_TMP', @level2type=N'COLUMN',@level2name=N'STAFF_NAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'생성일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE_TMP', @level2type=N'COLUMN',@level2name=N'INS_DATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'작업번호' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE_TMP', @level2type=N'COLUMN',@level2name=N'WORK_TEMP_ID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'적용결과(준비/추가/중복오류/기타오류)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE_TMP', @level2type=N'COLUMN',@level2name=N'APP_RESULT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'작업자ID' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE_TMP', @level2type=N'COLUMN',@level2name=N'ADM_ID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'작업자IP' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE_TMP', @level2type=N'COLUMN',@level2name=N'IP'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'회원_임직원기준테이블_임시작업용' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE_TMP'
GO
/****** Object:  Table [dbo].[TB_MEMBER_STAFF_BASE]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_MEMBER_STAFF_BASE](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[STAFF_COMPANY] [varchar](50) NULL,
	[STAFF_ID] [varchar](50) NULL,
	[STAFF_NAME] [varchar](30) NULL,
	[INS_DATE] [datetime] NOT NULL,
	[WORK_TEMP_ID] [varchar](30) NULL,
 CONSTRAINT [PK_TB_MEMBER_STAFF_BASE] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'idx' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE', @level2type=N'COLUMN',@level2name=N'IDX'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'임직원_회사명' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE', @level2type=N'COLUMN',@level2name=N'STAFF_COMPANY'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'임직원_사번' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE', @level2type=N'COLUMN',@level2name=N'STAFF_ID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'임직원_이름' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE', @level2type=N'COLUMN',@level2name=N'STAFF_NAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'생성일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE', @level2type=N'COLUMN',@level2name=N'INS_DATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'작업번호' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE', @level2type=N'COLUMN',@level2name=N'WORK_TEMP_ID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'회원_임직원기준테이블' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_STAFF_BASE'
GO
/****** Object:  Table [dbo].[TB_MEMBER_RETIRE]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_MEMBER_RETIRE](
	[M_NO] [int] NOT NULL,
	[M_ID] [varchar](13) NOT NULL,
	[M_NAME] [varchar](30) NOT NULL,
	[M_PWD] [varchar](100) NOT NULL,
	[M_GRADE] [varchar](1) NOT NULL,
	[M_SEX] [char](1) NULL,
	[M_BIRTHDAY] [varchar](10) NULL,
	[M_MOBILE] [varchar](15) NULL,
	[M_PHONE] [varchar](15) NULL,
	[M_EMAIL] [varchar](100) NULL,
	[M_ZIPCODE] [varchar](7) NULL,
	[M_ADDR1] [varchar](100) NULL,
	[M_ADDR2] [varchar](100) NULL,
	[M_ISSMS] [char](1) NULL,
	[M_ISEMAIL] [char](1) NULL,
	[M_ISDM] [char](1) NULL,
	[M_POINT] [int] NOT NULL,
	[M_CREDATE] [datetime] NOT NULL,
	[M_VISITCNT] [int] NOT NULL,
	[M_LASTVISITDATE] [datetime] NOT NULL,
	[M_UPDATEDATE] [datetime] NOT NULL,
	[M_JOIN_MODE] [varchar](5) NULL,
	[M_DI] [varchar](100) NULL,
	[M_SKIN_TROUBLE_CD] [char](9) NULL,
	[M_AGREE] [varchar](1) NULL,
	[M_AGREE2] [varchar](1) NULL,
	[M_GBN] [varchar](1) NOT NULL,
	[M_STAFF_COMPANY] [varchar](50) NULL,
	[M_STAFF_ID] [varchar](50) NULL,
	[M_STAFF_APPROV_DATE] [datetime] NULL,
	[M_IS_RETIRE] [varchar](1) NULL,
	[M_DEL_DATE] [datetime] NULL,
	[M_DEL_POINT] [int] NOT NULL,
	[M_DEL_REASON] [varchar](2000) NULL,
	[M_DEVICE_GBN] [varchar](1) NULL,
	[ZZ_OLD_PWD_MD5] [varchar](100) NULL,
	[ZZ_ETC1] [varchar](100) NULL,
	[ZZ_ETC2] [varchar](100) NULL,
	[ZZ_ETC3] [varchar](100) NULL,
 CONSTRAINT [PK_TB_MEMBER_RETIRE] PRIMARY KEY CLUSTERED 
(
	[M_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'고유번호' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_NO'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'아이디' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_ID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'이름' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_NAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'비밀번호(sha256(md5))' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_PWD'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'회원등급(B/S/G/V)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_GRADE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'성별(1:남,2:여)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_SEX'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'생년월일(YYYY-MM-DD)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_BIRTHDAY'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'핸드폰(010-1111-1111)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_MOBILE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'전화번호(02-111-1111)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_PHONE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'이메일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_EMAIL'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'우편번호(111-111)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_ZIPCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'주소1' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_ADDR1'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'주소2(나머지)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_ADDR2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'SMS수신' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_ISSMS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'이메일수신' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_ISEMAIL'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'DM수신' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_ISDM'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'현재포인트' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_POINT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'가입일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_CREDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'방문횟수' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_VISITCNT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'마지막 방문일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_LASTVISITDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'정보수정일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_UPDATEDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'실명인증방법(jumin/hp/ipin)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_JOIN_MODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'실명인증 고유키값(DI)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_DI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'피부트러블카테고리코드(택1)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_SKIN_TROUBLE_CD'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'약관동의1(개인정보 제 3자 제공에 동의)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_AGREE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'약관동의2(고유식별정보 수집 및 이용)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_AGREE2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'회원구분(A:일반회원,S:임직원)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_GBN'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'임직원_회사명' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_STAFF_COMPANY'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'임직원_사번' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_STAFF_ID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'임직원_승인일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_STAFF_APPROV_DATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'탈퇴여부' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_IS_RETIRE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'탈퇴일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_DEL_DATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'탈퇴시잔여포인트' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_DEL_POINT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'탈퇴사유' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_DEL_REASON'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'가입디바이스구분(M:모바일, W:PC원도우) ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE', @level2type=N'COLUMN',@level2name=N'M_DEVICE_GBN'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'탈퇴회원' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_RETIRE'
GO
/****** Object:  Table [dbo].[TB_MEMBER_REALNAME_LOG]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_MEMBER_REALNAME_LOG](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[WORK_TMP_ID] [varchar](50) NULL,
	[M_JOIN_TYPE] [varchar](10) NULL,
	[RESULT_CODE] [varchar](10) NULL,
	[TRAN_NO] [varchar](50) NULL,
	[M_NAME] [varchar](30) NULL,
	[di] [varchar](100) NULL,
	[ci] [varchar](100) NULL,
	[M_BIRTHDAY] [varchar](10) NULL,
	[M_SEX] [varchar](1) NULL,
	[nation] [varchar](10) NULL,
	[RETURN_MSG_ALL] [varchar](5000) NULL,
	[INS_DATE] [datetime] NOT NULL,
	[IP] [varchar](20) NULL,
 CONSTRAINT [PK_TB_MEMBER_REALNAME_CERT_LOG] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'idx' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_REALNAME_LOG', @level2type=N'COLUMN',@level2name=N'IDX'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'인증수단(HP/IPIN)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_REALNAME_LOG', @level2type=N'COLUMN',@level2name=N'M_JOIN_TYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'결과코드(000:정상처리)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_REALNAME_LOG', @level2type=N'COLUMN',@level2name=N'RESULT_CODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'거래일련번호' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_REALNAME_LOG', @level2type=N'COLUMN',@level2name=N'TRAN_NO'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'이름' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_REALNAME_LOG', @level2type=N'COLUMN',@level2name=N'M_NAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'DI (DupInfo)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_REALNAME_LOG', @level2type=N'COLUMN',@level2name=N'di'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'CI(Coinfo1)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_REALNAME_LOG', @level2type=N'COLUMN',@level2name=N'ci'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'생년월일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_REALNAME_LOG', @level2type=N'COLUMN',@level2name=N'M_BIRTHDAY'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'성별 :1:남,2:여' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_REALNAME_LOG', @level2type=N'COLUMN',@level2name=N'M_SEX'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'내외국인구분(HP:내국인1,외국인2 / ipin: 내국인0,외국인1)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_REALNAME_LOG', @level2type=N'COLUMN',@level2name=N'nation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'리턴메세지전체' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_REALNAME_LOG', @level2type=N'COLUMN',@level2name=N'RETURN_MSG_ALL'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'등록일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_REALNAME_LOG', @level2type=N'COLUMN',@level2name=N'INS_DATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'회원_실명인증 로그' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER_REALNAME_LOG'
GO
/****** Object:  Table [dbo].[TB_MEMBER]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_MEMBER](
	[M_NO] [int] IDENTITY(1,1) NOT NULL,
	[M_ID] [varchar](13) NOT NULL,
	[M_NAME] [varchar](30) NOT NULL,
	[M_PWD] [varchar](100) NOT NULL,
	[M_GRADE] [varchar](1) NOT NULL,
	[M_SEX] [char](1) NULL,
	[M_BIRTHDAY] [varchar](10) NULL,
	[M_MOBILE] [varchar](15) NULL,
	[M_PHONE] [varchar](15) NULL,
	[M_EMAIL] [varchar](100) NULL,
	[M_ZIPCODE] [varchar](7) NULL,
	[M_ADDR1] [varchar](100) NULL,
	[M_ADDR2] [varchar](100) NULL,
	[M_ISSMS] [char](1) NULL,
	[M_ISEMAIL] [char](1) NULL,
	[M_ISDM] [char](1) NULL,
	[M_POINT] [int] NOT NULL,
	[M_CREDATE] [datetime] NOT NULL,
	[M_VISITCNT] [int] NOT NULL,
	[M_LASTVISITDATE] [datetime] NOT NULL,
	[M_UPDATEDATE] [datetime] NOT NULL,
	[M_JOIN_MODE] [varchar](5) NULL,
	[M_DI] [varchar](100) NULL,
	[M_SKIN_TROUBLE_CD] [char](9) NULL,
	[M_AGREE] [varchar](1) NULL,
	[M_AGREE2] [varchar](1) NULL,
	[M_GBN] [varchar](1) NOT NULL,
	[M_STAFF_COMPANY] [varchar](50) NULL,
	[M_STAFF_ID] [varchar](50) NULL,
	[M_STAFF_APPROV_DATE] [datetime] NULL,
	[M_IS_RETIRE] [varchar](1) NULL,
	[M_DEL_DATE] [datetime] NULL,
	[M_DEL_POINT] [int] NOT NULL,
	[M_DEL_REASON] [varchar](2000) NULL,
	[M_DEVICE_GBN] [varchar](1) NULL,
	[ZZ_OLD_PWD_MD5] [varchar](100) NULL,
	[ZZ_ETC1] [varchar](100) NULL,
	[ZZ_ETC2] [varchar](100) NULL,
	[ZZ_ETC3] [varchar](100) NULL,
	[PREV_M_GRADE] [varchar](1) NULL,
 CONSTRAINT [PK_TB_MEMBER] PRIMARY KEY CLUSTERED 
(
	[M_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'고유번호' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_NO'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'아이디' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_ID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'이름' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_NAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'비밀번호(sha256(md5))' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_PWD'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'회원등급(B/S/G/V)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_GRADE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'성별(1:남,2:여)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_SEX'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'생년월일(YYYY-MM-DD)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_BIRTHDAY'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'핸드폰(010-1111-1111)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_MOBILE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'전화번호(02-111-1111)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_PHONE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'이메일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_EMAIL'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'우편번호(111-111)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_ZIPCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'주소1' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_ADDR1'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'주소2(나머지)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_ADDR2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'SMS수신' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_ISSMS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'이메일수신' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_ISEMAIL'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'DM수신' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_ISDM'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'현재포인트' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_POINT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'가입일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_CREDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'방문횟수' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_VISITCNT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'마지막 방문일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_LASTVISITDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'정보수정일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_UPDATEDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'실명인증방법(jumin/hp/ipin)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_JOIN_MODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'실명인증 고유키값(DI)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_DI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'피부트러블카테고리코드(택1)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_SKIN_TROUBLE_CD'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'약관동의1(개인정보 제 3자 제공에 동의)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_AGREE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'약관동의2(고유식별정보 수집 및 이용)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_AGREE2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'회원구분(A:일반회원,S:임직원)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_GBN'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'임직원_회사명' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_STAFF_COMPANY'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'임직원_사번' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_STAFF_ID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'임직원_승인일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_STAFF_APPROV_DATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'탈퇴여부' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_IS_RETIRE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'탈퇴일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_DEL_DATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'탈퇴시잔여포인트' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_DEL_POINT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'탈퇴사유' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_DEL_REASON'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'가입디바이스구분,(M:모바일 ,W:PC)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'M_DEVICE_GBN'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'배치작업용_직전등급' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER', @level2type=N'COLUMN',@level2name=N'PREV_M_GRADE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'회원' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_MEMBER'
GO
/****** Object:  Table [dbo].[TB_MAGAZINE]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_MAGAZINE](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[TITLE] [varchar](100) NOT NULL,
	[SUB_TITLE] [varchar](200) NULL,
	[CONTENT_GBN] [char](1) NOT NULL,
	[IMG_PATH] [varchar](200) NULL,
	[MOVIE_URL] [varchar](200) NULL,
	[DISPLAY_ORDER] [int] NOT NULL,
	[USE_YN] [char](1) NOT NULL,
	[ADM_ID] [varchar](20) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
	[THUMB_IMG_PATH] [varchar](200) NULL,
 CONSTRAINT [PK_TB_MAGAZINE] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_LOG_USER]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_LOG_USER](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[USER_ID] [varchar](20) NULL,
	[MEMO] [varchar](8000) NULL,
	[COMMENT] [varchar](100) NULL,
	[USERIP] [varchar](30) NULL,
	[URL] [varchar](500) NULL,
	[INS_DATE] [datetime] NULL,
 CONSTRAINT [PK_TB_LOG_USER] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_LOG_ADMIN]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_LOG_ADMIN](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[ADMIN_ID] [varchar](20) NULL,
	[MEMO] [varchar](8000) NULL,
	[COMMENT] [varchar](100) NULL,
	[USERIP] [varchar](30) NULL,
	[URL] [varchar](500) NULL,
	[USER_AGENT] [varchar](1000) NULL,
	[REF_URL] [varchar](1000) NULL,
	[INS_DATE] [datetime] NULL,
 CONSTRAINT [PK_TB_LOG_ADMIN] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_FREE_GIFT_INFO]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_FREE_GIFT_INFO](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[GIFT_NAME] [varchar](100) NULL,
	[GIFT_COUNT] [int] NULL,
	[USED_COUNT] [int] NULL,
	[START_PRICE] [int] NULL,
	[END_PRICE] [int] NULL,
	[DISPLAY_YN] [varchar](1) NULL,
	[GIFT_IMG] [varchar](100) NULL,
	[UPD_DATE] [datetime] NULL,
	[INS_DATE] [datetime] NULL,
 CONSTRAINT [PK_TB_FREE_GIFT_INFO] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_FAQ]    Script Date: 09/11/2015 16:07:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_FAQ](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[CATEGORY] [varchar](20) NOT NULL,
	[TITLE] [varchar](100) NOT NULL,
	[QUESTION] [text] NOT NULL,
	[ANSWER] [text] NOT NULL,
	[VIEW_CNT] [int] NOT NULL,
	[DISPLAY_YN] [char](1) NOT NULL,
	[M_ID] [varchar](13) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_FAQ] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_EXHIBIT_TAB_PRODUCT]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_EXHIBIT_TAB_PRODUCT](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[EXHIBIT_IDX] [int] NOT NULL,
	[TAB_IDX] [int] NOT NULL,
	[P_CODE] [varchar](10) NOT NULL,
	[DISPLAY_ORDER] [int] NOT NULL,
	[ADM_ID] [varchar](20) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_EXHIBIT_TAB_PRODUCT] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_EXHIBIT_TAB]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_EXHIBIT_TAB](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[EXHIBIT_IDX] [int] NOT NULL,
	[TAB_NAME] [varchar](200) NOT NULL,
	[DISPLAY_ORDER] [int] NOT NULL,
	[ADM_ID] [varchar](20) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_EXHIBIT_TAB] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_EXHIBIT]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_EXHIBIT](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[EXHIBIT_NAME] [varchar](200) NOT NULL,
	[FROM_DATE] [char](10) NOT NULL,
	[FROM_TIME] [char](2) NOT NULL,
	[TO_DATE] [char](10) NOT NULL,
	[TO_TIME] [char](2) NOT NULL,
	[EXHIBIT_GBN] [char](1) NOT NULL,
	[WEB_CONTENTS] [text] NOT NULL,
	[MOBILE_FILE] [varchar](255) NOT NULL,
	[WEB_BANNER] [varchar](255) NOT NULL,
	[MOBILE_BANNER] [varchar](255) NOT NULL,
	[DISPLAY_ORDER] [int] NOT NULL,
	[USE_YN] [char](1) NOT NULL,
	[ADM_ID] [varchar](20) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_EXHIBIT] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_EVENT_MAIN]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_EVENT_MAIN](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[MAIN_IMG1] [varchar](255) NULL,
	[MAIN_URL1] [varchar](255) NULL,
	[MAIN_IMG2] [varchar](255) NULL,
	[MAIN_URL2] [varchar](255) NULL,
	[MAIN_IMG3] [varchar](255) NULL,
	[MAIN_URL3] [varchar](255) NULL,
	[MAIN_IMG4] [varchar](255) NULL,
	[MAIN_URL4] [varchar](255) NULL,
	[MAIN_IMG5] [varchar](255) NULL,
	[MAIN_URL5] [varchar](255) NULL,
	[RIGHT_IMG] [varchar](255) NULL,
	[RIGHT_URL] [varchar](255) NULL,
	[MIDDLE_IMG1] [varchar](255) NULL,
	[MIDDLE_URL1] [varchar](255) NULL,
	[MIDDLE_TITLE1] [varchar](100) NULL,
	[MIDDLE_DESC1] [varchar](200) NULL,
	[MIDDLE_IMG2] [varchar](255) NULL,
	[MIDDLE_URL2] [varchar](255) NULL,
	[MIDDLE_TITLE2] [varchar](100) NULL,
	[MIDDLE_DESC2] [varchar](200) NULL,
	[MIDDLE_IMG3] [varchar](255) NULL,
	[MIDDLE_URL3] [varchar](255) NULL,
	[MIDDLE_TITLE3] [varchar](100) NULL,
	[MIDDLE_DESC3] [varchar](200) NULL,
	[MIDDLE_IMG4] [varchar](255) NULL,
	[MIDDLE_URL4] [varchar](255) NULL,
	[ADM_ID] [varchar](20) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_EVENT_MAIN] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_EVENT]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_EVENT](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[EVENT_NAME] [varchar](200) NOT NULL,
	[FROM_DATE] [char](10) NOT NULL,
	[FROM_TIME] [char](2) NOT NULL,
	[TO_DATE] [char](10) NOT NULL,
	[TO_TIME] [char](2) NOT NULL,
	[EVENT_GBN] [char](1) NOT NULL,
	[WEB_CONTENTS] [text] NULL,
	[MOBILE_FILE] [varchar](255) NULL,
	[WEB_BANNER] [varchar](255) NULL,
	[MOBILE_BANNER] [varchar](255) NULL,
	[DISPLAY_ORDER] [int] NOT NULL,
	[USE_YN] [char](1) NOT NULL,
	[ADM_ID] [varchar](20) NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_EVENT] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_DISPLAY]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_DISPLAY](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[KIND] [varchar](3) NULL,
	[SUB_KIND] [varchar](3) NULL,
	[SEQ] [int] NULL,
	[URL] [varchar](300) NULL,
	[IMG] [varchar](100) NULL,
	[P_CODE] [varchar](10) NULL,
	[P_NAME] [varchar](100) NULL,
	[P_MAIN_IMG] [varchar](100) NULL,
	[P_SUB_TITLE] [varchar](200) NULL,
	[SELLING_PRICE] [int] NULL,
	[DISCOUNT_PRICE] [int] NULL,
	[TITLE1] [varchar](300) NULL,
	[TITLE2] [varchar](300) NULL,
	[INS_DATE] [datetime] NULL,
 CONSTRAINT [PK_TB_DISPLAY] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_COUPON_PRODUCT]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_COUPON_PRODUCT](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[CD_COUPON] [varchar](6) NULL,
	[P_CODE] [varchar](10) NULL,
	[USABLE_YN] [varchar](1) NULL,
	[INS_DATE] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_COUPON_PRICE_DETAIL]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_COUPON_PRICE_DETAIL](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[COUPON_MASTER_IDX] [varchar](6) NULL,
	[COUPON_MONEY] [int] NULL,
	[COUPON_DISCOUNT_RATE] [tinyint] NULL,
	[COUPON_GBN] [varchar](1) NULL,
	[ADMIN_MEMO] [varchar](200) NULL,
	[INS_DATE] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_COUPON_MEMBER_GRADE]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_COUPON_MEMBER_GRADE](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[CD_COUPON] [varchar](6) NULL,
	[M_GBN] [varchar](1) NULL,
	[M_GRADE] [varchar](1) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_COUPON_MASTER_NUMBERING]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_COUPON_MASTER_NUMBERING](
	[CD_COUPON] [varchar](6) NULL,
	[INS_DATE] [datetime] NULL,
	[UPD_DATE] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_COUPON_MASTER]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_COUPON_MASTER](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[CD_COUPON] [varchar](6) NOT NULL,
	[COUPON_NAME] [varchar](50) NULL,
	[COUPON_AD_MSG] [varchar](100) NULL,
	[COUPON_USE_DESCRIPTION] [varchar](120) NULL,
	[COUPON_GBN] [varchar](1) NULL,
	[COUPON_GBN_M] [varchar](1) NULL,
	[RATE_OR_MONEY] [varchar](1) NULL,
	[SERVICE_LIFE_GBN] [varchar](1) NULL,
	[FIXED_PERIOD_FROM] [datetime] NULL,
	[FIXED_PERIOD_TO] [datetime] NULL,
	[EXRIRED_DAY_FROM_ISSUE_DT] [int] NULL,
	[DOWNLOAD_DATE_FROM] [datetime] NULL,
	[DOWNLOAD_DATE_TO] [datetime] NULL,
	[USABLE_DEVICE_GBN] [varchar](1) NULL,
	[PRODUCT_APP_SCOPE_GBN] [varchar](1) NULL,
	[MEMBER_APP_SCOPE_GBN] [varchar](1) NULL,
	[ISSUE_METHOD_GBN] [varchar](1) NULL,
	[ISSUE_METHOD_WITH_AUTO] [varchar](1) NULL,
	[COUPON_NUM_CHECK_TF] [varchar](1) NULL,
	[ISSUE_MAX_LIMIT] [int] NULL,
	[MASTER_FROM_DATE] [datetime] NULL,
	[MASTER_TO_DATE] [datetime] NULL,
	[COUPON_DISCOUNT_MONEY] [int] NULL,
	[COUPON_DISCOUNT_RATE] [int] NULL,
	[USABLE_YN] [varchar](1) NULL,
	[ISSUE_YN] [varchar](1) NULL,
	[INS_DATE] [datetime] NULL,
 CONSTRAINT [PK_TB_COUPON_MASTER] PRIMARY KEY CLUSTERED 
(
	[CD_COUPON] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_COUPON_KIND_CATEGORY]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_COUPON_KIND_CATEGORY](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[CD_COUPON_KIND] [varchar](2) NULL,
	[MEMO] [varchar](200) NULL,
	[PLURAL_YN] [varchar](1) NULL,
	[INS_DATE] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_COUPON_ISSUED_DETAIL]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_COUPON_ISSUED_DETAIL](
	[IDX] [int] NULL,
	[IDX_COUPON_NUMBER] [int] IDENTITY(100000000,1) NOT NULL,
	[CD_COUPON] [varchar](6) NULL,
	[COUPON_VERIFI_NUMBER] [varchar](16) NULL,
	[COUPON_MONEY_DETAIL_NO] [int] NULL,
	[COUPON_MONEY] [int] NULL,
	[COUPON_DISCOUNT_RATE] [int] NULL,
	[CD_COUPON_KIND] [varchar](2) NULL,
	[USE_STATUS] [varchar](2) NULL,
	[USABLE_TF] [varchar](1) NULL,
	[M_ID] [varchar](13) NULL,
	[ISSUE_DATE] [datetime] NULL,
	[USABLE_DATE_FROM] [datetime] NULL,
	[USABLE_DATE_TO] [datetime] NULL,
	[ORDER_NO] [int] NULL,
	[ORDER_DETAIL_NO] [int] NULL,
	[ORDER_CANCEL_FL] [varchar](1) NULL,
	[RE_ISSUE_FL] [varchar](1) NULL,
	[RE_ISSUE_DATE] [datetime] NULL,
	[DOWNLOAD_DATE_FROM] [datetime] NULL,
	[DOWNLOAD_DATE_TO] [datetime] NULL,
	[ISSUED_GBN] [varchar](1) NULL,
	[ISSUED_MEMO] [varchar](60) NULL,
	[ADMIN_ID] [varchar](13) NULL,
 CONSTRAINT [PK_TB_COUPON_ISSUED_DETAIL] PRIMARY KEY CLUSTERED 
(
	[IDX_COUPON_NUMBER] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_CATEGORY]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_CATEGORY](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[CATE_GBN] [varchar](15) NULL,
	[CATE_CODE] [char](9) NOT NULL,
	[RE_SORT] [int] NULL,
	[DEPTH1_CODE] [char](3) NULL,
	[DEPTH1_NAME] [varchar](50) NULL,
	[DEPTH2_CODE] [char](3) NULL,
	[DEPTH2_NAME] [varchar](50) NULL,
	[DEPTH3_CODE] [char](3) NULL,
	[DEPTH3_NAME] [varchar](50) NULL,
	[DEPTH_FLAG] [varchar](1) NULL,
	[DISPLAY_YN] [varchar](1) NULL,
	[UPD_DATE] [datetime] NULL,
	[INS_DATE] [datetime] NULL,
 CONSTRAINT [PK_TB_CATEGORY] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_TB_CATEGORY] ON [dbo].[TB_CATEGORY] 
(
	[CATE_CODE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TB_CART]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_CART](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[M_ID] [varchar](13) NULL,
	[SESSION_ID] [varchar](50) NULL,
	[P_CODE] [varchar](50) NOT NULL,
	[P_COUNT] [int] NOT NULL,
	[REG_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_TB_CART] PRIMARY KEY CLUSTERED 
(
	[IDX] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_APP_ERROR_LOG]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_APP_ERROR_LOG](
	[SEQNO] [int] IDENTITY(1,1) NOT NULL,
	[ERR_DATE] [datetime] NOT NULL,
	[MODULE_ID] [varchar](100) NULL,
	[ERR_NO] [bigint] NULL,
	[ERR_MSG] [varchar](max) NULL,
	[ERR_QUERY] [varchar](1000) NULL,
	[COMPUTER_NAME] [varchar](100) NULL,
	[EMP_NAME] [varchar](20) NULL,
	[EMP_EMAIL] [varchar](50) NULL,
	[MEMB_ID] [varchar](20) NULL,
	[RESULT_YN] [char](1) NULL,
	[POST_DATA] [varchar](500) NULL,
	[PCID] [bigint] NULL,
	[HTTP_COOKIE] [varchar](2000) NULL,
 CONSTRAINT [PK__APP_ERROR_LOG] PRIMARY KEY NONCLUSTERED 
(
	[SEQNO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TB_ADMIN_MEMBER]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TB_ADMIN_MEMBER](
	[ADM_ID] [varchar](13) NOT NULL,
	[ADM_NAME] [varchar](30) NOT NULL,
	[ADM_PWD] [varchar](100) NOT NULL,
	[ADM_GRADE] [varchar](1) NULL,
	[ADM_EMAIL] [varchar](100) NULL,
	[ADM_PHONE] [varchar](30) NULL,
	[ADM_INS_DATE] [datetime] NULL,
	[ADM_USE_YN] [varchar](1) NULL,
 CONSTRAINT [PK_TB_ADMIN_MEMBER] PRIMARY KEY CLUSTERED 
(
	[ADM_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'관리자_아이디' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_ADMIN_MEMBER', @level2type=N'COLUMN',@level2name=N'ADM_ID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'관리자_이름' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_ADMIN_MEMBER', @level2type=N'COLUMN',@level2name=N'ADM_NAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'비밀번호(sha256(md5))' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_ADMIN_MEMBER', @level2type=N'COLUMN',@level2name=N'ADM_PWD'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'관리자_등급(S/A)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_ADMIN_MEMBER', @level2type=N'COLUMN',@level2name=N'ADM_GRADE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'이메일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_ADMIN_MEMBER', @level2type=N'COLUMN',@level2name=N'ADM_EMAIL'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'전화번호' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_ADMIN_MEMBER', @level2type=N'COLUMN',@level2name=N'ADM_PHONE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'등록일' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_ADMIN_MEMBER', @level2type=N'COLUMN',@level2name=N'ADM_INS_DATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'사용여부(Y/N)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_ADMIN_MEMBER', @level2type=N'COLUMN',@level2name=N'ADM_USE_YN'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'관리자_계정' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'TB_ADMIN_MEMBER'
GO
/****** Object:  Table [dbo].[T_TRGT]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[T_TRGT](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[NM2] [varchar](10) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[T_SRC]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[T_SRC](
	[IDX] [int] IDENTITY(1,1) NOT NULL,
	[NM] [varchar](20) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SVC_STAT2]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SVC_STAT2](
	[MSG_TYPE] [char](1) NOT NULL,
	[SVC_DATE] [char](10) NOT NULL,
	[RESULT_CODE] [int] NOT NULL,
	[INC_INX] [bigint] IDENTITY(1,1) NOT NULL,
	[RESULT_CNT] [int] NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [IX_SVC_STAT2] ON [dbo].[SVC_STAT2] 
(
	[MSG_TYPE] ASC,
	[SVC_DATE] DESC,
	[RESULT_CODE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SVC_STAT]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SVC_STAT](
	[MSG_TYPE] [char](1) NOT NULL,
	[SVC_DATE] [char](10) NOT NULL,
	[INC_INX] [bigint] IDENTITY(1,1) NOT NULL,
	[TOTAL_CNT] [int] NOT NULL,
	[SUCC_CNT] [int] NOT NULL,
	[FAILED_CNT] [int] NOT NULL,
	[RESULT_WAIT_CNT] [int] NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [IX_SVC_STAT] ON [dbo].[SVC_STAT] 
(
	[MSG_TYPE] ASC,
	[SVC_DATE] DESC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[SP_ZZ_MIGRATION_MEMBER_PWD_MD5_2_SHA256_UPD]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-07
-- Description:	관리자> 회원관리- 수정:암호변경 MD5 -> SHA256
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_ZZ_MIGRATION_MEMBER_PWD_MD5_2_SHA256_UPD]
	 @M_ID	varchar(13)	='' -- 회원계정
	 ,@M_PWD_SHA256	varchar(100)	='' 

AS
BEGIN


	IF exists(select M_ID from TB_MEMBER_mig with(NOLOCK) where (M_ID=@M_ID) AND (M_IS_RETIRE='N') AND (len(M_PWD)<1) )
	begin
		UPDATE TB_MEMBER_mig
		set 
		 M_PWD	=	@M_PWD_SHA256
		 ,ZZ_ETC1=isnull(ZZ_ETC1,'') + '|MD5->SHA256' + Convert(Varchar(19),getdate(),120)
		where (M_ID=@M_ID) AND (M_IS_RETIRE='N') ;
	end


END
GO
/****** Object:  StoredProcedure [dbo].[SP_ZZ_MIGRATION_MEMBER_PWD_MD5_2_SHA256_SEL]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-07
-- Description:	관리자> 회원관리- 수정:암호변경 대상자
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_ZZ_MIGRATION_MEMBER_PWD_MD5_2_SHA256_SEL]

AS
BEGIN


	select M_ID,M_PWD,ZZ_OLD_PWD_MD5
	from TB_MEMBER_mig with(NOLOCK) 
	where (M_GBN='A') AND (M_IS_RETIRE='N') AND (len(M_PWD)<1) AND (len(ZZ_OLD_PWD_MD5)>20)  ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_USER_LOG_INS]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 사용자 로그 (user)
 * Modified  :   2015.07.02
 ============================================================*/  
  
CREATE PROCEDURE [dbo].[SP_USER_LOG_INS]

 @uid VARCHAR(20) = ''				--아이디
,@memo VARCHAR(8000)	 = ''		--로그data
,@comment VARCHAR(100)	 = ''		--comment:해당로그정보 ex>"단체가입"
,@url VARCHAR(500)	 = ''			--log url 정보 및 파라메터
,@userip VARCHAR(30)	 = ''		--사용자ip

AS  
 SET NOCOUNT ON  

	insert into TB_LOG_USER
		 (	USER_ID
			,MEMO
			,COMMENT
			,USERIP
			,URL
		) 
	 values (
	 		@uid
			,@memo
			,@comment 
			,@userip
			,@url
	 	)

 SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[sp_test02]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[sp_test02]
@user_name varchar(20)
as

declare @user_name_01 varchar(20)
set @user_name_01 = NULL;

if @user_name = ''
begin 
	set @user_name_01 = NULL ;
end 
else
begin
	set @user_name_01 = @user_name ; 
end

insert into tb_test02(user_name) values(@user_name_01)
GO
/****** Object:  StoredProcedure [dbo].[sp_test01]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[sp_test01]
@user_name varchar(20)
as

insert into tb_test01(user_name) values(@user_name)
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_WISHLIST_PRODUCT_DEL]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

프로시져명 SP_TB_WISHLIST_PRODUCT_DEL
찜목록에 담긴 품목삭제
파라미터 설명
@M_ID : 회원ID
@P_CODE_LIST : P_CODE를 ,로 구분조합하여 전달 (EX:PCODE1,PCODE2,PCODE3)

SELECT * FROM TB_WISHLIST

exec SP_TB_WISHLIST_PRODUCT_DEL 'KMG5302','555,35,wer'

*/
CREATE PROCEDURE [dbo].[SP_TB_WISHLIST_PRODUCT_DEL]
 @M_ID	VARCHAR(13)	= '' 
,@IDX INT
AS
BEGIN

	SET NOCOUNT ON

	-- 삭제 액션 실행
	DELETE
	FROM TB_WISHLIST
	WHERE M_ID = @M_ID
	AND IDX = @IDX
	
	SET NOCOUNT OFF ;

	SELECT COUNT(IDX) AS COUNT 
	FROM TB_WISHLIST  WITH (NOLOCK)
	WHERE M_ID = @M_ID
END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_WISHLIST_PRODUCT_ADD]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

프로시져명 SP_TB_WISHLIST_PRODUCT_ADD
찜목록에 담긴 품목담기
파라미터 설명
@M_ID : 회원ID
@P_CODE_LIST : P_CODE를 ,로 구분조합하여 전달 (EX:PCODE1,PCODE2,PCODE3)
@P_COUNT_LIST : 각 상품의 담을 갯수를 ,로 구분조합하여 전달 (EX:1,2,3)  기본값=1
@MERGY_OPT : 기존에 같은 상품이 있을때 옵션  ( Y : 해당상품의 수량을 증가시킴  N : 추가행위를 무효화[기본값] )

SELECT * FROM TB_WISHLIST

SELECT * FROM TB_MEMBER
SELECT * FROM TB_PRODUCT_INFO

exec SP_TB_WISHLIST_PRODUCT_ADD 'KMG5302','555,35,wer','2,3','Y'

*/
CREATE PROCEDURE [dbo].[SP_TB_WISHLIST_PRODUCT_ADD]
 @M_ID	VARCHAR(13)	
,@P_CODE VARCHAR(50)
AS
BEGIN

	SET NOCOUNT ON

	DECLARE @SEL_CNT INT ;
	
	set @SEL_CNT = 0
	
	
	SELECT @SEL_CNT = COUNT(IDX) 
	FROM TB_WISHLIST  WITH (NOLOCK)
	WHERE M_ID = @M_ID
	AND P_CODE = @P_CODE
	
	IF (@SEL_CNT = 0)	
	BEGIN
		INSERT INTO TB_WISHLIST (M_ID, P_CODE, REG_DATE)
		SELECT @M_ID, P_CODE, GETDATE()
		FROM TB_PRODUCT_INFO WITH (NOLOCK)
		WHERE P_CODE = @P_CODE

		SELECT COUNT(IDX) AS COUNT 
		FROM TB_WISHLIST  WITH (NOLOCK)
		WHERE M_ID = @M_ID

	END
	ELSE
	BEGIN
		SELECT -99 AS COUNT 
	END	
	
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_WISHLIST_LIST]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_WISHLIST

exec [SP_TB_WISHLIST_LIST] 'test_b1s'

*/
CREATE PROCEDURE [dbo].[SP_TB_WISHLIST_LIST]
 @M_ID		    VARCHAR(20)  
,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈

AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ; 
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

	 
	set @v_SQL_WHERE = ' WHERE (1=1)'
 
		
	 
	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	set @v_SQL  ='insert into #TEMPLIST (IDX_TMP) '
	set @v_SQL  =@v_SQL + ' SELECT  IDX ';
	set @v_SQL  =@v_SQL + ' FROM TB_WISHLIST WITH (NOLOCK) ';
	set @v_SQL  =@v_SQL + ' WHERE M_ID = '''+@M_ID+'''' ;
	set @v_SQL  =@v_SQL + '	ORDER BY IDX DESC ' ;

	exec(@v_SQL);


	SET ROWCOUNT 0 ;

	SELECT a.IDX, 
		a.P_CODE,
		B.MAIN_IMG, 
		B.OTHER_IMG1, 
		B.P_NAME, 
		B.SOLDOUT_YN, 
		B.SELLING_PRICE, 
		B.DISCOUNT_PRICE,
		B.P_SUB_TITLE
	from TB_WISHLIST a with (nolock)
		inner join #TEMPLIST t on a.IDX = t.IDX_TMP
		inner join TB_PRODUCT_INFO B with (nolock) on a.P_CODE = B.P_CODE AND B.DISPLAY_YN = 'Y'
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_WISHLIST_CNT]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_TB_WISHLIST_CNT
특정회원의 찜목록에 담긴 품목 갯수확인
파라미터 설명
@M_ID : 회원ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
@SESSION_ID : 세션ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)


SELECT * FROM TB_WISHLIST

SELECT * FROM TB_MEMBER
SELECT * FROM TB_PRODUCT_INFO


exec SP_TB_WISHLIST_CNT 'KMG5302',''
exec SP_TB_WISHLIST_CNT '','AAA'

*/
CREATE PROCEDURE [dbo].[SP_TB_WISHLIST_CNT]
 @M_ID	varchar(13)	= '' 
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT COUNT(a.IDX) AS COUNT 
	FROM TB_WISHLIST a WITH (NOLOCK)
	inner join TB_PRODUCT_INFO B with (nolock) 
	on a.P_CODE = B.P_CODE AND B.DISPLAY_YN = 'Y'
	WHERE M_ID = @M_ID

	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_WINNER_VIEW]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_WINNER

exec [SP_TB_WINNER_VIEW] 1

*/
CREATE PROCEDURE [dbo].[SP_TB_WINNER_VIEW]
 @IDX			INT
AS
BEGIN

	SET NOCOUNT ON

	UPDATE TB_WINNER
	SET VIEW_CNT = VIEW_CNT + 1
	WHERE IDX = @IDX
	

	SELECT IDX, TITLE, CONTENTS, VIEW_CNT, DISPLAY_YN, M_ID, REG_DATE
	FROM TB_WINNER a with (nolock)
	WHERE IDX = @IDX
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_WINNER_UPD]    Script Date: 09/11/2015 16:07:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_WINNER

EXEC SP_TB_WINNER_UPD 1,'당첨자발표테스트','내용테스트_수정','Y','kmg5302',1

*/
CREATE PROCEDURE [dbo].[SP_TB_WINNER_UPD]
 @IDX	INT
,@TITLE VARCHAR(100)
,@CONTENTS TEXT
,@DISPLAY_YN CHAR(1) = 'N'
,@M_ID VARCHAR(13)
,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

	UPDATE TB_WINNER
	SET TITLE = @TITLE
	, CONTENTS = @CONTENTS
	, DISPLAY_YN = @DISPLAY_YN
	, M_ID = @M_ID
	WHERE IDX = @IDX

	SET @ERR_CODE = @@ERROR;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_WINNER_SEL]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_WINNER

exec SP_TB_WINNER_SEL 'TITLE','테스트','A'

*/
CREATE PROCEDURE [dbo].[SP_TB_WINNER_SEL]
 @SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@DISPLAY_YN CHAR(1) = 'A'
,@SORT_COL	varchar(50)	='IDX' 
,@SORT_DIR	varchar(4)	='DESC' 

,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈

AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

	 
	set @v_SQL_WHERE = ' WHERE (1=1)'

	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '

	IF @DISPLAY_YN <> 'A'
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( DISPLAY_YN = ''' + @DISPLAY_YN + ''') '

	set @v_SQL_ORDERBY = ' ' + @SORT_COL  + ' ' + @SORT_DIR 
 
	 
	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	set @v_SQL  ='insert into #TEMPLIST (IDX_TMP) '
	set @v_SQL  =@v_SQL + ' SELECT  IDX ';
	set @v_SQL  =@v_SQL + ' FROM TB_WINNER WITH (NOLOCK) ';
	set @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	set @v_SQL  =@v_SQL + '	ORDER BY ' + @v_SQL_ORDERBY ;
--	PRINT @v_SQL;
	exec(@v_SQL);


	SET ROWCOUNT 0 ;

	



	SELECT IDX, TITLE, CONTENTS, VIEW_CNT, DISPLAY_YN, M_ID, REG_DATE
	from TB_WINNER a with (nolock)
		inner join #TEMPLIST t on a.IDX = t.IDX_TMP
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_WINNER_INS]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_WINNER

exec SP_TB_WINNER_INS '당첨자발표테스트','내용테스트','Y','kmg5302',1

*/


create PROC [dbo].[SP_TB_WINNER_INS]
 @TITLE VARCHAR(100)
,@CONTENTS TEXT
,@DISPLAY_YN CHAR(1) = 'N'
,@M_ID VARCHAR(13)
,@NEW_IDX INT OUTPUT
AS

SET NOCOUNT ON ;

INSERT INTO TB_WINNER(TITLE,CONTENTS,DISPLAY_YN,M_ID,REG_DATE)
VALUES(@TITLE,@CONTENTS,@DISPLAY_YN,@M_ID,GETDATE());


SELECT @NEW_IDX = SCOPE_IDENTITY() ;
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_WINNER_DEL]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_WINNER

exec [SP_TB_WINNER_DEL] 55,1

*/
CREATE PROCEDURE [dbo].[SP_TB_WINNER_DEL]
 @IDX	INT
 ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN


	DELETE FROM TB_WINNER
	WHERE IDX = @IDX

	SET @ERR_CODE = @@ERROR;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EVENT_MAIN_LIST_ORDER_UPD]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EVENT_MAIN_LIST_ORDER_UPD
어드민의 이벤트관리페이지 이벤트 하단의 리스트조회

SELECT * FROM TB_EVENT

SELECT * FROM TB_EXHIBIT

SELECT * FROM TB_SAMPLE

exec SP_ADMIN_EVENT_MAIN_LIST_ORDER_UPD 'EVENT',1,33
exec SP_ADMIN_EVENT_MAIN_LIST_ORDER_UPD 'EXHIBIT',4,33
exec SP_ADMIN_EVENT_MAIN_LIST_ORDER_UPD 'SAMPLE',1,33

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_EVENT_MAIN_LIST_ORDER_UPD]
@GBN VARCHAR(10)	-- 이벤트/기획전/샘플 구분  (EVENT / EXHIBIT / SAMPLE)
, @IDX INT			-- 해당 IDX
, @ORDER INT		-- 지정할 DISPLAY_ORDER
AS
BEGIN

	SET NOCOUNT ON

	IF @GBN = 'EVENT'
	BEGIN
		UPDATE TB_EVENT
		SET DISPLAY_ORDER = @ORDER
		WHERE IDX = @IDX	
	END
	ELSE IF @GBN = 'EXHIBIT'
	BEGIN
		UPDATE TB_EXHIBIT
		SET DISPLAY_ORDER = @ORDER
		WHERE IDX = @IDX	
	END
	ELSE IF @GBN = 'SAMPLE'
	BEGIN
		UPDATE TB_SAMPLE
		SET DISPLAY_ORDER = @ORDER
		WHERE IDX = @IDX	
	END

	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EVENT_MAIN_LIST]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EVENT_MAIN_LIST
어드민의 이벤트관리페이지 이벤트 하단의 리스트조회

SELECT * FROM TB_EVENT

SELECT * FROM TB_EXHIBIT

SELECT * FROM TB_SAMPLE

exec SP_ADMIN_EVENT_MAIN_LIST
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_EVENT_MAIN_LIST]
AS
BEGIN

	SET NOCOUNT ON

	SELECT *
	FROM (
		SELECT 'EVENT' AS GBN
			, A.IDX
			, A.EVENT_NAME AS NAME
			, A.FROM_DATE
			, A.FROM_TIME
			, A.TO_DATE
			, A.TO_TIME
			, A.WEB_CONTENTS
			, A.MOBILE_FILE
			, A.WEB_BANNER
			, A.MOBILE_BANNER
			, A.DISPLAY_ORDER
			, A.ADM_ID
			, A.REG_DATE
		FROM TB_EVENT A WITH (NOLOCK)
		WHERE A.FROM_DATE + ' ' + A.FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 )
		AND A.TO_DATE + ' ' + A.TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 )
		
		UNION ALL
		
		SELECT 'EXHIBIT' AS GBN
			, A.IDX
			, A.EXHIBIT_NAME AS NAME
			, A.FROM_DATE
			, A.FROM_TIME
			, A.TO_DATE
			, A.TO_TIME
			, A.WEB_CONTENTS
			, A.MOBILE_FILE
			, A.WEB_BANNER
			, A.MOBILE_BANNER
			, A.DISPLAY_ORDER
			, A.ADM_ID
			, A.REG_DATE
		FROM TB_EXHIBIT A WITH (NOLOCK)
		WHERE A.FROM_DATE + ' ' + A.FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 )
		AND A.TO_DATE + ' ' + A.TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 )

		UNION ALL
		
		SELECT 'SAMPLE' AS GBN
			, A.IDX
			, A.SAMPLE_NAME AS NAME
			, A.FROM_DATE
			, A.FROM_TIME
			, A.TO_DATE
			, A.TO_TIME
			, A.WEB_CONTENTS
			, A.MOBILE_FILE
			, A.WEB_BANNER
			, A.MOBILE_BANNER
			, A.DISPLAY_ORDER
			, A.ADM_ID
			, A.REG_DATE
		FROM TB_SAMPLE A WITH (NOLOCK)
		WHERE A.FROM_DATE + ' ' + A.FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 )
		AND A.TO_DATE + ' ' + A.TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 )
	) AA
	ORDER BY AA.DISPLAY_ORDER ASC, AA.REG_DATE DESC
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EVENT_INS]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EVENT_INS
어드민의 이벤트관리페이지에서 이벤트 등록

SELECT * FROM TB_EVENT

EXEC SP_ADMIN_EVENT_INS  '테스트이벤트1','2015-08-01','00','2015-08-31','22','A','웹이벤트내용','모바일이벤트 파일위치','웹배너파일위치','모바일배너파일위치','Y','kmg5302',1
EXEC SP_ADMIN_EVENT_INS  '테스트이벤트2','2015-08-01','00','2015-08-31','24','A','웹이벤트내용','모바일이벤트 파일위치','웹배너파일위치','모바일배너파일위치','N','kmg5302',1


*/


CREATE PROC [dbo].[SP_ADMIN_EVENT_INS]
@EVENT_NAME VARCHAR(200)		-- 이벤트명   ( 회원아이디 )
,@FROM_DATE CHAR(10)			-- 이벤트 시작일   ( ex) 2015-08-05 )
,@FROM_TIME CHAR(2) = '00'		-- 이벤트 시작시각   ( 시각만 저장 )
,@TO_DATE CHAR(10)				-- 이벤트 종료일   ( ex) 2015-08-05 )
,@TO_TIME CHAR(2) = '00'		-- 이벤트 종료시각   ( 시각만 저장 )
,@EVENT_GBN CHAR(1) = 'A'		-- 이벤트 구분   ( A:전체,  W:Web,  M:Mobile )
,@WEB_CONTENTS TEXT				-- 웹이벤트 상세내용
,@MOBILE_FILE VARCHAR(255)		-- 모바일이벤트 내용파일
,@WEB_BANNER VARCHAR(255)		-- 웹배너파일
,@MOBILE_BANNER VARCHAR(255)	-- 모바일배너파일
,@USE_YN CHAR(1) = 'N'			-- 전시구분   ( Y:전시  N:비전시 )
,@ADM_ID VARCHAR(20)			-- 등록자ID

,@NEW_IDX INT OUTPUT
AS

SET NOCOUNT ON ;

INSERT INTO TB_EVENT 
	(	EVENT_NAME
		, FROM_DATE
		, FROM_TIME
		, TO_DATE
		, TO_TIME
		, EVENT_GBN
		, WEB_CONTENTS
		, MOBILE_FILE
		, WEB_BANNER
		, MOBILE_BANNER
		, USE_YN
		, ADM_ID
		, REG_DATE
	)
VALUES
	(	@EVENT_NAME
		, @FROM_DATE
		, @FROM_TIME
		, @TO_DATE
		, @TO_TIME
		, @EVENT_GBN
		, @WEB_CONTENTS
		, @MOBILE_FILE
		, @WEB_BANNER
		, @MOBILE_BANNER
		, @USE_YN
		, @ADM_ID
		, GETDATE());


SELECT @NEW_IDX = SCOPE_IDENTITY() ;
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_PRODUCT_DEATIL_SEL]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 쿠폰정책이 적용된 상품 리스트 (admin)
 * Modified  :   2015.07.14
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_SEL] 1,10,'','',''
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_PRODUCT_DEATIL_SEL]

@CD_COUPON			VARCHAR(6)  -- 쿠폰 코드  
,@P_CODE			VARCHAR(10) --상품번호 
AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

	SET NOCOUNT ON
	--SET FMTONLY OFF	

	--쿠폰상품 리스트 조회
    SELECT A.[IDX]
      ,A.[CD_COUPON]
      ,A.[P_CODE]
      ,A.[USABLE_YN]
      ,A.[INS_DATE]
      ,B.P_NAME
      ,C.DEPTH1_NAME
      ,C.DEPTH2_NAME
      ,C.DEPTH3_NAME
      ,B.DISCOUNT_PRICE
      ,B.P_OUTLET_YN
      ,B.DISPLAY_YN

     FROM  [TB_COUPON_PRODUCT] A WITH (NOLOCK)
		  INNER JOIN TB_PRODUCT_INFO B WITH (NOLOCK) ON A.P_CODE = B.P_CODE
		  INNER JOIN TB_CATEGORY C  WITH (NOLOCK) ON B.C_CATE_CODE = C.CATE_CODE
	 WHERE 
	       A.CD_COUPON = @CD_COUPON
	       AND 
	       A.P_CODE =@P_CODE
	 ORDER BY  C.CATE_CODE DESC
	

	
END


-- SELECT * FROM TB_CATEGORY
-- SELECT * FROM TB_PRODUCT_INFO
-- DROP PROC [SP_ADMIN_COUPON_PRODUCT_SEL]
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_PRODUCT_CREATE_INS_ON_ADDING_PRODUCT]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 새로운 상품 등록시 , '상품적용범위' 가 전체상품인 쿠폰마스터에 이 상품을 추가 
 * Modified  :   2015.08.12
 * Modified  :   
 * Modified  :  EXEC [SP_ADMIN_COUPON_PRODUCT_CREATE_INS_ON_ADDING_PRODUCT] 'XXXX01'
 ============================================================*/  
 CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_PRODUCT_CREATE_INS_ON_ADDING_PRODUCT]
	@P_CODE VARCHAR(10) 
 AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

  SET NOCOUNT ON
 
  DECLARE @TB TABLE
  (
	 IDX INT NOT NULL IDENTITY(1,1)
	,CD_COUPON VARCHAR(6)	
  )
 
  DECLARE @I INT 
  DECLARE @CNT INT 
  DECLARE @CD_COUPON VARCHAR(6)
  
  SET @I = 1
  SET @CNT = 0 
 
  --[1] '상품적용범위' 가 전체상품인 쿠폰코드를 임시테이블에 INSERT
  INSERT @TB(CD_COUPON)
	  SELECT 
		   CD_COUPON 
	  FROM TB_COUPON_MASTER WITH(NOLOCK)
	  WHERE
		   USABLE_YN='Y' 
		   AND ( MASTER_FROM_DATE <= GETDATE() AND  MASTER_TO_DATE >= GETDATE())
		   AND PRODUCT_APP_SCOPE_GBN = 'B'  --상품적용범위 A=특정상품, B=전체상품

  --SELECT * FROM @TB  
  SELECT @CNT = @@ROWCOUNT
  
  --[2] 임시테이블에 INSERT된 쿠폰코드에 해당되는 쿠폰상품을 하나씩 루프돌며  INSERT 
  WHILE (@I <= @CNT)
  BEGIN 
  
	  SELECT @CD_COUPON=CD_COUPON FROM @TB WHERE IDX=@I
	  
	  --해당상품이 있는지 중복검사
	  IF(NOT EXISTS(SELECT IDX FROM TB_COUPON_PRODUCT WITH(NOLOCK) WHERE CD_COUPON=@CD_COUPON AND P_CODE=@P_CODE))
	  BEGIN
		  INSERT INTO dbo.TB_COUPON_PRODUCT(CD_COUPON,P_CODE,USABLE_YN)
		  VALUES(@CD_COUPON ,@P_CODE ,'Y')
	  END 
	  
	  SET @I = @I+1
  END 
 
  
  SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_PRODUCT_CREATE_INS]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 쿠폰 적용대상 상품 - 적용 
 * Modified  :   2015.07.14
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_PRODUCT_DETAIL_SEL] 1
 create PROCEDURE  [dbo].[SP_ADMIN_COUPON_PRODUCT_CREATE_INS]

     @CD_COUPON varchar(6)
    ,@P_CODE VARCHAR(10) 
 AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

  SET NOCOUNT ON
 
  
  INSERT INTO dbo.TB_COUPON_PRODUCT(CD_COUPON,P_CODE,USABLE_YN)
  VALUES(@CD_COUPON,@P_CODE,'Y')
  
 
  
  SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_PRODUCT_CREATE_ALL_INS]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 쿠폰 적용대상 상품 - 전체상품대상 쿠폰 일괄 적용 
 * Modified  :   2015.08.04
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_PRODUCT_DETAIL_SEL] 1
 CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_PRODUCT_CREATE_ALL_INS]
     @CD_COUPON varchar(6)
 AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

  SET NOCOUNT ON 

  DECLARE @CNT INT ,@I INT 
  DECLARE @T_TMP_PRODUCT TABLE
  (
      SEQ INT NOT NULL IDENTITY(1,1)PRIMARY KEY
     ,P_CODE VARCHAR(10)     
  )

  SET @CNT = 0 
  SET @I = 0
  
  --[1] 테이블변수에 현재 모든 상품코드 넣기
  INSERT @T_TMP_PRODUCT(P_CODE)
		SELECT P_CODE FROM TB_PRODUCT_INFO WITH(NOLOCK) WHERE DISPLAY_YN = 'Y'
  
  SELECT @CNT =  @@ROWCOUNT 
  
  
  --[2]쿠폰-상품테이블에 루프돌며 INSERT 
  WHILE(@I < @CNT)
  BEGIN
	  INSERT dbo.TB_COUPON_PRODUCT(CD_COUPON,P_CODE,USABLE_YN)
	      SELECT @CD_COUPON, P_CODE , 'Y'  FROM @T_TMP_PRODUCT WHERE SEQ=@I  
	      
	  SET @I = @I + 1
  END 
 
  
  SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_DISPLAY_SAVE]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-29
-- Description:	전시관리.  추가
-- ussage: exec SP_ADMIN_DISPLAY_SAVE
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_DISPLAY_SAVE]
	@IDX INT = NULL,
	@KIND VARCHAR(3),
	@SUB_KIND VARCHAR(3) = NULL,
	@SEQ INT = NULL,
	@URL VARCHAR(300) = NULL,
	@IMG VARCHAR(100) = NULL,
	@P_CODE VARCHAR(10) = NULL,
	@TITLE1 VARCHAR(300) = NULL,
	@TITLE2 VARCHAR(300) = NULL,
	@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @P_NAME VARCHAR(100) = NULL;
	DECLARE @P_MAIN_IMG VARCHAR(100) = NULL;
	DECLARE @P_SUB_TITLE VARCHAR(200) = NULL;
	DECLARE @SELLING_PRICE INT = NULL;
	DECLARE @DISCOUNT_PRICE INT = NULL;
	


	
	
	IF @P_CODE IS NOT NULL		
	BEGIN			
		IF EXISTS(SELECT IDX FROM TB_PRODUCT_INFO WITH (NOLOCK) WHERE P_CODE=@P_CODE)
			BEGIN
				SELECT 
						@P_NAME = P_NAME
						,@P_MAIN_IMG = MAIN_IMG
						,@P_SUB_TITLE = P_SUB_TITLE 
						,@SELLING_PRICE = SELLING_PRICE 
						,@DISCOUNT_PRICE = DISCOUNT_PRICE 
					FROM TB_PRODUCT_INFO WITH (NOLOCK) 
				WHERE P_CODE=@P_CODE;
			END
		ELSE
			BEGIN			
				SET @RET_NUM = '1';
				SET @RET_MESSAGE = '일치하는 상품코드가 없습니다.';
				RETURN;
			END
	END


	
	IF @IDX IS NULL
		BEGIN
		/*
			IF NOT EXISTS( SELECT IDX FROM TB_DISPLAY WITH (NOLOCK) WHERE KIND=@KIND AND SUB_KIND=@SUB_KIND AND SEQ=@SEQ )
			BEGIN
			PRINT @KIND;
				IF @KIND <> '10' AND @KIND <> '40'
				BEGIN 
					SET @RET_NUM = '2';
					SET @RET_MESSAGE = '이미존재하고 있습니다.';
					RETURN;
				END
			END
			*/
			INSERT INTO	TB_DISPLAY (
				KIND,
				SUB_KIND,
				URL,
				IMG,
				P_CODE,
				TITLE1,
				TITLE2,
				SEQ,
				P_NAME,
				P_MAIN_IMG,
				P_SUB_TITLE,
				SELLING_PRICE , 
				DISCOUNT_PRICE
			)
			VALUES (
				@KIND,	
				@SUB_KIND,
				@URL,
				@IMG,
				@P_CODE,
				@TITLE1,
				@TITLE2,
				@SEQ,
				@P_NAME,
				@P_MAIN_IMG,
				@P_SUB_TITLE,
				@SELLING_PRICE,
				@DISCOUNT_PRICE  
			);
			
		END
	ELSE
		BEGIN
			UPDATE TB_DISPLAY 
				SET URL = @URL
				,IMG = @IMG
				,P_CODE = @P_CODE
				,TITLE1 = @TITLE1
				,TITLE2 = @TITLE2
				,SEQ = @SEQ
				,P_NAME = @P_NAME
				,P_MAIN_IMG = @P_MAIN_IMG
				,P_SUB_TITLE = @P_SUB_TITLE
				,SELLING_PRICE = @SELLING_PRICE 
				,DISCOUNT_PRICE = @DISCOUNT_PRICE
			WHERE IDX = @IDX;
		END
		
		
    SET NOCOUNT OFF;
			SET @RET_NUM = '0';
			SET @RET_MESSAGE = 'SUCCESS';
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_DISPLAY_REMOVE]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-29
-- Description:	전시관리. 웹 메인 배너 삭제
-- ussage: exec SP_ADMIN_DISPLAY_BANNER_REMOVE
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_DISPLAY_REMOVE]
	@IDX INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	IF @IDX IS NOT NULL
		BEGIN
			DELETE FROM TB_DISPLAY 
			WHERE IDX = @IDX;
		END
		
		
    SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_DISPLAY_IMAGE_REMOVE]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-30
-- Description:	전시물 이미지만 삭제
-- ussage: exec SP_ADMIN_DISPLAY_BANNER_REMOVE
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_DISPLAY_IMAGE_REMOVE]
	@IDX INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	IF @IDX IS NOT NULL
		BEGIN
			UPDATE TB_DISPLAY
				SET IMG=NULL
			WHERE IDX = @IDX;
		END
		
		
    SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_USABLE_CHANGE_UPT]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 쿠폰 - 발행된 쿠폰의 사용가능여부 변경   
 * Modified  :   2015.08.24
 * Modified  :       
 * Modified  :      
 ============================================================*/      
    
    
 --EXEC [SP_ADMIN_COUPON_MASTER_CNT] '',''    
create PROCEDURE  [dbo].[SP_ADMIN_COUPON_USABLE_CHANGE_UPT]    
	 @IDX_COUPONNUMBER INT  
	,@USABLE_TF VARCHAR(1) 
AS    
    
BEGIN    
--SET FMTONLY OFF --complex type 생성시 필요    
--IF 1=0 BEGIN    
--   SET FMTONLY OFF    
--END    
    
 SET NOCOUNT ON    
 --SET FMTONLY OFF    
  
 UPDATE TB_COUPON_ISSUED_DETAIL SET USABLE_TF = @USABLE_TF WHERE IDX_COUPON_NUMBER=@IDX_COUPONNUMBER
    

 SET NOCOUNT OFF    
     
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_PRODUCT_USABLE_CNT_SEL]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 쿠폰정책이 적용된 상품 리스트 NO-PAGING (admin)
 * Modified  :   2015.07.17
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_SEL] 1,10,'','',''
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_PRODUCT_USABLE_CNT_SEL]

	@CD_COUPON			VARCHAR(6)  -- 쿠폰 코드  
AS

BEGIN


	SET NOCOUNT ON
	
	SELECT COUNT(*) AS CNT 
	FROM TB_COUPON_PRODUCT WITH(NOLOCK)
	WHERE CD_COUPON=@CD_COUPON AND USABLE_YN='Y' 

	SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_PRODUCT_SEL]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 쿠폰정책이 적용된 상품 리스트 (admin)
 * Modified  :   2015.07.14
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_SEL] 1,10,'','',''
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_PRODUCT_SEL]
 @PAGE				INT			--현재 PAGE
,@PAGESIZE			INT			--페이지 사이즈
,@SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드
,@CD_COUPON			VARCHAR(6)  -- 쿠폰 코드  

AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

	SET NOCOUNT ON
	--SET FMTONLY OFF
	
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	
	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT A.IDX ';
	SET @V_SQL  =@V_SQL + ' FROM TB_COUPON_PRODUCT A WITH (NOLOCK) INNER JOIN TB_PRODUCT_INFO B '
	SET @V_SQL  =@V_SQL + ' ON A.P_CODE = B.P_CODE    '
	SET @V_SQL  =@V_SQL + ' WHERE B.DISPLAY_YN=''Y'' and A.CD_COUPON=''' + @CD_COUPON + ''' ' ;

	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
    BEGIN
		IF @SEARCH_KEY = 'P_NAME' --상품명
			SET @V_SQL = @V_SQL + ' AND (B.P_NAME LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
		IF @SEARCH_KEY = 'P_CODE' --상품코드
			SET @V_SQL = @V_SQL + ' AND (B.P_CODE LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
    END
	
	/**
	IF @SEARCH_DISPLAY_YN <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND DISPLAY_YN = '''+@SEARCH_DISPLAY_YN+''' '
		END 				
	**/
		
	SET @V_SQL  =@V_SQL + '	ORDER BY A.IDX DESC' ;
	
	EXEC(@V_SQL);
	--PRINT @V_SQL


	SET ROWCOUNT 0
	

	--쿠폰상품 리스트 조회
    SELECT A.[IDX]
      ,A.[CD_COUPON]
      ,A.[P_CODE]
      ,A.[USABLE_YN]
      ,A.[INS_DATE]
      ,B.P_NAME
      ,C.DEPTH1_NAME
      ,C.DEPTH2_NAME
      ,C.DEPTH3_NAME
      ,B.DISCOUNT_PRICE
      ,B.P_OUTLET_YN
      ,B.DISPLAY_YN
      

     FROM  [TB_COUPON_PRODUCT] A WITH (NOLOCK)
		  INNER JOIN #TEMPLIST T ON A.IDX = T.IDX_SEQ 
		  INNER JOIN TB_PRODUCT_INFO B WITH (NOLOCK) ON A.P_CODE = B.P_CODE
		  INNER JOIN TB_CATEGORY C  WITH (NOLOCK) ON B.P_CATE_CODE = C.CATE_CODE
	 WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	       AND
	       A.CD_COUPON = @CD_COUPON
	       AND 
	       B.DISPLAY_YN ='Y'
	 ORDER BY  C.CATE_CODE DESC,  T.SEQ 
	
	--DROP TABLE #TEMPLIST ;

	SET NOCOUNT OFF
	
END


-- SELECT * FROM TB_CATEGORY
-- SELECT * FROM TB_PRODUCT_INFO
-- DROP PROC [SP_ADMIN_COUPON_PRODUCT_SEL]
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_PRODUCT_FOR_CREATE_SEL]    Script Date: 09/11/2015 16:07:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 쿠폰정책 적용대상 상품 리스트 (admin)  
 * Modified  :   2015.07.14  / 7.24
 * Modified  :     
 * Modified  :    
 ============================================================*/    
  
  
 --EXEC [SP_ADMIN_COUPON_PRODUCT_FOR_CREATE_SEL] 1,100,'P_CODE','1111118','C00005'  
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_PRODUCT_FOR_CREATE_SEL]  
 @PAGE    INT   --현재 PAGE  
,@PAGESIZE   INT   --페이지 사이즈  
,@SEARCH_KEY  VARCHAR(100) ='' --검색 필드  
,@SEARCH_KEYWORD VARCHAR(100) ='' --검색 키워드  
,@CD_COUPON   VARCHAR(6)  -- 쿠폰 코드    
  
AS  
  
BEGIN  
--SET FMTONLY OFF --complex type 생성시 필요  
--IF 1=0 BEGIN  
--   SET FMTONLY OFF  
--END  
  
 SET NOCOUNT ON  
 --SET FMTONLY OFF  
   
   
 DECLARE @LISTCOUNT INT  
 DECLARE @V_SQL NVARCHAR(MAX);  
   
   
 -- 기존에 사용하는 #TEMPLIST 있으면 DROP  
 IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL  
 BEGIN  
   DROP TABLE #TEMPLIST ;  
   PRINT 'DROP...'   
 END   
   
 CREATE TABLE #TEMPLIST  (  
  SEQ   INT IDENTITY(1,1) PRIMARY KEY,  
  IDX_SEQ INT  
 )  
  
 SET @LISTCOUNT = @PAGE * @PAGESIZE  
 SET ROWCOUNT @LISTCOUNT  
  
 SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT A.IDX ';  
 SET @V_SQL  =@V_SQL + ' FROM TB_PRODUCT_INFO A WITH (NOLOCK) LEFT OUTER JOIN TB_COUPON_PRODUCT B '  
 SET @V_SQL  =@V_SQL + ' ON A.P_CODE = B.P_CODE  AND B.CD_COUPON = ''' + @CD_COUPON + ''' AND A.DISPLAY_YN=''Y'' '  
 SET @V_SQL  =@V_SQL + ' WHERE 1=1 ' ;  
  
 IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''  
    BEGIN  
  IF @SEARCH_KEY = 'P_NAME' --상품명  
   SET @V_SQL = @V_SQL + ' AND (A.P_NAME LIKE ''%' + @SEARCH_KEYWORD + '%'') '   
  IF @SEARCH_KEY = 'P_CODE' --상품코드  
   SET @V_SQL = @V_SQL + ' AND (A.P_CODE LIKE ''%' + @SEARCH_KEYWORD + '%'') '   
 END  
   
 /**  
 IF @SEARCH_DISPLAY_YN <> ''   
  BEGIN  
  SET @V_SQL = @V_SQL + ' AND DISPLAY_YN = '''+@SEARCH_DISPLAY_YN+''' '  
  END       
 **/  
    
 SET @V_SQL  =@V_SQL + ' ORDER BY A.IDX DESC' ;  
   
 EXEC(@V_SQL) 
--PRINT (@V_SQL)  
  
  
 SET ROWCOUNT 0  
   
  
 --쿠폰상품 리스트 조회  
    SELECT A.[IDX]  
      ,ISNULL(C.[CD_COUPON],'') AS CD_COUPON  
      ,A.[P_CODE]  
      ,A.[INS_DATE]  
      ,A.P_NAME  
      ,B.DEPTH1_NAME  
      ,B.DEPTH2_NAME  
      ,B.DEPTH3_NAME  
      ,A.DISCOUNT_PRICE  
      ,A.P_OUTLET_YN  
      ,A.DISPLAY_YN  
      ,C.USABLE_YN   
     FROM  [TB_PRODUCT_INFO] A WITH (NOLOCK)  
    INNER JOIN #TEMPLIST T ON A.IDX = T.IDX_SEQ   
    INNER JOIN TB_CATEGORY B  WITH (NOLOCK) ON A.P_CATE_CODE = B.CATE_CODE  
    LEFT OUTER JOIN TB_COUPON_PRODUCT C WITH (NOLOCK) ON A.P_CODE = C.P_CODE AND C.CD_COUPON = @CD_COUPON  
  WHERE T.SEQ > (@PAGE -1) * @PAGESIZE  
        AND  
        /**C.CD_COUPON = @CD_COUPON  
        AND**/  
        A.DISPLAY_YN = 'Y'  
  ORDER BY  B.CATE_CODE DESC,  T.SEQ   
   
 --DROP TABLE #TEMPLIST ;  
  
 SET NOCOUNT OFF  
   
END  
  
  
-- SELECT * FROM TB_CATEGORY  
-- SELECT * FROM TB_PRODUCT_INFO  
-- DROP PROC [SP_ADMIN_COUPON_PRODUCT_SEL]
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_PRODUCT_FOR_CREATE_DETAIL_SEL]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 쿠폰정책 적용대상 상품 상세-Complex Type생성용 (admin)
 * Modified  :   2015.07.14
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_SEL] 1,10,'','',''
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_PRODUCT_FOR_CREATE_DETAIL_SEL]

  @CD_COUPON			VARCHAR(6)  -- 쿠폰 코드  

AS

BEGIN

	

	--쿠폰상품 리스트 조회
    SELECT A.[IDX]
      ,ISNULL(C.[CD_COUPON],'') AS CD_COUPON
      ,A.[P_CODE]
      ,A.[INS_DATE]
      ,A.P_NAME
      ,B.DEPTH1_NAME
      ,B.DEPTH2_NAME
      ,B.DEPTH3_NAME
      ,A.DISCOUNT_PRICE
      ,A.P_OUTLET_YN
      ,A.DISPLAY_YN
      ,C.USABLE_YN 
     FROM  [TB_PRODUCT_INFO] A WITH (NOLOCK)
	   INNER JOIN TB_CATEGORY B  WITH (NOLOCK) ON A.P_CATE_CODE = B.CATE_CODE
	   LEFT OUTER JOIN TB_COUPON_PRODUCT C WITH (NOLOCK) ON A.P_CODE = C.P_CODE
	 WHERE 
	       C.CD_COUPON = @CD_COUPON
	       AND
	       A.DISPLAY_YN = 'Y'
	 ORDER BY  B.CATE_CODE DESC
	
	

	SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_MEMBER_GRADE_SEL]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 쿠폰별 - 발행대상 회원등급 리스트 (admin)
 * Modified  :   2015.07.17
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL] 1
create PROCEDURE  [dbo].[SP_ADMIN_COUPON_MEMBER_GRADE_SEL]
 @CD_COUPON VARCHAR(6)
AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

  SET NOCOUNT ON
  
  SELECT [IDX]
      ,[CD_COUPON]
      ,[M_GBN]
      ,[M_GRADE]
  FROM [dbo].[TB_COUPON_MEMBER_GRADE] WITH(NOLOCK)
  WHERE CD_COUPON = @CD_COUPON 
  
  SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_MEMBER_GRADE_DEL]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 쿠폰별 - 발행대상 회원등급 리스트 삭제
 * Modified  :   2015.08.10
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL] 1
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_MEMBER_GRADE_DEL]
 @CD_COUPON VARCHAR(6)
AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

  SET NOCOUNT ON
  
  DELETE [dbo].[TB_COUPON_MEMBER_GRADE] 
  WHERE CD_COUPON = @CD_COUPON 
  
  SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_MEM_GRADE_INS]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 쿠폰 적용대상 회원등급 INSERT
 * Modified  :   2015.08.04
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_PRODUCT_DETAIL_SEL] 1
 CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_MEM_GRADE_INS]

     @CD_COUPON varchar(6)
    ,@M_GBN VARCHAR(1) 
    ,@M_GRADE VARCHAR(1) 
 AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

  SET NOCOUNT ON
 
  
  INSERT INTO dbo.TB_COUPON_MEMBER_GRADE(CD_COUPON,M_GBN,M_GRADE)
  VALUES(@CD_COUPON,@M_GBN,@M_GRADE)
  
 
  
  SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_MASTER_UPD]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 쿠폰정책 UPDATE(admin)    
 * Modified  :   8/10 , 8/29 
 * Modified  :       
 * Modified  :      
 ============================================================*/      
    
    
 --EXEC [SP_ADMIN_PROMOTION_BY_PRODUCT_DETAIL_SEL] 1    
 CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_MASTER_UPD]    
       @CD_COUPON VARCHAR(6)  
      ,@COUPON_NAME varchar(50)  
      ,@COUPON_AD_MSG  varchar(100) = ''  
      ,@COUPON_USE_DESCRIPTION  varchar(120)  
      --,[COUPON_GBN] = <COUPON_GBN, varchar(1),>  
      --,[COUPON_GBN_M] = <COUPON_GBN_M, varchar(1),>  
      --,[RATE_OR_MONEY] = <RATE_OR_MONEY, varchar(1),>  
      --,[SERVICE_LIFE_GBN] = <SERVICE_LIFE_GBN, varchar(1),>  
      ,@FIXED_PERIOD_FROM  datetime  
      ,@FIXED_PERIOD_TO   datetime  
      ,@EXRIRED_DAY_FROM_ISSUE_DT int  
      --,[DOWNLOAD_DATE_FROM] = <DOWNLOAD_DATE_FROM, datetime,>  
      --,[DOWNLOAD_DATE_TO] = <DOWNLOAD_DATE_TO, datetime,>  
      --,[USABLE_DEVICE_GBN] = <USABLE_DEVICE_GBN, varchar(1),>  
      --,[PRODUCT_APP_SCOPE_GBN] = <PRODUCT_APP_SCOPE_GBN, varchar(1),>  
      --,[MEMBER_APP_SCOPE_GBN] = <MEMBER_APP_SCOPE_GBN, varchar(1),>  
      --,[ISSUE_METHOD_GBN] = <ISSUE_METHOD_GBN, varchar(1),>  
      --,[ISSUE_METHOD_WITH_AUTO] = <ISSUE_METHOD_WITH_AUTO, varchar(1),>  
      --,[COUPON_NUM_CHECK_TF] = <COUPON_NUM_CHECK_TF, varchar(1),>  
      ,@MASTER_FROM_DATE datetime  
      ,@MASTER_TO_DATE datetime  
      --,[COUPON_DISCOUNT_MONEY] = <COUPON_DISCOUNT_MONEY, int,>  
      --,[COUPON_DISCOUNT_RATE] = <COUPON_DISCOUNT_RATE, int,>  
      ,@USABLE_YN varchar(1)  
AS    
    
BEGIN    
--SET FMTONLY OFF --complex type 생성시 필요    
--IF 1=0 BEGIN    
--   SET FMTONLY OFF    
--END    
    
SET NOCOUNT ON    
     
    
     
UPDATE  [TB_COUPON_MASTER]  
   SET   
       [COUPON_NAME] = @COUPON_NAME  
      ,[COUPON_AD_MSG] = @COUPON_AD_MSG  
      ,[COUPON_USE_DESCRIPTION] = @COUPON_USE_DESCRIPTION  
      --,[COUPON_GBN] = <COUPON_GBN, varchar(1),>  
      --,[COUPON_GBN_M] = <COUPON_GBN_M, varchar(1),>  
      --,[RATE_OR_MONEY] = <RATE_OR_MONEY, varchar(1),>  
      --,[SERVICE_LIFE_GBN] = <SERVICE_LIFE_GBN, varchar(1),>  
      ,[FIXED_PERIOD_FROM] = @FIXED_PERIOD_FROM  
      ,[FIXED_PERIOD_TO] = @FIXED_PERIOD_TO  
      ,[EXRIRED_DAY_FROM_ISSUE_DT] = @EXRIRED_DAY_FROM_ISSUE_DT  
      --,[DOWNLOAD_DATE_FROM] = <DOWNLOAD_DATE_FROM, datetime,>  
      --,[DOWNLOAD_DATE_TO] = <DOWNLOAD_DATE_TO, datetime,>  
      --,[USABLE_DEVICE_GBN] = <USABLE_DEVICE_GBN, varchar(1),>  
      --,[PRODUCT_APP_SCOPE_GBN] = <PRODUCT_APP_SCOPE_GBN, varchar(1),>  
      --,[MEMBER_APP_SCOPE_GBN] = <MEMBER_APP_SCOPE_GBN, varchar(1),>  
      --,[ISSUE_METHOD_GBN] = <ISSUE_METHOD_GBN, varchar(1),>  
      --,[ISSUE_METHOD_WITH_AUTO] = <ISSUE_METHOD_WITH_AUTO, varchar(1),>  
      --,[COUPON_NUM_CHECK_TF] = <COUPON_NUM_CHECK_TF, varchar(1),>  
      ,[MASTER_FROM_DATE] = @MASTER_FROM_DATE  
      ,[MASTER_TO_DATE]   = @MASTER_TO_DATE  
      --,[COUPON_DISCOUNT_MONEY] = <COUPON_DISCOUNT_MONEY, int,>  
      --,[COUPON_DISCOUNT_RATE] = <COUPON_DISCOUNT_RATE, int,>  
      ,[USABLE_YN] = @USABLE_YN  
 WHERE   
     CD_COUPON = @CD_COUPON  
  
     
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_MASTER_SEL]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 쿠폰 마스터 정책  리스트 (admin)
 * Modified  :   2015.07.13
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_SEL] 1,10,'','',''
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_MASTER_SEL]
 @PAGE				INT			--현재 PAGE
,@PAGESIZE			INT			--페이지 사이즈
,@SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드

AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

	SET NOCOUNT ON
	--SET FMTONLY OFF
	
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	
	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX ';
	SET @V_SQL  =@V_SQL + ' FROM TB_COUPON_MASTER WITH (NOLOCK) '
	SET @V_SQL  =@V_SQL + '    WHERE 1=1 ';

	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
		BEGIN
		SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
		END
	
	/**
	IF @SEARCH_DISPLAY_YN <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND DISPLAY_YN = '''+@SEARCH_DISPLAY_YN+''' '
		END 				
	**/
		
	SET @V_SQL  =@V_SQL + '	ORDER BY IDX DESC' ;
	
	EXEC(@V_SQL);
	--PRINT @V_SQL


	SET ROWCOUNT 0
	

	--쿠폰마스터 리스트 조회
	  SELECT A.[IDX]
		  ,A.[CD_COUPON]
		  ,A.COUPON_NAME
		  ,A.COUPON_AD_MSG
		  ,A.COUPON_USE_DESCRIPTION
		  ,A.[COUPON_GBN]
		  ,A.[COUPON_GBN_M]
		  ,A.[RATE_OR_MONEY]
		  ,A.[SERVICE_LIFE_GBN]
		  ,A.[FIXED_PERIOD_FROM]
		  ,A.[FIXED_PERIOD_TO]
		  ,A.[EXRIRED_DAY_FROM_ISSUE_DT]
		  ,A.DOWNLOAD_DATE_FROM
		  ,A.FIXED_PERIOD_TO
		  ,A.[USABLE_DEVICE_GBN]
		  ,A.[PRODUCT_APP_SCOPE_GBN]
		  ,A.[MEMBER_APP_SCOPE_GBN]
		  ,A.[ISSUE_METHOD_GBN]
		  ,A.[ISSUE_METHOD_WITH_AUTO]
		  ,A.[COUPON_NUM_CHECK_TF]
		  ,A.[ISSUE_MAX_LIMIT]
		  ,A.[MASTER_FROM_DATE]
		  ,A.[MASTER_TO_DATE]
		  ,A.[USABLE_YN]
		  ,A.[INS_DATE]
		  ,A.COUPON_DISCOUNT_MONEY
          ,A.COUPON_DISCOUNT_RATE 
	  FROM  [dbo].[TB_COUPON_MASTER] A WITH (NOLOCK)
			INNER JOIN #TEMPLIST T ON A.IDX = T.IDX_SEQ 
	  WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	  ORDER BY T.SEQ
	
	--DROP TABLE #TEMPLIST ;

	SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_MASTER_INS]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 쿠폰정책 INSERT(admin)    
 * Modified  :   2015.07.13  , 8/4 , 8/29 
 * Modified  :       
 * Modified  :      
 ============================================================*/      
    
    
 --EXEC [SP_ADMIN_PROMOTION_BY_PRODUCT_DETAIL_SEL] 1    
 CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_MASTER_INS]    
    
           @COUPON_NAME varchar(50)    
           ,@COUPON_AD_MSG varchar(100)    
           ,@COUPON_USE_DESCRIPTION varchar(120)    
           ,@COUPON_GBN varchar(1)    
           ,@COUPON_GBN_M varchar(1)    
           ,@RATE_OR_MONEY varchar(1)    
           ,@SERVICE_LIFE_GBN varchar(1)    
           ,@FIXED_PERIOD_FROM datetime    
           ,@FIXED_PERIOD_TO datetime    
           ,@EXRIRED_DAY_FROM_ISSUE_DT int    
           ,@DOWNLOAD_DATE_FROM datetime    
           ,@DOWNLOAD_DATE_TO datetime    
           ,@USABLE_DEVICE_GBN varchar(1)    
           ,@PRODUCT_APP_SCOPE_GBN varchar(1)    
           ,@MEMBER_APP_SCOPE_GBN varchar(1)    
           ,@ISSUE_METHOD_GBN varchar(1)    
           ,@ISSUE_METHOD_WITH_AUTO varchar(1)    
           ,@COUPON_NUM_CHECK_TF varchar(1)    
           ,@ISSUE_MAX_LIMIT int    
           ,@MASTER_FROM_DATE datetime    
           ,@MASTER_TO_DATE datetime    
           ,@USABLE_YN varchar(1)    
           ,@COUPON_DISCOUNT_MONEY int    
           ,@COUPON_DISCOUNT_RATE  int    
           ,@CREATED_CD_COUPON VARCHAR(6) OUTPUT  
AS    
    
BEGIN    
--SET FMTONLY OFF --complex type 생성시 필요    
--IF 1=0 BEGIN    
--   SET FMTONLY OFF    
--END    
    
 SET NOCOUNT ON    
     
    
     
 DECLARE @LAST_CD_COUPON VARCHAR(6)    
 DECLARE @NEW_CD_COUPON VARCHAR(6)    
 DECLARE @NEW_CD_LEFT_NUMBER_PART INT     
 SET @LAST_CD_COUPON = '';    
     
     
 --가장 최근의 프로모션코드 가져오기     
 -- SELECT TOP 1 @LAST_CD_COUPON = ISNULL(CD_COUPON,'') FROM [TB_COUPON_MASTER] WITH(NOLOCK) ORDER BY IDX DESC    
   
 SELECT TOP 1 @LAST_CD_COUPON = ISNULL(CD_COUPON,'') FROM [TB_COUPON_MASTER_NUMBERING] WITH(NOLOCK)   
     
 --신규 프로모션 코드 만들기     
 IF @LAST_CD_COUPON = ''    
 BEGIN    
  SET @NEW_CD_COUPON = 'C00001'    
  INSERT INTO [TB_COUPON_MASTER_NUMBERING](CD_COUPON) VALUES('C00001')  
 END     
ELSE    
 BEGIN    
   IF LEN(@LAST_CD_COUPON) = 6     
   BEGIN    
  SET @NEW_CD_LEFT_NUMBER_PART = CAST(RIGHT(@LAST_CD_COUPON,5) AS INT)    
  SET @NEW_CD_LEFT_NUMBER_PART = @NEW_CD_LEFT_NUMBER_PART + 1    
  SET @NEW_CD_COUPON =  'C' +   RIGHT('00000' + CAST(@NEW_CD_LEFT_NUMBER_PART AS VARCHAR(5)),5)     
    
  UPDATE [TB_COUPON_MASTER_NUMBERING] SET CD_COUPON = @NEW_CD_COUPON , UPD_DATE = GETDATE()  
   END    
          
 END     
     
 /**    
 --카테고리이름 가져오기    
 SELECT @PMO_PRODUCT_CATEGORY_NAME = PMO_PRODUCT_CATEGORY_NAME FROM TB_PROMOTION_PRODUCT_CATEGORY WITH(NOLOCK)     
 WHERE PMO_PRODUCT_CATEGORY = @PMO_PRODUCT_CATEGORY     
**/    
    
 --INSERT    
INSERT INTO [AboutMe].[dbo].[TB_COUPON_MASTER]    
           ([CD_COUPON]    
           ,[COUPON_NAME]    
           ,[COUPON_AD_MSG]    
           ,[COUPON_USE_DESCRIPTION]    
           ,[COUPON_GBN]    
           ,[COUPON_GBN_M]    
           ,[RATE_OR_MONEY]    
           ,[SERVICE_LIFE_GBN]    
           ,[FIXED_PERIOD_FROM]    
           ,[FIXED_PERIOD_TO]    
           ,[EXRIRED_DAY_FROM_ISSUE_DT]    
           ,[DOWNLOAD_DATE_FROM]    
           ,[DOWNLOAD_DATE_TO]    
           ,[USABLE_DEVICE_GBN]    
           ,[PRODUCT_APP_SCOPE_GBN]    
           ,[MEMBER_APP_SCOPE_GBN]    
           ,[ISSUE_METHOD_GBN]    
           ,[ISSUE_METHOD_WITH_AUTO]    
           ,[COUPON_NUM_CHECK_TF]    
           ,[ISSUE_MAX_LIMIT]    
           ,[MASTER_FROM_DATE]    
           ,[MASTER_TO_DATE]    
           ,[USABLE_YN]    
           ,[INS_DATE]    
           ,COUPON_DISCOUNT_MONEY    
           ,COUPON_DISCOUNT_RATE     
           )    
     VALUES    
           (    
           @NEW_CD_COUPON    
           ,@COUPON_NAME     
           ,@COUPON_AD_MSG   
           ,@COUPON_USE_DESCRIPTION     
           ,@COUPON_GBN     
           ,@COUPON_GBN_M     
           ,@RATE_OR_MONEY     
           ,@SERVICE_LIFE_GBN     
           ,@FIXED_PERIOD_FROM     
           ,@FIXED_PERIOD_TO     
           ,@EXRIRED_DAY_FROM_ISSUE_DT     
           ,@DOWNLOAD_DATE_FROM     
           ,@DOWNLOAD_DATE_TO     
           ,@USABLE_DEVICE_GBN     
           ,@PRODUCT_APP_SCOPE_GBN     
           ,@MEMBER_APP_SCOPE_GBN     
           ,@ISSUE_METHOD_GBN     
           ,@ISSUE_METHOD_WITH_AUTO     
           ,@COUPON_NUM_CHECK_TF     
           ,@ISSUE_MAX_LIMIT     
           ,@MASTER_FROM_DATE    
           ,@MASTER_TO_DATE     
           ,@USABLE_YN     
              ,GETDATE()    
           ,@COUPON_DISCOUNT_MONEY    
           ,@COUPON_DISCOUNT_RATE     
            
           )    
             
  SELECT @CREATED_CD_COUPON = @NEW_CD_COUPON ;  
      
  SET NOCOUNT OFF    
     
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_MASTER_DETAIL_SEL]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 쿠폰 마스터정보 상세(admin)
 * Modified  :   2015.07.13
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL] 1
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_MASTER_DETAIL_SEL]
 @CD_COUPON VARCHAR(6)
AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

   SET NOCOUNT ON
   
  --쿠폰마스터  조회
	  SELECT A.[IDX]
		  ,A.[CD_COUPON]
		  ,A.COUPON_NAME
		  ,A.COUPON_AD_MSG
		  ,A.COUPON_USE_DESCRIPTION
		  ,A.[COUPON_GBN]
		   ,A.[COUPON_GBN_M]
		  ,A.[RATE_OR_MONEY]
		  ,A.[SERVICE_LIFE_GBN]
		  ,A.[FIXED_PERIOD_FROM]
		  ,A.[FIXED_PERIOD_TO]
		  ,A.[EXRIRED_DAY_FROM_ISSUE_DT]
		  ,A.DOWNLOAD_DATE_FROM
		  ,A.FIXED_PERIOD_TO
		  ,A.[USABLE_DEVICE_GBN]
		  ,A.[PRODUCT_APP_SCOPE_GBN]
		  ,A.[MEMBER_APP_SCOPE_GBN]
		  ,A.[ISSUE_METHOD_GBN]
		  ,A.[ISSUE_METHOD_WITH_AUTO]
		  ,A.[COUPON_NUM_CHECK_TF]
		  ,A.[ISSUE_MAX_LIMIT]
		  ,A.[MASTER_FROM_DATE]
		  ,A.[MASTER_TO_DATE]
		  ,A.[USABLE_YN]
		  ,A.[INS_DATE]
		  ,A.COUPON_DISCOUNT_MONEY
          ,A.COUPON_DISCOUNT_RATE 
	  FROM  [dbo].[TB_COUPON_MASTER] A WITH (NOLOCK)
		
      WHERE CD_COUPON =@CD_COUPON

  SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_ISSUED_LIST_SEL]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 쿠폰 발행된 쿠폰 리스트 (admin)  
 * Modified  :   2015.07.16  , 7/18
 * Modified  :     
 * Modified  :    
 ============================================================*/    
  
  
 --EXEC [SP_ADMIN_COUPON_ISSUED_LIST_SEL] 1,10,'','','C00001'  
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_ISSUED_LIST_SEL]  
 @PAGE    INT   --현재 PAGE  
,@PAGESIZE   INT   --페이지 사이즈  
,@SEARCH_KEY  VARCHAR(100) ='' --검색 필드  
,@SEARCH_KEYWORD VARCHAR(100) ='' --검색 키워드  
,@CD_COUPON  VARCHAR(6)  
AS  
  
BEGIN  
--SET FMTONLY OFF --complex type 생성시 필요  
--IF 1=0 BEGIN  
--   SET FMTONLY OFF  
--END  
  
 SET NOCOUNT ON  
 --SET FMTONLY OFF  
   
   
 DECLARE @LISTCOUNT INT  
 DECLARE @V_SQL NVARCHAR(MAX);  
   
   
 -- 기존에 사용하는 #TEMPLIST 있으면 DROP  
 IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL  
 BEGIN  
   DROP TABLE #TEMPLIST ;  
   PRINT 'DROP...'   
 END   
   
 CREATE TABLE #TEMPLIST  (  
  SEQ   INT IDENTITY(1,1) PRIMARY KEY,  
  IDX_SEQ INT  
 )  
  
 SET @LISTCOUNT = @PAGE * @PAGESIZE  
 SET ROWCOUNT @LISTCOUNT  
  
 SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX_COUPON_NUMBER ';  
 SET @V_SQL  =@V_SQL + ' FROM [TB_COUPON_ISSUED_DETAIL] WITH (NOLOCK) '  
 SET @V_SQL  =@V_SQL + '    WHERE 1=1 AND CD_COUPON=''' +@CD_COUPON+ '''';  
  
 IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''  
  BEGIN  
  SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '   
  END  
   
 /**  
 IF @SEARCH_DISPLAY_YN <> ''   
  BEGIN  
  SET @V_SQL = @V_SQL + ' AND DISPLAY_YN = '''+@SEARCH_DISPLAY_YN+''' '  
  END       
 **/  
    
 SET @V_SQL  =@V_SQL + ' ORDER BY IDX DESC' ;  
   
 EXEC(@V_SQL);  
 --PRINT @V_SQL  
  
  
 SET ROWCOUNT 0  
   
  
 --쿠폰발행 리스트 조회  
  SELECT  
    A.IDX   
      ,A.[IDX_COUPON_NUMBER]  
      ,A.[CD_COUPON]  
      ,A.[COUPON_VERIFI_NUMBER]  
      ,A.[COUPON_MONEY_DETAIL_NO]  
      ,A.[COUPON_MONEY]  
      ,A.[COUPON_DISCOUNT_RATE]  
      ,A.[CD_COUPON_KIND]  
      ,A.[USE_STATUS]  
      ,A.[USABLE_TF]  
      ,A.[M_ID]  
      ,A.[ISSUE_DATE]  
      ,A.[USABLE_DATE_FROM]  
      ,A.[USABLE_DATE_TO]  
      ,A.[ORDER_NO]  
      ,A.[ORDER_DETAIL_NO]  
      ,A.[ORDER_CANCEL_FL]  
      ,A.[RE_ISSUE_FL]  
      ,A.[RE_ISSUE_DATE]  
      ,A.[DOWNLOAD_DATE_FROM]  
      ,A.[DOWNLOAD_DATE_TO]  
      ,A.[ISSUED_GBN]  
      ,A.[ISSUED_MEMO]  
   
 FROM  [dbo].[TB_COUPON_ISSUED_DETAIL] A WITH (NOLOCK)  
   INNER JOIN #TEMPLIST T ON A.IDX_COUPON_NUMBER = T.IDX_SEQ   
   WHERE T.SEQ > (@PAGE -1) * @PAGESIZE  
   ORDER BY T.SEQ  
   
 --DROP TABLE #TEMPLIST ;  
  
 SET NOCOUNT OFF  
   
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_ISSUED_DETAIL_SEL]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 발행된 쿠폰정보 상세(admin)
 * Modified  :   2015.07.17
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL] 1
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_ISSUED_DETAIL_SEL]
 @IDX_COUPON_NUMBER INT --쿠폰번호
AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

   SET NOCOUNT ON
   
  --쿠폰마스터  조회
   SELECT [IDX]
      ,[IDX_COUPON_NUMBER]
      ,[CD_COUPON]
      ,[COUPON_VERIFI_NUMBER]
      ,[COUPON_MONEY_DETAIL_NO]
      ,[COUPON_MONEY]
      ,[COUPON_DISCOUNT_RATE]
      ,[CD_COUPON_KIND]
      ,[USE_STATUS]
      ,[USABLE_TF]
      ,[M_ID]
      ,[ISSUE_DATE]
      ,[USABLE_DATE_FROM]
      ,[USABLE_DATE_TO]
      ,[ORDER_NO]
      ,[ORDER_DETAIL_NO]
      ,[ORDER_CANCEL_FL]
      ,[RE_ISSUE_FL]
      ,[RE_ISSUE_DATE]
      ,[DOWNLOAD_DATE_FROM]
      ,[DOWNLOAD_DATE_TO]
      ,[ISSUED_GBN]
      ,[ISSUED_MEMO]
   FROM [dbo].[TB_COUPON_ISSUED_DETAIL] WITH (NOLOCK)	
   WHERE [IDX_COUPON_NUMBER] = @IDX_COUPON_NUMBER

  SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADM_ADMIN_DEPT_SEL]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_ADM_ADMIN_DEPT_SEL]
AS
SELECT DEPT_CODE, DEPT_NAME FROM ADMIN_MEMBER_DEPT (NOLOCK)
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ADMIN_LOGIN]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-06-24
-- Description:	관리자 로그인 : 암호 체크는 C#에서
-- ussage: exec SP_ADMIN_ADMIN_LOGIN 'id'
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_ADMIN_LOGIN]
 @ADM_ID	varchar(13)	='' 

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------
	SET ROWCOUNT 0 ;
	
	SELECT [ADM_ID]
      ,[ADM_NAME]
	  ,[ADM_PWD]
      ,[ADM_GRADE]
      ,[ADM_EMAIL]
      ,[ADM_PHONE]
      ,[ADM_INS_DATE]
      ,[ADM_USE_YN]
	from TB_ADMIN_MEMBER with (nolock)
	where ([ADM_ID] =@ADM_ID ) AND ([ADM_USE_YN]='Y'); -- 암호 체크는 C#에서

		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADM_ADMIN_MEMBER_SEL]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-05-12
-- Description:	BBS_LIST
-- ussage: exec SP_BBS_LIST 'SUBJECT','01','GBN','DESC',1,10
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADM_ADMIN_MEMBER_SEL]
 @SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@SORT_COL	varchar(50)	='IDX' 
,@SORT_DIR	varchar(4)	='DESC' 

,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

	 
	set @v_SQL_WHERE = ' (1=1) '

	IF @SEARCH_COL <>'' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '

	set @v_SQL_ORDERBY = ' ' + @SORT_COL  + ' ' + @SORT_DIR 
 
	 
	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	set @v_SQL  ='insert into #TEMPLIST (IDX_TMP) '
	set @v_SQL  =@v_SQL + ' SELECT  IDX ';
	set @v_SQL  =@v_SQL + ' FROM ADMIN_MEMBER WITH (NOLOCK) ';
	set @v_SQL  =@v_SQL + ' WHERE ' +  @v_SQL_WHERE ;
	set @v_SQL  =@v_SQL + '	ORDER BY ' + @v_SQL_ORDERBY ;
	exec(@v_SQL);


	SET ROWCOUNT 0 ;

	



	SELECT [IDX]
      ,[ADM_ID]
      ,[ADM_PASS]
      ,[ADM_NAME]
      ,[ADM_DEPT]
      ,[PHONE]
      ,[MOBILE]
      ,[EMAIL]
      ,[ADM_ROLE_GRADE]
      ,[MEMO]
      ,[ADM_PHOTO]
      ,isnull([POINT],0) as POINT
      ,[INS_DATE]
	from ADMIN_MEMBER a with (nolock)
		inner join #TEMPLIST t on a.IDX = t.IDX_TMP
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADM_ADMIN_MEMBER_INS]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_ADM_ADMIN_MEMBER_INS]
 @ADM_ID VARCHAR(20)
,@ADM_PASS VARCHAR(20)
,@ADM_NAME VARCHAR(50)
,@ADM_PHOTO VARCHAR(128)
,@ADM_DEPT VARCHAR(50)
,@POINT INT
,@NEW_IDX INT OUTPUT
AS

SET NOCOUNT ON ;

INSERT INTO ADMIN_MEMBER(ADM_ID,ADM_PASS,ADM_NAME,ADM_PHOTO,ADM_DEPT,POINT)
VALUES(@ADM_ID,@ADM_PASS,@ADM_NAME,@ADM_PHOTO,@ADM_DEPT,@POINT);


SELECT @NEW_IDX = SCOPE_IDENTITY() ;
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_ISSUE_WITH_NO_NUMCHECK_MANUAL_SINGLE_INS]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================        
 * Author  : 송선우 (swsong2@cstone.co.kr)        
 * Company  : 코너스톤 인터랙티브        
 * Description : 쿠폰발행 - 지불쿠폰 OR 배송쿠폰/인증번호 필요없는 쿠폰/수동발행/개별발행 INSERT(admin)      
 * Modified  :   8/04  
 * Modified  :         
 * Modified  :        
 ============================================================*/        
      
      
 --EXEC [SP_ADMIN_PROMOTION_BY_PRODUCT_DETAIL_SEL] 1      
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_ISSUE_WITH_NO_NUMCHECK_MANUAL_SINGLE_INS]      
      
    @CD_COUPON varchar(6)      
   --,@COUPON_GBN varchar(1) -- M= 지불쿠폰, S=배송쿠폰
   ,@COUPON_MONEY int --  쿠폰가
   ,@COUPON_DISCOUNT_RATE_V int  -- 쿠폰 할인율
   ,@M_ID VARCHAR(13)
   ,@ADMIN_ID VARCHAR(13)
   ,@ISSUED_MEMO VARCHAR(50)      
   ,@EXCUTE_RESULT INT OUTPUT       
AS      
      
BEGIN      
--SET FMTONLY OFF --complex type 생성시 필요      
--IF 1=0 BEGIN      
--   SET FMTONLY OFF      
--END      
      
 SET NOCOUNT ON      
       
 SET @EXCUTE_RESULT = 0      
       

       
 DECLARE      
   @COUPON_GBN VARCHAR(1)      
  ,@COUPON_GBN_M VARCHAR(1)      
  ,@RATE_OR_MONEY VARCHAR(1)      
  ,@COUPON_DISCOUNT_MONEY INT      
  ,@COUPON_DISCOUNT_RATE  TINYINT      
  ,@COUPON_NUM_CHECK_TF VARCHAR(1)      
  ,@SERVICE_LIFE_GBN  VARCHAR(1)      
  ,@USABLE_DEVICE_GBN VARCHAR(1)      
  ,@FIXED_PERIOD_FROM DATETIME      
  ,@FIXED_PERIOD_TO DATETIME      
  ,@EXRIRED_DAY_FROM_ISSUE_DT INT      
  ,@MASTER_FROM_DATE DATETIME      
  ,@MASTER_TO_DATE DATETIME      
  ,@DOWNLOAD_DATE_FROM DATETIME      
  ,@DOWNLOAD_DATE_TO DATETIME    
  
 
 --개별발행시에는 입력된 가격,할인율로 발행
 SET @COUPON_DISCOUNT_MONEY = @COUPON_MONEY    
 SET @COUPON_DISCOUNT_RATE = @COUPON_DISCOUNT_RATE_V
 
 SELECT       
   @COUPON_GBN=COUPON_GBN      
  ,@COUPON_GBN_M=COUPON_GBN_M      
  ,@RATE_OR_MONEY=RATE_OR_MONEY      
  --,@COUPON_DISCOUNT_MONEY=COUPON_DISCOUNT_MONEY      
  --,@COUPON_DISCOUNT_RATE=COUPON_DISCOUNT_RATE    
   
  ,@COUPON_NUM_CHECK_TF=COUPON_NUM_CHECK_TF      
  ,@SERVICE_LIFE_GBN=SERVICE_LIFE_GBN      
  ,@USABLE_DEVICE_GBN=USABLE_DEVICE_GBN      
  ,@FIXED_PERIOD_FROM=FIXED_PERIOD_FROM      
  ,@FIXED_PERIOD_TO=FIXED_PERIOD_TO      
  ,@EXRIRED_DAY_FROM_ISSUE_DT=EXRIRED_DAY_FROM_ISSUE_DT      
  ,@MASTER_FROM_DATE=MASTER_FROM_DATE      
  ,@MASTER_TO_DATE=MASTER_TO_DATE      
  ,@DOWNLOAD_DATE_FROM =DOWNLOAD_DATE_FROM      
  ,@DOWNLOAD_DATE_TO =DOWNLOAD_DATE_TO      
 FROM TB_COUPON_MASTER  WHERE CD_COUPON = @CD_COUPON       
       
       
       
     
       
  DECLARE @I INT      
  DECLARE @M_GBN VARCHAR(1) , @M_GRADE VARCHAR(1)       
  DECLARE @USABLE_DATE_FROM DATETIME , @USABLE_DATE_TO DATETIME --쿠폰사용가능기간      
  --DECLARE @SERVICE_LIFE_GBN VARCHAR(1)      
  DECLARE @ISSUED_DATE DATETIME      
        
  SELECT  @ISSUED_DATE = GETDATE()-- 쿠폰발행일자       
        
  IF @SERVICE_LIFE_GBN ='A'  --사용기간 기준이 고정기간 기준이면      
  BEGIN          
     SET @USABLE_DATE_FROM = @FIXED_PERIOD_FROM      
     SET @USABLE_DATE_TO =   @FIXED_PERIOD_TO      
  END      
        
  IF @SERVICE_LIFE_GBN ='B'  --사용기간 기준이 발행일 기준이면      
  BEGIN      
     SET @USABLE_DATE_FROM = @ISSUED_DATE      
     SET @USABLE_DATE_TO = DATEADD(DAY,@EXRIRED_DAY_FROM_ISSUE_DT,@ISSUED_DATE)      
  END       
        
  --DOWNLOAD일자를 정의하지 않았으면 사용가능 일자로 대체      
  IF @DOWNLOAD_DATE_FROM IS NULL      
  BEGIN      
   SET @DOWNLOAD_DATE_FROM = @USABLE_DATE_FROM      
   SET @DOWNLOAD_DATE_TO = @USABLE_DATE_TO      
  END       
        
  --[ 발행시작 ]-------------------------------------------      
        
  SET @I = 1      
       
  IF @COUPON_GBN = 'M' OR @COUPON_GBN ='S' --지불용 쿠폰 혹은 배송쿠폰 이면      
  BEGIN      
   
          
    INSERT [TB_COUPON_ISSUED_DETAIL]      
    (      
            
       [CD_COUPON]      
       ,[COUPON_VERIFI_NUMBER]      
       ,[COUPON_MONEY]      
       ,[COUPON_DISCOUNT_RATE]      
       --,[CD_COUPON_KIND]      
       ,[USE_STATUS]      
       ,[USABLE_TF]      
       ,[M_ID]      
       ,[ISSUE_DATE]      
       ,[USABLE_DATE_FROM]      
       ,[USABLE_DATE_TO]      
       ,[ORDER_NO]      
       ,[ORDER_DETAIL_NO]      
       ,[ORDER_CANCEL_FL]      
       ,[RE_ISSUE_FL]      
       ,[RE_ISSUE_DATE]      
       ,[DOWNLOAD_DATE_FROM]      
       ,[DOWNLOAD_DATE_TO]      
       ,[ISSUED_GBN]      
       ,[ISSUED_MEMO]      
       ,[ADMIN_ID]      
      )      
      SELECT       
               
          @CD_COUPON      
          ,NULL      
          ,ISNULL(@COUPON_DISCOUNT_MONEY,0)      
          ,ISNULL(@COUPON_DISCOUNT_RATE,0)       
          ,'1' --USE_STATUS(발행단계)      
          ,'Y' --USABLE_TF      
          ,M_ID      
          ,@ISSUED_DATE --ISSUE_DATE 발행일자      
          ,@USABLE_DATE_FROM      
          ,@USABLE_DATE_TO      
          ,NULL --ORDER_NO      
          ,NULL --ORDER_DETAIL_NO      
          ,NULL --ORDER_CANCEL_FL      
          ,NULL --RE_ISSUE_FL      
          ,NULL --RE_ISSUE_DATE      
          ,@DOWNLOAD_DATE_FROM       
          ,@DOWNLOAD_DATE_TO      
          ,'B' -- ISSUED_GBN (A=일괄발행, B=개별발행)      
          ,@ISSUED_MEMO --ISSUED_MEMO (개별발행시 메모)      
          ,@ADMIN_ID      
    FROM TB_MEMBER WITH(NOLOCK)       
    WHERE M_IS_RETIRE ='N' 
          AND 
          M_ID = @M_ID     

              
         
   SET @I = @I + 1      
         
   SELECT @EXCUTE_RESULT = @@ERROR      
   
  END       
     
 -- TB_COUPON_MASTER      
 -- TB_COUPON_MEMBER_GRADE      
 -- TB_MEMBER      
      
       
 SET NOCOUNT OFF      
       
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_ISSUE_WITH_NO_NUMCHECK_MANUAL_ENTIRE_INS]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================          
 * Author  : 송선우 (swsong2@cstone.co.kr)          
 * Company  : 코너스톤 인터랙티브          
 * Description : 쿠폰발행 - 지불쿠폰 OR 배송쿠폰/인증번호 필요없는 쿠폰/수동발행/일괄발행 INSERT(admin)        
 * Modified  :   2015.07.13 , 7/20   ,8/3 , 8/5    
 * Modified  :           
 * Modified  :          
 ============================================================*/          
        
        
 --EXEC [SP_ADMIN_PROMOTION_BY_PRODUCT_DETAIL_SEL] 1        
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_ISSUE_WITH_NO_NUMCHECK_MANUAL_ENTIRE_INS]        
        
   @CD_COUPON varchar(6)        
   ,@ADMIN_ID VARCHAR(13)        
   ,@EXCUTE_RESULT INT OUTPUT         
AS        
        
BEGIN        
--SET FMTONLY OFF --complex type 생성시 필요        
--IF 1=0 BEGIN        
--   SET FMTONLY OFF        
--END        
        
 SET NOCOUNT ON        
         
 SET @EXCUTE_RESULT = 0        
         
 DECLARE @M_GRADE_CNT TINYINT        
 SET @M_GRADE_CNT = 0        
         
 DECLARE @V_TB_COUPON_MEMBER_GRADE TABLE         
     (         
         IDX INT NOT NULL IDENTITY(1,1)         
       , M_GBN VARCHAR(1)        
       , M_GRADE VARCHAR(1)         
      )        
         
 --[1] 쿠폰 발행대상 회원등급 가져오기         
 INSERT @V_TB_COUPON_MEMBER_GRADE(M_GBN,M_GRADE)        
    SELECT M_GBN,M_GRADE FROM TB_COUPON_MEMBER_GRADE WHERE CD_COUPON=@CD_COUPON        
        
 SELECT @M_GRADE_CNT = @@ROWCOUNT        
         
         
 DECLARE        
   @COUPON_GBN VARCHAR(1)        
  ,@COUPON_GBN_M VARCHAR(1)        
  ,@RATE_OR_MONEY VARCHAR(1)        
  ,@COUPON_DISCOUNT_MONEY INT        
  ,@COUPON_DISCOUNT_RATE  TINYINT        
  ,@COUPON_NUM_CHECK_TF VARCHAR(1)        
  ,@SERVICE_LIFE_GBN  VARCHAR(1)        
  ,@USABLE_DEVICE_GBN VARCHAR(1)        
  ,@FIXED_PERIOD_FROM DATETIME        
  ,@FIXED_PERIOD_TO DATETIME        
  ,@EXRIRED_DAY_FROM_ISSUE_DT INT        
  ,@MASTER_FROM_DATE DATETIME        
  ,@MASTER_TO_DATE DATETIME        
  ,@DOWNLOAD_DATE_FROM DATETIME        
  ,@DOWNLOAD_DATE_TO DATETIME         
 SELECT         
   @COUPON_GBN=COUPON_GBN        
  ,@COUPON_GBN_M=COUPON_GBN_M        
  ,@RATE_OR_MONEY=RATE_OR_MONEY        
  ,@COUPON_DISCOUNT_MONEY=COUPON_DISCOUNT_MONEY        
  ,@COUPON_DISCOUNT_RATE=COUPON_DISCOUNT_RATE        
  ,@COUPON_NUM_CHECK_TF=COUPON_NUM_CHECK_TF        
  ,@SERVICE_LIFE_GBN=SERVICE_LIFE_GBN        
  ,@USABLE_DEVICE_GBN=USABLE_DEVICE_GBN        
  ,@FIXED_PERIOD_FROM=FIXED_PERIOD_FROM        
  ,@FIXED_PERIOD_TO=FIXED_PERIOD_TO        
  ,@EXRIRED_DAY_FROM_ISSUE_DT=EXRIRED_DAY_FROM_ISSUE_DT        
  ,@MASTER_FROM_DATE=MASTER_FROM_DATE        
  ,@MASTER_TO_DATE=MASTER_TO_DATE        
  ,@DOWNLOAD_DATE_FROM =DOWNLOAD_DATE_FROM        
  ,@DOWNLOAD_DATE_TO =DOWNLOAD_DATE_TO        
 FROM TB_COUPON_MASTER  WHERE CD_COUPON = @CD_COUPON         
         
         
         
 IF @M_GRADE_CNT <= 0         
 BEGIN        
  SET @EXCUTE_RESULT = -1 -- 발행대상 회원등급이 없음        
 END        
 ELSE        
 BEGIN        
         
  DECLARE @I INT        
  DECLARE @M_GBN VARCHAR(1) , @M_GRADE VARCHAR(1)         
  DECLARE @USABLE_DATE_FROM DATETIME , @USABLE_DATE_TO DATETIME --쿠폰사용가능기간        
  --DECLARE @SERVICE_LIFE_GBN VARCHAR(1)        
  DECLARE @ISSUED_DATE DATETIME        
          
  SELECT  @ISSUED_DATE = GETDATE()-- 쿠폰발행일자         
          
  IF @SERVICE_LIFE_GBN ='A'  --사용기간 기준이 고정기간 기준이면        
  BEGIN            
     SET @USABLE_DATE_FROM = @FIXED_PERIOD_FROM        
     SET @USABLE_DATE_TO =   @FIXED_PERIOD_TO        
  END        
          
  IF @SERVICE_LIFE_GBN ='B'  --사용기간 기준이 발행일 기준이면        
  BEGIN        
     SET @USABLE_DATE_FROM = @ISSUED_DATE        
     SET @USABLE_DATE_TO = DATEADD(DAY,@EXRIRED_DAY_FROM_ISSUE_DT,@ISSUED_DATE)        
  END         
          
  --DOWNLOAD일자를 정의하지 않았으면 사용가능 일자로 대체        
  IF @DOWNLOAD_DATE_FROM IS NULL        
  BEGIN        
   SET @DOWNLOAD_DATE_FROM = @USABLE_DATE_FROM        
   SET @DOWNLOAD_DATE_TO = @USABLE_DATE_TO        
  END         
          
  --[ 발행시작 ]-------------------------------------------        
          
  SET @I = 1        
         
  IF @COUPON_GBN = 'M' OR @COUPON_GBN ='S' --지불용 쿠폰 혹은 배송이면        
  BEGIN        
   WHILE(@I <= @M_GRADE_CNT) --==============================================================[WHILE]        
   BEGIN        
            
    SELECT @M_GBN =M_GBN  , @M_GRADE = M_GRADE FROM @V_TB_COUPON_MEMBER_GRADE WHERE IDX=@I        
            
    INSERT [TB_COUPON_ISSUED_DETAIL]        
    (        
              
       [CD_COUPON]        
       ,[COUPON_VERIFI_NUMBER]        
       ,[COUPON_MONEY]        
       ,[COUPON_DISCOUNT_RATE]        
       --,[CD_COUPON_KIND]        
       ,[USE_STATUS]        
       ,[USABLE_TF]        
       ,[M_ID]        
       ,[ISSUE_DATE]        
       ,[USABLE_DATE_FROM]        
       ,[USABLE_DATE_TO]        
       ,[ORDER_NO]        
       ,[ORDER_DETAIL_NO]        
       ,[ORDER_CANCEL_FL]        
       ,[RE_ISSUE_FL]        
       ,[RE_ISSUE_DATE]        
       ,[DOWNLOAD_DATE_FROM]        
       ,[DOWNLOAD_DATE_TO]        
       ,[ISSUED_GBN]        
       ,[ISSUED_MEMO]        
       ,[ADMIN_ID]        
      )        
      SELECT         
                 
          @CD_COUPON        
          ,NULL        
          ,ISNULL(@COUPON_DISCOUNT_MONEY,0)        
          ,ISNULL(@COUPON_DISCOUNT_RATE,0)         
          ,'1' --USE_STATUS(발행단계)        
          ,'Y' --USABLE_TF        
          ,M_ID        
          ,@ISSUED_DATE --ISSUE_DATE 발행일자        
          ,@USABLE_DATE_FROM        
          ,@USABLE_DATE_TO        
          ,NULL --ORDER_NO        
          ,NULL --ORDER_DETAIL_NO        
          ,NULL --ORDER_CANCEL_FL        
          ,NULL --RE_ISSUE_FL        
          ,NULL --RE_ISSUE_DATE        
          ,@DOWNLOAD_DATE_FROM         
          ,@DOWNLOAD_DATE_TO        
          ,'A' -- ISSUED_GBN (A=일괄발행, B=개별발행)        
          ,NULL --ISSUED_MEMO (개별발행시 메모)        
          ,@ADMIN_ID        
    FROM TB_MEMBER WITH(NOLOCK)         
    WHERE M_IS_RETIRE ='N' AND (M_GBN=@M_GBN AND M_GRADE=@M_GRADE)        
          AND         
          M_ID NOT IN  -- == 일괄발행시에는 사용가능여부와 관계없이 기 발행된 쿠폰사용자는 제외         
                   (         
                           
        SELECT M_ID         
        FROM TB_COUPON_ISSUED_DETAIL WITH(NOLOCK)        
        WHERE         
            CD_COUPON=@CD_COUPON          
               
        )        
            
                
           
   SET @I = @I + 1        
           
   SELECT @EXCUTE_RESULT = @@ERROR        
           
   END --===========================================================================================[WHILE]        
  
   UPDATE TB_COUPON_MASTER SET ISSUE_YN = 'Y' WHERE CD_COUPON =@CD_COUPON -- 한번이라도 발행한적이 있으면 ISSUE_YN을 Y로 
    
  END         
 END         
 -- TB_COUPON_MASTER        
 -- TB_COUPON_MEMBER_GRADE        
 -- TB_MEMBER        
        
         
 SET NOCOUNT OFF        
         
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_COUPON_COMMON_CNT]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : -- 엔티티프레임웍 COUNT용 Complex Type 생성을 위한 것
 * Modified  :   2015.07.13
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL] 1
CREATE PROCEDURE  [dbo].[SP_ADMIN_COUPON_COMMON_CNT]

AS
 
SET NOCOUNT ON


SELECT ISNULL(COUNT(*),0) As CNT FROM TB_PROMOTION_BY_TOTAL WHERE 1=0
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_CATEGORY_VIEW]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 카테고리 보기 (admin)
 * Modified  :   2015.06.10
 ============================================================*/  
  
CREATE PROCEDURE [dbo].[SP_ADMIN_CATEGORY_VIEW]
@IDX	INT   --카테고리키
AS

 SET NOCOUNT ON
 
	--카테고리 VIEW
	SELECT IDX
	, CATE_GBN
	, CATE_CODE
	, RE_SORT
	, DEPTH1_CODE
	, DEPTH1_NAME
	, DEPTH2_CODE
	, DEPTH2_NAME
	, DEPTH_FLAG
	, DISPLAY_YN
	FROM TB_CATEGORY
	WHERE IDX = @IDX
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_CATEGORY_TWO_UPD]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 카테고리 2DEPTH 수정 (admin)
 * Modified  :   2015.06.10
 * Modified  :   2015.06.30
 * Modified  :   2015.08.19
 ============================================================*/  
  --EXEC SP_ADMIN_CATEGORY_ONE_INSERT '반지', 'IMG.JPG'
CREATE PROCEDURE [dbo].[SP_ADMIN_CATEGORY_TWO_UPD]
@IDX					INT					--고유키
,@DEPTH2_NAME			VARCHAR(50)		=''			--1DEPTH 코드네임
,@DISPLAY_YN			VARCHAR(1)		=''			--전시구분 Y/N
,@RE_SORT				INT					--정렬순서
,@INTRESULT				INT OUTPUT				--결과값
AS

 SET NOCOUNT ON
 
 
	 --2DEPTH 카테고리 관리 UPDATE
	UPDATE TB_CATEGORY
	SET  DEPTH2_NAME			= @DEPTH2_NAME
		,RE_SORT			= @RE_SORT
		,DISPLAY_YN			= @DISPLAY_YN		
	WHERE IDX				= @IDX
	 		
	SET @INTRESULT = @@ERROR
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_CATEGORY_TWO_SEL]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 2depth 카테고리 리스트 (admin)
 * Modified  :   2015.06.10
 * Modified  :   2015.06.15
 ============================================================*/  
  
CREATE PROCEDURE [dbo].[SP_ADMIN_CATEGORY_TWO_SEL]
@CATE_GBN			VARCHAR(15) =''			--카테고리 구분값 PRODUCT/COLLECTION/LINE
,@DEPTH1_CODE			CHAR(3) =''			--1DEPTH 카테고리 코드값 EX>101,102,103
AS

	SET NOCOUNT ON
	
	SELECT IDX
		,CATE_GBN
		,CATE_CODE
		,RE_SORT
		,DEPTH1_CODE
		,DEPTH1_NAME
		,DEPTH2_CODE
		,DEPTH2_NAME
		,DEPTH3_CODE
		,DEPTH3_NAME
		,DEPTH_FLAG
		,DISPLAY_YN
		,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
	FROM TB_CATEGORY WITH (NOLOCK) 
	WHERE CATE_GBN = @CATE_GBN --PRODUCT/COLLECTION/LINE
			AND DEPTH1_CODE = @DEPTH1_CODE --1DEPTH CODE
			AND DEPTH_FLAG = '2'  --2DEPTH
			--AND DISPLAY_YN = 'Y'
	ORDER BY RE_SORT DESC

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_CATEGORY_TWO_INS]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 카테고리 2DEPTH 등록 (admin)
 * Modified  :   2015.06.10
 * Modified  :   2015.06.30
 * Modified  :   2015.08.19
 ============================================================*/  
  
  --EXEC SP_ADMIN_CATEGORY_TWO_INSERT 'PRODUCT','104','고급시계','아이폰3'
CREATE PROCEDURE [dbo].[SP_ADMIN_CATEGORY_TWO_INS]
@CATE_GBN				VARCHAR(15)		=''			--PRODUCT/COLLECTION/LINE
,@DEPTH1_CODE			VARCHAR(3)		=''			--1DEPTH 코드
,@DEPTH2_NAME			VARCHAR(50)		=''			--2DEPTH 이름
,@INTRESULT				INT OUTPUT					--결과값
AS

 SET NOCOUNT ON
 
	--2DEPTH 값이 없을때 기본코드값 세팅
	DECLARE @DEFAULT_CATE_CODE CHAR(9)
	IF @CATE_GBN = 'PRODUCT_TYPE'
	BEGIN
		SET @DEFAULT_CATE_CODE = @DEPTH1_CODE +'101100'
	END
	IF @CATE_GBN = 'SKIN_TYPE'
	BEGIN
		SET @DEFAULT_CATE_CODE = @DEPTH1_CODE +'201100'
	END
	IF @CATE_GBN = 'LINE_TYPE'
	BEGIN
		SET @DEFAULT_CATE_CODE = @DEPTH1_CODE +'301100'
	END
	
	
	
	DECLARE @RE_SORT INT 
	SET @RE_SORT = 0
	
	--정렬 최대값 가져오기
	SELECT @RE_SORT = ISNULL(MAX(RE_SORT)+1,1) 
	FROM TB_CATEGORY 
	WHERE DEPTH_FLAG = '2' 
			AND CATE_GBN = @CATE_GBN 
			AND DEPTH1_CODE = @DEPTH1_CODE
	
	
	
	--2DEPTH 담을 코드값 세팅
	DECLARE @CATE_CODE CHAR(9)
	SET @CATE_CODE = ''
	
	--카테고리 코드값 생성하기
	SELECT @CATE_CODE = ISNULL(MAX(CATE_CODE)+1000,@DEFAULT_CATE_CODE) 
	FROM TB_CATEGORY 
	WHERE DEPTH_FLAG = '2' 
			AND CATE_GBN = @CATE_GBN 
			AND DEPTH1_CODE = @DEPTH1_CODE


	
	--1DEPTH_CODE, 1DEPTH_NAME
	DECLARE @DEPTH1_NAME VARCHAR(50)
	SET @DEPTH1_NAME = ''
	
	SELECT @DEPTH1_NAME = DEPTH1_NAME
	FROM TB_CATEGORY 
	WHERE DEPTH_FLAG = '1' 
			AND DEPTH1_CODE = @DEPTH1_CODE
	
	
	
	--카테고리 코드값 INSERT
	INSERT INTO TB_CATEGORY
	 (	CATE_GBN
		,CATE_CODE
		,RE_SORT
		,DEPTH1_CODE
		,DEPTH1_NAME
		,DEPTH2_CODE
		,DEPTH2_NAME
		,DEPTH_FLAG
		,DISPLAY_YN
	  ) 
	 values (
		@CATE_GBN
		,@CATE_CODE
		,@RE_SORT
		,@DEPTH1_CODE
		,@DEPTH1_NAME
		,SUBSTRING(@CATE_CODE,4,3)
		,@DEPTH2_NAME
		,'2'
		,'N'
	  )
	   		
	 	SET @INTRESULT = @@ERROR
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_CATEGORY_THREE_UPD]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 카테고리 3DEPTH 수정 (admin)
 * Modified  :   2015.06.30
 * Modified  :   2015.08.19
 ============================================================*/  
  --EXEC SP_ADMIN_CATEGORY_ONE_INSERT '반지', 'IMG.JPG'
CREATE PROCEDURE [dbo].[SP_ADMIN_CATEGORY_THREE_UPD]
@IDX					INT					--고유키
,@DEPTH2_NAME			VARCHAR(50)		=''			--1DEPTH 코드네임
,@DISPLAY_YN			VARCHAR(1)		=''			--전시구분 Y/N
,@RE_SORT				INT					--정렬순서
,@INTRESULT				INT OUTPUT				--결과값
AS

 SET NOCOUNT ON
 
 
	 --3DEPTH 카테고리 관리 UPDATE
	UPDATE TB_CATEGORY
	SET  DEPTH3_NAME			= @DEPTH2_NAME
		,RE_SORT			= @RE_SORT
		,DISPLAY_YN			= @DISPLAY_YN		
	WHERE IDX				= @IDX
	 		
	SET @INTRESULT = @@ERROR
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_CATEGORY_THREE_INS]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 카테고리 3DEPTH 등록 (admin)
 * Modified  :   2015.06.30
 * Modified  :   2015.07.14
 * Modified  :   2015.08.19
 ============================================================*/  
 -- exec SP_ADMIN_CATEGORY_THREE_INS 'PRODUCT_TYPE','101','109','567'
CREATE PROCEDURE [dbo].[SP_ADMIN_CATEGORY_THREE_INS]
@CATE_GBN				VARCHAR(15)		=''			--PRODUCT_TYPE/SKIN_TYPE/LINE_TYPE
,@DEPTH1_CODE			VARCHAR(3)		=''			--1DEPTH 코드
,@DEPTH2_CODE			VARCHAR(3)		=''			--2DEPTH 코드
,@DEPTH3_NAME			VARCHAR(50)		=''			--3DEPTH 이름
,@INTRESULT				INT OUTPUT					--결과값
AS

 SET NOCOUNT ON
 
	--3DEPTH 값이 없을때 기본코드값 세팅
	DECLARE @DEFAULT_CATE_CODE CHAR(9)
	
	IF @DEPTH1_CODE != '' AND @DEPTH2_CODE != ''
	BEGIN
		SET @DEFAULT_CATE_CODE = @DEPTH1_CODE + @DEPTH2_CODE + '101'
	END
	
	
	
	DECLARE @RE_SORT INT 
	SET @RE_SORT = 0
	
	--정렬 최대값 가져오기
	SELECT @RE_SORT = ISNULL(MAX(RE_SORT)+1,1) 
	FROM TB_CATEGORY 
	WHERE DEPTH_FLAG = '3' 
			AND CATE_GBN = @CATE_GBN 
			AND DEPTH1_CODE = @DEPTH1_CODE
			AND DEPTH2_CODE = @DEPTH2_CODE
	
	
	
	--3DEPTH 담을 코드값 세팅
	DECLARE @CATE_CODE CHAR(9)
	SET @CATE_CODE = ''
	
	--카테고리 코드값 생성하기
	SELECT @CATE_CODE = ISNULL(MAX(CATE_CODE)+1,@DEFAULT_CATE_CODE) 
	FROM TB_CATEGORY 
	WHERE DEPTH_FLAG = '3' 
			AND CATE_GBN = @CATE_GBN 
			AND DEPTH1_CODE = @DEPTH1_CODE
			AND DEPTH2_CODE = @DEPTH2_CODE


	
	--1DEPTH_CODE, 1DEPTH_NAME
	DECLARE @DEPTH1_NAME VARCHAR(50)
	SET @DEPTH1_NAME = ''
	
	SELECT @DEPTH1_NAME = DEPTH1_NAME
	FROM TB_CATEGORY 
	WHERE DEPTH_FLAG = '1' 
			AND DEPTH1_CODE = @DEPTH1_CODE


	--2DEPTH_CODE, 2DEPTH_NAME
	DECLARE @DEPTH2_NAME VARCHAR(50)
	SET @DEPTH2_NAME = ''
	
	SELECT @DEPTH2_NAME = DEPTH2_NAME
	FROM TB_CATEGORY 
	WHERE DEPTH_FLAG = '2' 
			AND CATE_GBN = @CATE_GBN 
			AND DEPTH1_CODE = @DEPTH1_CODE
			AND DEPTH2_CODE = @DEPTH2_CODE
	
	
	
	--카테고리 코드값 INSERT
	INSERT INTO TB_CATEGORY
	 (	CATE_GBN
		,CATE_CODE
		,RE_SORT
		,DEPTH1_CODE
		,DEPTH1_NAME
		,DEPTH2_CODE
		,DEPTH2_NAME
		,DEPTH3_CODE
		,DEPTH3_NAME
		,DEPTH_FLAG
		,DISPLAY_YN
	  ) 
	 values (
		@CATE_GBN
		,@CATE_CODE
		,@RE_SORT
		,@DEPTH1_CODE
		,@DEPTH1_NAME
		,@DEPTH2_CODE
		,@DEPTH2_NAME
		,SUBSTRING(@CATE_CODE,7,3)
		,@DEPTH3_NAME
		,'3'
		,'N'
	  )
	   		
	 	SET @INTRESULT = @@ERROR
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_CATEGORY_ONE_UPD]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 카테고리 1DEPTH 수정 (admin)
 * Modified  :   2015.06.10
 * Modified  :   2015.06.11
 * Modified  :   2015.08.19
 ============================================================*/  
  --EXEC SP_ADMIN_CATEGORY_ONE_INSERT '반지', 'IMG.JPG'
CREATE PROCEDURE [dbo].[SP_ADMIN_CATEGORY_ONE_UPD]
@IDX					INT					--고유키
,@DEPTH1_NAME			VARCHAR(50)		=''			--1DEPTH 코드네임
,@DISPLAY_YN			VARCHAR(1)		=''			--전시구분 Y/N
,@RE_SORT				INT					--정렬순서
,@INTRESULT				INT OUTPUT				--결과값
AS

 SET NOCOUNT ON
 
 
	 --1DEPTH 카테고리 관리 UPDATE
	UPDATE TB_CATEGORY
	SET  DEPTH1_NAME			= @DEPTH1_NAME
		,RE_SORT			= @RE_SORT
		,DISPLAY_YN			= @DISPLAY_YN		
	 WHERE IDX				= @IDX
	 		
	SET @INTRESULT = @@ERROR
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_CATEGORY_ONE_SEL]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 1depth 카테고리 리스트 (admin)
 * Modified  :   2015.06.10
 * Modified  :   2015.06.15
 ============================================================*/  
  
CREATE PROCEDURE [dbo].[SP_ADMIN_CATEGORY_ONE_SEL]
AS

	SET NOCOUNT ON
	
	SELECT IDX
		,CATE_GBN
		,CATE_CODE
		,RE_SORT
		,DEPTH1_CODE
		,DEPTH1_NAME
		,DEPTH2_CODE
		,DEPTH2_NAME
		,DEPTH3_CODE
		,DEPTH3_NAME
		,DEPTH_FLAG
		,DISPLAY_YN
		,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
	FROM TB_CATEGORY WITH (NOLOCK) 
	WHERE DEPTH_FLAG = '1'  --1DEPTH
			--AND DISPLAY_YN = 'Y'
	ORDER BY RE_SORT DESC

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_CATEGORY_ONE_INS]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 카테고리 1DEPTH 등록 (admin)
 * Modified  :   2015.06.10
 * Modified  :   2015.06.30
 * Modified  :   2015.08.19
 ============================================================*/  
  --EXEC SP_ADMIN_CATEGORY_ONE_INS '고급시계'
CREATE PROCEDURE [dbo].[SP_ADMIN_CATEGORY_ONE_INS]
@DEPTH1_NAME		VARCHAR(50)	=''			--1DEPTH 코드네임
,@INTRESULT			INT OUTPUT				--결과값
AS

 SET NOCOUNT ON
 
	--대분류 코드값 세팅
	DECLARE @CATE_CODE CHAR(9)
	SET @CATE_CODE = ''
	
	DECLARE @RE_SORT INT 
	SET @RE_SORT = 0
	
	--정렬 최대값 가져오기
	SELECT @RE_SORT = ISNULL(MAX(RE_SORT)+1,1) 
	FROM TB_CATEGORY 
	WHERE DEPTH_FLAG = '1'
	
	
	--카테고리 코드값 생성하기
 	SELECT @CATE_CODE = ISNULL(MAX(CATE_CODE)+1000000,'101100100') FROM TB_CATEGORY WHERE DEPTH_FLAG = '1'
	
	--카테고리 코드값 INSERT
	INSERT INTO TB_CATEGORY
	 (	CATE_GBN
		,CATE_CODE
		,RE_SORT
		,DEPTH1_CODE
		,DEPTH1_NAME
		,DEPTH_FLAG
		,DISPLAY_YN
	  ) 
	 values (
		'PRODUCT_TYPE'
		,@CATE_CODE
		,@RE_SORT
		,LEFT(@CATE_CODE,3)
		,@DEPTH1_NAME
		,'1'
		,'N'
	  )
	 		
		SET @INTRESULT = @@ERROR
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_CATEGORY_ONE_DEL]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 카테고리 1DEPTH 삭제 (admin)
 * Modified  :   2015.06.11
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_ADMIN_CATEGORY_ONE_DEL]
@IDX					INT					--고유키
--,@INTRESULT				INT OUTPUT				--결과값
AS

 SET NOCOUNT ON
 
 
	 --1DEPTH 카테고리 관리 UPDATE
	DELETE FROM TB_CATEGORY WHERE IDX = @IDX
	 		
--	SET @INTRESULT = @@ERROR
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_CATEGORY_NAME_SEL]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 카테고리 리스트 (admin)
 * Modified  :   2015.06.10
 * Modified  :   2015.06.11
 ============================================================*/  
  --EXEC SP_ADMIN_CATEGORY_NAME_LIST
CREATE PROCEDURE [dbo].[SP_ADMIN_CATEGORY_NAME_SEL]
@DEPTH1_CODE			CHAR(3) =''			--1DEPTH 카테고리 코드값 EX>101,102,103
,@CATE_GBN				VARCHAR(15) =''		--카테고리 구분값 PRODUCT/COLLECTION/LINE
,@LIST_GBN				VARCHAR(1) =''		--Y(전시만), 나머진 비전시 포함한 리스트
AS

	SET NOCOUNT ON
	
IF @LIST_GBN = 'Y' --전시옵션만 가져온다
BEGIN	
	IF @CATE_GBN = '' AND @DEPTH1_CODE = ''  --1DEPTH 리스트
	BEGIN
		SELECT IDX
			,CATE_CODE
			,DEPTH1_CODE		
			,DEPTH1_NAME
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
			,DISPLAY_YN
			,RE_SORT
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE  DISPLAY_YN = 'Y' --전시여부
				AND DEPTH_FLAG = '1' --1DEPTH 상품 카테고리 가져오기
		ORDER BY RE_SORT 
	END 
	IF 	@CATE_GBN <> '' AND @DEPTH1_CODE <> ''	--2DEPTH 리스트
	BEGIN
		SELECT IDX
			,CATE_CODE
			,DEPTH1_CODE		
			,DEPTH1_NAME
			,DEPTH2_CODE		
			,DEPTH2_NAME			
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
			,DISPLAY_YN
			,RE_SORT
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE  CATE_GBN = @CATE_GBN --PRODUCT/COLLECTION/LINE
			AND DEPTH1_CODE = @DEPTH1_CODE --1DEPTH CODE
			AND DEPTH_FLAG = '2'  --2DEPTH
			AND DISPLAY_YN = 'Y' --전시여부
		ORDER BY RE_SORT 
	END 
END
ELSE		--전시,비전시 모두 가져온다
BEGIN
	IF @CATE_GBN = '' AND @DEPTH1_CODE = ''  --1DEPTH 리스트
	BEGIN
		SELECT IDX
			,CATE_CODE
			,DEPTH1_CODE		
			,DEPTH1_NAME
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
			,DISPLAY_YN
			,RE_SORT
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE  DEPTH_FLAG = '1' --1DEPTH 상품 카테고리 가져오기
		ORDER BY RE_SORT 
	END 
	IF 	@CATE_GBN <> '' AND @DEPTH1_CODE <> ''	--2DEPTH 리스트
	BEGIN
		SELECT IDX
			,CATE_CODE
			,DEPTH1_CODE		
			,DEPTH1_NAME
			,DEPTH2_CODE		
			,DEPTH2_NAME			
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
			,DISPLAY_YN
			,RE_SORT
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE  CATE_GBN = @CATE_GBN --PRODUCT/COLLECTION/LINE
			AND DEPTH1_CODE = @DEPTH1_CODE --1DEPTH CODE
			AND DEPTH_FLAG = '2'  --2DEPTH
			--AND DISPLAY_YN = 'Y' --전시여부
		ORDER BY RE_SORT 
	END 
END	
	
	

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_CATEGORY_DEPTH_SEL_ALL]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : depth별 카테고리 리스트 (admin)
 * Modified  :   2015.06.30
 exec [SP_ADMIN_CATEGORY_DEPTH_SEL] 'PRODUCT_TYPE','101','101'
 ============================================================*/ 

--exec [SP_ADMIN_CATEGORY_DEPTH_SEL] 'PRODUCT_TYPE','101','103'
  
CREATE PROCEDURE [dbo].[SP_ADMIN_CATEGORY_DEPTH_SEL_ALL]
@CATE_GBN			VARCHAR(15) =''			--카테고리 구분값 PRODUCT_TYPE/SKIN_TYPE/LINE_TYPE
,@DEPTH1_CODE			CHAR(3) =''			--1DEPTH 카테고리 코드값 EX>101,102,103
,@DEPTH2_CODE			CHAR(3) =''			--2DEPTH 카테고리 코드값 EX>101,102,103
AS

	SET NOCOUNT ON
	
	--1DEPTH 카테고리 가져오기
	IF @DEPTH1_CODE = ''
	BEGIN
		SELECT IDX
			,CATE_GBN
			,CATE_CODE
			,RE_SORT
			,DEPTH1_CODE
			,DEPTH1_NAME
			,DEPTH2_CODE
			,DEPTH2_NAME
			,DEPTH3_CODE
			,DEPTH3_NAME
			,DEPTH_FLAG
			,DISPLAY_YN
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE CATE_GBN = @CATE_GBN --PRODUCT/COLLECTION/LINE
				AND DEPTH_FLAG = '1'  --1DEPTH
				--AND DISPLAY_YN = 'Y'
		ORDER BY RE_SORT 
	END
	--1DEPTH에 속한 2DEPTH 카테고리 가져오기
	ELSE IF @DEPTH1_CODE != '' AND @DEPTH2_CODE = ''
		BEGIN
		SELECT IDX
			,CATE_GBN
			,CATE_CODE
			,RE_SORT
			,DEPTH1_CODE
			,DEPTH1_NAME
			,DEPTH2_CODE
			,DEPTH2_NAME
			,DEPTH3_CODE
			,DEPTH3_NAME
			,DEPTH_FLAG
			,DISPLAY_YN
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE CATE_GBN = @CATE_GBN --PRODUCT/COLLECTION/LINE
				AND DEPTH1_CODE = @DEPTH1_CODE --1DEPTH CODE
				AND DEPTH_FLAG = '2'  --1DEPTH
				--AND DISPLAY_YN = 'Y'
		ORDER BY RE_SORT 
	END
	--1DEPTH에 속한 2DEPTH에 속한 3DEPTH 카테고리 가져오기
	ELSE IF @DEPTH1_CODE != '' AND @DEPTH2_CODE != ''
		BEGIN
		SELECT IDX
			,CATE_GBN
			,CATE_CODE
			,RE_SORT
			,DEPTH1_CODE
			,DEPTH1_NAME
			,DEPTH2_CODE
			,DEPTH2_NAME
			,DEPTH3_CODE
			,DEPTH3_NAME
			,DEPTH_FLAG
			,DISPLAY_YN
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE CATE_GBN = @CATE_GBN --PRODUCT/COLLECTION/LINE
				AND DEPTH1_CODE = @DEPTH1_CODE --1DEPTH CODE
				AND DEPTH2_CODE = @DEPTH2_CODE --2DEPTH CODE
				AND DEPTH_FLAG = '3'  --1DEPTH
				--AND DISPLAY_YN = 'Y'
		ORDER BY RE_SORT 
	END
	--1DEPTH카테고리 가져오기
	ELSE 
		BEGIN
		SELECT IDX
			,CATE_GBN
			,CATE_CODE
			,RE_SORT
			,DEPTH1_CODE
			,DEPTH1_NAME
			,DEPTH2_CODE
			,DEPTH2_NAME
			,DEPTH3_CODE
			,DEPTH3_NAME
			,DEPTH_FLAG
			,DISPLAY_YN
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE CATE_GBN = @CATE_GBN --PRODUCT/COLLECTION/LINE
				--AND DEPTH1_CODE = @DEPTH1_CODE --1DEPTH CODE
				AND DEPTH_FLAG = '1'  --1DEPTH
				--AND DISPLAY_YN = 'Y'
		ORDER BY RE_SORT 
		END

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_CATEGORY_DEPTH_SEL]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : depth별 카테고리 리스트 (admin)
 * Modified  :   2015.06.22
 * Modified  :   2015.06.30
 exec [SP_ADMIN_CATEGORY_DEPTH_SEL] 'PRODUCT_TYPE','101','101'
 ============================================================*/ 

--exec [SP_ADMIN_CATEGORY_DEPTH_SEL] 'PRODUCT_TYPE','101',''
  
CREATE PROCEDURE [dbo].[SP_ADMIN_CATEGORY_DEPTH_SEL]
@CATE_GBN			VARCHAR(15) =''			--카테고리 구분값 PRODUCT_TYPE/SKIN_TYPE/LINE_TYPE
,@DEPTH1_CODE			CHAR(3) =''			--1DEPTH 카테고리 코드값 EX>101,102,103
,@DEPTH2_CODE			CHAR(3) =''			--2DEPTH 카테고리 코드값 EX>101,102,103
AS

	SET NOCOUNT ON
	
	--1DEPTH 카테고리 가져오기
	IF @DEPTH1_CODE = ''
	BEGIN
		SELECT IDX
			,CATE_GBN
			,CATE_CODE
			,RE_SORT
			,DEPTH1_CODE
			,DEPTH1_NAME
			,DEPTH2_CODE
			,DEPTH2_NAME
			,DEPTH3_CODE
			,DEPTH3_NAME
			,DEPTH_FLAG
			,DISPLAY_YN
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE CATE_GBN = @CATE_GBN --PRODUCT/COLLECTION/LINE
				AND DEPTH_FLAG = '1'  --1DEPTH
				AND DISPLAY_YN = 'Y'
		ORDER BY RE_SORT 
	END
	--1DEPTH에 속한 2DEPTH 카테고리 가져오기
	ELSE IF @DEPTH1_CODE != '' AND @DEPTH2_CODE = ''
		BEGIN
		SELECT IDX
			,CATE_GBN
			,CATE_CODE
			,RE_SORT
			,DEPTH1_CODE
			,DEPTH1_NAME
			,DEPTH2_CODE
			,DEPTH2_NAME
			,DEPTH3_CODE
			,DEPTH3_NAME
			,DEPTH_FLAG
			,DISPLAY_YN
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE CATE_GBN = @CATE_GBN --PRODUCT/COLLECTION/LINE
				AND DEPTH1_CODE = @DEPTH1_CODE --1DEPTH CODE
				AND DEPTH_FLAG = '2'  --1DEPTH
				AND DISPLAY_YN = 'Y'
		ORDER BY RE_SORT 
	END
	--1DEPTH에 속한 2DEPTH에 속한 3DEPTH 카테고리 가져오기
	ELSE IF @DEPTH1_CODE != '' AND @DEPTH2_CODE != ''
		BEGIN
		SELECT IDX
			,CATE_GBN
			,CATE_CODE
			,RE_SORT
			,DEPTH1_CODE
			,DEPTH1_NAME
			,DEPTH2_CODE
			,DEPTH2_NAME
			,DEPTH3_CODE
			,DEPTH3_NAME
			,DEPTH_FLAG
			,DISPLAY_YN
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE CATE_GBN = @CATE_GBN --PRODUCT/COLLECTION/LINE
				AND DEPTH1_CODE = @DEPTH1_CODE --1DEPTH CODE
				AND DEPTH2_CODE = @DEPTH2_CODE --2DEPTH CODE
				AND DEPTH_FLAG = '3'  --1DEPTH
				AND DISPLAY_YN = 'Y'
		ORDER BY RE_SORT 
	END
	--1DEPTH카테고리 가져오기
	ELSE 
		BEGIN
		SELECT IDX
			,CATE_GBN
			,CATE_CODE
			,RE_SORT
			,DEPTH1_CODE
			,DEPTH1_NAME
			,DEPTH2_CODE
			,DEPTH2_NAME
			,DEPTH3_CODE
			,DEPTH3_NAME
			,DEPTH_FLAG
			,DISPLAY_YN
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE CATE_GBN = @CATE_GBN --PRODUCT/COLLECTION/LINE
				--AND DEPTH1_CODE = @DEPTH1_CODE --1DEPTH CODE
				AND DEPTH_FLAG = '1'  --1DEPTH
				AND DISPLAY_YN = 'Y'
		ORDER BY RE_SORT 
		END

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ADMIN_MEMBER_VIEW]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-06-19
-- Description:	관리자 관리-1건 상세
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_ADMIN_MEMBER_VIEW]
 @ADM_ID	varchar(13)	='' 
AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------

	select 
	[ADM_ID]
	,[ADM_NAME]
	,[ADM_PWD]
	,[ADM_GRADE]
	,[ADM_EMAIL]
	,[ADM_PHONE]
	,[ADM_INS_DATE]
	,[ADM_USE_YN]

	from [TB_ADMIN_MEMBER]  WITH (NOLOCK)
	where [ADM_ID]=@ADM_ID

	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ADMIN_MEMBER_UPD]    Script Date: 09/11/2015 16:07:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-06-19
-- Description:	관리자 관리- 수정
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_ADMIN_MEMBER_UPD]
 @ADM_ID	varchar(13)	='' 
 ,@ADM_NAME	varchar(30)	='' 
 ,@ADM_PWD	varchar(100)	='' 
 ,@ADM_GRADE	varchar(1)	='A' 
 ,@ADM_EMAIL	varchar(100)	='' 
 ,@ADM_PHONE	varchar(30)	='' 
 ,@ADM_USE_YN	varchar(1)	='Y' 
 ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

	IF @ADM_PWD=''   --암호변경 없음
		begin

			update [TB_ADMIN_MEMBER]
			set [ADM_NAME]=@ADM_NAME
				--,[ADM_PWD]=@ADM_PWD
				,[ADM_GRADE]=@ADM_GRADE
				,[ADM_EMAIL]=@ADM_EMAIL
				,[ADM_PHONE]=@ADM_PHONE
				,[ADM_USE_YN]=@ADM_USE_YN
			where ([ADM_ID]=@ADM_ID);
		end
	ELSE
		begin

			update [TB_ADMIN_MEMBER]
			set [ADM_NAME]=@ADM_NAME
				,[ADM_PWD]=@ADM_PWD
				,[ADM_GRADE]=@ADM_GRADE
				,[ADM_EMAIL]=@ADM_EMAIL
				,[ADM_PHONE]=@ADM_PHONE
				,[ADM_USE_YN]=@ADM_USE_YN
			where ([ADM_ID]=@ADM_ID);
		end


	SET @ERR_CODE = @@ERROR;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ADMIN_MEMBER_SEL]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-06-19
-- Description:	관리자 관리- 목록
-- ussage: exec SP_ADMIN_ADMIN_MEMBER_SEL 'ADM_ID','11','ADM_ID','DESC',1,10
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_ADMIN_MEMBER_SEL]
 @SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@SORT_COL	varchar(50)	='ADM_INS_DATE' 
,@SORT_DIR	varchar(4)	='DESC' 

,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		ADM_ID_TMP	varchar(13)
	)

	 
	set @v_SQL_WHERE = ' (1=1) '

	IF @SEARCH_COL <>'' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '

	set @v_SQL_ORDERBY = ' ' + @SORT_COL  + ' ' + @SORT_DIR 
 
	 
	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	set @v_SQL  ='insert into #TEMPLIST (ADM_ID_TMP) '
	set @v_SQL  =@v_SQL + ' SELECT  ADM_ID ';
	set @v_SQL  =@v_SQL + ' FROM TB_ADMIN_MEMBER WITH (NOLOCK) ';
	set @v_SQL  =@v_SQL + ' WHERE ' +  @v_SQL_WHERE ;
	set @v_SQL  =@v_SQL + '	ORDER BY ' + @v_SQL_ORDERBY ;
	exec(@v_SQL);


	SET ROWCOUNT 0 ;

	



	SELECT [ADM_ID]
      ,[ADM_NAME]
	  ,[ADM_PWD]
      ,[ADM_GRADE]
      ,[ADM_EMAIL]
      ,[ADM_PHONE]
      ,[ADM_INS_DATE]
      ,[ADM_USE_YN]
	from TB_ADMIN_MEMBER a with (nolock)
		inner join #TEMPLIST t on a.ADM_ID = t.ADM_ID_TMP
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ADMIN_MEMBER_INS]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-06-19
-- Description:	관리자 관리-등록
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_ADMIN_MEMBER_INS]
 @ADM_ID	varchar(13)	='' 
 ,@ADM_NAME	varchar(30)	='' 
 ,@ADM_PWD	varchar(100)	='' 
 ,@ADM_GRADE	varchar(1)	='A' 
 ,@ADM_EMAIL	varchar(100)	='' 
 ,@ADM_PHONE	varchar(30)	='' 
 ,@ADM_USE_YN	varchar(1)	='Y' 
 ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

if(exists(select ADM_ID from [TB_ADMIN_MEMBER] with(nolock) where ADM_ID=@ADM_ID))
	begin
		set @ERR_CODE=10; -- 이미 존재하는 계정
	end
else
	begin

		insert into [TB_ADMIN_MEMBER]
			([ADM_ID],[ADM_NAME],[ADM_PWD],[ADM_GRADE],[ADM_EMAIL],[ADM_PHONE],[ADM_INS_DATE],[ADM_USE_YN])
		values
			(@ADM_ID,@ADM_NAME,@ADM_PWD,@ADM_GRADE,@ADM_EMAIL,@ADM_PHONE,getdate(),@ADM_USE_YN);

		SET @ERR_CODE = @@ERROR;
	end
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ADMIN_MEMBER_DEL]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-06-19
-- Description:	관리자 관리- 삭제
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_ADMIN_MEMBER_DEL]
 @ADM_ID	varchar(13)	='' 
 ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN


	delete from [TB_ADMIN_MEMBER]
	where ([ADM_ID]=@ADM_ID);

	SET @ERR_CODE = @@ERROR;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_POINT_HISTORY_SEL]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-07
-- Description:	관리자 포인트 내역
-- ussage: exec SP_ADMIN_POINT_HISTORY_SEL '회원아이디'
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_POINT_HISTORY_SEL]
	@M_ID varchar(13) = NULL -- 회원아이디
	,@PAGE				INT = 1		--현재 PAGE
	,@PAGESIZE			INT = 10		--페이지 사이즈
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN

	SET NOCOUNT ON;
	
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				-- declaration + dummy query 
				-- to allow EF obtain complex data type:
				DECLARE @MyStoredProcResult TABLE(
						KIND VARCHAR(4)
						,POINT INT 
						,SUM_POINT INT
						,INS_DATE DATETIME
						,EXPIRE_YN VARCHAR(1)
						,ADDITION_REASON VARCHAR(100)
						,DETAIL VARCHAR(100)
						,ADM_NAME VARCHAR(30)
						,ORDER_CODE VARCHAR(20)
						,ORDER_DETAIL_IDX INT
						,P_NAME VARCHAR(100)
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END   
	
	/**
		회원 확인
	
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		RETURN(1);
	END
*/
	----------------------------------------
	
	DECLARE @LISTCOUNT INT	

	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @V_SQL NVARCHAR(MAX);
	 
	-----------------------------

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY
		,KIND VARCHAR(4)
		,POINT INT 
		,SUM_POINT INT
		,INS_DATE DATETIME
		,EXPIRE_YN VARCHAR(1)
		,ADDITION_REASON VARCHAR(100)
		,DETAIL VARCHAR(100)
		,ADM_NAME VARCHAR(30)
		,ORDER_CODE VARCHAR(20)
		,ORDER_DETAIL_IDX INT
		,P_NAME VARCHAR(100)
	)

	DECLARE @M_GBN VARCHAR(1);
	DECLARE @M_GRADE VARCHAR(1);


	/**
		회원 구분, 등급 
	*/
	SELECT @M_GBN = M_GBN, @M_GRADE = M_GRADE 
	FROM TB_MEMBER WITH(NOLOCK)
	WHERE M_ID = @M_ID;
	
	SET @LISTCOUNT = @PAGE * @PAGESIZE;
	SET ROWCOUNT @LISTCOUNT;
	
	/**
		적립 + 사용 
	*/
	INSERT INTO #TEMPLIST 
	(KIND, POINT, SUM_POINT, INS_DATE, EXPIRE_YN, ADDITION_REASON, DETAIL,ADM_NAME,ORDER_CODE,ORDER_DETAIL_IDX,P_NAME)
	SELECT KIND, POINT, SUM_POINT, INS_DATE, EXPIRE_YN, ADDITION_REASON, DETAIL,ADM_NAME,ORDER_CODE,ORDER_DETAIL_IDX,P_NAME
	FROM (
		SELECT 
				'적립' AS KIND
				,SAVE_POINT AS POINT
				,SAVE_SUM_POINT AS SUM_POINT
				,INS_DATE
				,EXPIRE_YN
				,ADDITION_REASON
				,(
				CASE
				WHEN SAVE_CODE='S00' THEN  (SELECT DETAIL  FROM TB_POINT_SAVE_CODES WHERE M_GBN=@M_GBN AND M_GRADE=@M_GRADE)
				WHEN SAVE_CODE<>'S00' THEN (SELECT DETAIL FROM TB_POINT_SAVE_CODES WHERE CODE=SAVE_CODE)
				ELSE NULL
				END
				)AS DETAIL
				,ADM_NAME
				,ORDER_CODE
				,ORDER_DETAIL_IDX
				,P_NAME
			FROM TB_POINT_SAVE AS PS WITH(NOLOCK)
			WHERE M_ID=@M_ID
		UNION ALL
			SELECT 
				(
					CASE
						WHEN EXPIRE_YN='Y' THEN '소멸'
						WHEN EXPIRE_YN='N' THEN '차감'
						ELSE NULL
					END
				) AS KIND
				,-USE_POINT
				,SAVE_SUM_POINT
				,INS_DATE
				,NULL
				,ADDITION_REASON
				,(SELECT DETAIL FROM TB_POINT_USE_CODES WHERE CODE=USE_CODE) AS DETAIL
				,ADM_NAME
				,ORDER_CODE
				,ORDER_DETAIL_IDX
				,P_NAME
			FROM TB_POINT_USE WITH(NOLOCK)	
			WHERE M_ID=@M_ID
	) A
	ORDER BY INS_DATE DESC;
	
	SET ROWCOUNT 0 ; --기본값 복원 
	
	SELECT 	
		KIND
		,POINT
		,SUM_POINT
		,INS_DATE
		,EXPIRE_YN
		,ADDITION_REASON
		,DETAIL
		,ADM_NAME
		,ORDER_CODE
		,ORDER_DETAIL_IDX
		,P_NAME
	from #TEMPLIST as t with (nolock)
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;
	
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  drop table #TEMPLIST ;
	  --print 'drop...'
	END
	
    SET NOCOUNT OFF
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_POINT_HISTORY_CNT]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-07
-- Description:	관리자 포인트 내역 총합
-- ussage: exec SP_ADMIN_POINT_HISTORY_CNT '회원아이디'
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_POINT_HISTORY_CNT]
	@M_ID varchar(13) = NULL -- 회원아이디
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN

	/**
		회원 확인
	
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		RETURN(1);
	END
*/
	select COUNT(M_ID) AS CNT
	FROM (
	SELECT M_ID
	FROM TB_POINT_SAVE WITH(NOLOCK)
	WHERE M_ID=@M_ID
	UNION ALL
	SELECT M_ID
	FROM TB_POINT_USE WITH(NOLOCK)
	WHERE M_ID=@M_ID
	) A;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDERLIST_DETAIL_LOG]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDERLIST_DETAIL_LOG
주문상세페이지 하단의 주문관련LOG SELECT

파라미터 설명
@ORDER_IDX		-- MASTER 주문일련번호

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL
SELECT * FROM TB_ORDER_LOG

exec SP_ADMIN_ORDERLIST_DETAIL_LOG 1

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDERLIST_DETAIL_LOG]
 @ORDER_IDX	INT
AS
BEGIN
	SET NOCOUNT ON

	SELECT OL.PROCESS_MEMO + CASE WHEN AM.ADM_NAME IS NULL THEN '' ELSE ' (관리자 ' + AM.ADM_NAME + ')' END + ' (' + CONVERT(VARCHAR,OL.REG_DATE,120) + ')' AS PROCESS_MEMO
	FROM TB_ORDER_LOG OL WITH (NOLOCK)
		LEFT OUTER JOIN ADMIN_MEMBER AM
			ON OL.REG_ID = AM.ADM_ID
	WHERE OL.ORDER_IDX = @ORDER_IDX
	
	ORDER BY OL.REG_DATE ASC




	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDERLIST_DETAIL_LIST]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDERLIST_DETAIL_LIST
주문상세페이지 상단의 주문제품리스트

파라미터 설명
@ORDER_IDX		-- MASTER 주문일련번호

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec SP_ADMIN_ORDERLIST_DETAIL_LIST 1

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDERLIST_DETAIL_LIST]
 @ORDER_IDX	INT
AS
BEGIN
	SET NOCOUNT ON

	SELECT OD.ORDER_DETAIL_IDX
		, OD.P_CODE
		, OD.P_IMG1_S
		, OD.P_NAME
		, OD.P_SUB_TITLE
		, OD.ICON_NEW
		, OD.ICON_BEST
		, OD.ICON_SOLDOUT
		, OD.ICON_CUSTOM
		, OD.ICON_ONEPLUS
		, OD.ICON_SET
		, OD.ICON_TIME
		, OD.ICON_COUPON
		, OD.P_COUNT
		, OD.PROMOTION_TYPE
		, CASE WHEN ISNULL(OD.PROMOTION_TYPE,'') = '99' THEN '-' 
			WHEN ISNULL(OD.PROMOTION_TYPE,'') = '01' THEN 'SET상품' 
			WHEN ISNULL(OD.PROMOTION_TYPE,'') = '02' THEN '1+1' 
			WHEN ISNULL(OD.PROMOTION_TYPE,'') = '03' THEN '일반할인' 
			ELSE '코드오류' END AS PROMOTION
		, ISNULL(PP.PMO_PRODUCT_NAME,'') AS PROMOTION_NAME
		, OD.SELLING_PRICE
		, OD.DISCOUNT_PRICE
		, OD.EMP_DISCOUNT_AMT		-- 임직원 할인받은 금액
		, OD.EMP_DISCOUNT_PRICE		-- 임직원 할인가
		, ISNULL(OD.CD_COUPON,'') AS CD_COUPON
		, ISNULL(CM.COUPON_NAME,'') AS COUPON_NAME
		, OD.COUPON_DISCOUNT_AMT
		, OD.COUPON_DISCOUNT_PRICE
		, OD.USE_POINT
		, OD.GRADE_DISCOUNT_AMT			-- 등급 할인받은 금액
		, OD.REAL_PAY_PRICE
		, OD.POINT_ACCML
		, CASE WHEN POINT_ACCML_DATE IS NULL THEN '(미적립)' ELSE '(적립)' END POINT_ACCML_DATE
		, OD.DELIVERY_NUM
		, OD.ORDER_DETAIL_STATUS
		, CASE	WHEN OD.ORDER_DETAIL_STATUS = '10' THEN '결제대기'
				WHEN OD.ORDER_DETAIL_STATUS = '20' THEN '결제완료'
				WHEN OD.ORDER_DETAIL_STATUS = '30' THEN '상품준비중'
				WHEN OD.ORDER_DETAIL_STATUS = '40' THEN '배송중'
				WHEN OD.ORDER_DETAIL_STATUS = '50' THEN '배송완료'
				WHEN OD.ORDER_DETAIL_STATUS = '60' THEN '구매확정'
				WHEN OD.ORDER_DETAIL_STATUS = '70' THEN '교환'
				WHEN OD.ORDER_DETAIL_STATUS = '80' THEN '반품'
				WHEN OD.ORDER_DETAIL_STATUS = '90' THEN '취소'
				ELSE '코드오류' END AS ORDER_DETAIL_STATUS_NM
		, OD.ORDER_DETAIL_STATUS_DATE
		
		
	FROM TB_ORDER_DETAIL OD WITH (NOLOCK)
		LEFT OUTER JOIN TB_PROMOTION_BY_PRODUCT PP WITH (NOLOCK)
			ON OD.CD_PROMOTION_PRODUCT = PP.CD_PROMOTION_PRODUCT
		LEFT OUTER JOIN TB_COUPON_MASTER CM WITH (NOLOCK)
			ON OD.CD_COUPON = CM.CD_COUPON
	WHERE OD.ORDER_IDX = @ORDER_IDX
	ORDER BY OD.ORDER_DETAIL_IDX


	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDERLIST_DETAIL_BODY]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDERLIST_DETAIL_BODY
주문상세페이지 하단의 주문내역

파라미터 설명
@ORDER_IDX		-- MASTER 주문일련번호

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec SP_ADMIN_ORDERLIST_DETAIL_BODY 1

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDERLIST_DETAIL_BODY]
 @ORDER_IDX	INT
AS
BEGIN
	SET NOCOUNT ON

	;
	WITH OD AS (	
	SELECT MAX(OD.ORDER_IDX) AS ORDER_IDX
		, SUM(OD.DISCOUNT_PRICE * OD.P_COUNT) AS TOTAL_PRICE		-- 전체상품금액
		, SUM( CASE WHEN ORDER_DETAIL_STATUS IN ('80','90') THEN 0 ELSE (OD.DISCOUNT_PRICE * OD.P_COUNT) END ) AS ING_PRICE			-- 정상주문건 상품금액
		, SUM( CASE WHEN ORDER_DETAIL_STATUS IN ('80','90') THEN (OD.DISCOUNT_PRICE * OD.P_COUNT) ELSE 0 END ) AS CANCEL_PRICE		-- 교환반품건 상품금액
		, SUM( CASE WHEN ORDER_DETAIL_STATUS IN ('80','90') THEN 0 ELSE OD.COUPON_DISCOUNT_AMT END )
		  + SUM( CASE WHEN ORDER_DETAIL_STATUS IN ('80','90') THEN 0 ELSE OD.GRADE_DISCOUNT_AMT END )
		  + SUM( CASE WHEN ORDER_DETAIL_STATUS IN ('80','90') THEN 0 ELSE OD.EMP_DISCOUNT_AMT END )
		  + SUM( CASE WHEN ORDER_DETAIL_STATUS IN ('80','90') THEN 0 ELSE OD.USE_POINT END )  AS TOTAL_DISCOUNT_AMT					-- 전체할인금액
		, SUM( CASE WHEN ORDER_DETAIL_STATUS IN ('80','90') THEN 0 ELSE OD.COUPON_DISCOUNT_AMT END ) AS COUPON_DISCOUNT_AMT			-- 쿠폰할인금액
		, SUM( CASE WHEN ORDER_DETAIL_STATUS IN ('80','90') THEN 0 ELSE OD.GRADE_DISCOUNT_AMT END ) AS GRADE_DISCOUNT_AMT			-- VIP할인금액
		, SUM( CASE WHEN ORDER_DETAIL_STATUS IN ('80','90') THEN 0 ELSE OD.EMP_DISCOUNT_AMT END ) AS EMP_DISCOUNT_AMT				-- 임직원할인금액
		, SUM( CASE WHEN ORDER_DETAIL_STATUS IN ('80','90') THEN 0 ELSE OD.USE_POINT END ) AS USE_POINT								-- 보유포인트 사용액
		, SUM( CASE WHEN ORDER_DETAIL_STATUS IN ('80','90') THEN 0 ELSE OD.REAL_PAY_PRICE END ) AS REAL_PAY_PRICE					-- 결제금액
		, SUM( CASE WHEN ORDER_DETAIL_STATUS IN ('80','90') THEN 0 ELSE OD.POINT_ACCML END ) AS POINT_ACCML							-- 적립포인트
	FROM TB_ORDER_DETAIL OD
	WHERE OD.ORDER_IDX = @ORDER_IDX
	)
	SELECT OM.ORDER_IDX, OM.ORDER_CODE, OM.ORDER_DATE
		, OM.ORDER_STATUS
		, CASE	WHEN OM.ORDER_STATUS = '10' THEN '결제대기'
				WHEN OM.ORDER_STATUS = '20' THEN '결제완료'
				WHEN OM.ORDER_STATUS = '30' THEN '상품준비중'
				WHEN OM.ORDER_STATUS = '40' THEN '배송중'
				WHEN OM.ORDER_STATUS = '50' THEN '배송완료'
				WHEN OM.ORDER_STATUS = '60' THEN '구매확정'
				WHEN OM.ORDER_STATUS = '70' THEN '교환'
				WHEN OM.ORDER_STATUS = '80' THEN '반품'
				WHEN OM.ORDER_STATUS = '90' THEN '취소'
				WHEN OM.ORDER_STATUS = '99' THEN '기타'
				ELSE '코드오류' END AS ORDER_STATUS_NM
		, CASE WHEN OM.PAY_GBN = '1' THEN '신용카드'
				WHEN OM.PAY_GBN = '2' THEN CASE WHEN OM.ESCROW_YN='Y' THEN '실시간계좌이체(에스크로)' ELSE '실시간계좌이체' END
				WHEN OM.PAY_GBN = '3' THEN '가상계좌'
				WHEN OM.PAY_GBN = '4' THEN '포인트결제'
				ELSE '결제코드오류' END AS PAY_GBN_NM
		, OM.ESCROW_YN
		, OM.PAT_TID
		, OM.PAY_GBN
		, OM.SENDER_EMAIL
		, CASE WHEN OM.MEMBER_ORDER_GBN = '1' THEN OM.M_NAME ELSE OM.SENDER_NAME END AS ORDER_NAME
		, CASE WHEN OM.MEMBER_ORDER_GBN = '1' THEN OM.M_ID ELSE '(비회원)' END AS ORDER_ID
		, OM.SENDER_POST
		, OM.SENDER_ADDR1
		, OM.SENDER_ADDR2
		, OM.SENDER_HP
		, OM.SENDER_TEL
		, OM.RECEIVER_NAME
		, OM.RECEIVER_POST
		, OM.RECEIVER_ADDR1
		, OM.RECEIVER_ADDR2
		, OM.RECEIVER_TEL
		, OM.RECEIVER_HP
		, OM.ORDER_MEMO
		, OM.MANAGER_MEMO
		, OM.TRANS_PRICE
		, OM.TRANS_COUPON
		, OM.VACT_Num
		, OM.VACT_BankCode
		, OM.VACT_Name
		, OM.VACT_InputName
		, OM.VACT_Date
		, OM.VACT_Time
		, OM.PAT_GUBUN
		, CASE WHEN OM.VACT_BankCode = '03' THEN '기업은행'
			WHEN OM.VACT_BankCode = '04' THEN '국민은행'
			WHEN OM.VACT_BankCode = '05' THEN '외환은행'
			WHEN OM.VACT_BankCode = '06' THEN '국민은행'
			WHEN OM.VACT_BankCode = '07' THEN '수협중앙회'
			WHEN OM.VACT_BankCode = '11' THEN '농협중앙회'
			WHEN OM.VACT_BankCode = '12' THEN '단위농협'
			WHEN OM.VACT_BankCode = '20' THEN '우리은행'
			WHEN OM.VACT_BankCode = '21' THEN '조흥은행'
			WHEN OM.VACT_BankCode = '23' THEN '제일은행'
			WHEN OM.VACT_BankCode = '32' THEN '부산은행'
			WHEN OM.VACT_BankCode = '71' THEN '우체국'
			WHEN OM.VACT_BankCode = '81' THEN '하나은행'
			WHEN OM.VACT_BankCode = '88' THEN '신한은행'
			ELSE '' END AS VACT_BankName
			
		, OD.TOTAL_PRICE + OM.TRANS_PRICE as TOTAL_PRICE			-- 전체상품금액
		, OD.ING_PRICE				-- 정상주문건 상품금액
		, OD.CANCEL_PRICE			-- 교환반품건 상품금액
		, OD.TOTAL_DISCOUNT_AMT		-- 전체할인금액
		, OD.COUPON_DISCOUNT_AMT	-- 쿠폰할인금액
		, OD.GRADE_DISCOUNT_AMT		-- VIP할인금액
		, OD.EMP_DISCOUNT_AMT		-- 임직원할인금액
		, OD.USE_POINT				-- 보유포인트 사용액
		, OD.REAL_PAY_PRICE	+ OM.TRANS_PRICE as REAL_PAY_PRICE			-- 결제금액
		, OD.POINT_ACCML			-- 적립포인트
		, OM.OLD_ORDER_IDX
		, OM.INIESCROW_DELIVERY
		, OM.INIESCROW_CONFIRM
		, OM.INIESCROW_CANCEL
		, OM.ESCROW_USER_CMD
		, OM.ESCROW_USER_DATE
		, OM.ESCROW_USER_DESC
	FROM TB_ORDER_MASTER OM WITH (NOLOCK)
		LEFT JOIN OD
			ON OM.ORDER_IDX = OD.ORDER_IDX
	WHERE OM.ORDER_IDX = @ORDER_IDX




	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_TO_DELIVERYEXCEL]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDER_TO_DELIVERYEXCEL
관리자페이지에서 주문리스트 선택후 송장양식엑셀파일 다운로드 액션
넘어온 ORDER_IDX를 SELECT하여 상품준비중(30)인 상세주문들을 리턴

파라미터 설명
@ORDER_IDX_LIST VARCHAR(4000)		-- ORDER_IDX를 ,로 구분조합하여 전달 (EX:PCODE1,PCODE2,PCODE3)



exec SP_ADMIN_ORDER_TO_DELIVERYEXCEL '2,3,4,5,6,7,8,9'


SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL


*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_TO_DELIVERYEXCEL]
@ORDER_IDX_LIST VARCHAR(4000)		-- ORDER_IDX를 ,로 구분조합하여 전달 (EX:PCODE1,PCODE2,PCODE3)

-- ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

	SET NOCOUNT ON


	/*
		STEP1. 넘어온 상품을 임시테이블로 구성
	*/
	IF OBJECT_ID('tempdb..#ORDERTMP') is not null
	BEGIN
	  DROP TABLE #ORDERTMP;
	END

	CREATE TABLE #ORDERTMP  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY
		, ORDER_IDX INT
	)

	SET @ORDER_IDX_LIST = RTRIM(LTRIM(@ORDER_IDX_LIST))

	DECLARE @ORDER_IDX_LIST_CUT VARCHAR(100)

	WHILE LEN(@ORDER_IDX_LIST) > 0
	BEGIN
		IF CHARINDEX(',',@ORDER_IDX_LIST) > 0
		BEGIN
			SET @ORDER_IDX_LIST_CUT = LEFT(@ORDER_IDX_LIST, CHARINDEX(',',@ORDER_IDX_LIST) - 1 )
			SET @ORDER_IDX_LIST = SUBSTRING( @ORDER_IDX_LIST, CHARINDEX(',',@ORDER_IDX_LIST)+1, LEN(@ORDER_IDX_LIST) )
		END
		ELSE BEGIN
			SET @ORDER_IDX_LIST_CUT = @ORDER_IDX_LIST
			SET @ORDER_IDX_LIST = ''
		END
		

		-- #CARTTMP 담는 액션 실행
		INSERT INTO #ORDERTMP 
			( ORDER_IDX )
		VALUES
			( @ORDER_IDX_LIST_CUT )

	END


	SELECT A.ORDER_IDX
		, C.ORDER_DETAIL_IDX
		, B.ORDER_CODE
		, B.ORDER_DATE
		, CASE WHEN B.MEMBER_ORDER_GBN = 1 THEN B.M_NAME+' ('+B.M_ID+')'
			ELSE B.SENDER_NAME+' (비회원)' END AS ORDER_NAME
		, CASE WHEN B.M_GBN = 'S' THEN '임직원' ELSE '' END AS EMP_YN
		, C.P_CODE, C.P_NAME
		, C.P_COUNT
		, B.PAY_GBN, CASE WHEN B.PAY_GBN = '1' THEN '신용카드'
			WHEN B.PAY_GBN = '2' THEN '실시간계좌이체'
			WHEN B.PAY_GBN = '3' THEN '가상계좌'
			WHEN B.PAY_GBN = '4' THEN '포인트결제'
			ELSE '결제구분오류' END AS PAY_NM
		, C.REAL_PAY_PRICE
		, CASE	WHEN C.ORDER_DETAIL_STATUS = '10' THEN '결제대기'
				WHEN C.ORDER_DETAIL_STATUS = '20' THEN '결제완료'
				WHEN C.ORDER_DETAIL_STATUS = '30' THEN '상품준비중'
				WHEN C.ORDER_DETAIL_STATUS = '40' THEN '배송중'
				WHEN C.ORDER_DETAIL_STATUS = '50' THEN '배송완료'
				WHEN C.ORDER_DETAIL_STATUS = '60' THEN '구매확정'
				WHEN C.ORDER_DETAIL_STATUS = '70' THEN '교환'
				WHEN C.ORDER_DETAIL_STATUS = '80' THEN '반품'
				WHEN C.ORDER_DETAIL_STATUS = '90' THEN '취소'
				ELSE '코드오류' END AS ORDER_STATUS_NM
		, CASE WHEN C.PROMOTION_TYPE = '01' THEN '세트상품'
			WHEN C.PROMOTION_TYPE = '02' THEN '1+1'
			WHEN C.PROMOTION_TYPE = '03' THEN '기타프로모션'
			ELSE '일반상품' END AS PROMOTION_NM
		, ISNULL(D.PMO_PRODUCT_NAME,'') AS PMO_PRODUCT_NAME
		, CASE WHEN B.FREEGIFT_GBN = 'Y' THEN B.FREEGIFT_NAME ELSE '' END AS FREEGIFT_NAME
		, C.DELIVERY_NUM
	FROM #ORDERTMP A
		INNER JOIN TB_ORDER_MASTER B WITH (NOLOCK)
			ON A.ORDER_IDX = B.ORDER_IDX
		INNER JOIN TB_ORDER_DETAIL C WITH (NOLOCK)
			ON A.ORDER_IDX = C.ORDER_IDX
			AND C.ORDER_DETAIL_STATUS = 30
		LEFT JOIN TB_PROMOTION_BY_PRODUCT D WITH (NOLOCK)
			ON C.CD_PROMOTION_PRODUCT = D.CD_PROMOTION_PRODUCT
	
	ORDER BY C.ORDER_IDX, C.ORDER_DETAIL_IDX

	SET NOCOUNT OFF ;

/*
주문자(ID)	임직원여부	주문 상품명	수량	결제수단	결제금액	주문상태	프로모션	사은품

exec SP_ADMIN_ORDER_TO_DELIVERYEXCEL '2,3,4,5,6,7,8,9'

SELECT * FROM TB_ORDER_MASTER


SELECT * FROM TB_ORDER_DETAIL

SELECT * FROM TB_PROMOTION_BY_PRODUCT

SELECT * FROM TB_FREE_GIFT_INFO

*/
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_STATUS]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDER_STATUS
관리자페이지에서 주문리스트 조회시 상단의 주문현황

파라미터 설명
@FROM_DATE		-- 시작 주문일자 (ex 2015-07-09)
@TO_DATE		-- 종료 주문일자 (ex 2015-07-09)
@MEMBER_GBN		-- 회원구분 (전체:0, 일반:1, 비회원:2, 임직원:3)
@MEMBER_GRADE_B	-- 브론즈회원조건 (1 또는 0)
@MEMBER_GRADE_S	-- 실버회원조건 (1 또는 0)
@MEMBER_GRADE_G	-- 골드회원조건 (1 또는 0)
@MEMBER_GRADE_V	-- VIP회원조건 (1 또는 0)
@PAY_GBN		-- 결제수단 (A:전체, 1:신용카드, 2:실시간계좌이체, 3:가상계좌, 4:포인트결제)
@PAT_GUBUN_W	-- 주문구분조건(Web)
@PAT_GUBUN_M	-- 주문구분조건(Mobile)
@DETAIL_STATUS_20	-- 주문상태조건 (결제완료)
@DETAIL_STATUS_10	-- 주문상태조건 (결제대기)
@DETAIL_STATUS_30	-- 주문상태조건 (상품준비중)
@DETAIL_STATUS_40	-- 주문상태조건 (배송중)
@DETAIL_STATUS_50	-- 주문상태조건 (배송완료)
@DETAIL_STATUS_60	-- 주문상태조건 (구매확정)
@DETAIL_STATUS_90	-- 주문상태조건 (취소)
@DETAIL_STATUS_80	-- 주문상태조건 (반품)
@DETAIL_STATUS_70	-- 주문상태조건 (교환)
@DELIVERY_FROM_DATE	-- 시작 출고일자 (ex 2015-07-09)
@DELIVERY_TO_DATE	-- 종료 출고일자 (ex 2015-07-09)
@SEARCH_COL			-- 기타검색필드명
@SEARCH_KEYWORD		-- 기타검색값



SELECT * 
--	UPDATE A SET A.M_GRADE = 'V'
FROM TB_MEMBER A
WHERE M_ID = 'KMG5302'

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL
exec SP_ADMIN_ORDER_STATUS '','','0',1,1,1,1,'A',1,1,1,0,0,0,0,0,0,0,0,'','','',''

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_STATUS]
@FROM_DATE VARCHAR(10) = ''		-- 시작 주문일자 (ex 2015-07-09)
,@TO_DATE VARCHAR(10) = ''		-- 종료 주문일자 (ex 2015-07-09)
,@MEMBER_GBN CHAR(1) = '0'		-- 회원구분 (일반:1, 비회원:2, 임직원:3)
,@MEMBER_GRADE_B BIT 
,@MEMBER_GRADE_S BIT
,@MEMBER_GRADE_G BIT
,@MEMBER_GRADE_V BIT
,@PAY_GBN	CHAR(1) = 'A'		-- 결제수단 (A:전체, 1:신용카드, 2:실시간계좌이체, 3:가상계좌, 4:포인트결제)
,@PAT_GUBUN_W BIT
,@PAT_GUBUN_M BIT
,@DETAIL_STATUS_20 BIT
,@DETAIL_STATUS_10 BIT
,@DETAIL_STATUS_30 BIT
,@DETAIL_STATUS_40 BIT
,@DETAIL_STATUS_50 BIT
,@DETAIL_STATUS_60 BIT
,@DETAIL_STATUS_90 BIT
,@DETAIL_STATUS_80 BIT
,@DETAIL_STATUS_70 BIT
,@DELIVERY_FROM_DATE VARCHAR(10) = ''	-- 시작 출고일자 (ex 2015-07-09)
,@DELIVERY_TO_DATE VARCHAR(10) = ''		-- 종료 출고일자 (ex 2015-07-09)
,@SEARCH_COL VARCHAR(40) = ''		-- 기타검색필드명 (ORDER_CODE 주문코드,M_ID 회원아이디,P_NAME 상품명,M_NAME 주문자명,RECEIVER_NAME 수취인명,SENDER_HP 보낸사람HP,SENDER_TEL 보낸사람TEL,RECEIVER_HP 수취인HP,RECEIVER_TEL 수취인TEL )
,@SEARCH_KEYWORD VARCHAR(100) = ''	-- 기타검색값
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @v_SQL_WHERE VARCHAR(3000) = '' ;
	DECLARE @v_SQL VARCHAR(3000) = '' ;

	IF @FROM_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,A.ORDER_DATE ,121) >= '''+@FROM_DATE+''' ';
	END
	IF @TO_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,A.ORDER_DATE ,121) <= '''+@TO_DATE+''' ';
	END
	IF @MEMBER_GBN = '1'		-- 회원
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND A.MEMBER_ORDER_GBN = ''1'' AND A.M_GBN = ''A'' ';
	END
	ELSE IF @MEMBER_GBN = '2'	-- 비회원
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND A.MEMBER_ORDER_GBN = ''2'' ';
	END
	ELSE IF @MEMBER_GBN = '3'	-- 임직원
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND A.MEMBER_ORDER_GBN = ''1'' AND A.M_GBN = ''S'' ';
	END
	IF ( ( @MEMBER_GRADE_B = 1 ) OR ( @MEMBER_GRADE_S = 1 ) OR ( @MEMBER_GRADE_G = 1 ) OR ( @MEMBER_GRADE_V = 1 ) )
	BEGIN
		IF ( ( @MEMBER_GRADE_B = 0 ) OR ( @MEMBER_GRADE_S = 0 ) OR ( @MEMBER_GRADE_G = 0 ) OR ( @MEMBER_GRADE_V = 0 ) )
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND ( (1=2) ';
			IF @MEMBER_GRADE_B = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (A.M_GRADE = ''B'') ';
			END
			IF @MEMBER_GRADE_S = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (A.M_GRADE = ''S'') ';
			END
			IF @MEMBER_GRADE_G = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (A.M_GRADE = ''G'') ';
			END
			IF @MEMBER_GRADE_V = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (A.M_GRADE = ''V'') ';
			END
			SET @v_SQL_WHERE = @v_SQL_WHERE + ') ';
		END;
	END
	IF @PAY_GBN <> 'A'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND A.PAY_GBN = '''+@PAY_GBN+''' ';
	END
	IF ( ( @PAT_GUBUN_W = 1 ) OR ( @PAT_GUBUN_M = 1 ) )
	BEGIN
		IF ( ( @PAT_GUBUN_W = 0 ) OR ( @PAT_GUBUN_M = 0 ) )
		BEGIN
			IF @PAT_GUBUN_W = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND A.PAT_GUBUN = ''Web'' ';
			END
			IF @PAT_GUBUN_M = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND A.PAT_GUBUN = ''Mobile'' ';
			END
		END;
	END
	IF ( ( @DETAIL_STATUS_20 = 1 ) OR ( @DETAIL_STATUS_10 = 1 ) OR ( @DETAIL_STATUS_30 = 1 ) OR ( @DETAIL_STATUS_40 = 1 ) OR ( @DETAIL_STATUS_50 = 1 ) OR ( @DETAIL_STATUS_60 = 1 ) OR ( @DETAIL_STATUS_90 = 1 ) OR ( @DETAIL_STATUS_80 = 1 ) OR ( @DETAIL_STATUS_70 = 1 ) )
	BEGIN
		IF ( ( @DETAIL_STATUS_20 = 0 ) OR ( @DETAIL_STATUS_10 = 0 ) OR ( @DETAIL_STATUS_30 = 0 ) OR ( @DETAIL_STATUS_40 = 0 ) OR ( @DETAIL_STATUS_50 = 0 ) OR ( @DETAIL_STATUS_60 = 0 ) OR ( @DETAIL_STATUS_90 = 0 ) OR ( @DETAIL_STATUS_80 = 0 ) OR ( @DETAIL_STATUS_70 = 0 ) )
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND ( (1=2) ';
			IF @DETAIL_STATUS_20 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''20'') ';
			END
			IF @DETAIL_STATUS_10 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''10'') ';
			END
			IF @DETAIL_STATUS_30 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''30'') ';
			END
			IF @DETAIL_STATUS_40 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''40'') ';
			END
			IF @DETAIL_STATUS_50 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''50'') ';
			END
			IF @DETAIL_STATUS_60 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''60'') ';
			END
			IF @DETAIL_STATUS_90 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''90'') ';
			END
			IF @DETAIL_STATUS_80 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''80'') ';
			END
			IF @DETAIL_STATUS_70 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''70'') ';
			END
			SET @v_SQL_WHERE = @v_SQL_WHERE + ') ';
		END;
	END
	IF @DELIVERY_FROM_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,B.DELIVERY_DATE ,121) >= '''+@DELIVERY_FROM_DATE+''' ';
	END
	IF @DELIVERY_TO_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,B.DELIVERY_DATE ,121) <= '''+@DELIVERY_TO_DATE+''' ';
	END
	IF @SEARCH_KEYWORD <> ''
	BEGIN
		IF ( @SEARCH_COL = 'A.ORDER_CODE' ) OR ( @SEARCH_COL = 'A.M_ID' )
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND '+@SEARCH_COL+' = '''+@SEARCH_KEYWORD+''' ';
		END
		ELSE BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND '+@SEARCH_COL+' LIKE ''%'+@SEARCH_KEYWORD+'%'' ';
		END
	END

	

	IF OBJECT_ID('tempdb..#TMP_ORDERLIST') is not null
	BEGIN
	  DROP TABLE #TMP_ORDERLIST;
	END

	CREATE TABLE #TMP_ORDERLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		ORDER_IDX	INT
	)

	
	SET @v_SQL  = '
		INSERT INTO #TMP_ORDERLIST (ORDER_IDX)
		SELECT A.ORDER_IDX 
		FROM TB_ORDER_MASTER A WITH (NOLOCK)
			, TB_ORDER_DETAIL B WITH (NOLOCK)
		WHERE A.ORDER_IDX = B.ORDER_IDX
		' + @v_SQL_WHERE + 
		' GROUP BY A.ORDER_IDX , A.ORDER_DATE
		   ' ;
	--	PRINT @v_SQL;
	EXEC(@v_SQL);
	
/*
exec SP_ADMIN_ORDER_STATUS '','','0',1,1,1,1,'A',1,0,1,1,0,0,0,0,0,0,0,'','','',''

exec SP_ADMIN_ORDER_STATUS '2015-01-01','2015-12-31','3',1,1,0,1,'1',1,0,1,1,0,0,0,0,0,0,0,'','','A.ORDER_CODE','20150709-100013'


exec SP_ADMIN_ORDER_STATUS '2015-01-01','2015-12-31','3',1,1,0,1,'1',1,0,1,1,0,0,0,0,0,0,0,'','','A.M_NAME','민권'


SELECT * FROM TB_ORDER_MASTER_TMP 
UPDATE TB_ORDER_MASTER SET SENDER_NAME = '고민권'
10:결제대기 20:결제완료 30:상품준비중 40:배송중 50:배송완료 60:구매확정 70:교환 80:반품 90:취소 99:기타
*/
	SELECT 
		COUNT(*) AS ORDER_STATUS_ALL
		, SUM( CASE WHEN OM.ORDER_STATUS = '10' THEN 1 ELSE 0 END ) AS ORDER_STATUS_10
		, SUM( CASE WHEN OM.ORDER_STATUS = '20' THEN 1 ELSE 0 END ) AS ORDER_STATUS_20
		, SUM( CASE WHEN OM.ORDER_STATUS = '30' THEN 1 ELSE 0 END ) AS ORDER_STATUS_30
		, SUM( CASE WHEN OM.ORDER_STATUS = '40' THEN 1 ELSE 0 END ) AS ORDER_STATUS_40
		, SUM( CASE WHEN OM.ORDER_STATUS = '50' THEN 1 ELSE 0 END ) AS ORDER_STATUS_50
		, SUM( CASE WHEN OM.ORDER_STATUS = '60' THEN 1 ELSE 0 END ) AS ORDER_STATUS_60
		, SUM( CASE WHEN OM.ORDER_STATUS = '70' THEN 1 ELSE 0 END ) AS ORDER_STATUS_70
		, SUM( CASE WHEN OM.ORDER_STATUS = '80' THEN 1 ELSE 0 END ) AS ORDER_STATUS_80
		, SUM( CASE WHEN OM.ORDER_STATUS = '90' THEN 1 ELSE 0 END ) AS ORDER_STATUS_90
		, SUM( CASE WHEN OM.ORDER_STATUS = '99' THEN 1 ELSE 0 END ) AS ORDER_STATUS_99
	FROM #TMP_ORDERLIST T
		LEFT JOIN TB_ORDER_MASTER OM
			ON T.ORDER_IDX = OM.ORDER_IDX
	;



	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_RECEIVER_EDIT]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDER_RECEIVER_EDIT
관리자페이지에서 주문건별로 받는사람 수정시에 사용

파라미터 설명
@ORDER_IDX				-- MASTER 주문일련번호
@RECEIVER_NAME			-- 받는사람명
@RECEIVER_POST			-- 받는사람 우편번호
@RECEIVER_ADDR1			-- 받는사람 주소1
@RECEIVER_ADDR2			-- 받는사람 주소2
@RECEIVER_TEL			-- 받는사람 전화번호
@RECEIVER_HP			-- 받는사람 핸드폰
@REG_ID			-- 처리자ID(관리자)


SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL
SELECT * FROM TB_ORDER_LOG


exec SP_ADMIN_ORDER_RECEIVER_EDIT 1,'강병철','404-250','인천 서구 가좌동','코너스톤','02-111-1111','010-111-1111','222'

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_RECEIVER_EDIT]
 @ORDER_IDX	INT
,@RECEIVER_NAME VARCHAR(30)
,@RECEIVER_POST VARCHAR(7)
,@RECEIVER_ADDR1 VARCHAR(255)
,@RECEIVER_ADDR2 VARCHAR(255)
,@RECEIVER_TEL VARCHAR(20)
,@RECEIVER_HP VARCHAR(20)
,@REG_ID VARCHAR(13)

AS
BEGIN
	SET NOCOUNT ON

	DECLARE @PROCESS_MEMO VARCHAR(2000)
	
	SET @PROCESS_MEMO = '배송지 정보변경
    ';

	SELECT @PROCESS_MEMO = @PROCESS_MEMO + '변경전 => 수취자[' + RECEIVER_NAME + ']  주소[' + RECEIVER_ADDR1 + ' ' + RECEIVER_ADDR2 + ']  핸드폰 [' + RECEIVER_HP + ']  전화번호[' + RECEIVER_TEL + ']'
	FROM TB_ORDER_MASTER
	WHERE ORDER_IDX = 1

	SET @PROCESS_MEMO = @PROCESS_MEMO + '
    변경후 => 수취자[' + @RECEIVER_NAME + ']  주소[' + @RECEIVER_ADDR1 + ' ' + @RECEIVER_ADDR2 + ']  핸드폰 [' + @RECEIVER_HP + ']  전화번호[' + @RECEIVER_TEL + ']
으로 변경';


	UPDATE TB_ORDER_MASTER
	SET RECEIVER_NAME = @RECEIVER_NAME
		,RECEIVER_POST = @RECEIVER_POST
		,RECEIVER_ADDR1 = @RECEIVER_ADDR1
		,RECEIVER_ADDR2 = @RECEIVER_ADDR2
		,RECEIVER_TEL = @RECEIVER_TEL
		,RECEIVER_HP = @RECEIVER_HP
	WHERE ORDER_IDX = @ORDER_IDX
	;
	
	INSERT INTO TB_ORDER_LOG
	( ORDER_IDX, ORDER_CODE, PROCESS_MEMO, REG_ID )
	SELECT ORDER_IDX
		, ORDER_CODE
		, @PROCESS_MEMO
		, @REG_ID
	FROM TB_ORDER_MASTER
	WHERE ORDER_IDX = @ORDER_IDX
	
	
	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_PART_CANCEL_TOP_SELECT]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================================================
-- Author	  :	강병철
-- Create date: 2013.08.07
-- Description:	PG사 부분결제취소 로그
-- Modify     :
-- 
-- exec [SP_ADMIN_ORDER_PART_CANCEL_TOP_SELECT] 1
-- =============================================================================

CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_PART_CANCEL_TOP_SELECT]
	@ORDER_IDX INT
AS  
BEGIN  
	SET NOCOUNT ON  
		
	SELECT TOP 1 TID, PAY_PRICE, EMAIL, PRTC_CNT
	FROM 
	(	
	  SELECT TOP 1 OLD_PAT_TID AS TID, PRTC_REMAINS AS PAY_PRICE, EMAIL AS EMAIL, PRTC_CNT AS PRTC_CNT
	  FROM  dbo.TB_ORDER_PART_CANCEL with (nolock)
	  WHERE ORDER_IDX = @ORDER_IDX
	  ORDER BY REG_DATE DESC
	  UNION	
	  SELECT TOP 1 PAT_TID AS TID , TOTAL_PAY_PRICE AS PAY_PRICE, SENDER_EMAIL AS EMAIL,  0 AS PRTC_CNT
	  FROM  dbo.TB_ORDER_MASTER with (nolock)
	  WHERE ORDER_IDX = @ORDER_IDX
	) AA 
  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_PART_CANCEL_SELECT]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================================================
-- Author	  :	강병철
-- Description:	PG사 부분결제취소 로그
-- Modify     :
-- 
-- exec [SP_ADMIN_ORDER_PART_CANCEL_SELECT] 3713
-- =============================================================================

CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_PART_CANCEL_SELECT]
	@ORDER_IDX Int      --주문번호
AS  
BEGIN  
	SET NOCOUNT ON  
		
	
	  SELECT 
		IDX
		, ORDER_IDX
		, PAT_TID
		, OLD_PAT_TID
		, CANCEL_PRICE
		, REMAINS_PRICE
	    , EMAIL
	    , PRTC_REMAINS
	    , PRTC_TYPE
	    , PRTC_PRICE
	    , PRTC_CNT
	    , REG_DATE
	    , REG_ID
	    , REG_IP
	  FROM  DBO.TB_ORDER_PART_CANCEL 
	  WHERE ORDER_IDX = @ORDER_IDX
	  ORDER BY REG_DATE ASC
	
  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_PART_CANCEL_INSERT]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================================================
-- Author	  :	강병철
-- Create date: 2015.07.30
-- Description:	PG사 부분결제취소 로그
-- Modify     :
-- 
--
-- =============================================================================

CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_PART_CANCEL_INSERT]
	@ORDER_IDX INT ,       --주문번호
	@PAT_TID VARCHAR(250) ,     -- 거래번호(NEW TID)
	@OLD_PAT_TID VARCHAR(250),     -- 원거래번호(TID)
	@CANCEL_PRICE BIGINT,     -- 취소할금액
	@REMAINS_PRICE BIGINT,     -- 승인요청금액(이전승인금액 - 취소할 금액)
	@EMAIL VARCHAR(255) ,     -- 이메일
	@PRTC_Remains BIGINT ,     -- 최종결제 금액 (결과값)
	@PRTC_Type CHAR(1)  ,     -- 부분취소, 재승인 구분자 (결과값)   ( ("0" : 재승인, "1" : 부분취소,"8":주문자전체취소,"9":관리자전체취소) )
	@PRTC_Price BIGINT ,     -- 부분취소한 금액 (결과값)
	@PRTC_Cnt INT ,            -- 부분취소(재승인) 요청횟수 (결과값)   ( 최대 9회 )
	@REG_ID VARCHAR(50) ,     -- 요청자
	@REG_IP VARCHAR(15)       -- 요청자IP
AS  
BEGIN

	declare 
	@LOGMEG VARCHAR(2000),
	@ORDER_CODE VARCHAR(20)
	  
	SET NOCOUNT ON  
  	
	select @ORDER_CODE = ORDER_CODE 
	from dbo.TB_ORDER_MASTER
	where order_idx = @ORDER_IDX
	
  INSERT 
  INTO dbo.TB_ORDER_PART_CANCEL 
       ( 
           ORDER_IDX,
           PAT_TID,
           OLD_PAT_TID,
           CANCEL_PRICE,
           REMAINS_PRICE,
           EMAIL,
           PRTC_Remains,
           PRTC_Type,
           PRTC_Price,
           PRTC_Cnt,
           REG_DATE,
           REG_ID,
           REG_IP 
       ) 
       VALUES 
       ( 
          @ORDER_IDX,
           @PAT_TID,
           @OLD_PAT_TID,
           @CANCEL_PRICE,
           @REMAINS_PRICE,
           @EMAIL,
           @PRTC_Remains,
           @PRTC_Type,
           @PRTC_Price,
           @PRTC_Cnt,
           GETDATE(),
           @REG_ID,
           @REG_IP 
       ) 
	   
	if (@PRTC_Type = '9') 
	BEGIN
		SET @LOGMEG = '[PG사 전체취소] 관리자에의해'+CONVERT(VARCHAR, @PRTC_Price)+'원 결제전체취소, 최종 결제 금액 :'+CONVERT(VARCHAR, @PRTC_Remains)+' (tid:'+@PAT_TID+')'
	END 
	else if (@PRTC_Type = '8') 
	BEGIN
		SET @LOGMEG = '[PG사 전체취소] 주문자에의해'+CONVERT(VARCHAR, @PRTC_Price)+'원 결제전체취소, 최종 결제 금액 :'+CONVERT(VARCHAR, @PRTC_Remains)+' (tid:'+@PAT_TID+')'
	END 
	ELSE
	BEGIN
		SET @LOGMEG = '[PG사 부분취소] '+CONVERT(VARCHAR, @PRTC_Price)+'원 결제취소, 최종 결제 금액 :'+CONVERT(VARCHAR, @PRTC_Remains)+' (tid:'+@PAT_TID+')'
	END
	
	-- 로그저장
	INSERT INTO TB_ORDER_LOG
	( ORDER_IDX, ORDER_CODE, PROCESS_MEMO, REG_ID )
	VALUES
	(
		@ORDER_IDX,
		@ORDER_CODE,
		@LOGMEG,
		@REG_ID
	)
	
	-- 환불금액 저장
    UPDATE dbo.TB_ORDER_MASTER SET 
		REFUN_PRICE = TOTAL_PAY_PRICE - @PRTC_Remains
		,REFUN_DATE = GETDATE()
	WHERE ORDER_IDX =  @ORDER_IDX
  
  
  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_MEMBER_STATUS]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDER_MEMBER_STATUS
관리자 회원관리페이지 하단에 보여질 회원별 주문건수,금액,QNA,교환반품등록건수

파라미터 설명
@M_ID VARCHAR(13)=''   -- 회원ID

exec SP_ADMIN_ORDER_MEMBER_STATUS 'test_b1s'

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_MEMBER_STATUS]
@M_ID VARCHAR(13)=''   -- 회원ID
AS
BEGIN
	SET NOCOUNT ON


	SELECT SUM(ORDER_CNT) AS ORDER_CNT
		, SUM(ORDER_PRICE) AS ORDER_PRICE
		, SUM(QNA_CNT) AS QNA_CNT
	FROM (
		SELECT SUM(CASE WHEN OM.ORDER_STATUS IN ('20','30','40','50','60','70','80','90','99') THEN 1 ELSE 0 END) AS ORDER_CNT
			, SUM(CASE WHEN OM.ORDER_STATUS IN ('20','30','40','50','60','70','80','90','99') THEN OM.TOTAL_PAY_PRICE ELSE 0 END) AS ORDER_PRICE
			, 0 AS QNA_CNT
		FROM TB_ORDER_MASTER OM WITH (NOLOCK)
		WHERE OM.M_ID = @M_ID

		UNION ALL
		
		SELECT 0 AS ORDER_CNT
			, 0 AS ORDER_PRICE
			, SUM(CASE WHEN QNA.STATUS IN ('1','2') THEN 1 ELSE 0 END) AS QNA_CNT
		FROM TB_QNA QNA WITH (NOLOCK)
		WHERE QNA.M_ID = @M_ID

	) SRC
	


	SET NOCOUNT OFF ;
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_MEMBER_LIST]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 [SP_ADMIN_ORDER_MEMBER_LIST]
사용자상세정보 > 주문내역

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec [SP_ADMIN_ORDER_MEMBER_LIST] 'test_b1s'

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_MEMBER_LIST]
@M_ID          VARCHAR(13)
,@PAGE			INT	= 1		--현재 PAGE
,@PAGESIZE		INT = 20	--페이지 사이즈
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @v_SQL_WHERE VARCHAR(3000) = '' ;
	DECLARE @v_SQL VARCHAR(3000) = '' ;
	DECLARE @LISTCOUNT INT

	SET @v_SQL_WHERE = 'AND M_ID = '''+@M_ID+''' ';

	

	IF OBJECT_ID('tempdb..#TMP_ORDERLIST') is not null
	BEGIN
	  DROP TABLE #TMP_ORDERLIST;
	END

	CREATE TABLE #TMP_ORDERLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		ORDER_IDX	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT
	
	SET @v_SQL  = '
		insert into #TMP_ORDERLIST (ORDER_IDX)
		SELECT A.ORDER_IDX 
		FROM TB_ORDER_MASTER A WITH (NOLOCK)
			, TB_ORDER_DETAIL B WITH (NOLOCK)
		WHERE A.ORDER_IDX = B.ORDER_IDX
		' + @v_SQL_WHERE + 
		' GROUP BY A.ORDER_IDX , A.ORDER_DATE
		  ORDER BY A.ORDER_DATE DESC ' ;
	--	PRINT @v_SQL;
	EXEC(@v_SQL);
	
	SET ROWCOUNT 0 ;


	WITH OD AS (
		SELECT OD.ORDER_IDX
			, MIN(OD.P_NAME) + CASE WHEN COUNT(*) = 1 THEN '' ELSE '외 ' + CONVERT(VARCHAR,COUNT(*)-1) + '건' END AS P_NAME
			, SUM(P_COUNT) AS P_COUNT
		FROM #TMP_ORDERLIST T
			LEFT JOIN TB_ORDER_DETAIL OD
				ON T.ORDER_IDX = OD.ORDER_IDX
		WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
		GROUP BY OD.ORDER_IDX
	)
	SELECT OM.ORDER_IDX, OM.ORDER_DATE, OM.ORDER_CODE, OM.PAT_GUBUN
		, OM.ORDER_STATUS
		, CASE	WHEN OM.ORDER_STATUS = '10' THEN '결제대기'
				WHEN OM.ORDER_STATUS = '20' THEN '결제완료'
				WHEN OM.ORDER_STATUS = '30' THEN '상품준비중'
				WHEN OM.ORDER_STATUS = '40' THEN '배송중'
				WHEN OM.ORDER_STATUS = '50' THEN '배송완료'
				WHEN OM.ORDER_STATUS = '60' THEN '구매확정'
				WHEN OM.ORDER_STATUS = '70' THEN '교환'
				WHEN OM.ORDER_STATUS = '80' THEN '반품'
				WHEN OM.ORDER_STATUS = '90' THEN '취소'
				WHEN OM.ORDER_STATUS = '99' THEN '기타'
				ELSE '코드오류' END AS ORDER_STATUS_NM
		, CASE WHEN OM.MEMBER_ORDER_GBN = '1' THEN OM.M_NAME ELSE OM.SENDER_NAME END AS ORDER_NAME
		, CASE WHEN OM.MEMBER_ORDER_GBN = '1' THEN OM.M_ID ELSE '(비회원)' END AS ORDER_ID
		, OM.SENDER_HP
		, OM.RECEIVER_NAME
		, OD.P_NAME
		, OD.P_COUNT
		, OM.TOTAL_PAY_PRICE
		, OM.ACCML_POINT
	FROM #TMP_ORDERLIST T
		LEFT JOIN TB_ORDER_MASTER OM
			ON T.ORDER_IDX = OM.ORDER_IDX
		LEFT JOIN OD
			ON T.ORDER_IDX = OD.ORDER_IDX
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ ASC ;



	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_LIST]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDER_LIST
관리자페이지에서 주문내역 조회

파라미터 설명
@FROM_DATE		-- 시작 주문일자 (ex 2015-07-09)
@TO_DATE		-- 종료 주문일자 (ex 2015-07-09)
@MEMBER_GBN		-- 회원구분 (전체:0, 일반:1, 비회원:2, 임직원:3)
@MEMBER_GRADE_B	-- 브론즈회원조건 (1 또는 0)
@MEMBER_GRADE_S	-- 실버회원조건 (1 또는 0)
@MEMBER_GRADE_G	-- 골드회원조건 (1 또는 0)
@MEMBER_GRADE_V	-- VIP회원조건 (1 또는 0)
@PAY_GBN		-- 결제수단 (A:전체, 1:신용카드, 2:실시간계좌이체, 3:가상계좌, 4:포인트결제, E:실시간계좌(에스크로))
@PAT_GUBUN_W	-- 주문구분조건(Web)
@PAT_GUBUN_M	-- 주문구분조건(Mobile)
@DETAIL_STATUS_20	-- 주문상태조건 (결제완료)
@DETAIL_STATUS_10	-- 주문상태조건 (결제대기)
@DETAIL_STATUS_30	-- 주문상태조건 (상품준비중)
@DETAIL_STATUS_40	-- 주문상태조건 (배송중)
@DETAIL_STATUS_50	-- 주문상태조건 (배송완료)
@DETAIL_STATUS_60	-- 주문상태조건 (구매확정)
@DETAIL_STATUS_90	-- 주문상태조건 (취소)
@DETAIL_STATUS_80	-- 주문상태조건 (반품)
@DETAIL_STATUS_70	-- 주문상태조건 (교환)
@DELIVERY_FROM_DATE	-- 시작 출고일자 (ex 2015-07-09)
@DELIVERY_TO_DATE	-- 종료 출고일자 (ex 2015-07-09)
@SEARCH_COL			-- 기타검색필드명
@SEARCH_KEYWORD		-- 기타검색값


@PAGE			--현재 PAGE (기본값 1)
@PAGESIZE		--페이지 사이즈  (기본값 20)



SELECT * 
--	UPDATE A SET A.M_GRADE = 'V'
FROM TB_MEMBER A
WHERE M_ID = 'KMG5302'

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec SP_ADMIN_ORDER_LIST '2015-01-01','2015-12-31'
exec SP_ADMIN_ORDER_LIST '','','0', 1,1,1,1,'20',1,1, 1,1,1,1,1,1,1,1,1, '','','','',1,20

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_LIST]
@FROM_DATE VARCHAR(10) = ''		-- 시작 주문일자 (ex 2015-07-09)
,@TO_DATE VARCHAR(10) = ''		-- 종료 주문일자 (ex 2015-07-09)
,@MEMBER_GBN CHAR(1) = '0'		-- 회원구분 (0:전체, 일반:1, 비회원:2, 임직원:3)
,@MEMBER_GRADE_B BIT 
,@MEMBER_GRADE_S BIT
,@MEMBER_GRADE_G BIT
,@MEMBER_GRADE_V BIT
,@PAY_GBN	CHAR(1) = 'A'		-- 결제수단 (A:전체, 1:신용카드, 2:실시간계좌이체, E:실시간계좌이체(에스크로), 4:포인트결제)
,@PAT_GUBUN_W BIT
,@PAT_GUBUN_M BIT
,@DETAIL_STATUS_20 BIT
,@DETAIL_STATUS_10 BIT
,@DETAIL_STATUS_30 BIT
,@DETAIL_STATUS_40 BIT
,@DETAIL_STATUS_50 BIT
,@DETAIL_STATUS_60 BIT
,@DETAIL_STATUS_90 BIT
,@DETAIL_STATUS_80 BIT
,@DETAIL_STATUS_70 BIT
,@DELIVERY_FROM_DATE VARCHAR(10) = ''	-- 시작 출고일자 (ex 2015-07-09)
,@DELIVERY_TO_DATE VARCHAR(10) = ''		-- 종료 출고일자 (ex 2015-07-09)
,@SEARCH_COL VARCHAR(40) = ''		-- 기타검색필드명 (ORDER_CODE 주문코드,M_ID 회원아이디,P_NAME 상품명,M_NAME 주문자명,RECEIVER_NAME 수취인명,SENDER_HP 보낸사람HP,SENDER_TEL 보낸사람TEL,RECEIVER_HP 수취인HP,RECEIVER_TEL 수취인TEL )
,@SEARCH_KEYWORD VARCHAR(100) = ''	-- 기타검색값

,@PAGE			INT	= 1		--현재 PAGE
,@PAGESIZE		INT = 20	--페이지 사이즈
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @v_SQL_WHERE VARCHAR(3000) = '' ;
	DECLARE @v_SQL VARCHAR(3000) = '' ;
	DECLARE @LISTCOUNT INT

	IF @FROM_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,A.ORDER_DATE ,121) >= '''+@FROM_DATE+''' ';
	END
	IF @TO_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,A.ORDER_DATE ,121) <= '''+@TO_DATE+''' ';
	END
	IF @MEMBER_GBN = '1'		-- 회원
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND A.MEMBER_ORDER_GBN = ''1'' AND A.M_GBN = ''A'' ';
	END
	ELSE IF @MEMBER_GBN = '2'	-- 비회원
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND A.MEMBER_ORDER_GBN = ''2'' ';
	END
	ELSE IF @MEMBER_GBN = '3'	-- 임직원
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND A.MEMBER_ORDER_GBN = ''1'' AND A.M_GBN = ''S'' ';
	END
	IF ( ( @MEMBER_GRADE_B = 1 ) OR ( @MEMBER_GRADE_S = 1 ) OR ( @MEMBER_GRADE_G = 1 ) OR ( @MEMBER_GRADE_V = 1 ) )
	BEGIN
		IF ( ( @MEMBER_GRADE_B = 0 ) OR ( @MEMBER_GRADE_S = 0 ) OR ( @MEMBER_GRADE_G = 0 ) OR ( @MEMBER_GRADE_V = 0 ) )
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND ( (1=2) ';
			IF @MEMBER_GRADE_B = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (A.M_GRADE = ''B'') ';
			END
			IF @MEMBER_GRADE_S = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (A.M_GRADE = ''S'') ';
			END
			IF @MEMBER_GRADE_G = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (A.M_GRADE = ''G'') ';
			END
			IF @MEMBER_GRADE_V = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (A.M_GRADE = ''V'') ';
			END
			SET @v_SQL_WHERE = @v_SQL_WHERE + ') ';
		END;
	END
	
	IF @PAY_GBN <> 'A'
	BEGIN
		IF(@PAY_GBN = 'E')
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (A.PAY_GBN = ''2'' AND isnull(A.ESCROW_YN,''N'')=''Y'') ';
		END
		ELSE IF(@PAY_GBN = '2')
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (A.PAY_GBN = ''2'' AND isnull(A.ESCROW_YN,''N'') <> ''Y'') ';
		END
		ELSE
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND A.PAY_GBN = '''+@PAY_GBN+''' ';
		END
		
	END
	
	IF ( ( @PAT_GUBUN_W = 1 ) OR ( @PAT_GUBUN_M = 1 ) )
	BEGIN
		IF ( ( @PAT_GUBUN_W = 0 ) OR ( @PAT_GUBUN_M = 0 ) )
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( (1=2) ';
			IF @PAT_GUBUN_W = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR ( A.PAT_GUBUN = ''Web'' ) ';
			END
			IF @PAT_GUBUN_M = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR ( A.PAT_GUBUN = ''Mobile'' ) ';
			END
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' ) ';
		END;
	END
	IF ( ( @DETAIL_STATUS_20 = 1 ) OR ( @DETAIL_STATUS_10 = 1 ) OR ( @DETAIL_STATUS_30 = 1 ) OR ( @DETAIL_STATUS_40 = 1 ) OR ( @DETAIL_STATUS_50 = 1 ) OR ( @DETAIL_STATUS_60 = 1 ) OR ( @DETAIL_STATUS_90 = 1 ) OR ( @DETAIL_STATUS_80 = 1 ) OR ( @DETAIL_STATUS_70 = 1 ) )
	BEGIN
		IF ( ( @DETAIL_STATUS_20 = 0 ) OR ( @DETAIL_STATUS_10 = 0 ) OR ( @DETAIL_STATUS_30 = 0 ) OR ( @DETAIL_STATUS_40 = 0 ) OR ( @DETAIL_STATUS_50 = 0 ) OR ( @DETAIL_STATUS_60 = 0 ) OR ( @DETAIL_STATUS_90 = 0 ) OR ( @DETAIL_STATUS_80 = 0 ) OR ( @DETAIL_STATUS_70 = 0 ) )
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND ( (1=2) ';
			IF @DETAIL_STATUS_20 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''20'') ';
			END
			IF @DETAIL_STATUS_10 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''10'') ';
			END
			IF @DETAIL_STATUS_30 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''30'') ';
			END
			IF @DETAIL_STATUS_40 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''40'') ';
			END
			IF @DETAIL_STATUS_50 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''50'') ';
			END
			IF @DETAIL_STATUS_60 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''60'') ';
			END
			IF @DETAIL_STATUS_90 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''90'') ';
			END
			IF @DETAIL_STATUS_80 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''80'') ';
			END
			IF @DETAIL_STATUS_70 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR (B.ORDER_DETAIL_STATUS = ''70'') ';
			END
			SET @v_SQL_WHERE = @v_SQL_WHERE + ') ';
		END;
	END
	IF @DELIVERY_FROM_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,B.DELIVERY_DATE ,121) >= '''+@DELIVERY_FROM_DATE+''' ';
	END
	IF @DELIVERY_TO_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,B.DELIVERY_DATE ,121) <= '''+@DELIVERY_TO_DATE+''' ';
	END
	IF @SEARCH_KEYWORD <> ''
	BEGIN
		IF ( @SEARCH_COL = 'A.ORDER_CODE' ) OR ( @SEARCH_COL = 'A.M_ID' )
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND '+@SEARCH_COL+' = '''+@SEARCH_KEYWORD+''' ';
		END
		ELSE BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND '+@SEARCH_COL+' LIKE ''%'+@SEARCH_KEYWORD+'%'' ';
		END
	END

	

	IF OBJECT_ID('tempdb..#TMP_ORDERLIST') is not null
	BEGIN
	  DROP TABLE #TMP_ORDERLIST;
	END

	CREATE TABLE #TMP_ORDERLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		ORDER_IDX	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT
	
	SET @v_SQL  = '
		insert into #TMP_ORDERLIST (ORDER_IDX)
		SELECT A.ORDER_IDX 
		FROM TB_ORDER_MASTER A WITH (NOLOCK)
			, TB_ORDER_DETAIL B WITH (NOLOCK)
		WHERE A.ORDER_IDX = B.ORDER_IDX
		' + @v_SQL_WHERE + 
		' GROUP BY A.ORDER_IDX , A.ORDER_DATE
		  ORDER BY A.ORDER_DATE DESC ' ;
	--	PRINT @v_SQL;
	EXEC(@v_SQL);
	
	SET ROWCOUNT 0 ;
/*
exec SP_ADMIN_ORDER_LIST '2015-01-01','2015-12-31','0',1,1,1,1,'A',1,0,1,1,0,0,0,0,0,0,0,'','','','',1,20

exec SP_ADMIN_ORDER_LIST '2015-01-01','2015-12-31','3',1,1,0,1,'1',1,0,1,1,0,0,0,0,0,0,0,'','','A.ORDER_CODE','20150709-100013'


exec SP_ADMIN_ORDER_LIST '2015-01-01','2015-12-31','3',1,1,0,1,'1',1,0,1,1,0,0,0,0,0,0,0,'','','A.M_NAME','민권'


SELECT * FROM TB_ORDER_MASTER_TMP 
UPDATE TB_ORDER_MASTER SET SENDER_NAME = '고민권'
10:결제대기 20:결제완료 30:상품준비중 40:배송중 50:배송완료 60:구매확정 70:교환 80:반품 90:취소 99:기타
*/
	;
	WITH OD AS (
		SELECT OD.ORDER_IDX
			, MIN(OD.P_NAME) + CASE WHEN COUNT(*) = 1 THEN '' ELSE '외 ' + CONVERT(VARCHAR,COUNT(*)-1) + '건' END AS P_NAME
			, SUM(P_COUNT) AS P_COUNT
		FROM #TMP_ORDERLIST T
			LEFT JOIN TB_ORDER_DETAIL OD
				ON T.ORDER_IDX = OD.ORDER_IDX
		WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
		GROUP BY OD.ORDER_IDX
	)
	SELECT OM.ORDER_IDX, OM.ORDER_DATE, OM.ORDER_CODE, OM.PAT_GUBUN
		, OM.ORDER_STATUS
		, CASE	WHEN OM.ORDER_STATUS = '10' THEN '결제대기'
				WHEN OM.ORDER_STATUS = '20' THEN '결제완료'
				WHEN OM.ORDER_STATUS = '30' THEN '상품준비중'
				WHEN OM.ORDER_STATUS = '40' THEN '배송중'
				WHEN OM.ORDER_STATUS = '50' THEN '배송완료'
				WHEN OM.ORDER_STATUS = '60' THEN '구매확정'
				WHEN OM.ORDER_STATUS = '70' THEN '교환'
				WHEN OM.ORDER_STATUS = '80' THEN '반품'
				WHEN OM.ORDER_STATUS = '90' THEN '취소'
				WHEN OM.ORDER_STATUS = '99' THEN '기타'
				ELSE '코드오류' END AS ORDER_STATUS_NM
		, CASE WHEN OM.MEMBER_ORDER_GBN = '1' THEN OM.M_NAME ELSE OM.SENDER_NAME END AS ORDER_NAME
		, CASE WHEN OM.MEMBER_ORDER_GBN = '1' THEN OM.M_ID ELSE '(비회원)' END AS ORDER_ID
		, OM.SENDER_HP
		, OM.RECEIVER_NAME
		, OD.P_NAME
		, OD.P_COUNT
		, OM.TOTAL_PAY_PRICE
		, OM.ACCML_POINT
	FROM #TMP_ORDERLIST T
		LEFT JOIN TB_ORDER_MASTER OM
			ON T.ORDER_IDX = OM.ORDER_IDX
		LEFT JOIN OD
			ON T.ORDER_IDX = OD.ORDER_IDX
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ ASC ;



	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_FIND_PAT_GBN]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================================================
-- Author	  :	강병철
-- Create date: 2013.08.07
-- Description:	PG사 PID로 결제 구분 (web, mobile) 인지 찾기
-- Modify     :
-- 
-- =============================================================================

CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_FIND_PAT_GBN]
	@PAT_TID VARCHAR(250)
AS  
BEGIN  
	SET NOCOUNT ON  
		
	  SELECT  PAT_GUBUN
	  FROM  dbo.TB_ORDER_MASTER with (nolock)
	  WHERE PAT_TID = @PAT_TID
  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_ESCROW_SET]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDER_ESCROW_SET
주문건 ESCROW 일자 셋팅

파라미터 설명
@ORDER_IDX		-- MASTER 주문일련번호

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec SP_ADMIN_ORDER_ESCROW_SET 1, 'DELIVERY','20150827 245245'
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_ESCROW_SET]
 @ORDER_IDX	INT
 , @GUBUN VARCHAR(10)		-- DELIVERY / CONFIRM / CANCEL /CANCEL_OK (관리자확인)
 , @SET_DATE VARCHAR(15)	-- 셋팅시각
AS
BEGIN
	SET NOCOUNT ON

	IF @GUBUN = 'DELIVERY'
	BEGIN
		UPDATE TB_ORDER_MASTER
		SET INIESCROW_DELIVERY = @SET_DATE
		, ESCROW_USER_CMD = 'D'
		WHERE ORDER_IDX = @ORDER_IDX
	END
	ELSE IF @GUBUN = 'CONFIRM'
	BEGIN
		UPDATE TB_ORDER_MASTER
		SET INIESCROW_CONFIRM = @SET_DATE
		, ESCROW_USER_CMD = 'M'
		WHERE ORDER_IDX = @ORDER_IDX
	END
	ELSE IF @GUBUN = 'CANCEL'
	BEGIN
		UPDATE TB_ORDER_MASTER
		SET INIESCROW_CANCEL = @SET_DATE
		, ESCROW_USER_CMD = 'C'
		WHERE ORDER_IDX = @ORDER_IDX
	END
	ELSE IF @GUBUN = 'CANCEL_OK' --관리자거절확인
	BEGIN
		UPDATE TB_ORDER_MASTER
		SET ESCROW_USER_DATE = getdate()
		, ESCROW_USER_CMD = 'E'
		WHERE ORDER_IDX = @ORDER_IDX
	END

	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_DETAIL_STATUS_CHANGE]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDER_DETAIL_STATUS_CHANGE
관리자페이지에서 주문내역 조회
MASTER의 상태도 변경될수 있음

파라미터 설명
@ORDER_DETAIL_IDX		-- DETAIL 주문상세일련번호
@TOBE_STATUS			-- 바꾸려는 상태코드
@REG_ID			-- 처리자ID(관리자)

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec SP_ADMIN_ORDER_DETAIL_STATUS_CHANGE 3,'40','222'


SELECT * FROM TB_ORDER_LOG
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_DETAIL_STATUS_CHANGE]
 @ORDER_DETAIL_IDX	INT
,@TOBE_STATUS VARCHAR(2)
,@REG_ID VARCHAR(13)
AS
BEGIN
	SET NOCOUNT ON

	UPDATE TB_ORDER_DETAIL
	SET ORDER_DETAIL_STATUS = @TOBE_STATUS
		, ORDER_DETAIL_STATUS_DATE = GETDATE()
	WHERE ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX
	;
	
	DECLARE @OM_ORDER_IDX INT
			, @OM_ORDER_CODE VARCHAR(20)
			, @P_NAME VARCHAR(100)
			, @OM_ORDER_STATUS CHAR(2)
			, @OM_STATUS_CNT INT
	
	SELECT @OM_ORDER_IDX = ORDER_IDX
		, @OM_ORDER_CODE = ORDER_CODE
		, @P_NAME = P_NAME
	FROM TB_ORDER_DETAIL
	WHERE ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX
	
	SELECT @OM_ORDER_STATUS = MAX(ORDER_DETAIL_STATUS)
		, @OM_STATUS_CNT = COUNT(DISTINCT ORDER_DETAIL_STATUS)
	FROM TB_ORDER_DETAIL
	WHERE ORDER_IDX = @OM_ORDER_IDX


	UPDATE TB_ORDER_MASTER
	SET ORDER_STATUS = CASE WHEN @OM_STATUS_CNT = 1 THEN @OM_ORDER_STATUS ELSE '99' END
	WHERE ORDER_IDX = @OM_ORDER_IDX


	-- 로그생성
	INSERT INTO TB_ORDER_LOG
	( ORDER_IDX, ORDER_CODE, PROCESS_MEMO, REG_ID )
	SELECT @OM_ORDER_IDX
		, @OM_ORDER_CODE
		, '[' + @P_NAME + ']상품의 상태를 ' +
			CASE	WHEN @TOBE_STATUS = '10' THEN '결제대기'
				WHEN @TOBE_STATUS = '20' THEN '결제완료'
				WHEN @TOBE_STATUS = '30' THEN '상품준비중'
				WHEN @TOBE_STATUS = '40' THEN '배송중'
				WHEN @TOBE_STATUS = '50' THEN '배송완료'
				WHEN @TOBE_STATUS = '60' THEN '구매확정'
				WHEN @TOBE_STATUS = '70' THEN '교환'
				WHEN @TOBE_STATUS = '80' THEN '반품'
				WHEN @TOBE_STATUS = '90' THEN '취소'
				ELSE '코드오류' END + '(으)로 변경'
		, @REG_ID


	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_MASTER_STATUS_CHANGE]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDER_MASTER_STATUS_CHANGE
관리자페이지에서 주문내역 조회
MASTER가 변경된면 DETAIL의 상태도 함께 변경시킴

파라미터 설명
@ORDER_IDX		-- MASTER 주문일련번호
@TOBE_STATUS	-- 바꾸려는 상태코드
@REG_ID			-- 처리자ID(관리자)

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL
SELECT * FROM TB_ORDER_LOG
exec SP_ADMIN_ORDER_MASTER_STATUS_CHANGE 1,'30','222'

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_MASTER_STATUS_CHANGE]
 @ORDER_IDX	INT
,@TOBE_STATUS VARCHAR(2)
,@REG_ID VARCHAR(13)
AS
BEGIN
	SET NOCOUNT ON

	UPDATE TB_ORDER_DETAIL
	SET ORDER_DETAIL_STATUS = @TOBE_STATUS
		, ORDER_DETAIL_STATUS_DATE = GETDATE()
	WHERE ORDER_IDX = @ORDER_IDX
	;

	UPDATE TB_ORDER_MASTER
	SET ORDER_STATUS = @TOBE_STATUS
	WHERE ORDER_IDX = @ORDER_IDX


	-- 로그생성
	DECLARE @ORDER_CODE VARCHAR(20)
	SELECT @ORDER_CODE = A.ORDER_CODE
	FROM TB_ORDER_MASTER A WITH (NOLOCK)
	WHERE A.ORDER_IDX = @ORDER_IDX
	
	INSERT INTO TB_ORDER_LOG
	( ORDER_IDX, ORDER_CODE, PROCESS_MEMO, REG_ID )
	SELECT @ORDER_IDX
		, @ORDER_CODE
		, CASE	WHEN @TOBE_STATUS = '10' THEN '결제대기'
				WHEN @TOBE_STATUS = '20' THEN '결제완료'
				WHEN @TOBE_STATUS = '30' THEN '상품준비중'
				WHEN @TOBE_STATUS = '40' THEN '배송중'
				WHEN @TOBE_STATUS = '50' THEN '배송완료'
				WHEN @TOBE_STATUS = '60' THEN '구매확정'
				WHEN @TOBE_STATUS = '70' THEN '교환'
				WHEN @TOBE_STATUS = '80' THEN '반품'
				WHEN @TOBE_STATUS = '90' THEN '취소'
				WHEN @TOBE_STATUS = '99' THEN '기타'
				ELSE '코드오류' END + '(으)로 주문상태 일괄변경'
		, @REG_ID
	
	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_MANAGER_MEMO_EDIT]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDER_MANAGER_MEMO_EDIT
관리자페이지에서 주문상세내역별로 송장번호 입력
해당상태가 상품준비중일경우는 배송중으로 상태변경

파라미터 설명
@ORDER_IDX				-- MASTER 주문일련번호
@MANAGER_MEMO			-- 관리자메모

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec SP_ADMIN_ORDER_MANAGER_MEMO_EDIT 1,'관리자메모를 입력하자'

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_MANAGER_MEMO_EDIT]
 @ORDER_IDX	INT
,@MANAGER_MEMO VARCHAR(2000)
AS
BEGIN
	SET NOCOUNT ON

	UPDATE TB_ORDER_MASTER
	SET MANAGER_MEMO = @MANAGER_MEMO
	WHERE ORDER_IDX = @ORDER_IDX
	;
	
	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_VIEW]    Script Date: 09/11/2015 16:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-08-06
-- Description:	관리자- 임직원기준DB-1건 상세 (ComplexType 을 위해)
-- ussage: exec SP_ADMIN_MEMBER_STAFF_BASE_VIEW 'S0001'
-- =============================================
CREATE procedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_VIEW]
 @STAFF_ID		VARCHAR(50) =''
AS
BEGIN

	select 
		[IDX]
		,[STAFF_COMPANY]
		,[STAFF_ID]
		,[STAFF_NAME]
		,[INS_DATE]
		,[WORK_TEMP_ID]	 
	FROM  TB_MEMBER_STAFF_BASE with (nolock) 
	WHERE STAFF_ID=@STAFF_ID ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_TMP_UPD]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-08-06
-- Description:	관리자- 임직원기준DB-임시작업용 TBL 처리결과반영
-- ussage: exec [SP_ADMIN_MEMBER_STAFF_BASE_TMP_UPD] 0,'추가'
-- =============================================
CREATE procedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_TMP_UPD]
 @IDX	int =	-1 
,@APP_RESULT	varchar(10)	='' -- 처리결과

AS
BEGIN

	--APP_RESULT : 적용결과(준비/추가/중복오류/기타오류)

	UPDATE TB_MEMBER_STAFF_BASE_TMP 
	SET APP_RESULT = @APP_RESULT
	WHERE (IDX=@IDX) ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_TMP_LIST]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-08-06
-- Description:	관리자- 임직원기준DB-임시작업용 TBL 목록
-- ussage: exec [SP_ADMIN_MEMBER_STAFF_BASE_TMP_LIST] 'B20150810_105113_hneZ'
-- =============================================
CREATE procedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_TMP_LIST]
 @WORK_TEMP_ID		VARCHAR(30) =''
AS
BEGIN

	select 
		[IDX]
		,[STAFF_COMPANY]
		,[STAFF_ID]
		,[STAFF_NAME]
		,[INS_DATE]
		,[WORK_TEMP_ID]	 
		,[APP_RESULT]	 ----APP_RESULT : 적용결과(준비/추가/중복오류/기타오류)
		,[ADM_ID]	 
		,[IP]	 
	FROM  TB_MEMBER_STAFF_BASE_TMP with (nolock) 
	WHERE WORK_TEMP_ID=@WORK_TEMP_ID
	order by IDX ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_TMP_INS]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-08-06
-- Description:	관리자- 임직원기준DB-임시작업용 TBL INSERT
-- ussage: exec [SP_ADMIN_MEMBER_STAFF_BASE_TMP_INS]
-- =============================================
CREATE procedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_TMP_INS]
 @STAFF_COMPANY	varchar(50)	='' -- 회사
,@STAFF_ID	varchar(50)	='' -- 사번
,@STAFF_NAME	varchar(50)	='' -- 임직원이름
,@WORK_TEMP_ID	varchar(30)	='' -- 작업ID
,@ADM_ID	varchar(13)	='' -- 관리자ID
,@IP	varchar(20)	='' -- IP

,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.

AS
BEGIN

	--APP_RESULT : 적용결과(준비/추가/중복오류/기타오류)

	INSERT INTO TB_MEMBER_STAFF_BASE_TMP 
		(STAFF_COMPANY,STAFF_ID,STAFF_NAME,INS_DATE,WORK_TEMP_ID,APP_RESULT,ADM_ID,IP)
	values
		(@STAFF_COMPANY,@STAFF_ID,@STAFF_NAME,getdate(),@WORK_TEMP_ID,'준비',@ADM_ID,@IP);

	SET @ERR_CODE = @@ERROR;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_TMP_CNT]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-08-06
-- Description:	관리자- 임직원기준DB-임시작업용 TBL 목록 CNT
-- ussage: exec [SP_ADMIN_MEMBER_STAFF_BASE_TMP_CNT] 'W20150806_181622_1234'
-- =============================================
CREATE procedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_TMP_CNT]
 @WORK_TEMP_ID		VARCHAR(30) =''
 ,@APP_RESULT VARCHAR(10)=''
AS
BEGIN

	IF @APP_RESULT=''
	begin
		select count([IDX]) as COUNT
		FROM  TB_MEMBER_STAFF_BASE_TMP with (nolock) 
		WHERE (WORK_TEMP_ID=@WORK_TEMP_ID) ;
	end
	else
	begin
		select count([IDX]) as COUNT
		FROM  TB_MEMBER_STAFF_BASE_TMP with (nolock) 
		WHERE (WORK_TEMP_ID=@WORK_TEMP_ID) AND (APP_RESULT=@APP_RESULT) ;
	end


END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_SEL]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-08-06
-- Description:	관리자- 임직원기준DB-목록
-- ussage: exec SP_ADMIN_MEMBER_STAFF_BASE_SEL '2015-05-01','2015-05-30','','','IDX','DESC',1,10
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_SEL]
 @DATE_FROM	varchar(10)	='' -- YYYY-MM-DD  --등록기간
,@DATE_TO	varchar(10)	='' -- YYYY-MM-DD  --등록기간

,@SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@SORT_COL	varchar(50)	='IDX' 
,@SORT_DIR	varchar(4)	='DESC' 

,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈
AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ	INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	int
	)

	 
	set @v_SQL_WHERE = ' (1=1) '


	--IF @DATE_FROM<>'' AND @DATE_TO <>''  
	--	set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (INS_DATE < ''' + @DATE_TO +' 23:59:59'' AND INS_DATE > ''' + @DATE_FROM +''') '  

	IF @DATE_FROM<>'' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (INS_DATE >= ''' + @DATE_FROM  +''') '  
	IF @DATE_TO <>''  
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (INS_DATE <= ''' + @DATE_TO +' 23:59:59'') '  

	
	IF @SEARCH_COL <>'' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
 

	set @v_SQL_ORDERBY = ' ' + @SORT_COL  + ' ' + @SORT_DIR 
 
 --print @v_SQL_WHERE;
	 
	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	set @v_SQL  ='insert into #TEMPLIST (IDX_TMP) '
	set @v_SQL  =@v_SQL + ' SELECT  IDX ';
	set @v_SQL  =@v_SQL + ' FROM TB_MEMBER_STAFF_BASE WITH (NOLOCK) ';
	set @v_SQL  =@v_SQL + ' WHERE ' +  @v_SQL_WHERE ;
	set @v_SQL  =@v_SQL + '	ORDER BY ' + @v_SQL_ORDERBY ;
	exec(@v_SQL);


	SET ROWCOUNT 0 ;


	SELECT 	
		[IDX]
		,[STAFF_COMPANY]
		,[STAFF_ID]
		,[STAFF_NAME]
		,[INS_DATE]
		,[WORK_TEMP_ID]
	from [TB_MEMBER_STAFF_BASE] a with (nolock)
		inner join #TEMPLIST t on a.IDX = t.IDX_TMP
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 



END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_INS]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-08-06
-- Description:	관리자- 임직원기준DB-등록
-- ussage: exec SP_ADMIN_MEMBER_STAFF_BASE_INS 'OO회사','s00001','홍길동','W20150806_173355_1234' ,@ERR_CODE;
-- =============================================
CREATE procedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_INS]
 @STAFF_COMPANY	varchar(50)	='' -- 회사
,@STAFF_ID	varchar(50)	='' -- 사번
,@STAFF_NAME	varchar(50)	='' -- 임직원이름
,@WORK_TEMP_ID	varchar(30)	='' -- 작업ID

,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.

AS
BEGIN
	if exists(select STAFF_ID from TB_MEMBER_STAFF_BASE with(nolock) where STAFF_ID=@STAFF_ID)
		begin
			SET @ERR_CODE = 10; --이미 존재하는 사번
		end
	else
		begin
			INSERT INTO TB_MEMBER_STAFF_BASE 
				(STAFF_COMPANY,STAFF_ID,STAFF_NAME,INS_DATE,WORK_TEMP_ID)
			values
				(@STAFF_COMPANY,@STAFF_ID,@STAFF_NAME,getdate(),@WORK_TEMP_ID);

			SET @ERR_CODE = @@ERROR;
		 end

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_DUP_CHECK]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-08-06
-- Description:	관리자- 임직원기준DB-사번중복확인
-- ussage: exec SP_ADMIN_MEMBER_STAFF_BASE_DUP_CHECK 'S0001'
-- =============================================
CREATE procedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_DUP_CHECK]
 @STAFF_ID		VARCHAR(50) =''
,@ERR_CODE	INT OUTPUT	--처리중 오류코드, 0:중복없음. 1:중복됨.(이미 있음)
AS
BEGIN

	set @ERR_CODE=0 ; --일단 중복없음 
	IF exists(select STAFF_ID FROM  TB_MEMBER_STAFF_BASE with (nolock) WHERE STAFF_ID=@STAFF_ID)
	BEGIN
		set @ERR_CODE=1 ;
	END

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_DEL]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-08-06
-- Description:	관리자- 임직원기준DB-삭제
-- ussage: exec SP_ADMIN_MEMBER_STAFF_BASE_DEL 0
-- =============================================
CREATE procedure [dbo].[SP_ADMIN_MEMBER_STAFF_BASE_DEL]
 @IDX		INT =-1
,@ERR_CODE	INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN


	DELETE 
	FROM  TB_MEMBER_STAFF_BASE 
	WHERE IDX=@IDX ;

	SET @ERR_CODE = @@ERROR;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_DETAIL_DELIVERY_NUM_INPUT]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDER_DETAIL_DELIVERY_NUM_INPUT
관리자페이지에서 주문상세내역별로 송장번호 입력
해당상태가 상품준비중일경우는 배송중으로 상태변경

파라미터 설명
@ORDER_DETAIL_IDX		-- DETAIL 주문상세일련번호
@DELIVERY_NUM			-- 송장번호
@REG_ID			-- 처리자ID(관리자)

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec SP_ADMIN_ORDER_DETAIL_DELIVERY_NUM_INPUT 3,'송장일련번호111','222'

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_DETAIL_DELIVERY_NUM_INPUT]
 @ORDER_DETAIL_IDX	INT
,@DELIVERY_NUM VARCHAR(40)
,@REG_ID VARCHAR(13)
AS
BEGIN
	SET NOCOUNT ON

	UPDATE TB_ORDER_DETAIL
	SET DELIVERY_NUM = @DELIVERY_NUM
		, DELIVERY_DATE = GETDATE()
	WHERE ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX
	;
	
	-- 송장번호입력에 대한 로그생성
	DECLARE @ORDER_IDX INT
		, @ORDER_CODE VARCHAR(20)
	SELECT @ORDER_IDX = A.ORDER_IDX, @ORDER_CODE = A.ORDER_CODE
	FROM TB_ORDER_MASTER A WITH (NOLOCK), TB_ORDER_DETAIL B WITH (NOLOCK)
	WHERE A.ORDER_IDX = B.ORDER_IDX
	AND B.ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX
	
	INSERT INTO TB_ORDER_LOG
	( ORDER_IDX, ORDER_CODE, PROCESS_MEMO, REG_ID )
	SELECT @ORDER_IDX
		, @ORDER_CODE
		, '제품명 ['+P_NAME+']에 송장번호['+@DELIVERY_NUM+'] 입력'
		, @REG_ID
	FROM TB_ORDER_DETAIL
	WHERE ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX
	
	
	
	DECLARE @ASIS_ORDER_STATUS CHAR(2)
	
	SELECT @ASIS_ORDER_STATUS = ORDER_DETAIL_STATUS
	FROM TB_ORDER_DETAIL
	WHERE ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX

	IF @ASIS_ORDER_STATUS = '30'
	BEGIN

		UPDATE TB_ORDER_DETAIL
		SET ORDER_DETAIL_STATUS = '40'
			, ORDER_DETAIL_STATUS_DATE = GETDATE()
		WHERE ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX
		;
		INSERT INTO TB_ORDER_LOG
		( ORDER_IDX, ORDER_CODE, PROCESS_MEMO, REG_ID )
		SELECT @ORDER_IDX
			, @ORDER_CODE
			, '제품명 ['+P_NAME+'] 배송중으로 상태변경'
			, @REG_ID
		FROM TB_ORDER_DETAIL
		WHERE ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX
		;
		
		DECLARE @OM_ORDER_IDX INT
				, @OM_ORDER_STATUS CHAR(2)
				, @OM_STATUS_CNT INT
		
		SELECT @OM_ORDER_IDX = ORDER_IDX
		FROM TB_ORDER_DETAIL
		WHERE ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX
		
		SELECT @OM_ORDER_STATUS = MAX(ORDER_DETAIL_STATUS)
			, @OM_STATUS_CNT = COUNT(DISTINCT ORDER_DETAIL_STATUS)
		FROM TB_ORDER_DETAIL
		WHERE ORDER_IDX = @OM_ORDER_IDX


		UPDATE TB_ORDER_MASTER
		SET ORDER_STATUS = CASE WHEN @OM_STATUS_CNT = 1 THEN @OM_ORDER_STATUS ELSE '99' END
		WHERE ORDER_IDX = @OM_ORDER_IDX

	END

	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_REQUST_VIEW]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-08
-- Description:	관리자- 임직원신청내역- 상세1건
-- ussage: exec SP_ADMIN_MEMBER_STAFF_REQUST_VIEW 1
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_MEMBER_STAFF_REQUST_VIEW]
 @IDX	int =-1

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------

	select 
		[IDX],
		[M_ID],
		[M_NAME],
		[M_GRADE],
		[INS_DATE],
		[STAFF_COMPANY],
		[STAFF_ID],
		[STAFF_NAME],
		[REQ_COMMENT],
		[STATUS],
		[PROC_DATE],
		[PROC_COMMENT],
		[PROC_ADM_ID]
	from TB_MEMBER_STAFF_REQUST with (nolock)
	where IDX=@IDX ;



	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_REQUST_UPD]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-08
-- Description:	관리자- 임직원신청내역- 수정(슨인/반려처리)
-- ussage: exec SP_ADMIN_MEMBER_STAFF_REQUST_UPD 1,'승인','코멘트...'
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_MEMBER_STAFF_REQUST_UPD]
 @IDX	int =-1
 ,@STATUS varchar(10)=''  -- 처리상태(접수/승인/반려)
 ,@PROC_COMMENT varchar(500)=''
 ,@PROC_ADM_ID varchar(13)=''

 ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------
	declare @M_ID varchar(13);
	declare @STAFF_ID varchar(50);
	declare @STAFF_COMPANY varchar(50);

	set @M_ID='';

	select @M_ID=M_ID ,@STAFF_ID=STAFF_ID,@STAFF_COMPANY=STAFF_COMPANY
	from TB_MEMBER_STAFF_REQUST where (IDX=@IDX );  

	--승인시 회원 정보 반영
	IF @STATUS='승인'   -- 접수->승인: 회원정보 임직원 처리
	begin
		IF(@M_ID <>'') --회원 정보 임직원으로 변경
		  update TB_MEMBER 
		  set M_GBN='S' ,M_STAFF_ID=@STAFF_ID, M_STAFF_COMPANY=@STAFF_COMPANY,M_STAFF_APPROV_DATE=getdate()
		  where (M_ID=@M_ID) AND (M_IS_RETIRE='N') AND (M_GBN <>'S');
	end

	/*  ==>반려는 회원정보 반영에서 제외
	IF @STATUS='반려'   
	begin
		IF(@M_ID <>'') --회원 정보 임직원 박탈
		  update TB_MEMBER 
		  set M_GBN='A' ,M_STAFF_ID='', M_STAFF_COMPANY='',M_STAFF_APPROV_DATE=null
		  where (M_ID=@M_ID) AND (M_IS_RETIRE='N') AND (M_GBN ='S');
	end
	*/


	--승인 or 반려 :요청내용 상태변경
	update TB_MEMBER_STAFF_REQUST
	set 
		[STATUS]=@STATUS
		,PROC_COMMENT=@PROC_COMMENT
		,PROC_ADM_ID=@PROC_ADM_ID
		,PROC_DATE=getdate()
	where IDX=@IDX ;

	SET @ERR_CODE = @@ERROR;

	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_REQUST_SEL]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-08
-- Description:	관리자- 임직원신청내역- 목록
-- ussage: exec SP_ADMIN_MEMBER_STAFF_REQUST_SEL '','','','M_ID','aaaa','IDX','DESC',1,10
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_MEMBER_STAFF_REQUST_SEL]
 @DATE_FROM	varchar(10)	='' -- YYYY-MM-DD  --신청기간
,@DATE_TO	varchar(10)	='' -- YYYY-MM-DD  --신청기간
,@STATUS varchar(10) =''   --  처리상태: 접수/승인/반려/공란(ALL)

,@SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@SORT_COL	varchar(50)	='IDX' 
,@SORT_DIR	varchar(4)	='DESC' 

,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	int
	)

	 
	set @v_SQL_WHERE = ' (1=1) '

	--IF @DATE_FROM<>'' AND @DATE_TO <>''  
	--	set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (INS_DATE < ''' + @DATE_TO +' 23:59:59'' AND INS_DATE > ''' + @DATE_FROM +''') '  

	IF @DATE_FROM<>'' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (INS_DATE >= ''' + @DATE_FROM  +''') '  
	IF @DATE_TO <>''  
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (INS_DATE <= ''' + @DATE_TO +' 23:59:59'') '  


	IF @STATUS<>''
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( STATUS  = ''' + @STATUS + ''') ' ;

	IF @SEARCH_COL <>'' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') ' ;

	set @v_SQL_ORDERBY = ' ' + @SORT_COL  + ' ' + @SORT_DIR 
 
	 
	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	set @v_SQL  ='insert into #TEMPLIST (IDX_TMP) '
	set @v_SQL  =@v_SQL + ' SELECT  IDX ';
	set @v_SQL  =@v_SQL + ' FROM TB_MEMBER_STAFF_REQUST WITH (NOLOCK) ';
	set @v_SQL  =@v_SQL + ' WHERE ' +  @v_SQL_WHERE ;
	set @v_SQL  =@v_SQL + '	ORDER BY ' + @v_SQL_ORDERBY ;
	exec(@v_SQL);


	SET ROWCOUNT 0 ;

	



	SELECT 	
	[IDX],
	[M_ID],
	[M_NAME],
	[M_GRADE],
	[INS_DATE],
	[STAFF_COMPANY],
	[STAFF_ID],
	[STAFF_NAME],
	[REQ_COMMENT],
	[STATUS],
	[PROC_DATE],
	[PROC_COMMENT],
	[PROC_ADM_ID]
	from TB_MEMBER_STAFF_REQUST a with (nolock)
		inner join #TEMPLIST t on a.IDX = t.IDX_TMP
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_REQUST_REF_REQUEST]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-08
-- Description:	관리자- 임직원신청내역-참조정보 사번기준 연관정보3.임직원 신청이력
-- ussage:
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_MEMBER_STAFF_REQUST_REF_REQUEST]
 @STAFF_ID	varchar(50)	='' -- 임직원 사번

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 

	--사번으로 회원 DB
	SELECT M_ID,M_NAME,M_GRADE,INS_DATE,STAFF_ID,STAFF_COMPANY,STAFF_NAME,STATUS,PROC_DATE,PROC_COMMENT
	from TB_MEMBER_STAFF_REQUST with(nolock)
	where STAFF_ID =@STAFF_ID
	order by IDX desc ;
	 	 
		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_REQUST_REF_MEMBER]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-08
-- Description:	관리자- 임직원신청내역-참조정보 사번기준 연관정보2.회원DB
-- ussage:
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_MEMBER_STAFF_REQUST_REF_MEMBER]
 @STAFF_ID	varchar(50)	='' -- 임직원 사번

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 

	--사번으로 회원 DB
	SELECT M_ID,M_NAME,M_GRADE,M_GBN,M_STAFF_ID,M_STAFF_COMPANY,M_STAFF_APPROV_DATE,M_IS_RETIRE,M_DEL_DATE,M_CREDATE
	from TB_MEMBER with(nolock)
	where M_STAFF_ID =@STAFF_ID
	order by M_CREDATE desc ;
	 	 
		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_STAFF_REQUST_REF_BASEDB]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-08
-- Description:	관리자- 임직원신청내역-참조정보 사번기준 연관정보1.임직원 기준DB
-- ussage:
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_MEMBER_STAFF_REQUST_REF_BASEDB]
 @STAFF_ID	varchar(50)	='' -- 임직원 사번

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 

	--사번으로 임직원 DB
	SELECT STAFF_COMPANY,STAFF_ID,STAFF_NAME,INS_DATE
	from TB_MEMBER_STAFF_BASE with (nolock)
	where (STAFF_ID =@STAFF_ID)
	order by IDX desc ;
	 	 
		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_SLEEPING_SEL]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-08-11
-- Description:	관리자> 휴면계정 관리- 목록
-- ussage: exec [SP_ADMIN_MEMBER_SLEEPING_SEL] '2015-05-01','','','M_LASTVISITDATE','DESC',1,10
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_MEMBER_SLEEPING_SEL]
@M_LASTVISITDATE	varchar(10)	='' -- YYYY-MM-DD  --최종 로그인 일
,@SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@SORT_COL	varchar(50)	='M_LASTVISITDATE' 
,@SORT_DIR	varchar(4)	='DESC' 

,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		M_ID_TMP	varchar(13)
	)

	 if(@M_LASTVISITDATE='')
		SELECT @M_LASTVISITDATE = Left(CONVERT(VARCHAR, DATEADD(month,-12,getdate()), 120),10);  -- 기본 1년이전 로그인  

	 
	set @v_SQL_WHERE = ' (1=1) '
	set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (M_LASTVISITDATE <= ''' + @M_LASTVISITDATE +' 23:59:59'') '  


	IF @SEARCH_COL <>'' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
 

	set @v_SQL_ORDERBY = ' ' + @SORT_COL  + ' ' + @SORT_DIR 
 
 -- print @v_SQL_WHERE;
	 
	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	set @v_SQL  ='insert into #TEMPLIST (M_ID_TMP) '
	set @v_SQL  =@v_SQL + ' SELECT  M_ID ';
	set @v_SQL  =@v_SQL + ' FROM TB_MEMBER WITH (NOLOCK) ';
	set @v_SQL  =@v_SQL + ' WHERE ' +  @v_SQL_WHERE ;
	set @v_SQL  =@v_SQL + '	ORDER BY ' + @v_SQL_ORDERBY ;
	exec(@v_SQL);


	SET ROWCOUNT 0 ;


	SELECT 	
	[M_NO],
	[M_ID],
	[M_NAME],
	[M_PWD],
	[M_GRADE],
	[M_SEX],
	[M_BIRTHDAY],
	[M_MOBILE],
	[M_PHONE],
	[M_EMAIL],
	[M_ZIPCODE],
	[M_ADDR1],
	[M_ADDR2],
	[M_ISSMS],
	[M_ISEMAIL],
	[M_ISDM],
	[M_POINT],
	[M_CREDATE],
	[M_VISITCNT],
	[M_LASTVISITDATE],
	[M_UPDATEDATE],
	[M_JOIN_MODE],
	[M_DI],
	[M_SKIN_TROUBLE_CD],
	[M_AGREE],
	[M_AGREE2],
	[M_GBN],
	[M_STAFF_COMPANY],
	[M_STAFF_ID],
	[M_STAFF_APPROV_DATE],
	[M_IS_RETIRE],
	[M_DEL_DATE],
	[M_DEL_POINT],
	[M_DEL_REASON]
	--,
	--[ZZ_OLD_PWD_MD5],
	--[ZZ_ETC1],
	--[ZZ_ETC2],
	--[ZZ_ETC3]
	from TB_MEMBER a with (nolock)
		inner join #TEMPLIST t on a.M_ID = t.M_ID_TMP
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_VIEW]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 [SP_ADMIN_EVENT_VIEW]
어드민의 기획전 관리 조회

SELECT * FROM TB_EXHIBIT

exec [SP_ADMIN_EVENT_VIEW]  1
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_EXHIBIT_VIEW]
@IDX INT
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT 
		a.IDX
		,a.EXHIBIT_NAME
		,a.FROM_DATE
		,a.FROM_TIME
		,a.TO_DATE
		,a.TO_TIME
		,a.EXHIBIT_GBN
		,a.WEB_CONTENTS
		,a.MOBILE_FILE
		,a.WEB_BANNER
		,a.MOBILE_BANNER
		,a.USE_YN
		,a.ADM_ID
		,a.REG_DATE
	FROM TB_EXHIBIT a
	WHERE a.IDX = @IDX
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_UPD]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EXHIBIT_UPD
어드민의 기획전관리페이지에서 기획전 수정

SELECT * FROM TB_EXHIBIT

EXEC SP_ADMIN_EXHIBIT_UPD  1,'테스트기획전1_수정','2015-08-01','00','2015-08-31','22','A','웹기획전내용','모바일기획전 파일위치','웹배너파일위치','모바일배너파일위치','Y','kmg5302'
EXEC SP_ADMIN_EXHIBIT_UPD  2,'테스트기획전2','2015-08-01','00','2015-08-31','24','A','웹기획전내용','모바일기획전 파일위치','웹배너파일위치','모바일배너파일위치','N','kmg5302'


*/


CREATE PROC [dbo].[SP_ADMIN_EXHIBIT_UPD]
@IDX INT						-- EXHIBIT테이블 PK
,@EXHIBIT_NAME VARCHAR(200)		-- 기획전명   ( 회원아이디 )
,@FROM_DATE CHAR(10)			-- 기획전 시작일   ( ex) 2015-08-05 )
,@FROM_TIME CHAR(2) = '00'		-- 기획전 시작시각   ( 시각만 저장 )
,@TO_DATE CHAR(10)				-- 기획전 종료일   ( ex) 2015-08-05 )
,@TO_TIME CHAR(2) = '00'		-- 기획전 종료시각   ( 시각만 저장 )
,@EXHIBIT_GBN CHAR(1) = 'A'		-- 기획전 구분   ( A:전체,  W:Web,  M:Mobile )
,@WEB_CONTENTS TEXT				-- 웹기획전 상세내용
,@MOBILE_FILE VARCHAR(255)		-- 모바일기획전 내용파일
,@WEB_BANNER VARCHAR(255)		-- 웹배너파일
,@MOBILE_BANNER VARCHAR(255)	-- 모바일배너파일
,@USE_YN CHAR(1) = 'N'			-- 전시구분   ( Y:전시  N:비전시 )
,@ADM_ID VARCHAR(20)			-- 등록자ID
AS
BEGIN

SET NOCOUNT ON ;

UPDATE TB_EXHIBIT
SET EXHIBIT_NAME = @EXHIBIT_NAME
	, FROM_DATE = @FROM_DATE
	, FROM_TIME = @FROM_TIME
	, TO_DATE = @TO_DATE
	, TO_TIME = @TO_TIME
	, EXHIBIT_GBN = @EXHIBIT_GBN
	, WEB_CONTENTS = @WEB_CONTENTS
	, MOBILE_FILE = @MOBILE_FILE
	, WEB_BANNER = @WEB_BANNER
	, MOBILE_BANNER = @MOBILE_BANNER
	, USE_YN = @USE_YN
	, ADM_ID = @ADM_ID
	, REG_DATE = GETDATE()
WHERE IDX = @IDX

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_TAB_UPD]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EXHIBIT_TAB_UPD
어드민의 기획전관리페이지에서 기획전의 탭 등록

SELECT * FROM TB_EXHIBIT
SELECT * FROM TB_EXHIBIT_TAB

EXEC SP_ADMIN_EXHIBIT_TAB_UPD  1,'테스트기획전1_탭1_수정',1,'KMG'
EXEC SP_ADMIN_EXHIBIT_TAB_UPD  2,'테스트기획전2_탭2_수정',0,'KMG'


*/
CREATE PROC [dbo].[SP_ADMIN_EXHIBIT_TAB_UPD]
@IDX INT						-- 수정할 탭의 IDX
,@TAB_NAME VARCHAR(200)			-- 탭명
,@DISPLAY_ORDER INT = 0			-- 전시순서
,@ADM_ID VARCHAR(20)			-- 등록자ID
AS
BEGIN
	SET NOCOUNT ON ;

	IF @DISPLAY_ORDER = 0
	BEGIN
		UPDATE TB_EXHIBIT_TAB 
		SET DISPLAY_ORDER = @DISPLAY_ORDER
		WHERE IDX = @IDX

		SELECT @DISPLAY_ORDER = ISNULL(MAX(A.DISPLAY_ORDER),0) + 1
		FROM TB_EXHIBIT_TAB A WITH (NOLOCK)
		WHERE A.EXHIBIT_IDX = ( SELECT B.EXHIBIT_IDX FROM TB_EXHIBIT_TAB B WITH (NOLOCK) WHERE B.IDX = @IDX )
	END

	UPDATE TB_EXHIBIT_TAB 
	SET TAB_NAME = @TAB_NAME
		, DISPLAY_ORDER = @DISPLAY_ORDER
		, ADM_ID = @ADM_ID
		, REG_DATE = GETDATE()
	WHERE IDX = @IDX
	

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_TAB_SEL]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EXHIBIT_TAB_INS
어드민의 기획전관리페이지에서 기획전의 탭 목록

SELECT * FROM TB_EXHIBIT
SELECT * FROM TB_EXHIBIT_TAB

EXEC [SP_ADMIN_EXHIBIT_TAB_SEL]  1

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_EXHIBIT_TAB_SEL]
@EXHIBIT_IDX INT				-- 등록할 탭의 기획전IDX
AS
BEGIN
	SET NOCOUNT ON ;

	
	SELECT A.IDX
		, A.EXHIBIT_IDX
		, A.TAB_NAME
		, ISNULL(B.P_COUNT,0) AS PRODUCT_COUNT
		, A.DISPLAY_ORDER
	FROM TB_EXHIBIT_TAB A WITH (NOLOCK)
		LEFT OUTER JOIN (
			SELECT B.TAB_IDX AS TAB_IDX, COUNT(*) AS P_COUNT
			FROM TB_EXHIBIT_TAB_PRODUCT B WITH (NOLOCK)
			GROUP BY B.TAB_IDX
		) B
		ON A.IDX = B.TAB_IDX
	WHERE EXHIBIT_IDX = @EXHIBIT_IDX
	ORDER BY DISPLAY_ORDER ASC
	
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_TAB_PRODUCT_UPD]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EXHIBIT_TAB_PRODUCT_UPD
어드민의 기획전관리페이지에서 기획전의 탭에 상품 전시순서 변경

SELECT * FROM TB_EXHIBIT
SELECT * FROM TB_EXHIBIT_TAB
SELECT * FROM TB_EXHIBIT_TAB_PRODUCT
SELECT * FROM TB_PRODUCT_INFO

EXEC SP_ADMIN_EXHIBIT_TAB_PRODUCT_UPD  1,3,'KMG'
EXEC SP_ADMIN_EXHIBIT_TAB_PRODUCT_UPD  2,1,'KMG'
EXEC SP_ADMIN_EXHIBIT_TAB_PRODUCT_UPD  3,0,'KMG'


*/
CREATE PROC [dbo].[SP_ADMIN_EXHIBIT_TAB_PRODUCT_UPD]
@IDX INT					-- TB_EXHIBIT_TAB_PRODUCT의 IDX
,@DISPLAY_ORDER INT = 0		-- 전시순서
,@ADM_ID VARCHAR(20)		-- 등록자ID
AS
BEGIN
	SET NOCOUNT ON ;

	IF @DISPLAY_ORDER = 0
	BEGIN
		UPDATE TB_EXHIBIT_TAB_PRODUCT 
		SET DISPLAY_ORDER = @DISPLAY_ORDER
		WHERE IDX = @IDX

		SELECT @DISPLAY_ORDER = ISNULL(MAX(A.DISPLAY_ORDER),0) + 1
		FROM TB_EXHIBIT_TAB_PRODUCT A WITH (NOLOCK)
		WHERE A.TAB_IDX = ( SELECT B.TAB_IDX FROM TB_EXHIBIT_TAB_PRODUCT B WITH (NOLOCK) WHERE B.IDX = @IDX )
	END

	UPDATE TB_EXHIBIT_TAB_PRODUCT 
	SET DISPLAY_ORDER = @DISPLAY_ORDER
		, ADM_ID = @ADM_ID
		, REG_DATE = GETDATE()
	WHERE IDX = @IDX



END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EVENT_VIEW]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 [SP_ADMIN_EVENT_VIEW]
어드민의 이벤트관리페이지 이벤트 조회

SELECT * FROM TB_EVENT

exec [SP_ADMIN_EVENT_VIEW]  1
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_EVENT_VIEW]
@IDX INT
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT 
		a.IDX
		,a.EVENT_NAME
		,a.FROM_DATE
		,a.FROM_TIME
		,a.TO_DATE
		,a.TO_TIME
		,a.EVENT_GBN
		,a.WEB_CONTENTS
		,a.MOBILE_FILE
		,a.WEB_BANNER
		,a.MOBILE_BANNER
		,a.USE_YN
		,a.ADM_ID
		,a.REG_DATE
	FROM TB_EVENT a WITH (NOLOCK)
	WHERE a.IDX = @IDX
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EVENT_UPD]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EVENT_UPD
어드민의 이벤트관리페이지에서 이벤트 수정

SELECT * FROM TB_EVENT

EXEC SP_ADMIN_EVENT_UPD  1,'테스트이벤트1_수정','2015-08-01','00','2015-08-31','22','A','웹이벤트내용','모바일이벤트 파일위치','웹배너파일위치','모바일배너파일위치','Y','kmg5302'
EXEC SP_ADMIN_EVENT_UPD  2,'테스트이벤트2','2015-08-01','00','2015-08-31','24','A','웹이벤트내용','모바일이벤트 파일위치','웹배너파일위치','모바일배너파일위치','N','kmg5302'


*/


CREATE PROC [dbo].[SP_ADMIN_EVENT_UPD]
@IDX INT						-- EVENT테이블 PK
,@EVENT_NAME VARCHAR(200)		-- 이벤트명   ( 회원아이디 )
,@FROM_DATE CHAR(10)			-- 이벤트 시작일   ( ex) 2015-08-05 )
,@FROM_TIME CHAR(2) = '00'		-- 이벤트 시작시각   ( 시각만 저장 )
,@TO_DATE CHAR(10)				-- 이벤트 종료일   ( ex) 2015-08-05 )
,@TO_TIME CHAR(2) = '00'		-- 이벤트 종료시각   ( 시각만 저장 )
,@EVENT_GBN CHAR(1) = 'A'		-- 이벤트 구분   ( A:전체,  W:Web,  M:Mobile )
,@WEB_CONTENTS TEXT				-- 웹이벤트 상세내용
,@MOBILE_FILE VARCHAR(255)		-- 모바일이벤트 내용파일
,@WEB_BANNER VARCHAR(255)		-- 웹배너파일
,@MOBILE_BANNER VARCHAR(255)	-- 모바일배너파일
,@USE_YN CHAR(1) = 'N'			-- 전시구분   ( Y:전시  N:비전시 )
,@ADM_ID VARCHAR(20)			-- 등록자ID
AS
BEGIN

SET NOCOUNT ON ;

UPDATE TB_EVENT
SET EVENT_NAME = @EVENT_NAME
	, FROM_DATE = @FROM_DATE
	, FROM_TIME = @FROM_TIME
	, TO_DATE = @TO_DATE
	, TO_TIME = @TO_TIME
	, EVENT_GBN = @EVENT_GBN
	, WEB_CONTENTS = @WEB_CONTENTS
	, MOBILE_FILE = @MOBILE_FILE
	, WEB_BANNER = @WEB_BANNER
	, MOBILE_BANNER = @MOBILE_BANNER
	, USE_YN = @USE_YN
	, ADM_ID = @ADM_ID
	, REG_DATE = GETDATE()
WHERE IDX = @IDX

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EVENT_SEL]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EVENT_SEL
어드민의 이벤트관리페이지에서 리스트조회시

SELECT * FROM TB_EVENT

exec SP_ADMIN_EVENT_SEL  '2015-08-05','2015-08-05','0','A','EVENT_NAME','이벤트'
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_EVENT_SEL]
@FROM_DATE CHAR(10)			-- 이벤트 시작일   ( ex) 2015-08-05 )
,@TO_DATE CHAR(10)			-- 이벤트 종료일   ( ex) 2015-08-05 )
,@ING_GBN CHAR(1)			-- 진행구분  0:전체, 1:예약, 2:진행, 3:종료
,@USE_YN CHAR(1)			-- 전시구분 A:전체, Y:전시, N:비전시
,@SEARCH_COL VARCHAR(50)	='' 
,@SEARCH_KEYWORD VARCHAR(50)	='' 
,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈
AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ; 
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  --print 'drop...'
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

--SELECT CONVERT(CHAR(13), GETDATE(), 121 )
--	, FROM_DATE + ' ' + FROM_TIME 
--FROM TB_EVENT
--WHERE FROM_DATE + ' ' + FROM_TIME  <= '2015-08-05' + ' 00'

	SET @v_SQL_WHERE = ' WHERE (1=1)' 
	
	IF @FROM_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  <= ''' + @FROM_DATE + ''' + '' 00'') '
	END
	IF @TO_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  >= ''' + @TO_DATE + ''' + '' 00'') '
	END
	IF @ING_GBN = '1'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  > CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @ING_GBN = '2'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 ) ) '
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @ING_GBN = '3'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  < CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @USE_YN <> 'A'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( USE_YN = ''' + @USE_YN + ''' ) '
	END
	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
	END

	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @v_SQL  ='INSERT INTO #TEMPLIST (IDX_TMP) '
	SET @v_SQL  =@v_SQL + ' SELECT  IDX ';
	SET @v_SQL  =@v_SQL + ' FROM TB_EVENT WITH (NOLOCK) ';
	SET @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	SET @v_SQL  =@v_SQL + '	ORDER BY IDX DESC ';
	EXEC(@v_SQL);

	-- PRINT @v_SQL
	SET ROWCOUNT 0 ;

	



	SELECT A.IDX
		, A.EVENT_NAME
		, A.FROM_DATE
		, FROM_TIME
		, TO_DATE
		, TO_TIME
		, CASE WHEN A.FROM_DATE + ' ' + A.FROM_TIME  > CONVERT(CHAR(13), GETDATE(), 121 ) THEN '예약'
			   WHEN A.TO_DATE + ' ' + A.TO_TIME  < CONVERT(CHAR(13), GETDATE(), 121 ) THEN '종료'
			   WHEN ( A.FROM_DATE + ' ' + A.FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 ) )
					AND ( A.TO_DATE + ' ' + A.TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 ) ) THEN '진행'
			   ELSE '날짜오류' END AS STATUS
		, EVENT_GBN
		, WEB_CONTENTS
		, MOBILE_FILE
		, WEB_BANNER
		, MOBILE_BANNER
		, USE_YN
		, ADM_ID
		, REG_DATE
	FROM TB_EVENT A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T on A.IDX = T.IDX_TMP
	WHERE t.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END	 
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EVENT_MAIN_VIEW]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EVENT_MAIN_VIEW
어드민의 이벤트관리페이지 이벤트 조회

SELECT * FROM TB_EVENT_MAIN

exec SP_ADMIN_EVENT_MAIN_VIEW
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_EVENT_MAIN_VIEW]
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT TOP 1
		IDX
		, MAIN_IMG1
		, MAIN_URL1
		, MAIN_IMG2
		, MAIN_URL2
		, MAIN_IMG3
		, MAIN_URL3
		, MAIN_IMG4
		, MAIN_URL4
		, MAIN_IMG5
		, MAIN_URL5
		, RIGHT_IMG
		, RIGHT_URL
		, MIDDLE_IMG1
		, MIDDLE_URL1
		, MIDDLE_TITLE1
		, MIDDLE_DESC1
		, MIDDLE_IMG2
		, MIDDLE_URL2
		, MIDDLE_TITLE2
		, MIDDLE_DESC2
		, MIDDLE_IMG3
		, MIDDLE_URL3
		, MIDDLE_TITLE3
		, MIDDLE_DESC3
		, MIDDLE_IMG4
		, MIDDLE_URL4
		, ADM_ID
		, REG_DATE
	FROM TB_EVENT_MAIN A WITH (NOLOCK)
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_TAB_PRODUCT_INS]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EXHIBIT_TAB_PRODUCT_INS
어드민의 기획전관리페이지에서 기획전의 탭에 상품 등록

SELECT * FROM TB_EXHIBIT
SELECT * FROM TB_EXHIBIT_TAB
SELECT * FROM TB_EXHIBIT_TAB_PRODUCT
SELECT * FROM TB_PRODUCT_INFO

EXEC SP_ADMIN_EXHIBIT_TAB_PRODUCT_INS  1,'RAA00001',0,'KMG',1
EXEC SP_ADMIN_EXHIBIT_TAB_PRODUCT_INS  1,'RAA00002',3,'KMG',1
EXEC SP_ADMIN_EXHIBIT_TAB_PRODUCT_INS  1,'RAA00003',0,'KMG',1


*/
CREATE PROC [dbo].[SP_ADMIN_EXHIBIT_TAB_PRODUCT_INS]
@TAB_IDX INT					-- 등록할 탭의 IDX
,@P_CODE VARCHAR(200)			-- 상품코드
,@DISPLAY_ORDER INT = 0			-- 전시순서
,@ADM_ID VARCHAR(20)			-- 등록자ID

,@NEW_IDX INT OUTPUT
AS
BEGIN
	SET NOCOUNT ON ;

	DECLARE @EXHIBIT_IDX INT
	
	SELECT @EXHIBIT_IDX = EXHIBIT_IDX
	FROM TB_EXHIBIT_TAB WITH (NOLOCK)
	WHERE IDX = @TAB_IDX

	IF @DISPLAY_ORDER = 0
	BEGIN
		SELECT @DISPLAY_ORDER = ISNULL(MAX(DISPLAY_ORDER),0) + 1
		FROM TB_EXHIBIT_TAB_PRODUCT WITH (NOLOCK)
		WHERE EXHIBIT_IDX = @EXHIBIT_IDX
		AND TAB_IDX = @TAB_IDX
	END


	INSERT INTO TB_EXHIBIT_TAB_PRODUCT 
		(	EXHIBIT_IDX
			, TAB_IDX
			, P_CODE
			, DISPLAY_ORDER
			, ADM_ID
			, REG_DATE
		)
	VALUES
		(	@EXHIBIT_IDX
			, @TAB_IDX
			, @P_CODE
			, @DISPLAY_ORDER
			, @ADM_ID
			, GETDATE());


	SELECT @NEW_IDX = SCOPE_IDENTITY() ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_TAB_PRODUCT_DEL]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EXHIBIT_TAB_PRODUCT_DEL
어드민의 기획전관리페이지에서 기획전의 탭에 상품 삭제

SELECT * FROM TB_EXHIBIT
SELECT * FROM TB_EXHIBIT_TAB
SELECT * FROM TB_EXHIBIT_TAB_PRODUCT
SELECT * FROM TB_PRODUCT_INFO

EXEC SP_ADMIN_EXHIBIT_TAB_PRODUCT_DEL  3

*/
CREATE PROC [dbo].[SP_ADMIN_EXHIBIT_TAB_PRODUCT_DEL]
@IDX INT					-- TB_EXHIBIT_TAB_PRODUCT의 IDX
AS
BEGIN
	SET NOCOUNT ON ;

	DELETE 
	FROM TB_EXHIBIT_TAB_PRODUCT 
	WHERE IDX = @IDX

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_TAB_PRODUCT_ALLDEL]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EXHIBIT_TAB_PRODUCT_DEL
어드민의 기획전관리페이지에서 기획전의 탭에 상품 전체 삭제


*/
CREATE PROC [dbo].[SP_ADMIN_EXHIBIT_TAB_PRODUCT_ALLDEL]
@TAB_IDX INT			
AS
BEGIN
	SET NOCOUNT ON ;

	DELETE 
	FROM TB_EXHIBIT_TAB_PRODUCT 
	WHERE TAB_IDX = @TAB_IDX

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_TAB_ORDER_UPD]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EXHIBIT_TAB_ORDER_UPD
어드민의 기획전관리페이지에서 기획전의 탭 등록

SELECT * FROM TB_EXHIBIT
SELECT * FROM TB_EXHIBIT_TAB

EXEC SP_ADMIN_EXHIBIT_TAB_ORDER_UPD  1,0,'KMG'
EXEC SP_ADMIN_EXHIBIT_TAB_ORDER_UPD  2,0,'KMG'


*/
CREATE PROC [dbo].[SP_ADMIN_EXHIBIT_TAB_ORDER_UPD]
@IDX INT						-- 수정할 탭의 IDX
,@DISPLAY_ORDER INT = 0			-- 전시순서
,@ADM_ID VARCHAR(20)			-- 등록자ID
AS
BEGIN
	SET NOCOUNT ON ;

	IF @DISPLAY_ORDER = 0
	BEGIN
		UPDATE TB_EXHIBIT_TAB 
		SET DISPLAY_ORDER = @DISPLAY_ORDER
		WHERE IDX = @IDX

		SELECT @DISPLAY_ORDER = ISNULL(MAX(A.DISPLAY_ORDER),0) + 1
		FROM TB_EXHIBIT_TAB A WITH (NOLOCK)
		WHERE A.EXHIBIT_IDX = ( SELECT B.EXHIBIT_IDX FROM TB_EXHIBIT_TAB B WITH (NOLOCK) WHERE B.IDX = @IDX )
	END

	UPDATE TB_EXHIBIT_TAB 
	SET DISPLAY_ORDER = @DISPLAY_ORDER
		, ADM_ID = @ADM_ID
		, REG_DATE = GETDATE()
	WHERE IDX = @IDX
	

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_TAB_INS]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EXHIBIT_TAB_INS
어드민의 기획전관리페이지에서 기획전의 탭 등록

SELECT * FROM TB_EXHIBIT
SELECT * FROM TB_EXHIBIT_TAB

EXEC SP_ADMIN_EXHIBIT_TAB_INS  1,'테스트기획전1_탭1',0,'KMG',1
EXEC SP_ADMIN_EXHIBIT_TAB_INS  1,'테스트기획전2_탭2',3,'KMG',1


*/
CREATE PROC [dbo].[SP_ADMIN_EXHIBIT_TAB_INS]
@EXHIBIT_IDX INT				-- 등록할 탭의 기획전IDX
,@TAB_NAME VARCHAR(200)			-- 탭명
,@DISPLAY_ORDER INT = 0			-- 전시순서
,@ADM_ID VARCHAR(20)			-- 등록자ID

,@NEW_IDX INT OUTPUT
AS
BEGIN
	SET NOCOUNT ON ;

	IF @DISPLAY_ORDER = 0
	BEGIN
		SELECT @DISPLAY_ORDER = ISNULL(MAX(DISPLAY_ORDER),0) + 1
		FROM TB_EXHIBIT_TAB WITH (NOLOCK)
		WHERE EXHIBIT_IDX = @EXHIBIT_IDX
	END


	INSERT INTO TB_EXHIBIT_TAB 
		(	EXHIBIT_IDX
			, TAB_NAME
			, DISPLAY_ORDER
			, ADM_ID
			, REG_DATE
		)
	VALUES
		(	@EXHIBIT_IDX
			, @TAB_NAME
			, @DISPLAY_ORDER
			, @ADM_ID
			, GETDATE());


	SELECT @NEW_IDX = SCOPE_IDENTITY() ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_TAB_DEL]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EXHIBIT_TAB_DEL
어드민의 기획전관리페이지에서 기획전의 탭 삭제

SELECT * FROM TB_EXHIBIT
SELECT * FROM TB_EXHIBIT_TAB
SELECT * FROM TB_EXHIBIT_TAB_PRODUCT


EXEC SP_ADMIN_EXHIBIT_TAB_DEL  2

*/
CREATE PROC [dbo].[SP_ADMIN_EXHIBIT_TAB_DEL]
@IDX INT						-- 삭제할 탭의 IDX
AS
BEGIN
	SET NOCOUNT ON ;

	DELETE FROM TB_EXHIBIT_TAB_PRODUCT
	WHERE TAB_IDX = @IDX
	
	DELETE FROM TB_EXHIBIT_TAB
	WHERE IDX = @IDX

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_SEL]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EXHIBIT_SEL
어드민의 기획전관리페이지에서 리스트조회시

SELECT * FROM TB_EXHIBIT

exec SP_ADMIN_EXHIBIT_SEL  '2015-08-05','2015-08-05','0','A','EXHIBIT_NAME','기획전'
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_EXHIBIT_SEL]
@FROM_DATE CHAR(10)			-- 기획전 시작일   ( ex) 2015-08-05 )
,@TO_DATE CHAR(10)			-- 기획전 종료일   ( ex) 2015-08-05 )
,@ING_GBN CHAR(1)			-- 진행구분  0:전체, 1:예약, 2:진행, 3:종료
,@USE_YN CHAR(1)			-- 전시구분 A:전체, Y:전시, N:비전시
,@SEARCH_COL VARCHAR(50)	='' 
,@SEARCH_KEYWORD VARCHAR(50)	='' 
,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈
AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ; 
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  --print 'drop...'
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

--SELECT CONVERT(CHAR(13), GETDATE(), 121 )
--	, FROM_DATE + ' ' + FROM_TIME 
--FROM TB_EXHIBIT
--WHERE FROM_DATE + ' ' + FROM_TIME  <= '2015-08-05' + ' 00'

	SET @v_SQL_WHERE = ' WHERE (1=1)' 
	
	IF @FROM_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  <= ''' + @FROM_DATE + ''' + '' 00'') '
	END
	IF @TO_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  >= ''' + @TO_DATE + ''' + '' 00'') '
	END
	IF @ING_GBN = '1'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  > CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @ING_GBN = '2'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 ) ) '
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @ING_GBN = '3'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  < CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @USE_YN <> 'A'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( USE_YN = ''' + @USE_YN + ''' ) '
	END
	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
	END

	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @v_SQL  ='INSERT INTO #TEMPLIST (IDX_TMP) '
	SET @v_SQL  =@v_SQL + ' SELECT  IDX ';
	SET @v_SQL  =@v_SQL + ' FROM TB_EXHIBIT WITH (NOLOCK) ';
	SET @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	SET @v_SQL  =@v_SQL + '	ORDER BY IDX DESC ';
	EXEC(@v_SQL);

	-- PRINT @v_SQL
	SET ROWCOUNT 0 ;

	



	SELECT A.IDX
		, A.EXHIBIT_NAME
		, A.FROM_DATE
		, FROM_TIME
		, TO_DATE
		, TO_TIME
		, CASE WHEN A.FROM_DATE + ' ' + A.FROM_TIME  > CONVERT(CHAR(13), GETDATE(), 121 ) THEN '예약'
			   WHEN A.TO_DATE + ' ' + A.TO_TIME  < CONVERT(CHAR(13), GETDATE(), 121 ) THEN '종료'
			   WHEN ( A.FROM_DATE + ' ' + A.FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 ) )
					AND ( A.TO_DATE + ' ' + A.TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 ) ) THEN '진행'
			   ELSE '날짜오류' END AS STATUS
		, EXHIBIT_GBN
		, WEB_CONTENTS
		, MOBILE_FILE
		, WEB_BANNER
		, MOBILE_BANNER
		, USE_YN
		, ADM_ID
		, REG_DATE
	FROM TB_EXHIBIT A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T on A.IDX = T.IDX_TMP
	WHERE t.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END	 
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_INS]    Script Date: 09/11/2015 16:07:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EXHIBIT_INS
어드민의 기획전관리페이지에서 기획전 등록

SELECT * FROM TB_EXHIBIT

EXEC SP_ADMIN_EXHIBIT_INS  '테스트기획전1','2015-08-01','00','2015-08-31','22','A','웹기획전내용','모바일기획전 파일위치','웹배너파일위치','모바일배너파일위치','Y','kmg5302',1
EXEC SP_ADMIN_EXHIBIT_INS  '테스트기획전2','2015-08-01','00','2015-08-31','24','A','웹기획전내용','모바일기획전 파일위치','웹배너파일위치','모바일배너파일위치','N','kmg5302',1


*/


CREATE PROC [dbo].[SP_ADMIN_EXHIBIT_INS]
@EXHIBIT_NAME VARCHAR(200)		-- 기획전명   ( 회원아이디 )
,@FROM_DATE CHAR(10)			-- 기획전 시작일   ( ex) 2015-08-05 )
,@FROM_TIME CHAR(2) = '00'		-- 기획전 시작시각   ( 시각만 저장 )
,@TO_DATE CHAR(10)				-- 기획전 종료일   ( ex) 2015-08-05 )
,@TO_TIME CHAR(2) = '00'		-- 기획전 종료시각   ( 시각만 저장 )
,@EXHIBIT_GBN CHAR(1) = 'A'		-- 기획전 구분   ( A:전체,  W:Web,  M:Mobile )
,@WEB_CONTENTS TEXT				-- 웹기획전 상세내용
,@MOBILE_FILE VARCHAR(255)		-- 모바일기획전 내용파일
,@WEB_BANNER VARCHAR(255)		-- 웹배너파일
,@MOBILE_BANNER VARCHAR(255)	-- 모바일배너파일
,@USE_YN CHAR(1) = 'N'			-- 전시구분   ( Y:전시  N:비전시 )
,@ADM_ID VARCHAR(20)			-- 등록자ID

,@NEW_IDX INT OUTPUT
AS

SET NOCOUNT ON ;

INSERT INTO TB_EXHIBIT 
	(	EXHIBIT_NAME
		, FROM_DATE
		, FROM_TIME
		, TO_DATE
		, TO_TIME
		, EXHIBIT_GBN
		, WEB_CONTENTS
		, MOBILE_FILE
		, WEB_BANNER
		, MOBILE_BANNER
		, USE_YN
		, ADM_ID
		, REG_DATE
	)
VALUES
	(	@EXHIBIT_NAME
		, @FROM_DATE
		, @FROM_TIME
		, @TO_DATE
		, @TO_TIME
		, @EXHIBIT_GBN
		, @WEB_CONTENTS
		, @MOBILE_FILE
		, @WEB_BANNER
		, @MOBILE_BANNER
		, @USE_YN
		, @ADM_ID
		, GETDATE());


SELECT @NEW_IDX = SCOPE_IDENTITY() ;
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_REPORT_GRADE]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-08-13
-- Description:	관리자> 회원통계 - 구분/등급별 현황
-- ussage: exec [SP_ADMIN_MEMBER_REPORT_GRADE] 
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_MEMBER_REPORT_GRADE]
 
AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY
		,M_GRADE	varchar(1)
		,MEMBER_CNT_NORMAL	int default 0
		,MEMBER_CNT_STAFF	int default 0
		,MEMBER_CNT_ALL	int default 0
	)
	--등급 코드 준비
	insert into #TEMPLIST (M_GRADE,MEMBER_CNT_NORMAL,MEMBER_CNT_STAFF,MEMBER_CNT_ALL) values('B',0,0,0);
	insert into #TEMPLIST (M_GRADE,MEMBER_CNT_NORMAL,MEMBER_CNT_STAFF,MEMBER_CNT_ALL) values('S',0,0,0);
	insert into #TEMPLIST (M_GRADE,MEMBER_CNT_NORMAL,MEMBER_CNT_STAFF,MEMBER_CNT_ALL) values('G',0,0,0);
	insert into #TEMPLIST (M_GRADE,MEMBER_CNT_NORMAL,MEMBER_CNT_STAFF,MEMBER_CNT_ALL) values('V',0,0,0);

	--혹시모를 예외등급코드 준비
	insert into #TEMPLIST (M_GRADE,MEMBER_CNT_NORMAL,MEMBER_CNT_STAFF,MEMBER_CNT_ALL)
	select distinct M_GRADE,0,0,0 from TB_MEMBER  with (nolock) where (M_IS_RETIRE='N') and (M_GRADE not in ('B','S','G','V'));


	--등급별 회원수통계 업데이트 -일반회원
	update #TEMPLIST 
	set #TEMPLIST.MEMBER_CNT_NORMAL = b.CNT
	from (	select M_GRADE,isnull(COUNT(M_ID),0) as CNT 
			from TB_MEMBER  with (nolock) 
			where (M_IS_RETIRE='N') AND (M_GBN='A') --일반회원
			group by M_GRADE
		) b 
	where #TEMPLIST.M_GRADE=b.M_GRADE ;

	--등급별 회원수통계 업데이트 -임직원
	update #TEMPLIST 
	set #TEMPLIST.MEMBER_CNT_STAFF = b.CNT
	from (	select M_GRADE,isnull(COUNT(M_ID),0) as CNT 
			from TB_MEMBER  with (nolock) 
			where (M_IS_RETIRE='N') AND (M_GBN='S') --임직원
			group by M_GRADE
		) b 
	where #TEMPLIST.M_GRADE=b.M_GRADE ;

	--등급별 회원수통계 업데이트 -전체
	update #TEMPLIST 
	SET MEMBER_CNT_ALL = isnull(MEMBER_CNT_NORMAL,0) + isnull(MEMBER_CNT_STAFF,0) ;





	SELECT M_GRADE,MEMBER_CNT_NORMAL,MEMBER_CNT_STAFF,MEMBER_CNT_ALL
	FROM #TEMPLIST t 
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MAGAZINE_VIEW]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_MAGAZINE_VIEW
매거진 상세보기

SELECT * FROM TB_MAGAZINE

EXEC SP_ADMIN_MAGAZINE_VIEW 2

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_MAGAZINE_VIEW]
@IDX INT
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT 
		A.IDX
		, A.TITLE
		, A.SUB_TITLE
		, A.CONTENT_GBN
		, A.THUMB_IMG_PATH
		, A.IMG_PATH
		, A.MOVIE_URL
		, A.USE_YN
		, A.DISPLAY_ORDER
	FROM TB_MAGAZINE a WITH (NOLOCK)
	WHERE a.IDX = @IDX
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MAGAZINE_UPD]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_MAGAZINE_UPD
어드민의 매거진관리페이지에서 매거진 수정

SELECT * FROM TB_MAGAZINE

EXEC SP_ADMIN_MAGAZINE_UPD  1,'매거진테스트1_수정','서브타이틀111','I','/ERGHK/SERGER/ESG.JPG','',1,'Y','kmg5302'

*/
CREATE PROC [dbo].[SP_ADMIN_MAGAZINE_UPD]
@IDX INT						-- TB_MAGAZINE테이블 PK
,@TITLE VARCHAR(100)				-- 타이틀
,@SUB_TITLE VARCHAR(200)		-- 서브타이틀
,@CONTENT_GBN CHAR(1) = 'I'		-- 컨텐츠 종류   ( I:이미지  M:동영상 )
,@THUMB_IMG_PATH VARCHAR(200)  -- 썸네일이미지
,@IMG_PATH VARCHAR(200)			-- 이미지 경로
,@MOVIE_URL VARCHAR(200) 		-- 동영상 URL
,@DISPLAY_ORDER INT = 99		-- 전시순서
,@USE_YN CHAR(1) = 'N'			-- 전시구분   ( Y:전시  N:비전시 )
,@ADM_ID VARCHAR(20)			-- 등록자ID
AS
BEGIN

SET NOCOUNT ON ;

UPDATE TB_MAGAZINE
SET TITLE = @TITLE
	, SUB_TITLE = @SUB_TITLE
	, CONTENT_GBN = @CONTENT_GBN
	, THUMB_IMG_PATH = @THUMB_IMG_PATH
	, IMG_PATH = @IMG_PATH
	, MOVIE_URL = @MOVIE_URL
	, DISPLAY_ORDER = @DISPLAY_ORDER
	, USE_YN = @USE_YN
	, ADM_ID = @ADM_ID
	, REG_DATE = GETDATE()
WHERE IDX = @IDX

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MAGAZINE_SEL]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_MAGAZINE_SEL
어드민의 매거진관리페이지에서 리스트조회시

SELECT * FROM TB_MAGAZINE

exec SP_ADMIN_MAGAZINE_SEL 'A','TITLE','1'
exec SP_ADMIN_MAGAZINE_SEL 'A','SUB_TITLE','22'

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_MAGAZINE_SEL]
@USE_YN CHAR(1)			-- 전시구분 A:전체, Y:전시, N:비전시
,@SEARCH_COL VARCHAR(50)	='' 
,@SEARCH_KEYWORD VARCHAR(50)	='' 
,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈
AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ; 
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  --print 'drop...'
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

	SET @v_SQL_WHERE = ' WHERE (1=1)' 
	
	IF @USE_YN <> 'A'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( USE_YN = ''' + @USE_YN + ''' ) '
	END
	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
	END

	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @v_SQL  ='INSERT INTO #TEMPLIST (IDX_TMP) '
	SET @v_SQL  =@v_SQL + ' SELECT  IDX ';
	SET @v_SQL  =@v_SQL + ' FROM TB_MAGAZINE WITH (NOLOCK) ';
	SET @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	SET @v_SQL  =@v_SQL + '	ORDER BY IDX DESC ';
	EXEC(@v_SQL);

	-- PRINT @v_SQL
	SET ROWCOUNT 0 ;

	



	SELECT A.IDX
		, A.TITLE
		, A.SUB_TITLE
		, A.CONTENT_GBN
		, A.IMG_PATH
		, A.THUMB_IMG_PATH
		, A.MOVIE_URL
		, A.DISPLAY_ORDER
		, A.USE_YN
		, A.ADM_ID
		, A.REG_DATE
	FROM TB_MAGAZINE A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T on A.IDX = T.IDX_TMP
	WHERE t.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY A.DISPLAY_ORDER ASC, A.IDX DESC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END	 
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MAGAZINE_INS]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_MAGAZINE_INS
어드민의 매거진관리페이지에서 매거진 등록

SELECT * FROM TB_MAGAZINE

EXEC SP_ADMIN_MAGAZINE_INS  '매거진테스트1','서브타이틀111','I','/ERGHK/SERGER/ESG.JPG','',1,'Y','kmg5302',1
EXEC SP_ADMIN_MAGAZINE_INS  '매거진테스트2','서브타이틀222','M','','www.youtube.com/SDFJKHSFS/WEFH',2,'Y','kmg5302',1


*/

CREATE PROC [dbo].[SP_ADMIN_MAGAZINE_INS]
@TITLE VARCHAR(100)				-- 타이틀
,@SUB_TITLE VARCHAR(200)		-- 서브타이틀
,@CONTENT_GBN CHAR(1) = 'I'		-- 컨텐츠 종류   ( I:이미지  M:동영상 )
,@THUMB_IMG_PATH VARCHAR(200)   -- 썸네일이미지
,@IMG_PATH VARCHAR(200)			-- 이미지 경로
,@MOVIE_URL VARCHAR(200) 		-- 동영상 URL
,@DISPLAY_ORDER INT = 99		-- 전시순서
,@USE_YN CHAR(1) = 'N'			-- 전시구분   ( Y:전시  N:비전시 )
,@ADM_ID VARCHAR(20)			-- 등록자ID

,@NEW_IDX INT OUTPUT
AS

SET NOCOUNT ON ;

INSERT INTO TB_MAGAZINE 
	(	TITLE
		, SUB_TITLE
		, CONTENT_GBN
		, THUMB_IMG_PATH
		, IMG_PATH
		, MOVIE_URL
		, DISPLAY_ORDER
		, USE_YN
		, ADM_ID
		, REG_DATE
	)
VALUES
	(	@TITLE
		, @SUB_TITLE
		, @CONTENT_GBN
		, @THUMB_IMG_PATH
		, @IMG_PATH
		, @MOVIE_URL
		, @DISPLAY_ORDER
		, @USE_YN
		, @ADM_ID
		, GETDATE());


SELECT @NEW_IDX = SCOPE_IDENTITY() ;
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_LOG_INS]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 관리자 로그 (admin)
 * Modified  :   2015.06.15
 * Modified  :   2015.07.02
 ============================================================*/  
  
CREATE PROCEDURE [dbo].[SP_ADMIN_LOG_INS]

 @uid VARCHAR(20) = ''				--아이디
,@memo VARCHAR(8000)	 = ''		--로그data
,@comment VARCHAR(100)	 = ''		--comment:해당로그정보 ex>"단체가입"
,@url VARCHAR(500)	 = ''			--log url 정보 및 파라메터
,@userip VARCHAR(30)	 = ''		--사용자ip
,@userAgent VARCHAR(1000)	 = ''	--userAgent
,@urlReFerrer VARCHAR(1000)	 = ''	--urlReFerrer

AS  
 SET NOCOUNT ON  

	insert into TB_LOG_ADMIN
		 (	ADMIN_ID
			,MEMO
			,COMMENT
			,USERIP
			,URL
			,USER_AGENT
			,REF_URL
		) 
	 values (
	 		@uid
			,@memo
			,@comment 
			,@userip
			,@url
			,@userAgent
			,@urlReFerrer
	 	)

 SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_GIFT_UPD]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 사은품 수정 (admin)
 * Modified  :   2015.07.28
 * Modified  :   2015.08.18
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_ADMIN_GIFT_UPD]
@IDX				INT	--고유키
,@GIFT_NAME			VARCHAR(100)	=''		--사은품명
,@GIFT_COUNT		INT  = 0				--사은품 수량
,@GIFT_IMG			VARCHAR(100)	=''		--사은품 이미지
,@DISPLAY_YN		VARCHAR(1)		=''		--전시여부
,@INTRESULT			INT OUTPUT		--결과값
AS

 SET NOCOUNT ON
 
 
	 --사은품 UPDATE
	UPDATE TB_FREE_GIFT_INFO
	SET 
	 GIFT_NAME = @GIFT_NAME
	,GIFT_COUNT = @GIFT_COUNT
	,GIFT_IMG = @GIFT_IMG
    ,DISPLAY_YN = @DISPLAY_YN
	,UPD_DATE = getdate()
	 WHERE IDX				= @IDX
	 		
	SET @INTRESULT = @@ERROR
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_GIFT_SEL]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 사은품 리스트 (admin)
 * Modified  :   2015.07.28
  ============================================================*/  
CREATE PROCEDURE  [dbo].[SP_ADMIN_GIFT_SEL]
@PAGE				INT			--현재 PAGE
,@PAGESIZE			INT			--페이지 사이즈
,@SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드
,@SEARCH_DISPLAY_YN	VARCHAR(1) =''		--Y  전시, N 비전시, 값없을때 모든 데이타

AS

BEGIN

	SET NOCOUNT ON
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);

	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX ';
	SET @V_SQL  =@V_SQL + ' FROM TB_FREE_GIFT_INFO WITH (NOLOCK) '
	SET @V_SQL  =@V_SQL + '    WHERE 1=1 ';
		
	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
		BEGIN
		SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '
		END

	IF @SEARCH_DISPLAY_YN <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND DISPLAY_YN  = '''+@SEARCH_DISPLAY_YN+''' '
		END 	

	SET @V_SQL  =@V_SQL + '	ORDER BY IDX DESC' ;
	
	EXEC(@V_SQL);
	PRINT @V_SQL


	SET ROWCOUNT 0
	


	--사은품 정보 리스트 조회
	SELECT  A.IDX
			,A.GIFT_NAME
			,A.GIFT_COUNT
			,A.USED_COUNT
			,A.START_PRICE
			,A.END_PRICE
			,A.GIFT_IMG
			,A.DISPLAY_YN
			 ,CONVERT(VARCHAR(10),A.INS_DATE,121) AS REGDATE
	FROM TB_FREE_GIFT_INFO A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T ON A.IDX = T.IDX_SEQ 
			WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ
	
	DROP TABLE #TEMPLIST ;

	SET NOCOUNT OFF
	
	END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_GIFT_INS]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 사은품 등록 (admin)
 * Modified  :   2015.07.28
 * Modified  :   2015.08.18
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_ADMIN_GIFT_INS]

@GIFT_NAME			VARCHAR(100)	=''		--사은품명
,@GIFT_COUNT		INT  = 0				--사은품 수량
,@START_PRICE		INT	 = 0				--최소 구매금액 
,@END_PRICE			INT	 = 0				--최대 구매금액 
,@GIFT_IMG			VARCHAR(100)	=''		--최대 구매금액 
,@DISPLAY_YN		VARCHAR(1)		=''		--전시여부
,@INTRESULT			INT OUTPUT				--결과값

AS

SET NOCOUNT ON
	
	
	--카테고리 코드값 INSERT
	INSERT INTO TB_FREE_GIFT_INFO
	 (	GIFT_NAME
		,GIFT_COUNT
		,USED_COUNT
		,START_PRICE
		,END_PRICE
		,GIFT_IMG
		,DISPLAY_YN

	  ) 
	 values (
		@GIFT_NAME
		,@GIFT_COUNT
		,0
		,@START_PRICE
		,@END_PRICE
		,@GIFT_IMG
		,@DISPLAY_YN
	  )
	 		
	SET @INTRESULT = @@ERROR
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_GIFT_DETAIL_VIEW]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 사은품 상세내용 보기 (admin)
 * Modified  :   2015.07.28
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_ADMIN_GIFT_DETAIL_VIEW]
@IDX				INT = 0		--사은품 키

AS

 SET NOCOUNT ON
 
 		--사은품 상세 관리 VIEW
		SELECT  IDX
				,GIFT_NAME
				,GIFT_COUNT
				,USED_COUNT
				,START_PRICE
				,END_PRICE
				,GIFT_IMG
				,DISPLAY_YN
				,INS_DATE
 			 
		FROM TB_FREE_GIFT_INFO WITH (NOLOCK) 
		WHERE IDX = @IDX 

 SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_FRONT_MEMBER_UPD_STAFF]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-07
-- Description:	관리자> 회원관리- 수정:임직원정보
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_FRONT_MEMBER_UPD_STAFF]
	 @M_ID	varchar(13)	='' -- 회원계정
	,@M_GBN varchar(1)  ='A'
	,@M_STAFF_COMPANY varchar(50)  =''
	,@M_STAFF_ID varchar(50)  =''
	,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.

AS
BEGIN

	IF exists(select M_ID from TB_MEMBER with(NOLOCK) where (M_ID=@M_ID) AND (M_IS_RETIRE='N'))
	begin
		UPDATE TB_MEMBER
		set 
		 M_GBN	=	@M_GBN
		 ,M_STAFF_COMPANY	=	@M_STAFF_COMPANY
		 ,M_STAFF_ID	=	@M_STAFF_ID
		 ,M_UPDATEDATE = getdate()
		where (M_ID=@M_ID) AND (M_IS_RETIRE='N') ;

		SET @ERR_CODE = @@ERROR;

	end
	ELSE
	begin
		SET @ERR_CODE = 10;  -- 회원부재
	end 


END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_FRONT_MEMBER_UPD_RETIRE]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-07
-- Description:	관리자> 회원관리- 수정:탈퇴처리
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_FRONT_MEMBER_UPD_RETIRE]
	 @M_ID	varchar(13)	='' -- 회원계정
	,@M_IS_RETIRE varchar(1)  =''
	,@M_DEL_REASON varchar(2000)  =''
	,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.

AS
BEGIN
	declare  @nOLD_POINT int ; --삭제전 보유포인트

	set @nOLD_POINT =0;

	IF exists(select M_ID from TB_MEMBER with(NOLOCK) where (M_ID=@M_ID) AND (M_IS_RETIRE='N'))
	begin
		--기존 포인트 기억
		select @nOLD_POINT = isnull(M_POINT,0) from TB_MEMBER where (M_ID=@M_ID) AND (M_IS_RETIRE='N');

		UPDATE TB_MEMBER
		set 
		 M_IS_RETIRE	=	@M_IS_RETIRE
		 ,M_DEL_REASON	=	@M_DEL_REASON
		 ,M_DEL_DATE	=	getdate()
		 ,M_DEL_POINT =	@nOLD_POINT

		 -- 신상정보 초기화
		 ,M_POINT=0
		 ,M_DI=''
		 ,M_SEX=''
		 ,M_BIRTHDAY='--'
		 ,M_MOBILE='--'
		 ,M_PHONE='--'
		 ,M_EMAIL='@'
		 ,M_ZIPCODE=''
		 ,M_ADDR1=''
		 ,M_ADDR2=''

		 ,M_ISDM='N'
		 ,M_ISSMS='N'
		 ,M_ISEMAIL='N'
		 ,M_AGREE='N'
		 ,M_AGREE2='N'
		 ,M_JOIN_MODE=''

		where (M_ID=@M_ID) AND (M_IS_RETIRE='N') ;

		--탈퇴회원으로 이관
		insert into [TB_MEMBER_RETIRE]
			([M_NO],[M_ID],[M_NAME],[M_PWD],[M_GRADE],[M_SEX],[M_BIRTHDAY],[M_MOBILE],[M_PHONE],[M_EMAIL],[M_ZIPCODE],[M_ADDR1],[M_ADDR2],[M_ISSMS],[M_ISEMAIL],[M_ISDM],[M_POINT],[M_CREDATE],[M_VISITCNT],[M_LASTVISITDATE],[M_UPDATEDATE],[M_JOIN_MODE],[M_DI],[M_SKIN_TROUBLE_CD],[M_AGREE],[M_AGREE2],[M_GBN],[M_STAFF_COMPANY],[M_STAFF_ID],[M_STAFF_APPROV_DATE],[M_IS_RETIRE],[M_DEL_DATE],[M_DEL_POINT],[M_DEL_REASON],[M_DEVICE_GBN],[ZZ_OLD_PWD_MD5],[ZZ_ETC1],[ZZ_ETC2],[ZZ_ETC3])
		select [M_NO],[M_ID],[M_NAME],[M_PWD],[M_GRADE],[M_SEX],[M_BIRTHDAY],[M_MOBILE],[M_PHONE],[M_EMAIL],[M_ZIPCODE],[M_ADDR1],[M_ADDR2],[M_ISSMS],[M_ISEMAIL],[M_ISDM],[M_POINT],[M_CREDATE],[M_VISITCNT],[M_LASTVISITDATE],[M_UPDATEDATE],[M_JOIN_MODE],[M_DI],[M_SKIN_TROUBLE_CD],[M_AGREE],[M_AGREE2],[M_GBN],[M_STAFF_COMPANY],[M_STAFF_ID],[M_STAFF_APPROV_DATE],[M_IS_RETIRE],[M_DEL_DATE],[M_DEL_POINT],[M_DEL_REASON],[M_DEVICE_GBN],[ZZ_OLD_PWD_MD5],[ZZ_ETC1],[ZZ_ETC2],[ZZ_ETC3]
		from [TB_MEMBER]
		where M_IS_RETIRE='Y'

		--활동회원에서 제거
		delete from [TB_MEMBER] where M_IS_RETIRE='Y'

		SET @ERR_CODE = @@ERROR;

	end
	ELSE
	begin
		SET @ERR_CODE = 10;  -- 회원부재 or 이미 탈퇴
	end 


END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_FRONT_MEMBER_UPD_PWD]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-07
-- Description:	관리자> 회원관리- 수정:암호변경
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_FRONT_MEMBER_UPD_PWD]
	 @M_ID	varchar(13)	='' -- 회원계정
	,@M_PWD varchar(100)  ='' 
	,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.

AS
BEGIN
	IF(len(@M_PWD)<6)
	begin
	 SET @ERR_CODE =20;
	 return ;
	end

	IF exists(select M_ID from TB_MEMBER with(NOLOCK) where (M_ID=@M_ID) AND (M_IS_RETIRE='N') )
	begin
		UPDATE TB_MEMBER
		set 
		 M_PWD	=	@M_PWD
		,M_UPDATEDATE = getdate()
		where (M_ID=@M_ID) AND (M_IS_RETIRE='N') ;

		SET @ERR_CODE = @@ERROR;

	end
	ELSE
	begin
		SET @ERR_CODE = 10;  -- 회원부재
	end 


END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_FRONT_MEMBER_UPD_BASIC]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-07
-- Description:	관리자> 회원관리- 수정:기본정보
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_FRONT_MEMBER_UPD_BASIC]
	 @M_ID	varchar(13)	='' -- 회원계정
	,@M_GRADE varchar(1)  =''  -- 수정시 반영 안함 << 추후 사용을 대비
	,@M_MOBILE varchar(15)  =''
	,@M_PHONE varchar(15)  =''
	,@M_EMAIL varchar(100)  =''
	,@M_ZIPCODE varchar(7)  =''
	,@M_ADDR1 varchar(100)  =''
	,@M_ADDR2 varchar(100)  =''
	,@M_ISSMS char(1)  =''
	,@M_ISEMAIL char(1)  =''
	,@M_ISDM char(1)  =''

	,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.

AS
BEGIN

	IF not exists(select M_ID from TB_MEMBER with(NOLOCK) where (M_ID=@M_ID) AND (M_IS_RETIRE='N') )
	begin
		SET @ERR_CODE = 10;  -- 회원부재
		return @ERR_CODE ;
	end 

	IF exists(select M_ID from TB_MEMBER with(NOLOCK) where (M_ID<>@M_ID) AND (M_IS_RETIRE='N') AND (M_EMAIL=@M_EMAIL) )
	begin
		SET @ERR_CODE = 11;  -- EMAIL중복
		return @ERR_CODE ;
	end 

	--업데이트 
	UPDATE TB_MEMBER
	set 
		M_GRADE	=	@M_GRADE
	,M_MOBILE	=	@M_MOBILE
	,M_PHONE	=	@M_PHONE
	,M_EMAIL	=	@M_EMAIL
	,M_ZIPCODE	=	@M_ZIPCODE
	,M_ADDR1	=	@M_ADDR1
	,M_ADDR2	=	@M_ADDR2
	,M_ISSMS	=	@M_ISSMS
	,M_ISEMAIL	=	@M_ISEMAIL
	,M_ISDM	=	@M_ISDM

	,M_UPDATEDATE = getdate()
	where (M_ID=@M_ID) AND (M_IS_RETIRE='N') ;

	SET @ERR_CODE = @@ERROR;



END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_FRONT_MEMBER_UPD]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-01
-- Description:	관리자> 회원관리- 수정
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_FRONT_MEMBER_UPD]
	 @M_ID	varchar(13)	='' -- 회원계정
	,@M_GRADE varchar(1)  =''
	,@M_MOBILE varchar(15)  =''
	,@M_PHONE varchar(15)  =''
	,@M_EMAIL varchar(100)  =''
	,@M_ZIPCODE varchar(7)  =''
	,@M_ADDR1 varchar(100)  =''
	,@M_ADDR2 varchar(100)  =''
	,@M_ISSMS char(1)  =''
	,@M_ISEMAIL char(1)  =''
	,@M_ISDM char(1)  =''
	,@M_SKIN_TROUBLE_CD char(9)  =''
	,@M_GBN varchar(1)  ='A'
	,@M_STAFF_COMPANY varchar(50)  =''
	,@M_STAFF_ID varchar(50)  =''
	,@M_IS_RETIRE varchar(1)  ='N'
	,@M_DEL_REASON varchar(2000) =''

	,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.

AS
BEGIN

	IF exists(select M_ID from TB_MEMBER with(NOLOCK) where M_ID=@M_ID )
	begin
		UPDATE TB_MEMBER
		set 
		 M_GRADE	=	@M_GRADE
		,M_MOBILE	=	@M_MOBILE
		,M_PHONE	=	@M_PHONE
		,M_EMAIL	=	@M_EMAIL
		,M_ZIPCODE	=	@M_ZIPCODE
		,M_ADDR1	=	@M_ADDR1
		,M_ADDR2	=	@M_ADDR2
		,M_ISSMS	=	@M_ISSMS
		,M_ISEMAIL	=	@M_ISEMAIL
		,M_ISDM	=	@M_ISDM
		,M_SKIN_TROUBLE_CD	=	@M_SKIN_TROUBLE_CD
		,M_GBN	=	@M_GBN
		,M_STAFF_COMPANY	=	@M_STAFF_COMPANY
		,M_STAFF_ID	=	@M_STAFF_ID
		,M_IS_RETIRE	=	@M_IS_RETIRE
		,M_DEL_REASON	=	@M_DEL_REASON

		,M_UPDATEDATE = getdate()

		where M_ID=@M_ID ;

		SET @ERR_CODE = @@ERROR;

	end
	ELSE
	begin
		SET @ERR_CODE = 10;
	end 


END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_SAMPLE_VIEW]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_SAMPLE_VIEW
어드민의 샘플/체험단 관리페이지 이벤트 조회

SELECT * FROM TB_SAMPLE

EXEC SP_ADMIN_EVENT_VIEW  1
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_SAMPLE_VIEW]
@IDX INT
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT 
		a.IDX
		,a.SAMPLE_NAME
		,a.FROM_DATE
		,a.FROM_TIME
		,a.TO_DATE
		,a.TO_TIME
		,a.SAMPLE_GBN
		,a.WEB_CONTENTS
		,a.MOBILE_FILE
		,a.WEB_BANNER
		,a.MOBILE_BANNER
		,a.USE_YN
		,a.ADM_ID
		,a.REG_DATE
	FROM TB_SAMPLE a WITH (NOLOCK)
	WHERE a.IDX = @IDX
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_SAMPLE_UPD]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_SAMPLE_UPD
어드민의 샘플/체험단 관리페이지에서 이벤트 수정

SELECT * FROM TB_SAMPLE

EXEC SP_ADMIN_SAMPLE_UPD  1,'테스트 샘플_수정','2015-08-01','00','2015-08-31','22','A','웹내용','모바일 파일위치','웹배너파일위치','모바일배너파일위치','Y','kmg5302'
EXEC SP_ADMIN_SAMPLE_UPD  2,'테스트 체험단_수정','2015-08-01','00','2015-08-31','24','A','웹내용','모바일 파일위치','웹배너파일위치','모바일배너파일위치','N','kmg5302'


*/


CREATE PROC [dbo].[SP_ADMIN_SAMPLE_UPD]
@IDX INT						-- EVENT테이블 PK
,@SAMPLE_NAME VARCHAR(200)		-- 제목
,@FROM_DATE CHAR(10)			-- 신청 시작일   ( ex) 2015-08-05 )
,@FROM_TIME CHAR(2) = '00'		-- 신청 시작시각   ( 시각만 저장 )
,@TO_DATE CHAR(10)				-- 신청 종료일   ( ex) 2015-08-05 )
,@TO_TIME CHAR(2) = '00'		-- 신청 종료시각   ( 시각만 저장 )
,@SAMPLE_GBN CHAR(1) = 'A'		-- 샘플 구분   ( A:전체,  W:Web,  M:Mobile )
,@WEB_CONTENTS TEXT				-- 웹 상세내용
,@MOBILE_FILE VARCHAR(255)		-- 모바일 내용파일
,@WEB_BANNER VARCHAR(255)		-- 웹배너파일
,@MOBILE_BANNER VARCHAR(255)	-- 모바일배너파일
,@USE_YN CHAR(1) = 'N'			-- 전시구분   ( Y:전시  N:비전시 )
,@ADM_ID VARCHAR(20)			-- 등록자ID
AS
BEGIN

SET NOCOUNT ON ;

UPDATE TB_SAMPLE
SET SAMPLE_NAME = @SAMPLE_NAME
	, FROM_DATE = @FROM_DATE
	, FROM_TIME = @FROM_TIME
	, TO_DATE = @TO_DATE
	, TO_TIME = @TO_TIME
	, SAMPLE_GBN = @SAMPLE_GBN
	, WEB_CONTENTS = @WEB_CONTENTS
	, MOBILE_FILE = @MOBILE_FILE
	, WEB_BANNER = @WEB_BANNER
	, MOBILE_BANNER = @MOBILE_BANNER
	, USE_YN = @USE_YN
	, ADM_ID = @ADM_ID
	, REG_DATE = GETDATE()
WHERE IDX = @IDX

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_SAMPLE_SEL]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_SAMPLE_SEL
어드민의 이벤트관리페이지에서 리스트조회시

SELECT * FROM TB_SAMPLE

exec SP_ADMIN_SAMPLE_SEL  '2015-08-05','2015-08-05','0','A','SAMPLE_NAME','샘플'
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_SAMPLE_SEL]
@FROM_DATE CHAR(10)			-- 신청시작일   ( ex) 2015-08-05 )
,@TO_DATE CHAR(10)			-- 신청종료일   ( ex) 2015-08-05 )
,@ING_GBN CHAR(1)			-- 진행구분  0:전체, 1:예약, 2:진행, 3:종료
,@USE_YN CHAR(1)			-- 전시구분 A:전체, Y:전시, N:비전시
,@SEARCH_COL VARCHAR(50)	='' 
,@SEARCH_KEYWORD VARCHAR(50)	='' 
,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈
AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ; 
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  --print 'drop...'
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

--SELECT CONVERT(CHAR(13), GETDATE(), 121 )
--	, FROM_DATE + ' ' + FROM_TIME 
--FROM TB_EVENT
--WHERE FROM_DATE + ' ' + FROM_TIME  <= '2015-08-05' + ' 00'

	SET @v_SQL_WHERE = ' WHERE (1=1)' 
	
	IF @FROM_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  <= ''' + @FROM_DATE + ''' + '' 00'') '
	END
	IF @TO_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  >= ''' + @TO_DATE + ''' + '' 00'') '
	END
	IF @ING_GBN = '1'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  > CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @ING_GBN = '2'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( FROM_DATE + '' '' + FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 ) ) '
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @ING_GBN = '3'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( TO_DATE + '' '' + TO_TIME  < CONVERT(CHAR(13), GETDATE(), 121 ) ) '
	END
	IF @USE_YN <> 'A'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( USE_YN = ''' + @USE_YN + ''' ) '
	END
	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
	END

	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @v_SQL  ='INSERT INTO #TEMPLIST (IDX_TMP) '
	SET @v_SQL  =@v_SQL + ' SELECT  IDX ';
	SET @v_SQL  =@v_SQL + ' FROM TB_SAMPLE WITH (NOLOCK) ';
	SET @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	SET @v_SQL  =@v_SQL + '	ORDER BY IDX DESC ';
	EXEC(@v_SQL);

	-- PRINT @v_SQL
	SET ROWCOUNT 0 ;

	



	SELECT A.IDX
		, A.SAMPLE_NAME
		, A.FROM_DATE
		, FROM_TIME
		, TO_DATE
		, TO_TIME
		, CASE WHEN A.FROM_DATE + ' ' + A.FROM_TIME  > CONVERT(CHAR(13), GETDATE(), 121 ) THEN '예약'
			   WHEN A.TO_DATE + ' ' + A.TO_TIME  < CONVERT(CHAR(13), GETDATE(), 121 ) THEN '종료'
			   WHEN ( A.FROM_DATE + ' ' + A.FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 ) )
					AND ( A.TO_DATE + ' ' + A.TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 ) ) THEN '진행'
			   ELSE '날짜오류' END AS STATUS
		, SAMPLE_GBN
		, WEB_CONTENTS
		, MOBILE_FILE
		, WEB_BANNER
		, MOBILE_BANNER
		, USE_YN
		, ADM_ID
		, REG_DATE
	FROM TB_SAMPLE A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T on A.IDX = T.IDX_TMP
	WHERE t.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END	 
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_SAMPLE_MEMBER_SEL]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_SAMPLE_MEMBER_SEL
어드민의 샘플/체험단 신청자 리스트

SELECT * FROM TB_SAMPLE

SELECT * FROM TB_SAMPLE_MEMBER

exec SP_ADMIN_SAMPLE_MEMBER_SEL 1
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_SAMPLE_MEMBER_SEL]
@SAMPLE_IDX		INT
,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈
AS
BEGIN

	SET NOCOUNT ON

	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	INSERT INTO #TEMPLIST (IDX_TMP)
	SELECT  A.IDX
	FROM TB_SAMPLE_MEMBER A WITH (NOLOCK)
		INNER JOIN TB_MEMBER B WITH (NOLOCK)
			ON A.M_ID = B.M_ID
	WHERE A.SAMPLE_IDX = @SAMPLE_IDX
	ORDER BY A.IDX DESC
	
	SET ROWCOUNT 0 ;

	


	SELECT A.IDX
		, A.M_ID
		, B.M_NAME
		, B.M_GRADE
		, B.M_EMAIL
		, B.M_MOBILE
		, B.M_PHONE
		, B.M_ADDR1 + ' ' + B.M_ADDR2 AS M_ADDR
	FROM TB_SAMPLE_MEMBER A WITH (NOLOCK)
		INNER JOIN TB_MEMBER B WITH (NOLOCK)
			ON A.M_ID = B.M_ID
		INNER JOIN #TEMPLIST T 
			ON A.IDX = T.IDX_TMP
	WHERE t.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END	 
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_SAMPLE_MEMBER_CNT]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_SAMPLE_MEMBER_CNT
어드민의 샘플/체험단 신청자 건수

SELECT * FROM TB_SAMPLE

SELECT * FROM TB_SAMPLE_MEMBER

exec SP_ADMIN_SAMPLE_MEMBER_CNT 1
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_SAMPLE_MEMBER_CNT]
@SAMPLE_IDX INT
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT  COUNT(IDX) AS COUNT
	FROM TB_SAMPLE_MEMBER A WITH (NOLOCK)
		INNER JOIN TB_MEMBER B WITH (NOLOCK)
			ON A.M_ID = B.M_ID
	WHERE A.SAMPLE_IDX = @SAMPLE_IDX
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_SAMPLE_INS]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_SAMPLE_INS
어드민의 샘플/체험단 관리페이지에서 이벤트 등록

SELECT * FROM TB_SAMPLE

EXEC SP_ADMIN_SAMPLE_INS  '테스트 샘플','2015-08-01','00','2015-08-31','22','A','웹내용','모바일 파일위치','웹배너파일위치','모바일배너파일위치','Y','kmg5302',1
EXEC SP_ADMIN_SAMPLE_INS  '테스트 체험단2','2015-08-01','00','2015-08-31','24','A','웹내용','모바일 파일위치','웹배너파일위치','모바일배너파일위치','N','kmg5302',1


*/


CREATE PROC [dbo].[SP_ADMIN_SAMPLE_INS]
@SAMPLE_NAME VARCHAR(200)		-- 제목
,@FROM_DATE CHAR(10)			-- 신청 시작일   ( ex) 2015-08-05 )
,@FROM_TIME CHAR(2) = '00'		-- 신청 시작시각   ( 시각만 저장 )
,@TO_DATE CHAR(10)				-- 신청 종료일   ( ex) 2015-08-05 )
,@TO_TIME CHAR(2) = '00'		-- 신청 종료시각   ( 시각만 저장 )
,@SAMPLE_GBN CHAR(1) = 'A'		-- 샘플 구분   ( A:전체,  W:Web,  M:Mobile )
,@WEB_CONTENTS TEXT				-- 웹 상세내용
,@MOBILE_FILE VARCHAR(255)		-- 모바일 내용파일
,@WEB_BANNER VARCHAR(255)		-- 웹배너파일
,@MOBILE_BANNER VARCHAR(255)	-- 모바일배너파일
,@USE_YN CHAR(1) = 'N'			-- 전시구분   ( Y:전시  N:비전시 )
,@ADM_ID VARCHAR(20)			-- 등록자ID

,@NEW_IDX INT OUTPUT
AS

SET NOCOUNT ON ;

INSERT INTO TB_SAMPLE 
	(	SAMPLE_NAME
		, FROM_DATE
		, FROM_TIME
		, TO_DATE
		, TO_TIME
		, SAMPLE_GBN
		, WEB_CONTENTS
		, MOBILE_FILE
		, WEB_BANNER
		, MOBILE_BANNER
		, USE_YN
		, ADM_ID
		, REG_DATE
	)
VALUES
	(	@SAMPLE_NAME
		, @FROM_DATE
		, @FROM_TIME
		, @TO_DATE
		, @TO_TIME
		, @SAMPLE_GBN
		, @WEB_CONTENTS
		, @MOBILE_FILE
		, @WEB_BANNER
		, @MOBILE_BANNER
		, @USE_YN
		, @ADM_ID
		, GETDATE());


SELECT @NEW_IDX = SCOPE_IDENTITY() ;
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_RECALL_ANSWER_UPD]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_QNA

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_RECALL_ANSWER_UPD]
 @IDX	INT
,@ADM_ID VARCHAR(20) 
,@CONFIRM_CONTENTS TEXT
AS
BEGIN

	UPDATE TB_RECALL_BBS
	SET CONFIRM_CONTENTS = @CONFIRM_CONTENTS 
	, STATUS = 2
	, CONFIRM_DATE = GETDATE()
	, ADM_ID = @ADM_ID
	WHERE IDX = @IDX 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_QNA_VIEW]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_QNA

exec [SP_TB_QNA_VIEW] 1

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_QNA_VIEW]
 @IDX			INT
AS
BEGIN

	SET NOCOUNT ON
  
	SELECT a.IDX
	, a.CATEGORY 
	 , CASE WHEN a.CATEGORY = '1' THEN '상품문의' 
			WHEN a.CATEGORY = '2' THEN '배송관련' 
			WHEN a.CATEGORY = '3' THEN '구매관련' 
			WHEN a.CATEGORY = '4' THEN '반품관련' 
			WHEN a.CATEGORY = '5' THEN '회원관련' 
			WHEN a.CATEGORY = '6' THEN '이용문의'
			WHEN a.CATEGORY = '7' THEN '기타'
	   END AS CATEGORY_NM
	, a.TITLE 
	, a.QUESTION 
	, a.ANSWER 
	, a.STATUS 
	, CASE WHEN a.STATUS = '1' THEN '접수' 
		WHEN a.STATUS = '2' THEN '완료' 
	  END AS STATUS_NM
	, a.M_ID 
	, m.M_NAME
	, a.REG_DATE 
	, a.ANS_DATE
	FROM TB_QNA a with (nolock)
		left join TB_MEMBER m with (nolock) on a.M_ID = m.M_ID
	WHERE IDX = @IDX
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_QNA_SEL]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_QNA

exec [SP_ADMIN_QNA_SEL]  'TEST'
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_QNA_SEL]
 @SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@STATUS_YN 	CHAR(1) = 'A'
,@SORT_COL	varchar(50)	='IDX' 
,@SORT_DIR	varchar(4)	='DESC' 
,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈

AS
BEGIN
SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

	 
	set @v_SQL_WHERE = ' WHERE (1=1)'

	
	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '

	IF @STATUS_YN <> 'A'
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( STATUS = ''' + @STATUS_YN + ''') '
 
	set @v_SQL_ORDERBY = ' ' + @SORT_COL  + ' ' + @SORT_DIR 
 
	 
	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	set @v_SQL  ='insert into #TEMPLIST (IDX_TMP) '
	set @v_SQL  =@v_SQL + ' SELECT  IDX ';
	set @v_SQL  =@v_SQL + ' FROM TB_QNA WITH (NOLOCK) ';
	set @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	set @v_SQL  =@v_SQL + '	ORDER BY ' + @v_SQL_ORDERBY ; 
	exec(@v_SQL);


	SET ROWCOUNT 0 ;

	SELECT a.IDX
	 , a.CATEGORY
	 , CASE WHEN a.CATEGORY = '1' THEN '상품문의' 
			WHEN a.CATEGORY = '2' THEN '배송관련' 
			WHEN a.CATEGORY = '3' THEN '구매관련' 
			WHEN a.CATEGORY = '4' THEN '반품관련' 
			WHEN a.CATEGORY = '5' THEN '회원관련' 
			WHEN a.CATEGORY = '6' THEN '이용문의'
			WHEN a.CATEGORY = '7' THEN '기타'
	   END AS CATEGORY_NM
	 ,a.TITLE 
	 , a.QUESTION 
	 , a.ANSWER 
	 , a.STATUS 
	 , CASE WHEN a.STATUS = '1' THEN '접수' 
			WHEN a.STATUS = '2' THEN '완료' 
	   END AS STATUS_NM
	 , a.M_ID
	 , m.M_NAME 
	 , a.REG_DATE
	 , a.ANS_DATE
	from TB_QNA a with (nolock)
		inner join #TEMPLIST t on a.IDX = t.IDX_TMP
		left join TB_MEMBER m with (nolock) on a.M_ID = m.M_ID
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_QNA_MEMBER_SEL]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_QNA

exec [SP_ADMIN_QNA_MEMBER_SEL]  'test_b1s'
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_QNA_MEMBER_SEL]
 @M_ID	varchar(13)	
,@SORT_COL	varchar(50)	='IDX' 
,@SORT_DIR	varchar(4)	='DESC' 
,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈

AS
BEGIN
SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

	 
	set @v_SQL_WHERE = ' WHERE M_ID = '''+@M_ID+''''

	set @v_SQL_ORDERBY = ' ' + @SORT_COL  + ' ' + @SORT_DIR 
 
	 
	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	set @v_SQL  ='insert into #TEMPLIST (IDX_TMP) '
	set @v_SQL  =@v_SQL + ' SELECT  IDX ';
	set @v_SQL  =@v_SQL + ' FROM TB_QNA WITH (NOLOCK) ';
	set @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	set @v_SQL  =@v_SQL + '	ORDER BY ' + @v_SQL_ORDERBY ; 
	exec(@v_SQL);


	SET ROWCOUNT 0 ;

	SELECT a.IDX
	 , a.CATEGORY
	 , CASE WHEN a.CATEGORY = '1' THEN '상품문의' 
			WHEN a.CATEGORY = '2' THEN '배송관련' 
			WHEN a.CATEGORY = '3' THEN '구매관련' 
			WHEN a.CATEGORY = '4' THEN '반품관련' 
			WHEN a.CATEGORY = '5' THEN '회원관련' 
			WHEN a.CATEGORY = '6' THEN '이용문의'
			WHEN a.CATEGORY = '7' THEN '기타'
	   END AS CATEGORY_NM
	 ,a.TITLE 
	 , a.QUESTION 
	 , a.ANSWER 
	 , a.STATUS 
	 , CASE WHEN a.STATUS = '1' THEN '접수' 
			WHEN a.STATUS = '2' THEN '완료' 
	   END AS STATUS_NM
	 , a.M_ID
	 , m.M_NAME 
	 , a.REG_DATE
	 , a.ANS_DATE
	from TB_QNA a with (nolock)
		inner join #TEMPLIST t on a.IDX = t.IDX_TMP
		left join TB_MEMBER m with (nolock) on a.M_ID = m.M_ID
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_QNA_MEMBER_CNT]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_QNA

exec [SP_ADMIN_QNA_MEMBER_CNT]  'test_b1s'
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_QNA_MEMBER_CNT]
 @M_ID	varchar(13)	
AS
BEGIN
SET NOCOUNT ON
	----------------------------------------
	SELECT COUNT(IDX) AS COUNT 
		FROM TB_QNA  WITH (NOLOCK) 	
		WHERE M_ID = @M_ID
	SET NOCOUNT OFF ;
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_ACTIVE_LIST_SEL]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 전체할인 프로모션  간단 리스트 (admin)
 * Modified  :   2015.07.08
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_SEL] 1,10,'','',''
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_ACTIVE_LIST_SEL]
AS

BEGIN

    SET NOCOUNT ON 
	
	--프로모션 리스트 조회
	SELECT   A.IDX 
      ,A.[CD_PROMOTION_TOTAL]
      ,A.[PMO_TOTAL_NAME]
      ,A.[PMO_TOTAL_CATEGORY]
      ,A.[PMO_TOTAL_CATEGORY_NAME]
      ,A.[PMO_TOTAL_RATE_OR_MONEY]
      ,A.[PMO_TOTAL_DISCOUNT_RATE]
      ,A.[PMO_TOTAL_DISCOUNT_MONEY]
      ,A.[PMO_TOTAL_DATE_FROM]
      ,A.[PMO_TOTAL_DATE_TO]
      ,A.[USABLE_YN]
      ,A.[INS_DATE]			
	FROM TB_PROMOTION_BY_TOTAL A WITH (NOLOCK)
	WHERE A.USABLE_YN = 'Y'
	
	
	SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_VS_TOTAL_SEL]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품별 할인 프로모션에 소속된 상품별 - 전체할인 적용여부 (admin)
 * Modified  :   2015.07.05
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_PRODUCT_DUP_SEL] '00','2015-07-06 00:00:00' ,'2015-07-08 00:00:00' 
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_VS_TOTAL_SEL]
  @CD_PROMOTION_PRODUCT VARCHAR(7)
  --,@CD_PROMOTION_TOTAL VARCHAR(7)
AS
 

SET NOCOUNT ON
 
SELECT A.[IDX]
      ,A.[CD_PROMOTION_PRODUCT]
      ,A.[CD_PROMOTION_TOTAL]
      ,B.[PMO_TOTAL_NAME]
      ,B.[USABLE_YN] AS PMO_TOTAL_USABLE_YN
      ,A.[PRODUCT_PRICE_IDX]
      ,A.[P_CODE]
      ,A.[INS_DATE]
      ,A.[USABLE_YN]
FROM [TB_PROMOTION_PRODUCT_VS_TOTAL] A INNER JOIN [TB_PROMOTION_BY_TOTAL] B
	ON A.CD_PROMOTION_TOTAL = B.CD_PROMOTION_TOTAL
WHERE
 A.[CD_PROMOTION_PRODUCT] = @CD_PROMOTION_PRODUCT 


 --AND
 --A.[CD_PROMOTION_TOTAL] = @CD_PROMOTION_TOTAL
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_UPDATE]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 품별 프로모션 수정(admin)  
 * Modified  :   2015.07.11 , 8.6  ,8.18 이미지5종 추가 ,8/19
 * Modified  :     
 * Modified  :    
 ============================================================*/    
  
  
 --EXEC [SP_ADMIN_PROMOTION_BY_PRODUCT_DETAIL_SEL] 1  
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_UPDATE]  
    @PMO_PRODUCT_NAME varchar(50)  
   ,@PMO_PRODUCT_MAIN_TITLE varchar(100)  
   ,@PMO_PRODUCT_SUB_TITLE varchar(100)  
   ,@PMO_PRODUCT_SHOPPING_TIP varchar(100)   
   ,@PMO_PRODUCT_MAIN_IMG VARCHAR(128)  
   ,@PMO_PRODUCT_PC_MAINPG_IMG VARCHAR(128)
   ,@PMO_PRODUCT_PC_MAINPG_SMALL_IMG VARCHAR(138)
   ,@PMO_PRODUCT_PC_EVENT_MAINPG_IMG VARCHAR(128)
   ,@PMO_PRODUCT_MOBILE_MAIN_IMG VARCHAR(128)
   ,@PMO_PRODUCT_MOBILE_MAINPG_IMG VARCHAR(128)
   ,@PMO_PRODUCT_MOBILE_EVENT_MAINPG_IMG VARCHAR(128)      
   ,@PMO_PRODUCT_RATE_OR_MONEY varchar(1)  
   ,@PMO_PRODUCT_DISCOUNT_RATE tinyint = 0  
   ,@PMO_PRODUCT_DISCOUNT_MONEY int  = 0  
   ,@PMO_SET_DISCOUNT_CNT tinyint = 0  
   ,@PMO_ONEONE_MULTIPLE_CNT tinyint = 0  
   ,@PMO_PRODUCT_DATE_FROM DateTime  
   ,@PMO_PRODUCT_DATE_TO DateTime  
   ,@USABLE_YN varchar(1) = 'N'  
   ,@CD_PROMOTION_PRODUCT VARCHAR(7)   
AS  
  
BEGIN  
--SET FMTONLY OFF --complex type 생성시 필요  
--IF 1=0 BEGIN  
--   SET FMTONLY OFF  
--END  
  
SET NOCOUNT ON  
  
DECLARE @ORIGIN_USABLE_YN VARCHAR(1)  
  
SET @ORIGIN_USABLE_YN = ''   
  
  
SELECT @ORIGIN_USABLE_YN = USABLE_YN  
FROM TB_PROMOTION_BY_PRODUCT WITH(NOLOCK)   
WHERE CD_PROMOTION_PRODUCT = @CD_PROMOTION_PRODUCT   
  
  
BEGIN TRANSACTION  
    --만약 활성화여부를 Y에서 N으로 바꿀때에는 소속된 상품들의 활성화여부도 모두 'N'으로 바꿔준다   
  IF @ORIGIN_USABLE_YN  = 'Y' AND @USABLE_YN = 'N'  
 BEGIN   
    UPDATE TB_PROMOTION_BY_PRODUCT_PRICE SET USABLE_YN = 'N' WHERE CD_PROMOTION_PRODUCT =@CD_PROMOTION_PRODUCT  
 END   
    
    
 --INSERT  
 UPDATE [TB_PROMOTION_BY_PRODUCT]  
    SET   
     [PMO_PRODUCT_NAME] = @PMO_PRODUCT_NAME  
    --,[PMO_PRODUCT_CATEGORY] = @PMO_PRODUCT_CATEGORY  
    ,[PMO_PRODUCT_MAIN_TITLE] = @PMO_PRODUCT_MAIN_TITLE  
    ,[PMO_PRODUCT_SUB_TITLE] = @PMO_PRODUCT_SUB_TITLE  
    ,[PMO_PRODUCT_SHOPPING_TIP] = @PMO_PRODUCT_SHOPPING_TIP  
    ,PMO_PRODUCT_MAIN_IMG   = @PMO_PRODUCT_MAIN_IMG  
    ,PMO_PRODUCT_PC_MAINPG_IMG = @PMO_PRODUCT_PC_MAINPG_IMG 
    ,PMO_PRODUCT_PC_MAINPG_SMALL_IMG = @PMO_PRODUCT_PC_MAINPG_SMALL_IMG
    ,PMO_PRODUCT_PC_EVENT_MAINPG_IMG =@PMO_PRODUCT_PC_EVENT_MAINPG_IMG
	,PMO_PRODUCT_MOBILE_MAIN_IMG =@PMO_PRODUCT_MOBILE_MAIN_IMG
	,PMO_PRODUCT_MOBILE_MAINPG_IMG  =@PMO_PRODUCT_MOBILE_MAINPG_IMG
	,PMO_PRODUCT_MOBILE_EVENT_MAINPG_IMG =@PMO_PRODUCT_MOBILE_EVENT_MAINPG_IMG
    ,[PMO_PRODUCT_RATE_OR_MONEY] = @PMO_PRODUCT_RATE_OR_MONEY  
    ,[PMO_PRODUCT_DISCOUNT_RATE] = @PMO_PRODUCT_DISCOUNT_RATE  
    ,[PMO_PRODUCT_DISCOUNT_MONEY] = @PMO_PRODUCT_DISCOUNT_MONEY  
    ,[PMO_ONEONE_MULTIPLE_CNT] = @PMO_ONEONE_MULTIPLE_CNT  
    ,[PMO_SET_DISCOUNT_CNT] = @PMO_SET_DISCOUNT_CNT  
    ,[PMO_PRODUCT_DATE_FROM] = @PMO_PRODUCT_DATE_FROM  
    ,[PMO_PRODUCT_DATE_TO] = @PMO_PRODUCT_DATE_TO  
    ,[USABLE_YN] = @USABLE_YN  
  WHERE   
     [CD_PROMOTION_PRODUCT] = @CD_PROMOTION_PRODUCT  
    
   
 IF @@ERROR = 0  
 COMMIT TRANSACTION  
 ELSE   
 ROLLBACK TRANSACTION  
  
    
 SET NOCOUNT OFF  
   
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_SEL]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 상품별할인 프로모션리스트 (admin)  
 * Modified  :   2015.07.08  / 8.6 / 8.18 이미지5종추가 / 8.19
 * Modified  :     
 * Modified  :    
 ============================================================*/    
  
  
 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_SEL] 1,10,'','',''  
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_SEL]  
 @PAGE    INT   --현재 PAGE  
,@PAGESIZE   INT   --페이지 사이즈  
,@SEARCH_KEY  VARCHAR(100) ='' --검색 필드  
,@SEARCH_KEYWORD VARCHAR(100) ='' --검색 키워드  
  
AS  
  
BEGIN  
--SET FMTONLY OFF --complex type 생성시 필요  
--IF 1=0 BEGIN  
--   SET FMTONLY OFF  
--END  
  
 SET NOCOUNT ON  
 --SET FMTONLY OFF  
   
   
 DECLARE @LISTCOUNT INT  
 DECLARE @V_SQL NVARCHAR(MAX);  
   
   
 -- 기존에 사용하는 #TEMPLIST 있으면 DROP  
 IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL  
 BEGIN  
   DROP TABLE #TEMPLIST ;  
   PRINT 'DROP...'   
 END   
   
 CREATE TABLE #TEMPLIST  (  
  SEQ   INT IDENTITY(1,1) PRIMARY KEY,  
  IDX_SEQ INT  
 )  
  
 SET @LISTCOUNT = @PAGE * @PAGESIZE  
 SET ROWCOUNT @LISTCOUNT  
  
 SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX ';  
 SET @V_SQL  =@V_SQL + ' FROM TB_PROMOTION_BY_PRODUCT WITH (NOLOCK) '  
 SET @V_SQL  =@V_SQL + '    WHERE 1=1 ';  
  
 IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''  
  BEGIN  
  SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '   
  END  
   
 /**  
 IF @SEARCH_DISPLAY_YN <> ''   
  BEGIN  
  SET @V_SQL = @V_SQL + ' AND DISPLAY_YN = '''+@SEARCH_DISPLAY_YN+''' '  
  END       
 **/  
    
 SET @V_SQL  =@V_SQL + ' ORDER BY IDX DESC' ;  
   
 EXEC(@V_SQL);  
 --PRINT @V_SQL  
  
  
 SET ROWCOUNT 0  
   
  
 --프로모션 리스트 조회  
    SELECT A.[IDX]  
      ,A.[CD_PROMOTION_PRODUCT]  
      ,A.[PMO_PRODUCT_NAME]  
      ,A.[PMO_PRODUCT_CATEGORY]  
      ,A.[PMO_PRODUCT_CATEGORY_NAME]  
      ,A.[PMO_PRODUCT_MAIN_TITLE]  
      ,A.[PMO_PRODUCT_SUB_TITLE]  
      ,A.[PMO_PRODUCT_SHOPPING_TIP]
      ,A.PMO_PRODUCT_MAIN_IMG 
      ,A.PMO_PRODUCT_PC_MAINPG_IMG 
      ,A.PMO_PRODUCT_PC_MAINPG_SMALL_IMG
      ,A.PMO_PRODUCT_PC_EVENT_MAINPG_IMG 
	  ,A.PMO_PRODUCT_MOBILE_MAIN_IMG 
	  ,A.PMO_PRODUCT_MOBILE_MAINPG_IMG 
	  ,A.PMO_PRODUCT_MOBILE_EVENT_MAINPG_IMG
      ,A.[PMO_PRODUCT_RATE_OR_MONEY]  
      ,A.[PMO_PRODUCT_DISCOUNT_RATE]  
      ,A.[PMO_PRODUCT_DISCOUNT_MONEY]  
      ,A.[PMO_ONEONE_MULTIPLE_CNT]  
      ,A.[PMO_SET_DISCOUNT_CNT]  
      ,A.[PMO_PRODUCT_DATE_FROM]  
      ,A.[PMO_PRODUCT_DATE_TO]  
      ,A.[USABLE_YN]  
      ,A.[INS_DATE]  
    FROM [dbo].[TB_PROMOTION_BY_PRODUCT] A WITH (NOLOCK)  
  INNER JOIN #TEMPLIST T ON A.IDX = T.IDX_SEQ   
 WHERE T.SEQ > (@PAGE -1) * @PAGESIZE  
 ORDER BY T.SEQ  
   
 DROP TABLE #TEMPLIST ;  
  
 SET NOCOUNT OFF  
   
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_PRICE_UPDATE]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 전체할인 프로모션 상세상품 업데이트  
 * Modified  :   2015.07.12 , 7/20  
 * Modified  :     
 * Modified  :    
 ============================================================*/    
  
  
 --EXEC [SP_ADMIN_PROMOTION_BY_PRODUCT_DUP_SEL] '00','2015-07-06 00:00:00' ,'2015-07-08 00:00:00'   
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_PRICE_UPDATE]  
   @CD_PROMOTION_PRODUCT VARCHAR(7)  
  ,@USABLE_YN VARCHAR(1) = 'Y'  
  ,@P_CODE VARCHAR(10)
  ,@IDX INT 
AS  
   
  
 SET NOCOUNT ON  
   
 UPDATE [AboutMe].[dbo].[TB_PROMOTION_BY_PRODUCT_PRICE]  
   SET   
       
     /**  
      ,[PMO_PRICE] = <PMO_PRICE, int,>  
      ,[PMO_ONE_ONE_P_CODE] = <PMO_ONE_ONE_P_CODE, varchar(10),>  
      ,[PMO_ONE_ONE_PRICE] = <PMO_ONE_ONE_PRICE, int,>  
     **/  
      [USABLE_YN] = @USABLE_YN  
     
 WHERE [CD_PROMOTION_PRODUCT] = @CD_PROMOTION_PRODUCT   
       AND P_CODE = @P_CODE  -- 7/20  
       AND IDX = @IDX
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_PRICE_SEL]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 전체할인 프로모션 상세상품리스트(admin)  
 * Modified  :   2015.07.05  , 2015.09.04
 * Modified  :     
 * Modified  :    
 ============================================================*/    
  
  
 --EXEC [SP_ADMIN_PROMOTION_BY_PRODUCT_DUP_SEL] '00','2015-07-06 00:00:00' ,'2015-07-08 00:00:00'   
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_PRICE_SEL]  
  @CD_PROMOTION_PRODUCT VARCHAR(7)  
AS  
   
  
 SET NOCOUNT ON  
   
 SELECT A.[IDX]  
      ,A.[CD_PROMOTION_PRODUCT]  
      ,A.[P_CODE]  
      ,A.[P_DISCOUNT_PRICE]  
      ,A.[PMO_PRODUCT_RATE_OR_MONEY]  
      ,A.[PMO_PRODUCT_DISCOUNT_RATE]  
      ,A.[PMO_PRODUCT_DISCOUNT_MONEY]  
      ,A.[PMO_PRICE]  
      ,A.[PMO_ONE_ONE_P_CODE]  
      ,A.[PMO_ONE_ONE_PRICE]  
      ,A.[USABLE_YN]  
      ,B.P_NAME
      ,B.SELLING_PRICE
      ,B.DISCOUNT_PRICE
      ,B.DISPLAY_YN
      ,B.SOLDOUT_YN
      ,B.P_OUTLET_YN
 FROM TB_PROMOTION_BY_PRODUCT_PRICE A with (nolock) INNER JOIN TB_PRODUCT_INFO B with (nolock) 
 ON A.P_CODE = B.P_CODE AND A.[CD_PROMOTION_PRODUCT] = @CD_PROMOTION_PRODUCT
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_PCODE_CHK]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우  (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 프로모션 상품등록시 존재하는 상품코드인지 체크 
 * Modified  :   2015.08.27  
 ============================================================*/    
    
CREATE PROCEDURE [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_PCODE_CHK]  
	@P_CODE     VARCHAR(10) = '' --상품코드  

AS  
  
 SET NOCOUNT ON  
   
 --상품코드가 존재 하는지 
 SELECT COUNT(*) AS CNT FROM TB_PRODUCT_INFO 
 WHERE 
   P_CODE = @P_CODE  AND DISPLAY_YN = 'Y'
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_INS]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 품별 프로모션 INSERT(admin)    
 * Modified  :   2015.07.07 , , 2015.08.04 신규 프로모션코드 생성방식 변경 , 8.6 이미지추가  , 8/18 이미지 5종 추가 
 * Modified  :   8/19    
 * Modified  :      
 ============================================================*/      
    
    
 --EXEC [SP_ADMIN_PROMOTION_BY_PRODUCT_DETAIL_SEL] 1    
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_INS]    
    @PMO_PRODUCT_NAME varchar(50)    
   ,@PMO_PRODUCT_CATEGORY varchar(2)    
   ,@PMO_PRODUCT_MAIN_TITLE varchar(100)    
   ,@PMO_PRODUCT_SUB_TITLE varchar(100)    
   ,@PMO_PRODUCT_SHOPPING_TIP varchar(100)   
   ,@PMO_PRODUCT_MAIN_IMG VARCHAR(128)  
   ,@PMO_PRODUCT_PC_MAINPG_IMG VARCHAR(128)
   ,@PMO_PRODUCT_PC_MAINPG_SMALL_IMG VARCHAR(128)
   ,@PMO_PRODUCT_PC_EVENT_MAINPG_IMG VARCHAR(128)
   ,@PMO_PRODUCT_MOBILE_MAIN_IMG VARCHAR(128)
   ,@PMO_PRODUCT_MOBILE_MAINPG_IMG VARCHAR(128)
   ,@PMO_PRODUCT_MOBILE_EVENT_MAINPG_IMG VARCHAR(128)
   ,@PMO_PRODUCT_RATE_OR_MONEY varchar(1)    
   ,@PMO_PRODUCT_DISCOUNT_RATE tinyint = 0    
   ,@PMO_PRODUCT_DISCOUNT_MONEY int  = 0    
   ,@PMO_SET_DISCOUNT_CNT tinyint = 0    
   ,@PMO_ONEONE_MULTIPLE_CNT tinyint = 0    
   ,@PMO_PRODUCT_DATE_FROM DateTime    
   ,@PMO_PRODUCT_DATE_TO DateTime    
   ,@USABLE_YN varchar(1) = 'N'    
   ,@CD_PROMOTION_PRODUCT VARCHAR(7) OUTPUT    
AS    
    
BEGIN    
--SET FMTONLY OFF --complex type 생성시 필요    
--IF 1=0 BEGIN    
--   SET FMTONLY OFF    
--END    
    
 SET NOCOUNT ON    
     
    
     
 DECLARE @LAST_CD_PROMOTION_PRODUCT VARCHAR(7)    
 DECLARE @NEW_CD_PROMOTION_PRODUCT VARCHAR(7)    
 DECLARE @NEW_CD_LEFT_NUMBER_PART INT     
 SET @LAST_CD_PROMOTION_PRODUCT = '';    
     
 DECLARE @PMO_PRODUCT_CATEGORY_NAME VARCHAR(40)    
     
 --가장 최근의 프로모션코드 가져오기     
 --SELECT TOP 1 @LAST_CD_PROMOTION_PRODUCT = ISNULL(CD_PROMOTION_PRODUCT,'') FROM [TB_PROMOTION_BY_PRODUCT] WITH(NOLOCK) ORDER BY IDX DESC    
 SELECT TOP 1 @LAST_CD_PROMOTION_PRODUCT = ISNULL(CD_PROMOTION_PRODUCT,'') FROM TB_PROMOTION_BY_PRODUCT_NUMBERING WITH(NOLOCK)     
     
 --신규 프로모션 코드 만들기     
 IF @LAST_CD_PROMOTION_PRODUCT = ''    
 BEGIN    
 SET @NEW_CD_PROMOTION_PRODUCT = 'PP00001'    
 INSERT INTO TB_PROMOTION_BY_PRODUCT_NUMBERING (CD_PROMOTION_PRODUCT) VALUES(@NEW_CD_PROMOTION_PRODUCT)    
 END     
 ELSE    
 BEGIN    
  IF LEN(@LAST_CD_PROMOTION_PRODUCT) = 7     
  BEGIN    
    SET @NEW_CD_LEFT_NUMBER_PART = CAST(RIGHT(@LAST_CD_PROMOTION_PRODUCT,5) AS INT)    
    SET @NEW_CD_LEFT_NUMBER_PART = @NEW_CD_LEFT_NUMBER_PART + 1    
    SET @NEW_CD_PROMOTION_PRODUCT =  'PP' +   RIGHT('00000' + CAST(@NEW_CD_LEFT_NUMBER_PART AS VARCHAR(5)),5)     
        
    UPDATE TB_PROMOTION_BY_PRODUCT_NUMBERING SET CD_PROMOTION_PRODUCT = @NEW_CD_PROMOTION_PRODUCT  , UPD_DATE = GETDATE()    
  END    
          
 END     
     
 --카테고리이름 가져오기    
 SELECT @PMO_PRODUCT_CATEGORY_NAME = PMO_PRODUCT_CATEGORY_NAME FROM TB_PROMOTION_PRODUCT_CATEGORY WITH(NOLOCK)     
 WHERE PMO_PRODUCT_CATEGORY = @PMO_PRODUCT_CATEGORY     
    
 --INSERT    
 INSERT INTO [TB_PROMOTION_BY_PRODUCT]    
           ([CD_PROMOTION_PRODUCT]    
           ,[PMO_PRODUCT_NAME]    
           ,[PMO_PRODUCT_CATEGORY]    
           ,[PMO_PRODUCT_CATEGORY_NAME]    
           ,[PMO_PRODUCT_MAIN_TITLE]    
     ,[PMO_PRODUCT_SUB_TITLE]    
           ,[PMO_PRODUCT_SHOPPING_TIP]   
           ,PMO_PRODUCT_MAIN_IMG   
           ,PMO_PRODUCT_PC_MAINPG_IMG 
           ,PMO_PRODUCT_PC_MAINPG_SMALL_IMG 
		   ,PMO_PRODUCT_PC_EVENT_MAINPG_IMG 
		   ,PMO_PRODUCT_MOBILE_MAIN_IMG 
		   ,PMO_PRODUCT_MOBILE_MAINPG_IMG 
		   ,PMO_PRODUCT_MOBILE_EVENT_MAINPG_IMG  
           ,[PMO_PRODUCT_RATE_OR_MONEY]    
           ,[PMO_PRODUCT_DISCOUNT_RATE]    
           ,[PMO_PRODUCT_DISCOUNT_MONEY]    
           ,[PMO_SET_DISCOUNT_CNT]    
           ,[PMO_ONEONE_MULTIPLE_CNT]     
           ,[PMO_PRODUCT_DATE_FROM]    
           ,[PMO_PRODUCT_DATE_TO]    
           ,[USABLE_YN]    
           ,[INS_DATE])    
     VALUES    
           (    
            @NEW_CD_PROMOTION_PRODUCT    
            ,@PMO_PRODUCT_NAME     
            ,@PMO_PRODUCT_CATEGORY    
            ,@PMO_PRODUCT_CATEGORY_NAME    
            ,@PMO_PRODUCT_MAIN_TITLE    
            ,@PMO_PRODUCT_SUB_TITLE    
            ,@PMO_PRODUCT_SHOPPING_TIP    
            ,@PMO_PRODUCT_MAIN_IMG 
            ,@PMO_PRODUCT_PC_MAINPG_IMG 
            ,@PMO_PRODUCT_PC_MAINPG_SMALL_IMG 
		    ,@PMO_PRODUCT_PC_EVENT_MAINPG_IMG 
		    ,@PMO_PRODUCT_MOBILE_MAIN_IMG 
			,@PMO_PRODUCT_MOBILE_MAINPG_IMG 
			,@PMO_PRODUCT_MOBILE_EVENT_MAINPG_IMG   
            ,@PMO_PRODUCT_RATE_OR_MONEY     
            ,@PMO_PRODUCT_DISCOUNT_RATE     
            ,@PMO_PRODUCT_DISCOUNT_MONEY    
            ,@PMO_SET_DISCOUNT_CNT     
            ,@PMO_ONEONE_MULTIPLE_CNT     
            ,@PMO_PRODUCT_DATE_FROM     
            ,@PMO_PRODUCT_DATE_TO     
             ,@USABLE_YN     
            ,getdate()    
            )    
    
    
  SET @CD_PROMOTION_PRODUCT = @NEW_CD_PROMOTION_PRODUCT    
      
  SET NOCOUNT OFF    
     
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_FOR_UPDATE_DUP_SEL]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 전체할인 프로모션 수정시 수정하려는 프로모션을 제외하고,동일시간대에 같은 종류의 프로모션이 있는지 검사(admin)
 * Modified  :   2015.07.11
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_PRODUCT_DUP_SEL] '00','2015-07-06 00:00:00' ,'2015-07-08 00:00:00' 
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_FOR_UPDATE_DUP_SEL]
	
	@PMO_PRODUCT_CATETORY  VARCHAR(2)
   ,@TARGET_PMO_PRODUCT_DATE_FROM DATETIME
   ,@TARGET_PMO_PRODUCT_DATE_TO   DATETIME
   ,@CD_PROMOTION_PRODUCT  VARCHAR(7)
 AS
 

 SET NOCOUNT ON
 
 SELECT ISNULL(COUNT(IDX),0)AS CNT FROM TB_PROMOTION_BY_PRODUCT with (nolock)
 WHERE PMO_PRODUCT_CATEGORY = @PMO_PRODUCT_CATETORY 
	   AND
	   (    
                     ( PMO_PRODUCT_DATE_FROM  <= @TARGET_PMO_PRODUCT_DATE_TO)   
                      AND   
                     ( PMO_PRODUCT_DATE_TO    >=   @TARGET_PMO_PRODUCT_DATE_FROM)   
        )  
        AND ( USABLE_YN = 'Y' OR USABLE_YN IS NULL)
        AND
        CD_PROMOTION_PRODUCT != @CD_PROMOTION_PRODUCT --수정하려는 프로모션 제외
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_DUP_SEL]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 전체할인 프로모션 INSERT(admin)
 * Modified  :   2015.07.05
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_PRODUCT_DUP_SEL] '00','2015-07-06 00:00:00' ,'2015-07-08 00:00:00' 
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_DUP_SEL]
	
	@PMO_PRODUCT_CATETORY  VARCHAR(2)
   ,@PMO_PRODUCT_DATE_FROM DATETIME
   ,@PMO_PRODUCT_DATE_TO   DATETIME
 AS
 

 SET NOCOUNT ON
 
 SELECT ISNULL(COUNT(IDX),0)AS CNT FROM TB_PROMOTION_BY_PRODUCT with (nolock)
 WHERE PMO_PRODUCT_CATEGORY = @PMO_PRODUCT_CATETORY 
	   AND
	   (    
                     ( PMO_PRODUCT_DATE_FROM  <= @PMO_PRODUCT_DATE_TO)   
                      AND   
                     ( PMO_PRODUCT_DATE_TO   >=   @PMO_PRODUCT_DATE_FROM)   
        )  
        AND ( USABLE_YN = 'Y' OR USABLE_YN IS NULL)
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_DETAIL_SEL]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 상품별 할인 프로모션 상세(admin)  
 * Modified  :   2015.07.07 , 8.6  , 8/18 이미지 5종 추가 , 8/19
 * Modified  :     
 * Modified  :    
 ============================================================*/    
  
  
 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL] 1  
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_PRODUCT_DETAIL_SEL]  
 @CD_PROMOTION_PRODUCT VARCHAR(7)  
AS  
  
BEGIN  
--SET FMTONLY OFF --complex type 생성시 필요  
--IF 1=0 BEGIN  
--   SET FMTONLY OFF  
--END  
  
   SET NOCOUNT ON  
     
   SELECT A.[IDX]  
      ,A.[CD_PROMOTION_PRODUCT]  
      ,A.[PMO_PRODUCT_NAME]  
      ,A.[PMO_PRODUCT_CATEGORY]  
      ,A.[PMO_PRODUCT_CATEGORY_NAME]  
      ,A.[PMO_PRODUCT_MAIN_TITLE]  
      ,A.[PMO_PRODUCT_SUB_TITLE]  
      ,A.[PMO_PRODUCT_SHOPPING_TIP] 
      ,A.PMO_PRODUCT_MAIN_IMG 
      ,A.PMO_PRODUCT_PC_MAINPG_IMG 
      ,A.PMO_PRODUCT_PC_MAINPG_SMALL_IMG 
      ,A.PMO_PRODUCT_PC_EVENT_MAINPG_IMG 
      
	  ,A.PMO_PRODUCT_MOBILE_MAIN_IMG 
	  ,A.PMO_PRODUCT_MOBILE_MAINPG_IMG 
	  ,A.PMO_PRODUCT_MOBILE_EVENT_MAINPG_IMG
      ,A.[PMO_PRODUCT_RATE_OR_MONEY]  
      ,A.[PMO_PRODUCT_DISCOUNT_RATE]  
      ,A.[PMO_PRODUCT_DISCOUNT_MONEY]  
      ,A.[PMO_ONEONE_MULTIPLE_CNT]  
      ,A.[PMO_SET_DISCOUNT_CNT]  
      ,A.[PMO_PRODUCT_DATE_FROM]  
      ,A.[PMO_PRODUCT_DATE_TO]  
      ,A.[USABLE_YN]  
      ,A.[INS_DATE]  
    FROM [dbo].[TB_PROMOTION_BY_PRODUCT] A WITH (NOLOCK)  
    WHERE CD_PROMOTION_PRODUCT =@CD_PROMOTION_PRODUCT  
  
  SET NOCOUNT OFF  
   
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_PRODUCT_UPDATE]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-03
-- Description:	관리자 상품 리뷰 수정
-- ussage: EXEC SP_ADMIN_REVIEW_PRODUCT_UPDATE
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_PRODUCT_UPDATE]
	@IDX INT =NULL
	,@IS_BEST VARCHAR(1) = NULL
	,@IS_DISPLAY VARCHAR(1) = NULL
	,@IS_MOST_CNT VARCHAR(1) = NULL
	--,@COMMENT TEXT = NULL
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
	
	IF NOT EXISTS( SELECT IDX FROM TB_REVIEW_PRODUCT WITH (NOLOCK) WHERE IDX=@IDX )
	BEGIN 
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않는 상품리뷰 입니다.';
		RETURN
	END
	
	IF EXISTS( SELECT IDX FROM TB_REVIEW_PRODUCT WITH (NOLOCK) WHERE IDX=@IDX AND IS_MOST_CNT='Y' )
	BEGIN
		SET @RET_NUM = '2';
		SET @RET_MESSAGE = '최다리뷰 지정을 해제할수 없습니다.';
		RETURN;
	END 
	
	IF @IS_MOST_CNT IS NULL
	BEGIN
		SET @IS_MOST_CNT = 'N';
	END
	
	UPDATE TB_REVIEW_PRODUCT
		SET IS_MOST_CNT = 'N'
	WHERE IS_MOST_CNT='Y';
	
	UPDATE TB_REVIEW_PRODUCT
	 SET IS_BEST=@IS_BEST
	 ,IS_DISPLAY = @IS_DISPLAY
	 ,IS_MOST_CNT = @IS_MOST_CNT
	WHERE IDX=@IDX;
	
	
    SET NOCOUNT OFF;
    
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_PRODUCT_SEL]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-28
-- Description:	관리자 상품 리뷰 조회
-- ussage: exec SP_ADMIN_REVIEW_PRODUCT_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_PRODUCT_SEL]
	@PAGE				INT = 1		--현재 PAGE
	,@PAGESIZE			INT = 10		--페이지 사이즈
	,@SEARCH_KEY		VARCHAR(100) = ''	--검색 필드
	,@SEARCH_VALUE		VARCHAR(100) = ''	--검색 값
	,@MEDIA_GBN_W VARCHAR(2) = NULL
	,@MEDIA_GBN_M VARCHAR(2) = NULL
	,@SEL_DATE_FROM DATETIME = NULL
	,@SEL_DATE_TO DATETIME = NULL
	,@IS_PHOTO_Y VARCHAR(1)= NULL
	,@IS_PHOTO_N VARCHAR(1)= NULL
	,@IS_DISPLAY_Y VARCHAR(1) = NULL
	,@IS_DISPLAY_N VARCHAR(1) = NULL
	,@TOTAL INT OUTPUT --총수
AS
BEGIN
	SET NOCOUNT ON;
	
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				DECLARE @MyStoredProcResult TABLE(
						IDX INT,
						ORDER_DETAIL_IDX INT,
						M_ID VARCHAR(13),
						M_NAME VARCHAR(30),
						P_CODE VARCHAR(10),
						P_NAME VARCHAR(100),
						P_MAIN_IMG VARCHAR(100),
						C_CATE_CODE CHAR(9),
						IS_BEST VARCHAR(1),
						CATE_GBN VARCHAR(3),
						CATE_GBN_LBL VARCHAR(3),
						COMMENT TEXT,
						IS_PHOTO VARCHAR(1),
						IS_PHOTO_LBL VARCHAR(3),
						VIEW_CNT INT,
						M_GRADE VARCHAR(1),
						M_GRADE_LBL VARCHAR(3),
						MEDIA_GBN VARCHAR(2),
						MEDIA_GBN_LBL VARCHAR(3),
						ADD_IMAGE VARCHAR(100),
						IS_DISPLAY VARCHAR(1),
						IS_DISPLAY_LBL VARCHAR(3),
						SKIN_TYPE CHAR(2),
						SKIN_TYPE_LBL VARCHAR(5),
						SKIN_TYPE_CSS VARCHAR(5),
						INS_DATE DATETIME,
						IS_MOST_CNT VARCHAR(1)
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END   

	/**
	
	*/
	DECLARE @LISTCOUNT INT;

	DECLARE @v_SQL_WHERE NVARCHAR(MAX) ;
	DECLARE @v_SQL_ORDERBY NVARCHAR(MAX) ;
	DECLARE @V_SQL NVARCHAR(MAX);

	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	VARCHAR(13)
	)
	
	/**
		쿼리 조건
	*/
	SET @v_SQL_WHERE = ' (1=1) ';
	SET @v_SQL_ORDERBY = ' IS_MOST_CNT DESC, IDX DESC ' ;	

	
	--포토 조건
	IF @IS_PHOTO_Y IS NOT NULL OR @IS_PHOTO_N IS NOT NULL
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND (IS_PHOTO=''' +ISNULL(@IS_PHOTO_Y,'')+ ''' ';
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'OR IS_PHOTO=''' +ISNULL(@IS_PHOTO_N,'')+ ''') ';
	END 
		
	IF @IS_DISPLAY_Y IS NOT NULL OR  @IS_DISPLAY_N IS NOT NULL 
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND (IS_DISPLAY=''' +ISNULL(@IS_DISPLAY_Y,'')+ ''' ';
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'or IS_DISPLAY=''' +ISNULL(@IS_DISPLAY_N,'')+ ''') ';
	END 
	

	
	IF @MEDIA_GBN_W IS NOT NULL OR  @MEDIA_GBN_M IS NOT NULL
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND ( MEDIA_GBN=''' + ISNULL(@MEDIA_GBN_W,'')+ ''' ';
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'OR MEDIA_GBN=''' + ISNULL(@MEDIA_GBN_W,'')+ ''') ';
	END 
	
	
	IF @SEARCH_KEY <>'' AND @SEARCH_VALUE <> ''
	BEGIN 
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_KEY + ' in (''' + @SEARCH_VALUE + ''')) ';
	END
	
	IF @SEL_DATE_FROM IS NOT NULL AND @SEL_DATE_TO IS NOT NULL
	BEGIN 
		SET  @v_SQL_WHERE = @v_SQL_WHERE + ' AND  (INS_DATE  BETWEEN '''+ CONVERT(char(10), @SEL_DATE_FROM, 23)+''' AND '''+ CONVERT(char(10), @SEL_DATE_TO, 23) +' 23:59:59'') ';
	END
	
	
	
	
	/**
		총수
	*/	
	SET @V_SQL  =' SELECT @rowcount=COUNT(IDX) ';
	SET @V_SQL  = @V_SQL + ' FROM TB_REVIEW_PRODUCT WITH (NOLOCK) '
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;

	EXEC sp_executesql @V_SQL, N'@rowcount int output', @TOTAL output;
	
	/**
		조회
	*/
 
	SET @V_SQL  = 'INSERT INTO #TEMPLIST (IDX_TMP)'
	SET @V_SQL  = @V_SQL + ' SELECT IDX ';
	SET @V_SQL  = @V_SQL + ' FROM TB_REVIEW_PRODUCT WITH (NOLOCK) '
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	SET @V_SQL  = @V_SQL + ' ORDER BY ' +  @v_SQL_ORDERBY;
	
	PRINT @V_SQL;

	SET @LISTCOUNT = @PAGE * @PAGESIZE;
	SET ROWCOUNT @LISTCOUNT;
	
	EXEC(@V_SQL);
	
	SET ROWCOUNT 0 ; --기본값 복원 

						
	SELECT 	
		IDX,
		A.ORDER_DETAIL_IDX,
		A.M_ID,
		A.M_NAME,
		P_CODE,
		P_NAME,
		P_MAIN_IMG,
		C_CATE_CODE,
		IS_BEST,		
		CATE_GBN,		
		(
			CASE CATE_GBN
					WHEN '101' THEN '뷰티'
					WHEN '102' THEN '헬스'
					ELSE ''
			END 
		
		) AS CATE_GBN_LBL,	
		COMMENT,
		IS_PHOTO,
		(
			CASE IS_PHOTO
				WHEN 'Y' THEN '포토'
				WHEN 'N' THEN '텍스트'
				ELSE ''
			END 
		) AS IS_PHOTO_LBL,
		VIEW_CNT,
		M.M_GRADE,
		(
			CASE M.M_GRADE
				WHEN 'B' THEN '브론즈'
				WHEN 'S' THEN '실버'
				WHEN 'G' THEN '골드'
				WHEN 'V' THEN 'VIP'
				ELSE ''
			END 
		) AS M_GRADE_LBL,
		MEDIA_GBN,
		(
			CASE MEDIA_GBN
				WHEN '10' THEN '웹'
				WHEN '20' THEN '모바일'
				ELSE ''
			END 
		) AS MEDIA_GBN_LBL,
		ADD_IMAGE,	
		IS_DISPLAY,	
		(
			CASE IS_DISPLAY
				WHEN 'Y' THEN '전시'
				WHEN 'N' THEN '비전시'
				ELSE ''
			END 
		
		) AS IS_DISPLAY_LBL,
		SKIN_TYPE,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN '건성'
				WHEN '20' THEN '중성'
				WHEN '30' THEN '지복합성'
				ELSE ''
			END 
		) AS SKIN_TYPE_LBL,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN 'dry'
				WHEN '20' THEN 'normal'
				WHEN '30' THEN 'oily'
				ELSE ''
			END 
		) AS SKIN_TYPE_CSS,
		INS_DATE,
		IS_MOST_CNT
	FROM TB_REVIEW_PRODUCT A WITH (NOLOCK)
			INNER JOIN 
		#TEMPLIST T WITH (NOLOCK)
		ON A.IDX = T.IDX_TMP
			LEFT JOIN
		TB_MEMBER AS M WITH (NOLOCK)
		ON A.M_ID=M.M_ID
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ ASC;	
	
	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END 	 
		
    SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_PRODUCT_INFO]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-03
-- Description:	관리자 상품 리뷰 정보
-- ussage: exec SP_ADMIN_REVIEW_PRODUCT_INFO
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_PRODUCT_INFO]
	@IDX INT = NULL
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
	

	
	SELECT 
		IDX,
		R.ORDER_DETAIL_IDX,
		R.M_ID,
		R.M_NAME,
		P_CODE,
		P_NAME,
		P_MAIN_IMG,
		C_CATE_CODE,
		IS_BEST,		
		CATE_GBN,			
		COMMENT,
		IS_PHOTO,
		VIEW_CNT,		
		(
			CASE 
				WHEN M.M_GRADE IS NULL THEN ''
				ELSE M.M_GRADE
			END 
		) as M_GRADE,
		MEDIA_GBN,
		(
			CASE MEDIA_GBN
				WHEN '10' THEN '웹'
				WHEN '20' THEN '모바일'
				ELSE ''
			END 
		) AS MEDIA_GBN_LBL,
		ADD_IMAGE,	
		IS_DISPLAY,	
		SKIN_TYPE,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN '건성'
				WHEN '20' THEN '중성'
				WHEN '30' THEN '지복합성'
				ELSE ''
			END 
		) AS SKIN_TYPE_LBL,
		INS_DATE,
		IS_MOST_CNT
	FROM TB_REVIEW_PRODUCT  R WITH (NOLOCK)
			LEFT JOIN
		TB_MEMBER  M WITH (NOLOCK)
		ON R.M_ID=M.M_ID
	WHERE IDX=@IDX;
		
    SET NOCOUNT OFF;
    
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
	
	IF NOT EXISTS( SELECT IDX FROM TB_REVIEW_PRODUCT WITH (NOLOCK) WHERE IDX=@IDX )
	BEGIN 
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않는 상품리뷰 입니다.';
		--RETURN
	END
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_EXP_MEMBER_SEL]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-05
-- Description:	관리자 체험단 리뷰 회원 저장
-- ussage: exec SP_ADMIN_REVIEW_EXP_MEMBER_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_EXP_MEMBER_SEL]
	@EXP_MASTER_IDX INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	

		SELECT IDX,M_ID, M_NAME
			FROM TB_REVIEW_EXP_MEMBER WITH (NOLOCK)
		WHERE EXP_MASTER_IDX = @EXP_MASTER_IDX;
		
    SET NOCOUNT OFF;
    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_EXP_MEMBER_INS]    Script Date: 09/11/2015 16:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-05
-- Description:	관리자 체험단 리뷰 회원 저장
-- ussage: exec SP_ADMIN_REVIEW_EXP_MEMBER_INS
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_EXP_MEMBER_INS]
	@EXP_MASTER_IDX INT = NULL
	,@M_ID VARCHAR(13) = NULL
	,@M_NAME VARCHAR(30) = NULL
	
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE NVARCHAR(MAX) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
		
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE<>'Y' )
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = @M_ID +' : 존재하지 않는 아이디입니다.';
			
		RETURN;
	END 
	
	
	IF  EXISTS( SELECT IDX 
			FROM TB_REVIEW_EXP_MEMBER WITH (NOLOCK) 
		WHERE EXP_MASTER_IDX=@EXP_MASTER_IDX AND M_ID=@M_ID ) 
	BEGIN 
			SET @RET_NUM = '1';
			SET @RET_MESSAGE = @M_ID +' : 이미 체험단에 존재하는 아이디입니다.';
			
			RETURN;
	END
	
	IF NOT EXISTS( SELECT IDX 
			FROM TB_REVIEW_EXP_MEMBER WITH (NOLOCK) 
		WHERE EXP_MASTER_IDX=@EXP_MASTER_IDX AND M_ID=@M_ID ) 
	 BEGIN
			IF @M_NAME IS NULL OR @M_NAME =''
			BEGIN 
				SELECT @M_NAME=M_NAME 
					FROM TB_MEMBER WITH (NOLOCK)
				WHERE M_ID=@M_ID;
			END 

			
			INSERT INTO TB_REVIEW_EXP_MEMBER(
				EXP_MASTER_IDX
				,M_ID
				,M_NAME
			) VALUES (
				@EXP_MASTER_IDX
				,@M_ID
				,@M_NAME
			);
	END

		
    SET NOCOUNT OFF;
    
    SET @RET_NUM = '0';
    SET @RET_MESSAGE = 'SUCCESS';
        
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_EXP_MEMBER_DEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-05
-- Description:	관리자 체험단 리뷰 회원 삭제
-- ussage: exec SP_ADMIN_REVIEW_EXP_MEMBER_DEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_EXP_MEMBER_DEL]
	@M_ID varchar(13)
	,@EXP_MASTER_IDX INT
	
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE NVARCHAR(MAX) = NULL OUTPUT -- 반환 메세지
	
AS
BEGIN
	SET NOCOUNT ON;
	
		IF NOT EXISTS (SELECT IDX FROM TB_REVIEW_EXP_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND EXP_MASTER_IDX=@EXP_MASTER_IDX  )
		BEGIN
			SET @RET_NUM = '1';
			SET @RET_MESSAGE = @M_ID + ' : 해당 체험단에 존재하지 않습니다.';
			RETURN;
		END
		
		IF EXISTS (SELECT IDX FROM TB_REVIEW_EXP_ARTICLE WITH (NOLOCK) WHERE M_ID=@M_ID AND EXP_MASTER_IDX=@EXP_MASTER_IDX  )
		BEGIN
			SET @RET_NUM = '1';
			SET @RET_MESSAGE = @M_ID +' : 이미 등록한 체험단 리뷰들이 존재합니다.';
			RETURN;
		END
			
		DELETE FROM TB_REVIEW_EXP_MEMBER
		WHERE M_ID=@M_ID AND EXP_MASTER_IDX = @EXP_MASTER_IDX;
		
    SET NOCOUNT OFF;
    
    SET @RET_NUM = '0';
    SET @RET_MESSAGE = 'SUCCESS';
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_EXP_MASTER_UDATE]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-05
-- Description:	관리자 체험단 리뷰 마스터 상세
-- ussage: exec SP_ADMIN_REVIEW_EXP_MASTER_UDATE
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_EXP_MASTER_UDATE]
	@IDX INT
	,@IS_AUTH VARCHAR(1)
AS
BEGIN
	SET NOCOUNT ON;
		UPDATE TB_REVIEW_EXP_MASTER
		 SET IS_AUTH=@IS_AUTH
		WHERE IDX=@IDX;
    SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_EXP_MASTER_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-05
-- Description:	관리자 체험단 리뷰 마스터 조회
-- ussage: exec SP_ADMIN_REVIEW_EXP_MASTER_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_EXP_MASTER_SEL]
	@PAGE				INT = 1		--현재 PAGE
	,@PAGESIZE			INT = 10		--페이지 사이즈
	
	,@SEARCH_KEY		VARCHAR(100) = ''	--검색 필드
	,@SEARCH_VALUE		VARCHAR(100) = ''	--검색 값
	
	,@FROM_DATE VARCHAR(10) = NULL
	,@TO_DATE VARCHAR(10) = NULL
	
	,@IS_STATE_10 VARCHAR(2)= NULL
	,@IS_STATE_20 VARCHAR(2)= NULL
	,@IS_STATE_30 VARCHAR(2) = NULL
	
	,@IS_AUTH_Y VARCHAR(1) = NULL
	,@IS_AUTH_N VARCHAR(1) = NULL
	
	,@TOTAL INT OUTPUT --총수
AS
BEGIN
	SET NOCOUNT ON;
	
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				DECLARE @MyStoredProcResult TABLE(
					IDX INT
					,P_CODE VARCHAR(10)
					,P_NAME VARCHAR(100)
					,FROM_DATE DATETIME
					,TO_DATE DATETIME
					,IS_AUTH VARCHAR(1)
					,IS_AUTH_LBL VARCHAR(3)
					,IS_STATE VARCHAR(2)
					,IS_STATE_LBL VARCHAR(3)
					,INS_DATE DATETIME
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END   

	/**
	
	*/
	DECLARE @LISTCOUNT INT;

	DECLARE @v_SQL_WHERE NVARCHAR(MAX) ;
	DECLARE @v_SQL_ORDERBY NVARCHAR(MAX) ;
	DECLARE @V_SQL NVARCHAR(MAX);

	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	VARCHAR(13)
	)
	
	/**
		쿼리 조건
	*/
	SET @v_SQL_WHERE = ' (1=1) ';
	SET @v_SQL_ORDERBY = ' IDX DESC ' ;	
	

	IF @IS_STATE_10 IS NOT NULL OR @IS_STATE_20 IS NOT NULL OR @IS_STATE_30 IS NOT NULL
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( 1=0 ';
		IF @IS_STATE_10 = '10'
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR GETDATE() < FROM_DATE ';
			
		IF @IS_STATE_20  = '20'
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR GETDATE() BETWEEN FROM_DATE AND TO_DATE';
		
		IF @IS_STATE_30  = '30'
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR GETDATE() > TO_DATE ';
			
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' )';
	
	END 
		
	IF @IS_AUTH_Y IS NOT NULL OR  @IS_AUTH_N IS NOT NULL 
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND (IS_AUTH=''' +ISNULL(@IS_AUTH_Y,'')+ ''' ';
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'or IS_AUTH=''' +ISNULL(@IS_AUTH_N,'')+ ''') ';
	END 
	
	
	IF @SEARCH_KEY <>'' AND @SEARCH_VALUE <> ''
	BEGIN 
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_KEY + ' in (' + @SEARCH_VALUE + ')) ';
	END
	
	IF @FROM_DATE IS NOT NULL AND @TO_DATE IS NOT NULL
	BEGIN 
		SET  @v_SQL_WHERE = @v_SQL_WHERE + ' AND  (INS_DATE  BETWEEN '''+ CONVERT(char(10), @FROM_DATE, 23)+''' AND '''+ CONVERT(char(10), @TO_DATE, 23) +' 23:59:59'') ';
	END
	
	
	
	
	/**
		총수
	*/	
	SET @V_SQL  =' SELECT @rowcount=COUNT(IDX) ';
	SET @V_SQL  = @V_SQL + ' FROM TB_REVIEW_EXP_MASTER WITH (NOLOCK) '
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;

	EXEC sp_executesql @V_SQL, N'@rowcount int output', @TOTAL output;
	
	/**
		조회
	*/
 
	SET @V_SQL  = 'INSERT INTO #TEMPLIST (IDX_TMP)'
	SET @V_SQL  = @V_SQL + ' SELECT IDX ';
	SET @V_SQL  = @V_SQL + ' FROM TB_REVIEW_EXP_MASTER WITH (NOLOCK) '
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	SET @V_SQL  = @V_SQL + ' ORDER BY ' +  @v_SQL_ORDERBY;
	
	PRINT @V_SQL;

	SET @LISTCOUNT = @PAGE * @PAGESIZE;
	SET ROWCOUNT @LISTCOUNT;
	
	EXEC(@V_SQL);
	
	SET ROWCOUNT 0 ; --기본값 복원 

						
	SELECT 	
		IDX
		,P_CODE
		,P_NAME
		,FROM_DATE
		,TO_DATE
		,IS_AUTH
		,(
			CASE IS_AUTH
				WHEN 'Y' THEN '권한'
				WHEN 'N' THEN '비권한'
				ELSE ''
			END
		) AS IS_AUTH_LBL
		,(
			CASE  
				WHEN GETDATE() < FROM_DATE THEN '10'
				WHEN GETDATE() > FROM_DATE AND GETDATE() < TO_DATE THEN '20'
				WHEN GETDATE() > TO_DATE THEN '30'
				ELSE '' 
			END
		) AS IS_STATE
		,(
			CASE  
				WHEN GETDATE() < FROM_DATE THEN '예약'
				WHEN GETDATE() > FROM_DATE AND GETDATE() < TO_DATE THEN '진행'
				WHEN GETDATE() > TO_DATE THEN '완료'
				ELSE '' 
			END
		) AS IS_STATE_LBL
		,INS_DATE
	FROM TB_REVIEW_EXP_MASTER A WITH (NOLOCK)
			INNER JOIN 
		#TEMPLIST T WITH (NOLOCK)
		ON A.IDX = T.IDX_TMP
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ ASC;	
	
	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END 	 
		
    SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_EXP_MASTER_INS]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-05
-- Description:	관리자 체험단 리뷰 마스터 저장
-- ussage: exec SP_ADMIN_REVIEW_EXP_MASTER_INS
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_EXP_MASTER_INS]
	@P_CODE VARCHAR(10) = NULL
	,@FROM_DATE VARCHAR(10) = NULL
	,@TO_DATE VARCHAR(20) = NULL
	,@IS_AUTH VARCHAR(1) = NULL
	
	,@MASTER_IDX INT  = NULL OUTPUT -- 반환값
AS
BEGIN
	SET NOCOUNT ON;
		DECLARE @TEMP_TO_DATE VARCHAR(20);
		SET @TEMP_TO_DATE = @TO_DATE + ' 23:59:59';
		
		DECLARE @P_NAME VARCHAR(100);
		
		SELECT @P_NAME=P_NAME
			FROM TB_PRODUCT_INFO WITH (NOLOCK)
		WHERE P_CODE=@P_CODE;
		
		
		PRINT @TEMP_TO_DATE;
		INSERT INTO TB_REVIEW_EXP_MASTER(
			P_CODE
			,P_NAME
			,IS_AUTH
			,FROM_DATE
			,TO_DATE
		) VALUES (
			@P_CODE
			,@P_NAME
			,@IS_AUTH
			,@FROM_DATE
			,@TEMP_TO_DATE
		);
		
		SET @MASTER_IDX = SCOPE_IDENTITY();
		
    SET NOCOUNT OFF;
    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_EXP_MASTER_DETAIL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-05
-- Description:	관리자 체험단 리뷰 마스터 상세
-- ussage: exec SP_ADMIN_REVIEW_EXP_MASTER_DETAIL
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_EXP_MASTER_DETAIL]
	@IDX INT
AS
BEGIN
	SET NOCOUNT ON;
		SELECT 
				P_CODE
				, P_NAME
				, FROM_DATE
				, TO_DATE
				, IS_AUTH
			FROM TB_REVIEW_EXP_MASTER WITH (NOLOCK)
		WHERE IDX=@IDX;
	
    SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_EXP_FIND_PRODUCT_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-06
-- Description:	관리자 체험단 리뷰 마스터 저장
-- ussage: exec SP_ADMIN_REVIEW_EXP_FIND_PRODUCT_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_EXP_FIND_PRODUCT_SEL]
	@PAGE				INT			--현재 PAGE
	,@PAGESIZE			INT			--페이지 사이즈
	,@SEARCH_KEY		VARCHAR(100) =''	--검색 필드
	,@SEARCH_VALUE	VARCHAR(100) =''	--검색 키워드
	,@TOTAL INT OUTPUT 
AS
BEGIN
	SET NOCOUNT ON

		/**
			To Create Complex Type
		*/
		IF (1=0) 
		BEGIN 
			SET FMTONLY OFF 
				BEGIN
					DECLARE @MyStoredProcResult TABLE(
							IDX INT
							,P_CODE VARCHAR(10)
							,P_NAME VARCHAR(100)
							,SELLING_PRICE	INT
							,DISCOUNT_PRICE INT
						);
					SELECT * FROM @MyStoredProcResult WHERE (1=0)
				END
		END  
		



	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)

	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	DECLARE @v_SQL_WHERE NVARCHAR(MAX);

	SET @v_SQL_WHERE = ' 1=1 AND DISPLAY_YN=''Y'' ';

	IF @SEARCH_KEY <> '' AND @SEARCH_VALUE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_VALUE + '%'') '
	END

	/**
		총수
	*/	
	SET @V_SQL  =' SELECT @rowcount=COUNT(IDX) ';
	SET @V_SQL  = @V_SQL + ' FROM TB_PRODUCT_INFO WITH (NOLOCK) '
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
PRINT @V_SQL;
	EXEC sp_executesql @V_SQL, N'@rowcount int output', @TOTAL output;

	/*
		조회
	*/
	SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX ';
	SET @V_SQL  =@V_SQL + ' FROM TB_PRODUCT_INFO WITH (NOLOCK) '
	SET @V_SQL  =@V_SQL + '    WHERE ' + @v_SQL_WHERE;
	SET @V_SQL  =@V_SQL + '	ORDER BY RE_SORT DESC' ;


	SET @LISTCOUNT = @PAGE * @PAGESIZE;
	SET ROWCOUNT @LISTCOUNT;

	EXEC(@V_SQL);
	PRINT @V_SQL;

	SET ROWCOUNT 0;

	SELECT   A.IDX 
			 ,A.P_CODE 
			 ,A.P_NAME
			 ,A.SELLING_PRICE		 
			 ,A.DISCOUNT_PRICE
		FROM TB_PRODUCT_INFO A WITH (NOLOCK)
			INNER JOIN #TEMPLIST T ON A.IDX = T.IDX_SEQ 
		WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
		ORDER BY T.SEQ

	DROP TABLE #TEMPLIST ;

	SET NOCOUNT OFF

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_EXP_ARTICLE_UPDATE]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-16
-- Description:	관리자 체험단 리뷰 글상세
-- ussage: exec SP_ADMIN_REVIEW_EXP_ARTICLE_UPDATE
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_EXP_ARTICLE_UPDATE]
	@IDX INT = NULL	,
	@IS_DISPLAY VARCHAR(1) = NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	UPDATE TB_REVIEW_EXP_ARTICLE
	 SET IS_DISPLAY = @IS_DISPLAY
	WHERE IDX=@IDX;

    SET NOCOUNT OFF;
    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_EXP_ARTICLE_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-16
-- Description:	관리자 체험단 리뷰 글조회
-- ussage: exec SP_ADMIN_REVIEW_EXP_ARTICLE_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_EXP_ARTICLE_SEL]
	@EXP_MASTER_IDX INT = NULL
	
	,@PAGE				INT = 1		--현재 PAGE
	,@PAGESIZE			INT = 10		--페이지 사이즈
	,@SEARCH_KEY		VARCHAR(100) = ''	--검색 필드
	,@SEARCH_VALUE		VARCHAR(100) = ''	--검색 값
	

	,@TOTAL INT OUTPUT --총수
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE NVARCHAR(MAX) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				DECLARE @MyStoredProcResult TABLE(
						IDX INT NOT NULL,
						IS_DISPLAY VARCHAR(1),
						IS_DISPLAY_LBL VARCHAR(3),
						M_ID VARCHAR(13),
						M_ID_LBL VARCHAR(13),
						M_NAME VARCHAR(30),
						M_SEX CHAR(1),
						M_SEX_LBL VARCHAR(2) ,
						M_BIRTHDAY VARCHAR(10),						
						M_BIRTHDAY_LBL VARCHAR(5) ,
						EXP_MASTER_IDX INT,
						P_CODE VARCHAR(10),
						P_NAME VARCHAR(100),
						P_SUB_TITLE VARCHAR(200),
						P_MAIN_IMG VARCHAR(100),	
						SKIN_TYPE CHAR(2),
						SKIN_TYPE_LBL VARCHAR(5),
						SKIN_TYPE_CSS VARCHAR(5),
						TITLE VARCHAR(100),
						COMMENT TEXT,
						SUB_IMG_1 VARCHAR(100),
						SUB_IMG_2 VARCHAR(100),
						SUB_IMG_3 VARCHAR(100),
						VIEW_CNT INT,
						TAG VARCHAR(100),
						IS_BEST VARCHAR(1),
						INS_DATE DATETIME
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END  
	

	
	DECLARE @LISTCOUNT INT;
	DECLARE @v_SQL_WHERE NVARCHAR(MAX)='';
	DECLARE @v_SQL_ORDERBY NVARCHAR(MAX)='';
	DECLARE @V_SQL NVARCHAR(MAX)='';
	
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  drop table #TEMPLIST ;
	  --print 'drop...'
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)	
	
	SET @v_SQL_WHERE = ' (1=1) ';
	SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND EXP_MASTER_IDX='+ CAST( @EXP_MASTER_IDX AS VARCHAR(10));


	
	/**
		정렬
	*/
	SET @v_SQL_ORDERBY = ' IDX DESC ';
	

	/**
		총수
	*/	
	SET @V_SQL  = 'SELECT @rowcount=COUNT(R.IDX) ';	
	SET @V_SQL  = @V_SQL + ' FROM TB_REVIEW_EXP_ARTICLE AS R WITH (NOLOCK) ';
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	
	EXEC sp_executesql @V_SQL, N'@rowcount int output', @TOTAL output;
	
	IF @TOTAL IS NULL
		BEGIN 
			SET @TOTAL = 0;
		END

	
	/*
	 조회
	*/
	SET @V_SQL  = 'INSERT INTO #TEMPLIST (IDX_TMP)';
	SET @V_SQL  = @V_SQL + ' SELECT R.IDX';	
	SET @V_SQL  = @V_SQL + ' FROM TB_REVIEW_EXP_ARTICLE AS R WITH (NOLOCK) ';
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	SET @V_SQL  = @V_SQL + ' ORDER BY ' +  @v_SQL_ORDERBY;


	print @V_SQL;
	
	SET @LISTCOUNT = @PAGE * @PAGESIZE;
	SET ROWCOUNT @LISTCOUNT;
	
	EXEC(@V_SQL);	

	SET ROWCOUNT 0 ; --기본값 복원
						
	
	SELECT
		IDX,
		IS_DISPLAY,
		(
			CASE IS_DISPLAY
			 WHEN 'Y' THEN '전시'
			 WHEN 'N' THEN '비전시'
			 ELSE ''
			END	
		) AS IS_DISPLAY_LBL ,
		M_ID,
		(
			LEFT(M_ID, LEN(M_ID) - LEN(M_ID)/2) +  SUBSTRING('**************', 1, LEN(M_ID)/2)
		) 
		AS M_ID_LBL,
		M_NAME,		
		M_SEX,
		(
			CASE M_SEX
			 WHEN '1' THEN '남'
			 WHEN '2' THEN '여'
			 ELSE ''
			END						
		) AS M_SEX_LBL,
		M_BIRTHDAY,						
		(
			CONVERT(varchar, DATEDIFF(yyyy,convert(datetime, M_BIRTHDAY, 0),GETDATE()) /10 * 10)
		) AS M_BIRTHDAY_LBL,
		P_CODE,
		P_NAME,
		P_SUB_TITLE,
		P_MAIN_IMG,
		IS_BEST,
		SKIN_TYPE,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN '건성'
				WHEN '20' THEN '중성'
				WHEN '30' THEN '지복합성'
				ELSE ''
			END 
		) AS SKIN_TYPE_LBL,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN 'dry'
				WHEN '20' THEN 'normal'
				WHEN '30' THEN 'oily'
				ELSE ''
			END 
		) AS SKIN_TYPE_CSS,
		COMMENT,
		
		TITLE,
		SUB_IMG_1,
		SUB_IMG_2,
		SUB_IMG_3,
		TAG,
		VIEW_CNT,
		EXP_MASTER_IDX,
		
		INS_DATE
	FROM TB_REVIEW_EXP_ARTICLE A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T WITH (NOLOCK)
		ON A.IDX = T.IDX_TMP
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ ASC;	
	
	
	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END 
	
	SET NOCOUNT OFF;
		
    SET @RET_NUM = '0';
    
	IF NOT EXISTS(SELECT IDX FROM TB_REVIEW_EXP_MASTER WITH (NOLOCK) WHERE IDX=@EXP_MASTER_IDX)
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않는 체험단입니다.';
	END
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_EXP_ARTICLE_DETAIL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-16
-- Description:	관리자 체험단 리뷰 글상세
-- ussage: exec SP_ADMIN_REVIEW_EXP_ARTICLE_DETAIL
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_EXP_ARTICLE_DETAIL]
	@IDX INT = NULL	
AS
BEGIN
	SET NOCOUNT ON;

	SELECT
		IDX,
		IS_DISPLAY,
		(
			CASE IS_DISPLAY
			 WHEN 'Y' THEN '전시'
			 WHEN 'N' THEN '비전시'
			 ELSE ''
			END	
		) AS IS_DISPLAY_LBL ,
		M_ID,
		(
			LEFT(M_ID, LEN(M_ID) - LEN(M_ID)/2) +  SUBSTRING('**************', 1, LEN(M_ID)/2)
		) 
		AS M_ID_LBL,
		M_NAME,		
		M_SEX,
		(
			CASE M_SEX
			 WHEN '1' THEN '남'
			 WHEN '2' THEN '여'
			 ELSE ''
			END						
		) AS M_SEX_LBL,
		M_BIRTHDAY,						
		(
			CONVERT(varchar, DATEDIFF(yyyy,convert(datetime, M_BIRTHDAY, 0),GETDATE()) /10 * 10)
		) AS M_BIRTHDAY_LBL,
		P_CODE,
		P_NAME,
		P_SUB_TITLE,
		P_MAIN_IMG,
		IS_BEST,
		SKIN_TYPE,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN '건성'
				WHEN '20' THEN '중성'
				WHEN '30' THEN '지복합성'
				ELSE ''
			END 
		) AS SKIN_TYPE_LBL,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN 'dry'
				WHEN '20' THEN 'normal'
				WHEN '30' THEN 'oily'
				ELSE ''
			END 
		) AS SKIN_TYPE_CSS,
		COMMENT,
		
		TITLE,
		SUB_IMG_1,
		SUB_IMG_2,
		SUB_IMG_3,
		TAG,
		VIEW_CNT,
		EXP_MASTER_IDX,
		
		INS_DATE
	FROM TB_REVIEW_EXP_ARTICLE  WITH (NOLOCK)
	WHERE IDX=@IDX

		
    SET NOCOUNT OFF;
    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_CATE_THEMA_UPD]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-04
-- Description:	관리자 상품 리뷰 테마 갱신
-- ussage: exec SP_ADMIN_REVIEW_CATE_THEMA_UPD
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_CATE_THEMA_UPD]
	@IDX INT,
	@TITLE VARCHAR(200),
	@IS_DISPLAY VARCHAR(1),
	@TAG VARCHAR(300)
AS
BEGIN
	SET NOCOUNT ON;
		UPDATE TB_REVIEW_CATE_THEMA
		 SET  
			TITLE = @TITLE,
			IS_DISPLAY = @IS_DISPLAY,
			TAG = @TAG
		WHERE IDX=@IDX
		
    SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_REVIEW_CATE_THEMA_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-04
-- Description:	관리자 상품 리뷰 테마 조회
-- ussage: exec SP_ADMIN_REVIEW_PRODUCT_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_REVIEW_CATE_THEMA_SEL]
AS
BEGIN
	SET NOCOUNT ON;
		SELECT 
			IDX,
			TITLE,
			IS_DISPLAY,
			TAG 
		FROM TB_REVIEW_CATE_THEMA
		
    SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_RECALL_BBS_VIEW]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_RECALL_BBS

exec [SP_ADMIN_RECALL_BBS_VIEW] 1

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_RECALL_BBS_VIEW]
 @IDX			INT
AS
BEGIN

	SET NOCOUNT ON
  
	SELECT a.IDX
	 , a.GUBUN
	 , CASE WHEN a.GUBUN = '1' THEN '주문취소신청' 
			WHEN a.GUBUN = '2' THEN '반품신청' 
			WHEN a.GUBUN = '3' THEN '교환신청' 
	   END AS GUBUN_NM
	 ,a.TITLE 
	 , a.ORDER_CODE
	 , a.ORDER_DETAIL_IDX
	 , a.CONTENTS
	 , a.CONFIRM_CONTENTS
	 , a.STATUS 
	 , CASE WHEN a.STATUS = '1' THEN '처리중' 
			WHEN a.STATUS = '2' THEN '처리완료' 
	   END AS STATUS_NM
	 , a.ADM_ID  
	 , a.REG_ID
	 , CASE WHEN isnull(a.REG_ID,'') = '' THEN '(비회원)' 
			ELSE m.M_NAME
	   END AS M_NAME
	 , a.REG_DATE
	 , a.CONFIRM_DATE
	 , d.ORDER_IDX
	 , d.P_CODE
	 , d.P_NAME
	FROM TB_RECALL_BBS a with (nolock)
		left join TB_MEMBER m with (nolock) on a.REG_ID = m.M_ID
		left join TB_ORDER_DETAIL d with (nolock) on a.ORDER_CODE = d.ORDER_CODE and a.ORDER_DETAIL_IDX = d.ORDER_DETAIL_IDX
	WHERE IDX = @IDX
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_RECALL_BBS_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_QNA

exec [SP_ADMIN_RECALL_BBS_SEL]  'TEST'
*/
CREATE PROCEDURE [dbo].[SP_ADMIN_RECALL_BBS_SEL]
 @SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@STATUS_YN 	CHAR(1) = 'A'
,@SORT_COL	varchar(50)	='IDX' 
,@SORT_DIR	varchar(4)	='DESC' 
,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈

AS
BEGIN
SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

	 
	set @v_SQL_WHERE = ' WHERE (1=1)'

	
	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '

	IF @STATUS_YN <> 'A'
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( STATUS = ''' + @STATUS_YN + ''') '
 
	set @v_SQL_ORDERBY = ' ' + @SORT_COL  + ' ' + @SORT_DIR 
 
	 
	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	set @v_SQL  ='insert into #TEMPLIST (IDX_TMP) '
	set @v_SQL  =@v_SQL + ' SELECT  IDX ';
	set @v_SQL  =@v_SQL + ' FROM TB_RECALL_BBS WITH (NOLOCK) ';
	set @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	set @v_SQL  =@v_SQL + '	ORDER BY ' + @v_SQL_ORDERBY ; 
	exec(@v_SQL);


	SET ROWCOUNT 0 ;

	SELECT a.IDX
	 , a.GUBUN
	 , CASE WHEN a.GUBUN = '1' THEN '주문취소신청' 
			WHEN a.GUBUN = '2' THEN '반품신청' 
			WHEN a.GUBUN = '3' THEN '교환신청' 
	   END AS GUBUN_NM
	 ,a.TITLE 
	 , a.ORDER_CODE
	 , a.ORDER_DETAIL_IDX
	 , a.CONTENTS
	 , a.CONFIRM_CONTENTS
	 , a.STATUS 
	 , CASE WHEN a.STATUS = '1' THEN '처리중' 
			WHEN a.STATUS = '2' THEN '처리완료' 
	   END AS STATUS_NM
	 , a.ADM_ID  
	 , a.REG_ID
	 , CASE WHEN isnull(a.REG_ID,'') = '' THEN '(비회원)' 
			ELSE m.M_NAME
	   END AS M_NAME
	 , a.REG_DATE
	 , a.CONFIRM_DATE
	from TB_RECALL_BBS a with (nolock)
		inner join #TEMPLIST t on a.IDX = t.IDX_TMP
		left join TB_MEMBER m with (nolock) on a.REG_ID = m.M_ID
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_QNA_ANSWER_UPD]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_QNA

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_QNA_ANSWER_UPD]
 @IDX	INT
,@ANSWER TEXT
AS
BEGIN

	UPDATE TB_QNA
	SET ANSWER = @ANSWER 
	, STATUS = 2
	, ANS_DATE = GETDATE()
	WHERE IDX = @IDX 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_UPDATE_ALL_PRODUCT_PRICE_DUP_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 상품별 할인 프로모션에서 프로모션의 기간정보 수정시 
                 다른 프로모션에 중복된 상품이 있는지  
 * Modified  :   2015.07.11  
 * Modified  :     
 * Modified  :    
 ============================================================*/    
  
  
 -- EXEC [SP_ADMIN_PROMOTION_ALL_PRODUCT_PRICE_DUP_SEL] '1111114','PP00003'   
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_UPDATE_ALL_PRODUCT_PRICE_DUP_SEL]  
    @CD_PROMOTION_PRODUCT VARCHAR(7)   
   ,@TARGET_PMO_PRODUCT_DATE_FROM DATETIME
   ,@TARGET_PMO_PRODUCT_DATE_TO DATETIME
 AS  
   
  
 SET NOCOUNT ON  

   
   
   
 -- 전체 가격정책에서 지금 등록하려는 상품과 중복되는 가격정책이 있는지 뒤진다  
 SELECT ISNULL(COUNT(A.IDX),0)AS CNT FROM TB_PROMOTION_BY_PRODUCT_PRICE A with (nolock)   
       INNER JOIN TB_PROMOTION_BY_PRODUCT B ON A.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT  
 WHERE   
        (      
                     ( B.PMO_PRODUCT_DATE_FROM  <= @TARGET_PMO_PRODUCT_DATE_TO)     
                      AND     
                     ( B.PMO_PRODUCT_DATE_TO   >=  @TARGET_PMO_PRODUCT_DATE_FROM )     
        )    
        AND  ( B.USABLE_YN = 'Y' OR B.USABLE_YN IS NULL)   
        AND  ( A.USABLE_YN = 'Y' OR A.USABLE_YN IS NULL) 
        AND  B.CD_PROMOTION_PRODUCT != @CD_PROMOTION_PRODUCT  -- 현재 수정하려는 프로모션이 아닌것들 중에서  
        AND  A.P_CODE IN 
        (  
              --현재 수정하려는 프로모션에 소속된 상품가격정보들 
              SELECT P_CODE FROM  
              TB_PROMOTION_BY_PRODUCT_PRICE  WITH(NOLOCK)
              WHERE CD_PROMOTION_PRODUCT = @CD_PROMOTION_PRODUCT 
                    AND ( USABLE_YN = 'Y' OR USABLE_YN IS NULL )
        )
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_PRODUCT_PRICE_VS_TOTAL_INS]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품별 할인 프로모션 Pricing Product와 전체할인과의 관계 insert 
 * Modified  :   2015.07.10
 * Modified  :   
 * Modified  :  
 ============================================================*/  
 
 
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_PRODUCT_PRICE_VS_TOTAL_INS]
 @CD_PROMOTION_PRODUCT VARCHAR(7)
,@CD_PROMOTION_TOTAL VARCHAR(7)
,@PRODUCT_PRICE_IDX INT
,@P_CODE VARCHAR(10)
,@USABLE_YN VARCHAR(1) = 'Y'
AS



SET NOCOUNT ON 


INSERT INTO [dbo].[TB_PROMOTION_PRODUCT_VS_TOTAL]
           ([CD_PROMOTION_PRODUCT]
           ,[CD_PROMOTION_TOTAL]
           ,[PRODUCT_PRICE_IDX]
           ,[P_CODE]
           ,[USABLE_YN])
     VALUES
           (
           @CD_PROMOTION_PRODUCT
           ,@CD_PROMOTION_TOTAL
           ,@PRODUCT_PRICE_IDX
           ,@P_CODE
           ,@USABLE_YN
           )
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_PRODUCT_PRICE_INS]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품별 할인 프로모션 Price 정보 등록 
 * Modified  :   2015.07.10
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_PRODUCT_DUP_SEL] '00','2015-07-06 00:00:00' ,'2015-07-08 00:00:00' 
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_PRODUCT_PRICE_INS]
 
      @CD_PROMOTION_PRODUCT varchar(7)
      ,@P_CODE varchar(10)
      ,@P_DISCOUNT_PRICE int 
      ,@PMO_PRODUCT_RATE_OR_MONEY varchar(1) = 'M'
     /**
      ,@PMO_PRODUCT_DISCOUNT_RATE 
      ,@PMO_PRODUCT_DISCOUNT_MONEY
     **/
      ,@PMO_PRICE int
      ,@PMO_ONE_ONE_P_CODE varchar(10)
      ,@PMO_ONE_ONE_PRICE int = 0
      ,@USABLE_YN varchar(1) = 'N'
      ,@OUTPUT_PRODUCT_PRICE_IDX  int OUTPUT 
AS



SET NOCOUNT ON 

INSERT INTO [AboutMe].[dbo].[TB_PROMOTION_BY_PRODUCT_PRICE]
           ([CD_PROMOTION_PRODUCT]
           ,[P_CODE]
           ,[P_DISCOUNT_PRICE]
           ,[PMO_PRODUCT_RATE_OR_MONEY]
           /**
           ,[PMO_PRODUCT_DISCOUNT_RATE]
           ,[PMO_PRODUCT_DISCOUNT_MONEY]
           **/
           ,[PMO_PRICE]
           ,[PMO_ONE_ONE_P_CODE]
           ,[PMO_ONE_ONE_PRICE]
           ,[USABLE_YN])
     VALUES
           (
       
           @CD_PROMOTION_PRODUCT 
		  ,@P_CODE 
		  ,@P_DISCOUNT_PRICE 
		  ,@PMO_PRODUCT_RATE_OR_MONEY
		  /**
		  ,@PMO_PRODUCT_DISCOUNT_RATE
		  ,@PMO_PRODUCT_DISCOUNT_MONEY
		  **/
		  ,@PMO_PRICE
		  ,@PMO_ONE_ONE_P_CODE
		  ,@PMO_ONE_ONE_PRICE
		  ,@USABLE_YN
		  )

SELECT @OUTPUT_PRODUCT_PRICE_IDX = SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_PRODUCT_CODE_CHECK_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품별 할인 프로모션 Pricing Product등록시 상품코드 유효여부 Check
 * Modified  :   2015.07.10
 * Modified  :   
 * Modified  :  
 ============================================================*/  
 


CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_PRODUCT_CODE_CHECK_SEL]
	@P_CODE VARCHAR(10)
AS

SET NOCOUNT ON 


SELECT isnull(COUNT(IDX),0) As CNT From TB_PRODUCT_INFO WITH(Nolock)
WHERE P_CODE = @P_CODE AND DISPLAY_YN = 'Y'
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_COMMON_CNT]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 전체할인 프로모션 -- 엔티티프레임웍 COUNT용 Complex Type 생성을 위한 것
 * Modified  :   2015.07.05
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL] 1
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_COMMON_CNT]

AS
 
SET NOCOUNT ON


SELECT ISNULL(COUNT(*),0) As CNT FROM TB_PROMOTION_BY_TOTAL WHERE 1=0
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_UPDATE]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 전체할인 프로모션 UPDATE(admin)
 * Modified  :   2015.07.07
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL] 1
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_UPDATE]
    @PMO_TOTAL_NAME varchar(50)
   --,@PMO_TOTAL_CATEGORY varchar(2)
   --,@PMO_TOTAL_RATE_OR_MONEY varchar(1)
   ,@PMO_TOTAL_DISCOUNT_RATE tinyint = 0
   ,@PMO_TOTAL_DISCOUNT_MONEY int  = 0
   ,@PMO_TOTAL_DATE_FROM DateTime
   ,@PMO_TOTAL_DATE_TO DateTime
   ,@USABLE_YN varchar(1)
   ,@CD_PROMOTION_TOTAL VARCHAR(7) 
AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

 SET NOCOUNT ON
 
 UPDATE [TB_PROMOTION_BY_TOTAL]
   SET 
      [PMO_TOTAL_NAME] = @PMO_TOTAL_NAME
     -- ,[PMO_TOTAL_RATE_OR_MONEY] = <PMO_TOTAL_RATE_OR_MONEY, varchar(1),>
      ,[PMO_TOTAL_DISCOUNT_RATE]  = @PMO_TOTAL_DISCOUNT_RATE
      ,[PMO_TOTAL_DISCOUNT_MONEY] = @PMO_TOTAL_DISCOUNT_MONEY
      ,[PMO_TOTAL_DATE_FROM] = @PMO_TOTAL_DATE_FROM
      ,[PMO_TOTAL_DATE_TO] = @PMO_TOTAL_DATE_TO
      ,[USABLE_YN] = @USABLE_YN
 WHERE [CD_PROMOTION_TOTAL] = @CD_PROMOTION_TOTAL
 
 SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 전체할인 프로모션리스트 (admin)
 * Modified  :   2015.07.03
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_SEL] 1,10,'','',''
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_SEL]
@PAGE				INT			--현재 PAGE
,@PAGESIZE			INT			--페이지 사이즈
,@SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드



AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

	SET NOCOUNT ON
	--SET FMTONLY OFF
	
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	
	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX ';
	SET @V_SQL  =@V_SQL + ' FROM TB_PROMOTION_BY_TOTAL WITH (NOLOCK) '
	SET @V_SQL  =@V_SQL + '    WHERE 1=1 ';

	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
		BEGIN
		SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
		END
	
	/**
	IF @SEARCH_DISPLAY_YN <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND DISPLAY_YN = '''+@SEARCH_DISPLAY_YN+''' '
		END 				
	**/
		
	SET @V_SQL  =@V_SQL + '	ORDER BY IDX DESC' ;
	
	EXEC(@V_SQL);
	--PRINT @V_SQL


	SET ROWCOUNT 0
	

	--프로모션 리스트 조회
	SELECT   A.IDX 
      ,A.[CD_PROMOTION_TOTAL]
      ,A.[PMO_TOTAL_NAME]
      ,A.[PMO_TOTAL_CATEGORY]
      ,A.[PMO_TOTAL_CATEGORY_NAME]
      ,A.[PMO_TOTAL_RATE_OR_MONEY]
      ,A.[PMO_TOTAL_DISCOUNT_RATE]
      ,A.[PMO_TOTAL_DISCOUNT_MONEY]
      ,A.[PMO_TOTAL_DATE_FROM]
      ,A.[PMO_TOTAL_DATE_TO]
      ,A.[USABLE_YN]
      ,A.[INS_DATE]			
	FROM TB_PROMOTION_BY_TOTAL A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T ON A.IDX = T.IDX_SEQ 
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ
	
	DROP TABLE #TEMPLIST ;

	SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_MEM_GRADE_WITH_CD_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 전체할인 프로모션 관련 회원등급 정보 select (admin)
 * Modified  :   2015.07.05
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DUP_SEL] '00','2015-07-06 00:00:00' ,'2015-07-08 00:00:00' 
create PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_MEM_GRADE_WITH_CD_SEL]
	
	@CD_PROMOTION_TOTAL VARCHAR(7)
 AS
 SET NOCOUNT ON
 
 SELECT [IDX]
      ,[CD_PROMOTION_TOTAL]
      ,[M_GBN]
      ,[M_GRADE]
      ,[USABLE_YN]
      ,[INS_DATE]
 FROM [AboutMe].[dbo].[TB_PROMOTION_BY_TOTAL_MEM_GRADE] WITH(NOLOCK)
 WHERE [CD_PROMOTION_TOTAL] = @CD_PROMOTION_TOTAL
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_MEM_GRADE_INS]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 전체할인 프로모션 적용 회원등급 INSERT(admin)
 * Modified  :   2015.07.05
 * Modified  :   
 * Modified  :  
 ============================================================*/  


CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_MEM_GRADE_INS]
    @CD_PROMOTION_TOTAL varchar(7)
   ,@M_GBN varchar(1)
   ,@M_GRAGE varchar(1)
   ,@USABLE_YN varchar(1)
AS


INSERT INTO [dbo].[TB_PROMOTION_BY_TOTAL_MEM_GRADE]
           (
			    [CD_PROMOTION_TOTAL]
			   ,[M_GBN]
			   ,[M_GRADE]
			   ,[USABLE_YN]
			   ,[INS_DATE]
           )
  VALUES
           (  
				 @CD_PROMOTION_TOTAL
				,@M_GBN 
				,@M_GRAGE 
				,@USABLE_YN 
				, GETDATE()
			)
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_MEM_GRADE_DEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 전체할인 프로모션 적용 회원등급 삭제 
 * Modified  :   2015.07.05
 * Modified  :   
 * Modified  :  
 ============================================================*/  


create PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_MEM_GRADE_DEL]
    @CD_PROMOTION_TOTAL varchar(7)

AS

DELETE FROM dbo.TB_PROMOTION_BY_TOTAL_MEM_GRADE WHERE CD_PROMOTION_TOTAL = @CD_PROMOTION_TOTAL ;
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_INS]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 전체할인 프로모션 INSERT(admin)
 * Modified  :   2015.07.05 , 2015.08.04 신규 프로모션코드 생성방식 변경
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL] 1
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_INS]
    @PMO_TOTAL_NAME varchar(50)
   ,@PMO_TOTAL_CATEGORY varchar(2)
   ,@PMO_TOTAL_RATE_OR_MONEY varchar(1)
   ,@PMO_TOTAL_DISCOUNT_RATE tinyint = 0
   ,@PMO_TOTAL_DISCOUNT_MONEY int  = 0
   ,@PMO_TOTAL_DATE_FROM DateTime
   ,@PMO_TOTAL_DATE_TO DateTime
   ,@USABLE_YN varchar(1) = 'N'
   ,@CD_PROMOTION_TOTAL VARCHAR(7) OUTPUT
AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

 SET NOCOUNT ON
 

 
 DECLARE @LAST_CD_PROMOTION_TOTAL VARCHAR(7)
 DECLARE @NEW_CD_PROMOTION_TOTAL VARCHAR(7)
 DECLARE @NEW_CD_LEFT_NUMBER_PART INT 
 SET @LAST_CD_PROMOTION_TOTAL = '';
 
 DECLARE @PMO_TOTAL_CATEGORY_NAME VARCHAR(40)
 
 --가장 최근의 프로모션코드 가져오기 
 --SELECT TOP 1 @LAST_CD_PROMOTION_TOTAL = ISNULL(CD_PROMOTION_TOTAL,'') FROM [TB_PROMOTION_BY_TOTAL] WITH(NOLOCK) ORDER BY IDX DESC
 SELECT TOP 1 @LAST_CD_PROMOTION_TOTAL = ISNULL(CD_PROMOTION_TOTAL,'') FROM TB_PROMOTION_BY_TOTAL_NUMBERING WITH(NOLOCK) 
 
 --신규 프로모션 코드 만들기 
 IF @LAST_CD_PROMOTION_TOTAL = ''
 BEGIN
	SET @NEW_CD_PROMOTION_TOTAL = 'PT00001'
	INSERT INTO TB_PROMOTION_BY_TOTAL_NUMBERING (CD_PROMOTION_TOTAL) VALUES(@NEW_CD_PROMOTION_TOTAL)
 END 
 ELSE
 BEGIN
	 IF LEN(@LAST_CD_PROMOTION_TOTAL) = 7 
	 BEGIN
		  SET @NEW_CD_LEFT_NUMBER_PART = CAST(RIGHT(@LAST_CD_PROMOTION_TOTAL,5) AS INT)
		  SET @NEW_CD_LEFT_NUMBER_PART = @NEW_CD_LEFT_NUMBER_PART + 1
		  SET @NEW_CD_PROMOTION_TOTAL =  'PT' +   RIGHT('00000' + CAST(@NEW_CD_LEFT_NUMBER_PART AS VARCHAR(5)),5) 
		  
		  UPDATE TB_PROMOTION_BY_TOTAL_NUMBERING SET CD_PROMOTION_TOTAL = @NEW_CD_PROMOTION_TOTAL , UPD_DATE = GETDATE()
	 END
	     
 END 
 
 --카테고리이름 가져오기
 SELECT @PMO_TOTAL_CATEGORY_NAME = PMO_TOTAL_CATEGORY_NAME FROM TB_PROMOTION_BY_TOTAL_CATEGORY WITH(NOLOCK) 
 WHERE PMO_TOTAL_CATEGORY = @PMO_TOTAL_CATEGORY 

 --INSERT
 INSERT INTO [TB_PROMOTION_BY_TOTAL]
           ([CD_PROMOTION_TOTAL]
          
           ,[PMO_TOTAL_NAME]
           ,[PMO_TOTAL_CATEGORY]
           ,[PMO_TOTAL_CATEGORY_NAME]
           ,[PMO_TOTAL_RATE_OR_MONEY]
           ,[PMO_TOTAL_DISCOUNT_RATE]
           ,[PMO_TOTAL_DISCOUNT_MONEY]
           ,[PMO_TOTAL_DATE_FROM]
           ,[PMO_TOTAL_DATE_TO]
           ,[USABLE_YN]
           ,[INS_DATE])
     VALUES
           (
            @NEW_CD_PROMOTION_TOTAL
            ,@PMO_TOTAL_NAME 
            ,@PMO_TOTAL_CATEGORY
            ,@PMO_TOTAL_CATEGORY_NAME
		    ,@PMO_TOTAL_RATE_OR_MONEY 
		    ,@PMO_TOTAL_DISCOUNT_RATE 
		    ,@PMO_TOTAL_DISCOUNT_MONEY 
		    ,@PMO_TOTAL_DATE_FROM 
		    ,@PMO_TOTAL_DATE_TO 
		    ,@USABLE_YN 
            ,getdate()
            )


  SET @CD_PROMOTION_TOTAL = @NEW_CD_PROMOTION_TOTAL
  
  SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_DUP_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 전체할인 프로모션 INSERT(admin)
 * Modified  :   2015.07.05
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DUP_SEL] '00','2015-07-06 00:00:00' ,'2015-07-08 00:00:00' 
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_DUP_SEL]
	
	@PMO_TOTAL_CATETORY  VARCHAR(2)
   ,@PMO_TOTAL_DATE_FROM DATETIME
   ,@PMO_TOTAL_DATE_TO   DATETIME
 AS
 

 SET NOCOUNT ON
 
 SELECT ISNULL(COUNT(IDX),0)AS CNT FROM TB_PROMOTION_BY_TOTAL with (nolock)
 WHERE PMO_TOTAL_CATEGORY = @PMO_TOTAL_CATETORY 
	   AND
	   (    
                     ( PMO_TOTAL_DATE_FROM  <= @PMO_TOTAL_DATE_TO)   
                      AND   
                     ( PMO_TOTAL_DATE_TO   >=   @PMO_TOTAL_DATE_FROM)   
        )  
        AND ( USABLE_YN = 'Y' OR USABLE_YN IS NULL)
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_DUP_AT_UPDATE_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 전체할인 프로모션 중복검증(업데이트시점) (admin)
 * Modified  :   2015.07.05
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DUP_SEL] '00','2015-07-06 00:00:00' ,'2015-07-08 00:00:00' 
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_DUP_AT_UPDATE_SEL]
	
	@PMO_TOTAL_CATETORY  VARCHAR(2)
   ,@PMO_TOTAL_DATE_FROM DATETIME
   ,@PMO_TOTAL_DATE_TO   DATETIME
   ,@CD_PROMOTION_TOTAL  VARCHAR(7)
 AS
 

 SET NOCOUNT ON
 
 SELECT ISNULL(COUNT(IDX),0)AS CNT FROM TB_PROMOTION_BY_TOTAL with (nolock)
 WHERE 
       PMO_TOTAL_CATEGORY = @PMO_TOTAL_CATETORY 
	   AND
	   (    
                     ( PMO_TOTAL_DATE_FROM  <= @PMO_TOTAL_DATE_TO)   
                      AND   
                     ( PMO_TOTAL_DATE_TO   >=   @PMO_TOTAL_DATE_FROM)   
        )  
        AND ( USABLE_YN = 'Y' OR USABLE_YN IS NULL)
        AND CD_PROMOTION_TOTAL <>  @CD_PROMOTION_TOTAL
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 전체할인 프로모션 상세(admin)
 * Modified  :   2015.07.03
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL] 1
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL]
 @CD_PROMOTION_TOTAL VARCHAR(7)
AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

   SET NOCOUNT ON
		
   SELECT [IDX]
      ,[CD_PROMOTION_TOTAL]
      ,[PMO_TOTAL_NAME]
      ,[PMO_TOTAL_CATEGORY]
      ,[PMO_TOTAL_CATEGORY_NAME]
      ,[PMO_TOTAL_RATE_OR_MONEY]
      ,[PMO_TOTAL_DISCOUNT_RATE]
      ,[PMO_TOTAL_DISCOUNT_MONEY]
      ,[PMO_TOTAL_DATE_FROM]
      ,[PMO_TOTAL_DATE_TO]
      ,[USABLE_YN]
      ,[INS_DATE]
  FROM [TB_PROMOTION_BY_TOTAL] WITH (NOLOCK)
  WHERE CD_PROMOTION_TOTAL =@CD_PROMOTION_TOTAL

  SET NOCOUNT OFF
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_ALL_PRODUCT_PRICE_IDX_DUP_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================        
 * Author  : 송선우 (swsong2@cstone.co.kr)        
 * Company  : 코너스톤 인터랙티브        
 * Description : 상품별 할인 프로모션에서 상품(수정)시 같은프로모션과 다른프로모션에 중복된 상품이 있는지      
 * Modified  :   2015.07.10     
 * Modified  :         
 * Modified  :        
 ============================================================*/        
      
      
 -- EXEC [SP_ADMIN_PROMOTION_ALL_PRODUCT_PRICE_DUP_SEL] '1111114','PP00003'       
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_ALL_PRODUCT_PRICE_IDX_DUP_SEL]      
   @P_CODE VARCHAR(10)      
   ,@CD_PROMOTION_PRODUCT VARCHAR(7)    
   ,@IDX INT 
 AS      
       
      
 SET NOCOUNT ON      
       
 Declare  @THIS_PROMOTION_PMO_PRODUCT_DATE_FROM Datetime , @THIS_PROMOTION_PMO_PRODUCT_DATE_TO Datetime      
       
 SELECT       
      @THIS_PROMOTION_PMO_PRODUCT_DATE_FROM = PMO_PRODUCT_DATE_FROM       
     ,@THIS_PROMOTION_PMO_PRODUCT_DATE_TO   = PMO_PRODUCT_DATE_TO      
 FROM TB_PROMOTION_BY_PRODUCT WITH(NOLOCK)      
 WHERE CD_PROMOTION_PRODUCT = @CD_PROMOTION_PRODUCT     
       
       
       
 -- 전체 가격정책에서 지금 등록하려는 상품과 중복되는 가격정책이 있는지 뒤진다      
 SELECT ISNULL(COUNT(A.IDX),0)AS CNT FROM TB_PROMOTION_BY_PRODUCT_PRICE A with (nolock)       
       INNER JOIN TB_PROMOTION_BY_PRODUCT B ON A.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT      
 WHERE       
        (          
                     ( B.PMO_PRODUCT_DATE_FROM  <= @THIS_PROMOTION_PMO_PRODUCT_DATE_TO )         
                      AND         
                     ( B.PMO_PRODUCT_DATE_TO   >=  @THIS_PROMOTION_PMO_PRODUCT_DATE_FROM )         
        )        
        AND  ( B.USABLE_YN = 'Y' OR B.USABLE_YN IS NULL)      
        AND   A.P_CODE =   @P_CODE       
        AND  ( A.USABLE_YN = 'Y' OR A.USABLE_YN IS NULL)   
        AND  A.IDX <> @IDX -- 지금 수정하려는 상품가격정책(IDX)를 제외하고
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PROMOTION_ALL_PRODUCT_PRICE_DUP_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================        
 * Author  : 송선우 (swsong2@cstone.co.kr)        
 * Company  : 코너스톤 인터랙티브        
 * Description : 상품별 할인 프로모션에서 상품등록시 같은프로모션과 다른프로모션에 중복된 상품이 있는지      
 * Modified  :   2015.07.10     
 * Modified  :         
 * Modified  :        
 ============================================================*/        
      
      
 -- EXEC [SP_ADMIN_PROMOTION_ALL_PRODUCT_PRICE_DUP_SEL] '1111114','PP00003'       
CREATE PROCEDURE  [dbo].[SP_ADMIN_PROMOTION_ALL_PRODUCT_PRICE_DUP_SEL]      
   @P_CODE VARCHAR(10)      
   ,@CD_PROMOTION_PRODUCT VARCHAR(7)    
  
 AS      
       
      
 SET NOCOUNT ON      
       
 Declare  @THIS_PROMOTION_PMO_PRODUCT_DATE_FROM Datetime , @THIS_PROMOTION_PMO_PRODUCT_DATE_TO Datetime      
       
 SELECT       
      @THIS_PROMOTION_PMO_PRODUCT_DATE_FROM = PMO_PRODUCT_DATE_FROM       
     ,@THIS_PROMOTION_PMO_PRODUCT_DATE_TO   = PMO_PRODUCT_DATE_TO      
 FROM TB_PROMOTION_BY_PRODUCT WITH(NOLOCK)      
 WHERE CD_PROMOTION_PRODUCT = @CD_PROMOTION_PRODUCT     
       
       
       
 -- 전체 가격정책에서 지금 등록하려는 상품과 중복되는 가격정책이 있는지 뒤진다      
 SELECT ISNULL(COUNT(A.IDX),0)AS CNT FROM TB_PROMOTION_BY_PRODUCT_PRICE A with (nolock)       
       INNER JOIN TB_PROMOTION_BY_PRODUCT B ON A.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT      
 WHERE       
        (          
                     ( B.PMO_PRODUCT_DATE_FROM  <= @THIS_PROMOTION_PMO_PRODUCT_DATE_TO )         
                      AND         
                     ( B.PMO_PRODUCT_DATE_TO   >=  @THIS_PROMOTION_PMO_PRODUCT_DATE_FROM )         
        )        
        AND  ( B.USABLE_YN = 'Y' OR B.USABLE_YN IS NULL)      
        AND   A.P_CODE =   @P_CODE       
        AND  ( A.USABLE_YN = 'Y' OR A.USABLE_YN IS NULL)   
        --AND  A.CD_PROMOTION_PRODUCT <> @CD_PROMOTION_PRODUCT -- 같은 프로모션 상품은 제외하고 .. 2015.07.20수정
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PRODUCT_UPD]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품 수정 (admin)
 * Modified  :   2015.06.11
 * Modified  :   2015.06.15
 * Modified  :   2015.06.22
 * Modified  :   2015.06.23
 * Modified  :   2015.07.22
 * Modified  :   2015.08.17
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_ADMIN_PRODUCT_UPD]
@IDX				INT	--고유키
,@P_CATE_CODE		CHAR(9)		=''			--카테고리 1TYPE
,@C_CATE_CODE		CHAR(9)		=''			--카테고리 2TYPE
,@L_CATE_CODE		CHAR(9)		=''			--카테고리 3TYPE
--,@P_CODE			VARCHAR(10)		=''			--상품코드
,@P_NAME			VARCHAR(100)	=''			--상품명
,@P_SUB_TITLE		VARCHAR(200)	=''		--상품설명
,@P_COUNT			INT			--재고수량
,@SELLING_PRICE		INT		--판매가
,@DISCOUNT_RATE		INT		--할인율
,@DISCOUNT_PRICE	INT			--할인가
,@SOLDOUT_YN		VARCHAR(1)		=''			--일반상품 품절여부
,@P_INFO_DETAIL_WEB	TEXT		=''			--상품추가정보_WEB
,@P_INFO_DETAIL_MOBILE	TEXT		=''			--상품추가정보_MOBILE
,@MV_URL			VARCHAR(200)		=''			--영상URL
,@P_COMPONENT_INFO	VARCHAR(1000)		=''			--전성분
,@P_TAG				VARCHAR(300)		=''			--태그
,@MAIN_IMG			VARCHAR(100)		=''			--메인 이미지
,@OTHER_IMG1		VARCHAR(100)		=''			--추가이미지1
,@OTHER_IMG2		VARCHAR(100)		=''			--추가이미지2
,@OTHER_IMG3		VARCHAR(100)		=''			--추가이미지3
--,@OTHER_IMG4		VARCHAR(100)		=''			--추가이미지4
--,@OTHER_IMG5		VARCHAR(100)		=''			--추가이미지5
--,@RE_SORT			INT							--정렬순서
--,@DISPLAY_YN		VARCHAR(1)		=''			--전시여부
,@ICON_YN			VARCHAR(20)		=''			--아이콘표시
,@WITH_PRODUCT_LIST	VARCHAR(300)		=''			--함께 하면 좋은 상품 리스트
,@INTRESULT				INT OUTPUT				--결과값
AS

-- SET NOCOUNT ON
 
 
	 --1DEPTH 카테고리 관리 UPDATE
	UPDATE TB_PRODUCT_INFO
	SET P_CATE_CODE = @P_CATE_CODE
	,C_CATE_CODE = @C_CATE_CODE
	,L_CATE_CODE = @L_CATE_CODE
	--,P_CODE = @P_CODE
	,P_NAME = @P_NAME
	,P_SUB_TITLE = @P_SUB_TITLE
	,P_COUNT = @P_COUNT
	,SELLING_PRICE = @SELLING_PRICE
	,DISCOUNT_RATE = @DISCOUNT_RATE
	,DISCOUNT_PRICE = @DISCOUNT_PRICE
	,SOLDOUT_YN = @SOLDOUT_YN
	,P_INFO_DETAIL_WEB = @P_INFO_DETAIL_WEB
	,P_INFO_DETAIL_MOBILE = @P_INFO_DETAIL_MOBILE
	,MV_URL = @MV_URL
	,P_COMPONENT_INFO = @P_COMPONENT_INFO
	,P_TAG = @P_TAG
	,MAIN_IMG = @MAIN_IMG
	,OTHER_IMG1 = @OTHER_IMG1
	,OTHER_IMG2 = @OTHER_IMG2
	,OTHER_IMG3 = @OTHER_IMG3
	--,OTHER_IMG4 = @OTHER_IMG4
	--,OTHER_IMG5 = @OTHER_IMG5
--	,RE_SORT = @RE_SORT
--,DISPLAY_YN = @DISPLAY_YN
	,ICON_YN = @ICON_YN
	,WITH_PRODUCT_LIST = @WITH_PRODUCT_LIST
	,UPD_DATE = getdate()
	 WHERE IDX				= @IDX
	 		
	SET @INTRESULT = @@ERROR
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PRODUCT_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품리스트 (admin)
 * Modified  :   2015.06.11
 * Modified  :   2015.07.01
 * Modified  :   2015.07.02
 * Modified  :   2015.07.03
 * Modified  :   2015.07.08
 * Modified  :   2015.07.21
 * Modified  :   2015.08.05
 * Modified  :   2015.08.25
 * Modified  :   2015.08.27
 * Modified  :   2015.09.04
  ============================================================*/  
--SELECT *  FROM TB_PRODUCT_INFO WITH (NOLOCK)   
--EXEC [SP_ADMIN_PRODUCT_SEL] 1,10,'P_CODE','1111118,1111117,1111116','','N,T,C,D','','','','','2015-07-20','2015-07-21'
--EXEC [SP_ADMIN_PRODUCT_SEL] 1,10,'P_CODE','1111118,1111117,1111116','','','','','','','2015-07-01','2015-07-21'
--EXEC [SP_ADMIN_PRODUCT_SEL] 1,10,'P_CODE','','','','Y','Y','Y','Y','2015-07-20','2015-07-21'
--EXEC [SP_ADMIN_PRODUCT_SEL] 1,20,'P_CODE','RAA00131,RAA00132,RAA00133,RAA00134,RAA00135,RAA00136,RAA00121,RAA00122,RAA00123,RAA00124,RAA00125,RAA00126','','','','','','','',''
CREATE PROCEDURE  [dbo].[SP_ADMIN_PRODUCT_SEL]
@PAGE				INT			--현재 PAGE
,@PAGESIZE			INT			--페이지 사이즈
,@SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(2000) =''	--검색 키워드
,@CATE_CODE			CHAR(9) =''			--카테고리 
,@ICON_YN			VARCHAR(20) =''		--R:추천, P:인기, D:백화점 전용,F:빠른배송, O:온라인전용
,@SEARCH_DISPLAY_Y	VARCHAR(1) =''		--Y  전시
,@SEARCH_DISPLAY_N	VARCHAR(1) =''		--Y 비전시
,@SOLDOUT_YN		VARCHAR(1) =''		--Y 품절
,@P_OUTLET_YN		VARCHAR(1) =''		--Y 아울렛
,@FROM_DATE			VARCHAR(10) =''		--시작일
,@TO_DATE			VARCHAR(10) =''		--마감일



AS

BEGIN
--SET FMTONLY OFF --complex type 생성시 필요
--IF 1=0 BEGIN
--   SET FMTONLY OFF
--END

	SET NOCOUNT ON
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);

	--아이콘 검색
	DECLARE @string varchar(20)
	SET @string = @ICON_YN
	DECLARE @pos numeric(20)
	DECLARE @piece varchar(50)
	DECLARE @NUM INT
	SET @NUM = 0
	
	
	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX ';
	SET @V_SQL  =@V_SQL + ' FROM TB_PRODUCT_INFO WITH (NOLOCK) '
	SET @V_SQL  =@V_SQL + '    WHERE 1=1 ';
		
	IF @SEARCH_KEY = 'P_CODE' AND @SEARCH_KEYWORD <> ''
		BEGIN
		--SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '
		set @SEARCH_KEYWORD		= REPLACE(@SEARCH_KEYWORD,',',''',''')
		SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' IN (''' + @SEARCH_KEYWORD + ''') ) '	
		END
	
	IF @SEARCH_KEY = 'P_NAME' AND @SEARCH_KEYWORD <> ''
		BEGIN
		SET @V_SQL = @V_SQL + ' AND P_NAME LIKE ''%'+@SEARCH_KEYWORD+'%'' '	
		END

	IF @FROM_DATE <> '' AND @TO_DATE <> ''
		BEGIN
		SET @V_SQL = @V_SQL + ' AND INS_DATE >= '''+@FROM_DATE+''' AND INS_DATE <= '''+@TO_DATE+' 23:59:59'''	
		END
		
	IF @CATE_CODE <> '' 
		BEGIN
			IF SUBSTRING(@CATE_CODE,4,3) = '100'
			BEGIN
			SET @V_SQL = @V_SQL + ' AND ( SUBSTRING(P_CATE_CODE,0,4) = ''' + SUBSTRING(@CATE_CODE,0,4) + ''' ) '	
			END
			ELSE IF SUBSTRING(@CATE_CODE,7,3) = '100'
			BEGIN
			SET @V_SQL = @V_SQL + ' AND ( SUBSTRING(P_CATE_CODE,0,7) = ''' + SUBSTRING(@CATE_CODE,0,7) + ''' ) '	
			END
			ELSE
			BEGIN
			SET @V_SQL = @V_SQL + ' AND ( P_CATE_CODE = ''' + @CATE_CODE + ''' ) '	
			END
		END 	
		
	IF @string <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + 'AND ( '
		SET @pos = patindex('%,%' , @string)
		while @pos <> 0
		begin
			IF @NUM > 0 
			BEGIN
				SET @V_SQL = @V_SQL + ' OR'
			END
			SET @piece = LEFT(@string, @pos-1)
			SET @V_SQL = @V_SQL + ' ICON_YN LIKE ''%'+@piece+'%'' '
			--print @piece
			SET @string = stuff(@string, 1, @pos, NULL)
			SET @pos = charindex(',' , @string)
			SET @NUM = @NUM + 1
		end
		IF @NUM > 0 
			BEGIN
				SET @V_SQL = @V_SQL + ' OR'
			END
		SET @V_SQL = @V_SQL + ' ICON_YN LIKE ''%'+@string+'%'' '
		SET @V_SQL = @V_SQL + ') '
		
		END 
	
	IF @SEARCH_DISPLAY_Y = 'Y' AND  @SEARCH_DISPLAY_N = '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND DISPLAY_YN = ''Y'' '
		END 				

	IF @SEARCH_DISPLAY_N = 'Y' AND  @SEARCH_DISPLAY_Y = '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND ISNULL(DISPLAY_YN,''N'') = ''N'' '
		END 

	IF @SOLDOUT_YN <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND ISNULL(SOLDOUT_YN,''N'')  = '''+@SOLDOUT_YN+''' '
		END 	

	IF @P_OUTLET_YN <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND ISNULL(P_OUTLET_YN,''N'')  = '''+@P_OUTLET_YN+''' '
		END 								
		
	SET @V_SQL  =@V_SQL + '	ORDER BY RE_SORT DESC' ;
	
	EXEC(@V_SQL);
	PRINT @V_SQL


	SET ROWCOUNT 0
	


	--제품정보 리스트 조회
	SELECT   A.IDX 
			 ,A.P_CATE_CODE 
			 ,A.C_CATE_CODE 
			 ,A.L_CATE_CODE 
			 ,A.P_CODE 
			 ,A.RE_SORT 
			 ,A.DISPLAY_YN
			 ,A.MV_URL
			 ,A.P_TAG
			 ,CASE	WHEN A.DISPLAY_YN = 'Y' THEN '전시'
					WHEN A.DISPLAY_YN = 'N' THEN '비전시'
					WHEN A.DISPLAY_YN = 'E' THEN 'EMAIL 상세보기용'					
					ELSE ''	
				END AS DISPLAY_NAME				 
			 ,A.SOLDOUT_YN
			 ,A.ICON_YN 
			 ,CASE WHEN A.ICON_YN LIKE '%R%' THEN '추천'
					WHEN A.ICON_YN LIKE '%P%' THEN '인기'
					WHEN A.ICON_YN LIKE '%D%' THEN '백화점전용'					
					WHEN A.ICON_YN LIKE '%F%' THEN '빠른 배송'		
					WHEN A.ICON_YN LIKE '%O%' THEN '백화점전용'		
					ELSE ''	
				END AS ICON_NAME	
		     ,A.P_NAME
		 	 ,A.P_COUNT
			 ,A.SELLING_PRICE
			 ,A.DISCOUNT_RATE			 
			 ,A.DISCOUNT_PRICE
			 ,A.MAIN_IMG
			 ,CONVERT(VARCHAR(10),A.INS_DATE,121) AS REGDATE
			 ,A.P_CATE_CODE
			 ,A.SELLING_COUNT
			 ,A.P_VIEW_COUNT	
			 ,A.WITH_PRODUCT_LIST
			 ,A.P_OUTLET_YN
			 ,B.DEPTH_FLAG
			 ,B.DEPTH2_NAME
			 ,B.DEPTH3_NAME
			 ,C.DEPTH2_NAME AS SKIN_NAME
			 ,C.DEPTH2_NAME AS LINE_NAME
	FROM TB_PRODUCT_INFO A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T ON A.IDX = T.IDX_SEQ 
		LEFT OUTER JOIN (SELECT CATE_CODE, DEPTH2_NAME, DEPTH3_NAME, DEPTH_FLAG FROM TB_CATEGORY WHERE DISPLAY_YN = 'Y') B ON A.P_CATE_CODE = B.CATE_CODE
		LEFT OUTER JOIN (SELECT CATE_CODE, DEPTH2_NAME FROM TB_CATEGORY WHERE DISPLAY_YN = 'Y') C ON A.C_CATE_CODE = C.CATE_CODE
		LEFT OUTER JOIN (SELECT CATE_CODE, DEPTH2_NAME FROM TB_CATEGORY WHERE DISPLAY_YN = 'Y') D ON A.L_CATE_CODE = D.CATE_CODE
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ
	
	DROP TABLE #TEMPLIST ;

	SET NOCOUNT OFF
	
	END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PRODUCT_PRICE_UPD]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품 가격 일괄 수정 (admin)
 * Modified  :   2015.07.07
 * Modified  :   2015.08.019
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_ADMIN_PRODUCT_PRICE_UPD]
@P_CODE			VARCHAR(10)		=''			--상품코드
,@SELLING_PRICE		INT		--판매가
,@DISCOUNT_PRICE	INT		--할인가
,@DISCOUNT_RATE		INT		--할인율
,@INTRESULT				INT OUTPUT				--결과값
AS

 SET NOCOUNT ON
 
 
	 --1DEPTH 카테고리 관리 UPDATE
	UPDATE TB_PRODUCT_INFO
	SET SELLING_PRICE = @SELLING_PRICE
	,DISCOUNT_RATE = @DISCOUNT_RATE
	,DISCOUNT_PRICE = @DISCOUNT_PRICE
	,UPD_DATE = getdate()
	 WHERE P_CODE				= @P_CODE
	 		
	SET @INTRESULT = @@ERROR
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PRODUCT_PCODE_CHK]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품코드 P_CODE 체크(admin)
 * Modified  :   2015.06.11
 ============================================================*/  
  
CREATE PROCEDURE [dbo].[SP_ADMIN_PRODUCT_PCODE_CHK]
@P_CODE					VARCHAR(10) = ''	--상품코드
--,@INTRESULT				INT OUTPUT			--결과값
AS

 SET NOCOUNT ON
 
 	--DECLARE @P_CODE_CNT INT
	--SET @P_CODE_CNT = 0
	
	--P_CODE 상품코드 중복 체크
 	SELECT COUNT(*) AS P_CODE_CNT FROM TB_PRODUCT_INFO WHERE P_CODE = @P_CODE
	
	/*
	IF @P_CODE_CNT = 0 -- 동일한 상품코드가 없을때 
	BEGIN
 		
	 	SET @INTRESULT = 0
	 	
	 END
	ELSE
	BEGIN
		SET @INTRESULT = -1 --동일한 상품코드값이 존재
	END
	*/
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PRODUCT_INS]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품 등록 (admin)
 * Modified  :   2015.06.11
 * Modified  :   2015.06.15
 * Modified  :   2015.06.22 컬럼 수정
 * Modified  :   2015.07.22
 * Modified  :   2015.08,17
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_ADMIN_PRODUCT_INS]
@P_CATE_CODE		CHAR(9)		=''			--카테고리 1TYPE
,@C_CATE_CODE		CHAR(9)		=''			--카테고리 2TYPE
,@L_CATE_CODE		CHAR(9)		=''			--카테고리 3TYPE
,@P_CODE			VARCHAR(10)		=''		--상품코드
,@P_NAME			VARCHAR(100)	=''		--상품명
,@P_SUB_TITLE		VARCHAR(200)	=''		--상품설명
,@P_COUNT			INT						--재고수량
--,@P_POINT			INT						--포인트
,@SELLING_PRICE		INT						--판매가
,@DISCOUNT_RATE		INT						--할인율
,@DISCOUNT_PRICE	INT						--할인가
--,@SOLDOUT_YN		VARCHAR(1)		=''		--일반상품 품절여부
,@P_INFO_DETAIL_WEB	TEXT		=''			--상품추가정보_WEB
,@P_INFO_DETAIL_MOBILE	TEXT		=''		--상품추가정보_MOBILE
,@MV_URL			VARCHAR(200)		=''	--영상URL
,@P_COMPONENT_INFO	VARCHAR(1000)		=''	--전성분
,@P_TAG				VARCHAR(300)		=''	--태그
,@MAIN_IMG			VARCHAR(100)		=''	--메인 이미지
,@OTHER_IMG1		VARCHAR(100)		=''	--추가이미지1
,@OTHER_IMG2		VARCHAR(100)		=''	--추가이미지2
,@OTHER_IMG3		VARCHAR(100)		=''	--추가이미지3
--,@OTHER_IMG4		VARCHAR(100)		=''	--추가이미지4
--,@OTHER_IMG5		VARCHAR(100)		=''	--추가이미지5
--,@DISPLAY_YN		VARCHAR(1)		=''		--전시여부
,@ICON_YN			VARCHAR(20)		=''		--아이콘표시
,@WITH_PRODUCT_LIST	VARCHAR(300)		=''	--함께 하면 좋은 상품 리스트
,@INTRESULT				INT OUTPUT		--결과값

AS

--SET NOCOUNT ON
	
	DECLARE @RE_SORT INT 
	SET @RE_SORT = 0
	
	--정렬 최대값 가져오기
	SELECT @RE_SORT = ISNULL(MAX(RE_SORT)+1,1) 
	FROM TB_PRODUCT_INFO 
	
	--카테고리 코드값 INSERT
	INSERT INTO TB_PRODUCT_INFO
	 (	P_CATE_CODE 
		,C_CATE_CODE
		,L_CATE_CODE
		,P_CODE
		,P_NAME
		,P_SUB_TITLE
		,P_COUNT
		,SELLING_PRICE
		,DISCOUNT_RATE
		,DISCOUNT_PRICE
		--,SOLDOUT_YN
		,P_INFO_DETAIL_WEB
		,P_INFO_DETAIL_MOBILE
		,MV_URL
		,P_COMPONENT_INFO
		,P_TAG
		,MAIN_IMG
		,OTHER_IMG1
		,OTHER_IMG2
		,OTHER_IMG3
		--,OTHER_IMG4
		--,OTHER_IMG5
		,RE_SORT
		--,DISPLAY_YN
		,ICON_YN
		,WITH_PRODUCT_LIST
	  ) 
	 values (
		@P_CATE_CODE 
		,@C_CATE_CODE
		,@L_CATE_CODE
		,@P_CODE
		,@P_NAME
		,@P_SUB_TITLE
		,@P_COUNT
		,@SELLING_PRICE
		,@DISCOUNT_RATE
		,@DISCOUNT_PRICE
		--,@SOLDOUT_YN
		,@P_INFO_DETAIL_WEB
		,@P_INFO_DETAIL_MOBILE
		,@MV_URL
		,@P_COMPONENT_INFO
		,@P_TAG
		,@MAIN_IMG
		,@OTHER_IMG1
		,@OTHER_IMG2
		,@OTHER_IMG3
		--,@OTHER_IMG4
		--,@OTHER_IMG5
		,@RE_SORT
		--,@DISPLAY_YN
		,@ICON_YN
		,@WITH_PRODUCT_LIST
	  )
	 		
		SET @INTRESULT = @@ERROR
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PRODUCT_IMG_DEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품 IMG DELETE (admin)
 * Modified  :   2015.06.11 
 * Modified  :   2015.06.23 
 * Modified  :   2015.08.19
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_ADMIN_PRODUCT_IMG_DEL]
@P_CODE				VARCHAR(10)				--상품코드
,@imgColumName		VARCHAR(20)			--MAIN_IMG, OTHER_IMG1, OTHER_IMG2, OTHER_IMG3, OTHER_IMG4, OTHER_IMG5
,@INTRESULT			INT OUTPUT				--결과값
AS

 SET NOCOUNT ON
 			
	--상품 DELETE
	IF @imgColumName = 'MAIN_IMG'
	BEGIN 
		UPDATE TB_PRODUCT_INFO SET MAIN_IMG = '' WHERE P_CODE = @P_CODE
	END 

	IF @imgColumName = 'OTHER_IMG1'
	BEGIN 
		UPDATE TB_PRODUCT_INFO SET OTHER_IMG1 = '' WHERE P_CODE = @P_CODE
	END 

	IF @imgColumName = 'OTHER_IMG2'
	BEGIN 
		UPDATE TB_PRODUCT_INFO SET OTHER_IMG2 = '' WHERE P_CODE = @P_CODE
	END 
	
	IF @imgColumName = 'OTHER_IMG3'
	BEGIN 
		UPDATE TB_PRODUCT_INFO SET OTHER_IMG3 = '' WHERE P_CODE = @P_CODE
	END 
		
	IF @imgColumName = 'OTHER_IMG4'
	BEGIN 
		UPDATE TB_PRODUCT_INFO SET OTHER_IMG4 = '' WHERE P_CODE = @P_CODE
	END 
	
	IF @imgColumName = 'OTHER_IMG5'
	BEGIN 
		UPDATE TB_PRODUCT_INFO SET OTHER_IMG5 = '' WHERE P_CODE = @P_CODE
	END 
								
	SET @INTRESULT = @@ERROR
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PRODUCT_DISPLAY_RE_SORT]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품전시 순서 바꾸기 (admin)
 * Modified  :   2015.07.08
 * Modified  :   2015.08.19
 ============================================================*/  
--EXEC SP_ADMIN_PRODUCT_DISPLAY_RE_SORT 569,515,'BRAND','','134100100','UP','Y'  
--EXEC SP_ADMIN_PRODUCT_DISPLAY_RE_SORT 60,3,'BRAND','','','UP','Y'
--EXEC SP_ADMIN_PRODUCT_DISPLAY_RE_SORT 23,16,'DOWN'
CREATE PROCEDURE [dbo].[SP_ADMIN_PRODUCT_DISPLAY_RE_SORT]
@IDX				INT		--현재 DISPLAY 키값
,@RE_SORT			INT		--현재 정렬값
--,@P_DISPLAY_GBN		VARCHAR(10) =''		--상품 전시 구분  STAFF/BRAND (임직원몰/브랜드몰)
--,@ICON_YN			VARCHAR(1) =''		--R:추천, P:인기, D:백화점 전용
,@P_CATE_CODE		CHAR(9) =''		--상품카테고리 
,@CLICKCHK			VARCHAR(20) =''		-- UP/DOWN
--,@SEARCH_DISPLAY_YN	VARCHAR(1) =''		-- 'Y/N  전시/비전시
,@INTRESULT			INT OUTPUT

AS

	SET NOCOUNT ON
	
	--DECLARE @TOP_SIZE INT
	DECLARE @PRE_RE_IDX INT 
	DECLARE @PRE_RE_SORT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	SET @PRE_RE_SORT = -1
	SET @INTRESULT = 0 --기본 결과값은 0
	
	SET ROWCOUNT 1
	
	
	-- 기존에 사용하는 #TEMPDISPLAYRESORT 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPDISPLAYRESORT') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPDISPLAYRESORT ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPDISPLAYRESORT  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		PRE_RE_IDX	INT,
		PRE_RE_SORT	INT
	)
	
		SET @V_SQL  ='INSERT INTO #TEMPDISPLAYRESORT (PRE_RE_IDX, PRE_RE_SORT) '
		SET @V_SQL  =@V_SQL +'SELECT A.IDX ,' 
		SET @V_SQL  =@V_SQL + 'ISNULL(A.RE_SORT,-1)  '
		SET @V_SQL  =@V_SQL + ' FROM TB_PRODUCT_INFO A WITH (NOLOCK)'
		
		SET @V_SQL  =@V_SQL + ' WHERE 1=1 '
		--A.P_DISPLAY_GBN = '''+ @P_DISPLAY_GBN +''' AND '

/*		
		IF @SEARCH_DISPLAY_YN <> '' --전시구분 Y/N
		BEGIN
			SET @V_SQL  =@V_SQL + ' 		A.DISPLAY_YN = '''+@SEARCH_DISPLAY_YN+''' AND '
		END
		
		IF @P_CATE_CODE <> ''  --브랜드구분
		BEGIN
			SET @V_SQL  =@V_SQL + ' 		A.P_CATE_CODE = '''+@P_CATE_CODE+''' AND '
		END
*/		
		IF @P_CATE_CODE <> '' 
		BEGIN
			IF SUBSTRING(@P_CATE_CODE,4,3) = '100'
			BEGIN
			SET @V_SQL = @V_SQL + ' AND ( SUBSTRING(P_CATE_CODE,0,4) = ''' + SUBSTRING(@P_CATE_CODE,0,4) + ''' ) '	
			END
			ELSE IF SUBSTRING(@P_CATE_CODE,7,3) = '100'
			BEGIN
			SET @V_SQL = @V_SQL + ' AND ( SUBSTRING(P_CATE_CODE,0,7) = ''' + SUBSTRING(@P_CATE_CODE,0,7) + ''' ) '	
			END
			ELSE
			BEGIN
			SET @V_SQL = @V_SQL + ' AND ( P_CATE_CODE = ''' + @P_CATE_CODE + ''' ) '	
			END
		END 

			
		SET @V_SQL  =@V_SQL + ' 	AND	A.IDX <> '+Convert(varchar,@IDX)+' '
		
		IF @CLICKCHK = 'UP' 
		BEGIN
			SET @V_SQL  =@V_SQL + ' 	AND	A.RE_SORT >= '+Convert(varchar,@RE_SORT)+' '
			SET @V_SQL  =@V_SQL + ' ORDER BY A.RE_SORT, A.IDX '
		END 
		IF @CLICKCHK = 'DOWN' 
		BEGIN
			SET @V_SQL  =@V_SQL + ' 	AND	A.RE_SORT <= '+Convert(varchar,@RE_SORT)+' '
			SET @V_SQL  =@V_SQL + ' 		ORDER BY A.RE_SORT DESC, A.IDX DESC '
		END 
	

	EXEC(@V_SQL);
	PRINT @V_SQL;
	SELECT * from #TEMPDISPLAYRESORT
	
	SET ROWCOUNT 0
	
	--검색된 데이타 가져오기
	SELECT TOP 1 @PRE_RE_IDX = PRE_RE_IDX
			,@PRE_RE_SORT = ISNULL(PRE_RE_SORT,-1)
	FROM #TEMPDISPLAYRESORT 		
	
	--IF Exists(SELECT PRE_RE_IDX FROM #TEMPDISPLAYRESORT )
	--BEGIN
	--	PRINT 'OK';
	--END 
	--ELSE
	--BEGIN
	--	PRINT 'NO';
	--END

	--PRINT @PRE_RE_SORT;
	--PRINT @PRE_RE_IDX;
	
	
	--INSERT INTO LOG_RESORT (IDX, PRE_RE_IDX, RE_SORT, PRE_RE_SORT, MEMO) 
	--VALUES(@IDX, @PRE_RE_IDX, @RE_SORT, @PRE_RE_SORT, @V_SQL)
	
	--SET @INTRESULT = 0
	--IF @PRE_RE_SORT <> -1 AND @IDX <> '' AND @RE_SORT <> '' AND @PRE_RE_SORT <> '' AND @PRE_RE_IDX <> '' AND @PRE_RE_SORT <> @RE_SORT AND @IDX <> @PRE_RE_IDX
	IF @PRE_RE_SORT <> -1 AND @IDX <> '' AND @RE_SORT <> '' AND @PRE_RE_SORT <> '' AND @PRE_RE_IDX <> '' AND @PRE_RE_SORT <> @RE_SORT AND @IDX <> @PRE_RE_IDX
	BEGIN
		
		BEGIN TRY  --트랜잭션 시작
		 BEGIN TRAN
			 
			--상대 제품
			UPDATE TB_PRODUCT_INFO 
			SET 	RE_SORT 		= @RE_SORT
			WHERE   IDX				= @PRE_RE_IDX
			--P_DISPLAY_GBN 	= @P_DISPLAY_GBN AND
				
		
			--적용될 상품
			UPDATE TB_PRODUCT_INFO 
			SET 	RE_SORT 		= @PRE_RE_SORT
			WHERE 	IDX				= @IDX
			--P_DISPLAY_GBN 	= @P_DISPLAY_GBN AND
				
			
			COMMIT TRAN
			
			SET @INTRESULT = @@ERROR
		 END TRY
		BEGIN CATCH 

			ROLLBACK TRAN 
			SET @INTRESULT = -1 --에러
		END CATCH
	END
	
	
	DROP TABLE #TEMPDISPLAYRESORT ;
		
	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PRODUCT_DETAIL_VIEW]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품상세내용 보기 (admin)
 * Modified  :   2015.06.11
 * Modified  :   2015.06.12
 * Modified  :   2015.06.22
 * Modified  :   2015.07.22
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_ADMIN_PRODUCT_DETAIL_VIEW]
@P_CODE				VARCHAR(10) = ''		--상품코드

AS

 SET NOCOUNT ON
 
 		--상품상세 관리 VIEW
		SELECT IDX
		,P_CATE_CODE 
		,C_CATE_CODE
		,L_CATE_CODE
		,P_CODE
		,P_NAME
		,P_SUB_TITLE
		,P_COUNT
		,SELLING_PRICE
		,DISCOUNT_RATE
		,DISCOUNT_PRICE
		,SOLDOUT_YN
		,P_INFO_DETAIL_WEB
		,P_INFO_DETAIL_MOBILE
		,MV_URL
		,P_COMPONENT_INFO
		,P_TAG
		,MAIN_IMG
		,OTHER_IMG1
		,OTHER_IMG2
		,OTHER_IMG3
		--,OTHER_IMG4
		--,OTHER_IMG5
		,RE_SORT
		,DISPLAY_YN
		,ICON_YN
		,WITH_PRODUCT_LIST	 			 
		FROM TB_PRODUCT_INFO WITH (NOLOCK) 
		WHERE P_CODE = @P_CODE 

 SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_PRODUCT_BATCH_UPD]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품 정보 일괄 수정 (admin)
 * Modified  :   2015.07.07
 * Modified  :   2015.07.22
 * Modified  :   2015.08.19
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_ADMIN_PRODUCT_BATCH_UPD]
@P_CODE			VARCHAR(10)		=''				--상품코드
--,@P_NAME		VARCHAR(100)	=''				--상품명

,@ICON_BATCH_CHK	VARCHAR(1)		=''			--아이콘 일괄 업데이트시 Y
,@ICON_YN			VARCHAR(20)		=''			--아이콘표시
,@DISPLAY_YN		VARCHAR(1)		=''			--전시여부
,@SOLDOUT_YN		VARCHAR(1)		=''			--품절여부
,@P_OUTLET_YN		VARCHAR(1)		=''			--아울렛전시여부
,@INTRESULT				INT OUTPUT			--결과값
AS

 SET NOCOUNT ON
 
 
    --아이콘 UPDATE가 필요할때 
	IF @ICON_BATCH_CHK = 'Y'
	BEGIN

		UPDATE TB_PRODUCT_INFO
		SET ICON_YN = @ICON_YN
		,DISPLAY_YN = @DISPLAY_YN
		,SOLDOUT_YN = @SOLDOUT_YN
		,P_OUTLET_YN = @P_OUTLET_YN
		,UPD_DATE = getdate()
		 WHERE P_CODE				= @P_CODE
	 END
	 ELSE
	 BEGIN

		UPDATE TB_PRODUCT_INFO
		SET --P_NAME = @P_NAME,
		 DISPLAY_YN = @DISPLAY_YN
		,SOLDOUT_YN = @SOLDOUT_YN
		,P_OUTLET_YN = @P_OUTLET_YN
		,UPD_DATE = getdate()
		 WHERE P_CODE				= @P_CODE
	 END


	SET @INTRESULT = @@ERROR
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_POPUP_UPDATE_DISPLAY]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-02
-- Description:	팝업 전시 수정
-- ussage: exec SP_ADMIN_POPUP_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_POPUP_UPDATE_DISPLAY]
	@IDX INT = NULL
	,@IS_DISPLAY VARCHAR(1) = NULL
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
	
	IF NOT EXISTS(SELECT IDX FROM TB_POPUP WHERE IDX=@IDX AND IS_REMOVE<>'Y')
	BEGIN 
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않는 글입니다.';
		RETURN;
	END 
	
	UPDATE TB_POPUP
		SET IS_DISPLAY=@IS_DISPLAY
	WHERE IDX=@IDX;

    SET NOCOUNT OFF;
    
    SET @RET_NUM = '0';
    SET @RET_MESSAGE = 'SUCCESS';
    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_POPUP_UPDATE]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-02
-- Description:	팝업 수정
-- ussage: exec SP_ADMIN_POPUP_UPDATE
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_POPUP_UPDATE]
	@IDX INT = NULL,
	@MEDIA_GBN VARCHAR(2),
	@TITLE VARCHAR(200) = NULL,
	@IS_DISPLAY VARCHAR(1) = NULL,
	@DISPLAY_START DATETIME = NULL,
	@DISPLAY_END DATETIME = NULL,
	
	@POS_TOP INT = NULL,
	@POS_LEFT INT = NULL,
	@SIZE_WIDTH INT = NULL,
	@SIZE_HEIGHT INT = NULL,
	
	@WEB_IMG VARCHAR(100) = NULL,
	@WEB_LINK VARCHAR(300) = NULL,
	@WEB_TARGET VARCHAR(2) = NULL,
	
	@MOBILE_IMG VARCHAR(100) = NULL,
	@MOBILE_LINK VARCHAR(300) = NULL,
	
	@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
	
	IF NOT EXISTS(SELECT IDX FROM TB_POPUP WHERE IDX=@IDX AND IS_REMOVE<>'Y')
	BEGIN 
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않는 글입니다.';
		RETURN;
	END 
	
	
	UPDATE TB_POPUP
		SET 
			MEDIA_GBN=@MEDIA_GBN
			,TITLE=@TITLE
			,IS_DISPLAY=@IS_DISPLAY
			,DISPLAY_START=@DISPLAY_START
			,DISPLAY_END=@DISPLAY_END
			,POS_TOP=@POS_TOP
			,POS_LEFT=@POS_LEFT
			,SIZE_WIDTH=@SIZE_WIDTH
			,SIZE_HEIGHT=@SIZE_HEIGHT
			,WEB_IMG=@WEB_IMG
			,WEB_LINK=@WEB_LINK
			,WEB_TARGET=@WEB_TARGET
			,MOBILE_IMG=@MOBILE_IMG
			,MOBILE_LINK=@MOBILE_LINK
	WHERE IDX=@IDX;	
	
		
    SET NOCOUNT OFF;
    
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_POPUP_SEL]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-31
-- Description:	팝업 조회
-- ussage: exec SP_ADMIN_POPUP_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_POPUP_SEL]
	@PAGE				INT = 1		--현재 PAGE
	,@PAGESIZE			INT = 10		--페이지 사이즈
	,@SEARCH_KEY		VARCHAR(100) = ''	--검색 필드
	,@SEARCH_VALUE		VARCHAR(100) = ''	--검색 값
	,@IS_DISPLAY VARCHAR(1) = NULL
	,@IS_EXPIRE VARCHAR(1) = NULL
	,@TOTAL INT OUTPUT
AS
BEGIN
	SET NOCOUNT ON;
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				-- declaration + dummy query 
				-- to allow EF obtain complex data type:
				DECLARE @MyStoredProcResult TABLE(
						IDX INT NOT NULL,
						MEDIA_GBN VARCHAR(2),
						MEDIA_GBN_LBL VARCHAR(5),
						TITLE VARCHAR(200),
						IS_DISPLAY  VARCHAR(1),
						IS_DISPLAY_LBL  VARCHAR(3),
						DISPLAY_START DATETIME,
						DISPLAY_END DATETIME,
						WEB_IMG  VARCHAR(100),
						WEB_LINK VARCHAR(300),
						MOBILE_IMG VARCHAR(100),
						MOBILE_LINK VARCHAR(300),
						INS_DATE DATETIME
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END   

	DECLARE @LISTCOUNT INT;
	DECLARE @v_SQL_WHERE NVARCHAR(MAX) ;
	DECLARE @v_SQL_ORDERBY NVARCHAR(MAX) ;
	DECLARE @V_SQL NVARCHAR(MAX);


	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	);
	
	SET @v_SQL_ORDERBY = ' INS_DATE DESC ' ;
	SET @v_SQL_WHERE = ' (1=1) AND IS_REMOVE<>''Y'' ';
	
	
	
	IF @SEARCH_KEY <>'' AND @SEARCH_VALUE <> ''
	BEGIN 
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_KEY + ' like ''%' + @SEARCH_VALUE + '%'') ';
	END
	
	IF @IS_DISPLAY IS NOT NULL
	BEGIN
		SET  @v_SQL_WHERE = @v_SQL_WHERE + ' AND IS_DISPLAY='''+@IS_DISPLAY + '''';
	END
	
	IF @IS_EXPIRE IS NOT NULL
	BEGIN
		
		SET  @v_SQL_WHERE = @v_SQL_WHERE + ' AND  GEtDATE() NOT BETWEEN DISPLAY_START AND DISPLAY_END';
	END
	
	SET @V_SQL  =' SELECT @rowcount=COUNT(IDX) ';
	SET @V_SQL  = @V_SQL + ' FROM TB_POPUP WITH (NOLOCK) '
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;

	EXEC sp_executesql @V_SQL, 
                    N'@rowcount int output', @TOTAL output;
	--EXEC(@V_SQL);
	--SET @TOTAL = @@ROWCOUNT;
	
	SET @V_SQL  = 'INSERT INTO #TEMPLIST (IDX_TMP)'
	SET @V_SQL  = @V_SQL + ' SELECT IDX ';
	SET @V_SQL  = @V_SQL + ' FROM TB_POPUP WITH (NOLOCK) '
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	SET @V_SQL  = @V_SQL + ' ORDER BY ' +  @v_SQL_ORDERBY;
	
	SET @LISTCOUNT = @PAGE * @PAGESIZE;
	SET ROWCOUNT @LISTCOUNT;
	
	EXEC(@V_SQL);
	
	SET ROWCOUNT 0 ; --기본값 복원 
	
	SELECT 	
		IDX,
		MEDIA_GBN,
		(
			CASE MEDIA_GBN
			 WHEN '10' THEN '웹'
			 WHEN '20' THEN '모바일'
			 WHEN '30' THEN '전체'
			 ELSE ''
			END
		) AS MEDIA_GBN_LBL,
		TITLE,
		IS_DISPLAY,
		(
			CASE IS_DISPLAY
				WHEN 'Y' THEN '전시'
				WHEN 'N' THEN '비전시'
				ELSE ''
			END
		) AS IS_DISPLAY_LBL,
		DISPLAY_START,
		DISPLAY_END,
		WEB_IMG,
		WEB_LINK,
		MOBILE_IMG,
		MOBILE_LINK,
		INS_DATE
	FROM TB_POPUP AS A WITH (NOLOCK)
		INNER JOIN #TEMPLIST AS T 
		ON A.IDX = T.IDX_TMP
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ ASC ;
	
	
	
	
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	

    SET NOCOUNT OFF;
    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_POPUP_REMOVE]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-02
-- Description:	팝업 추가
-- ussage: exec SP_ADMIN_POPUP_REMOVE
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_POPUP_REMOVE]
	@IDX INT = NULL	
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
	
	IF NOT EXISTS(SELECT IDX FROM TB_POPUP WHERE IDX=@IDX AND IS_REMOVE<>'Y')
	BEGIN 
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않는 글입니다.';
		RETURN;
	END 
	
	UPDATE TB_POPUP
		SET IS_REMOVE='Y'
	WHERE IDX=@IDX;
	
		
    SET NOCOUNT OFF;
    
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_POPUP_INFO]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-02
-- Description:	팝업 수정
-- ussage: exec SP_ADMIN_POPUP_UPDATE
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_POPUP_INFO]
	@IDX INT = NULL,

	@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
	
	IF NOT EXISTS(SELECT IDX FROM TB_POPUP WHERE IDX=@IDX AND IS_REMOVE<>'Y')
	BEGIN 
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않는 글입니다.';
		RETURN;
	END 
	
	
	SELECT 	
		IDX,
		MEDIA_GBN
		,TITLE
		,IS_DISPLAY
		,DISPLAY_START
		,DISPLAY_END
		
		,POS_TOP
		,POS_LEFT
		,SIZE_WIDTH
		,SIZE_HEIGHT
		
		,WEB_IMG
		,WEB_LINK
		,WEB_TARGET
		
		,MOBILE_IMG
		,MOBILE_LINK
	FROM TB_POPUP AS A WITH (NOLOCK)
	WHERE IDX=@IDX;	
		
    SET NOCOUNT OFF;
    
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_POPUP_ADD]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-31
-- Description:	팝업 추가
-- ussage: exec SP_ADMIN_POPUP_ADD
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_POPUP_ADD]

	@MEDIA_GBN VARCHAR(2),
	@TITLE VARCHAR(200) = NULL,
	@IS_DISPLAY VARCHAR(1) = NULL,
	@DISPLAY_START DATETIME = NULL,
	@DISPLAY_END DATETIME = NULL,
	
	@POS_TOP INT = NULL,
	@POS_LEFT INT = NULL,
	@SIZE_WIDTH INT = NULL,
	@SIZE_HEIGHT INT = NULL,
	
	@WEB_IMG VARCHAR(100) = NULL,
	@WEB_LINK VARCHAR(300) = NULL,
	@WEB_TARGET VARCHAR(2) = NULL,
	
	@MOBILE_IMG VARCHAR(100) = NULL,
	@MOBILE_LINK VARCHAR(300) = NULL,
	
	@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
	
	
	INSERT INTO TB_POPUP (
		MEDIA_GBN
		,TITLE
		,IS_DISPLAY
		,DISPLAY_START
		,DISPLAY_END
		
		,POS_TOP
		,POS_LEFT
		,SIZE_WIDTH
		,SIZE_HEIGHT
		
		,WEB_IMG
		,WEB_LINK
		,WEB_TARGET
		
		,MOBILE_IMG
		,MOBILE_LINK
	)
	VALUES(
		@MEDIA_GBN
		,@TITLE
		,@IS_DISPLAY
		,@DISPLAY_START
		,@DISPLAY_END
		
		,@POS_TOP
		,@POS_LEFT
		,@SIZE_WIDTH
		,@SIZE_HEIGHT
		
		,@WEB_IMG
		,@WEB_LINK
		,@WEB_TARGET
		
		,@MOBILE_IMG
		,@MOBILE_LINK
	
	);
	
	
		
    SET NOCOUNT OFF;
    
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
END
GO
/****** Object:  StoredProcedure [dbo].[SP_AGENT_ORDER_COMPLETE]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_AGENT_ORDER_COMPLETE
배송시작일로부터 3일이 지난건을 자동으로 배송완료로 설정

EXEC SP_AGENT_ORDER_COMPLETE

SELECT P_CODE, SELLING_MONTH_COUNT FROM TB_PRODUCT_INFO ORDER BY SELLING_MONTH_COUNT DESC


*/
CREATE PROCEDURE [dbo].[SP_AGENT_ORDER_COMPLETE]
AS
BEGIN
	SET NOCOUNT ON

	IF OBJECT_ID('tempdb..#DELIVERY_TMP') is not null
	BEGIN
	  DROP TABLE #DELIVERY_TMP ;
	END

	SELECT TD.ORDER_IDX, TD.ORDER_DETAIL_IDX INTO #DELIVERY_TMP
	FROM TB_ORDER_DETAIL TD WITH (NOLOCK)
	WHERE TD.ORDER_DETAIL_STATUS = '40'
	AND CONVERT( VARCHAR(10), TD.DELIVERY_DATE, 121 ) <= CONVERT( VARCHAR(10), DATEADD( DAY, -3, GETDATE() ), 121 )

	SELECT * FROM #DELIVERY_TMP

	UPDATE TD
	SET TD.ORDER_DETAIL_STATUS = '50'
		, TD.ORDER_DETAIL_STATUS_DATE = GETDATE()
	FROM TB_ORDER_DETAIL TD
		INNER JOIN #DELIVERY_TMP DT
			ON TD.ORDER_IDX = DT.ORDER_IDX
			AND TD.ORDER_DETAIL_IDX = DT.ORDER_DETAIL_IDX
	
	;
	WITH SRC AS (
	SELECT SC.ORDER_IDX
		, CASE WHEN SC.ORDER_DETAIL_STATUS = 1 THEN SC.MAX_ORDER_DETAIL_STATUS ELSE '99' END AS ORDER_STAT
	FROM (
		SELECT TD.ORDER_IDX
			, MAX(ORDER_DETAIL_STATUS) AS MAX_ORDER_DETAIL_STATUS
			, COUNT(DISTINCT ORDER_DETAIL_STATUS) AS ORDER_DETAIL_STATUS
		FROM TB_ORDER_DETAIL TD WITH (NOLOCK)
			INNER JOIN #DELIVERY_TMP DT
				ON TD.ORDER_IDX = DT.ORDER_IDX
		GROUP BY TD.ORDER_IDX
		) SC
	)
	UPDATE TM
	SET TM.ORDER_STATUS = SRC.ORDER_STAT
	FROM TB_ORDER_MASTER TM
		INNER JOIN SRC
			ON TM.ORDER_IDX = SRC.ORDER_IDX

	
	
	
	IF OBJECT_ID('tempdb..#DELIVERY_TMP') is not null
	BEGIN
	  DROP TABLE #DELIVERY_TMP ;
	END


	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_AGENT_MEMBER_GRADE_PROCESS]    Script Date: 09/11/2015 16:07:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_AGENT_MEMBER_GRADE_PROCESS
매월1일. 회원의 지난기간 주문건수,금액을 취합하여 등급조정

EXEC SP_AGENT_MEMBER_GRADE_PROCESS

SELECT DISTINCT M_GRADE FROM TB_MEMBER

연간 구매금액기준
80만원이상 VIP
30만원이상 GOLD
10만원이상 SILVER
나머지 BRONZE

*/
CREATE PROCEDURE [dbo].[SP_AGENT_MEMBER_GRADE_PROCESS]
 @PROCESS_DATE_T CHAR(7) = ''
AS
BEGIN
	SET NOCOUNT ON

	IF OBJECT_ID('tempdb..#GRADE_TMP') is not null
	BEGIN
	  DROP TABLE #GRADE_TMP ;
	END
	
	DECLARE @PROCESS_DATE_F CHAR(7)
	
	IF @PROCESS_DATE_T = ''
	BEGIN
		SELECT @PROCESS_DATE_T = CONVERT(CHAR(7), DATEADD(DAY, -1, GETDATE()), 121)
	END

	SELECT @PROCESS_DATE_F = CONVERT(CHAR(7), DATEADD(MONTH, -11, CONVERT(DATE, @PROCESS_DATE_T+'-01') ), 121)

	SELECT M_ID, TOTAL_PRICE
		, CASE WHEN TOTAL_PRICE >= 800000 THEN 'V'
				WHEN TOTAL_PRICE >= 300000 THEN 'G'
				WHEN TOTAL_PRICE >= 100000 THEN 'S'
				ELSE 'B' END AS PROCESS_GRADE
		INTO #GRADE_TMP
	FROM (
		SELECT OM.M_ID, SUM(OD.REAL_PAY_PRICE) AS TOTAL_PRICE
		FROM TB_ORDER_MASTER OM WITH (NOLOCK)
			INNER JOIN TB_ORDER_DETAIL OD WITH (NOLOCK)
				ON OM.ORDER_IDX = OD.ORDER_IDX
				AND OD.ORDER_DETAIL_STATUS IN ('20','30','40','50','60')
		WHERE OM.MEMBER_ORDER_GBN = '1'
		AND CONVERT(CHAR(7), OM.ORDER_DATE, 121) >= @PROCESS_DATE_F
		AND CONVERT(CHAR(7), OM.ORDER_DATE, 121) <= @PROCESS_DATE_T
		GROUP BY OM.M_ID
	) SRC
	
	
	
	
	-- 회원등급 초기화
	--UPDATE TB_MEMBER
	--SET PREV_M_GRADE = M_GRADE
	
	UPDATE TB_MEMBER
	SET M_GRADE = 'B'
	
	-- 산출된 등급 적용
	UPDATE A
	SET A.M_GRADE = B.PROCESS_GRADE
	FROM TB_MEMBER A
		INNER JOIN #GRADE_TMP B
			ON A.M_ID = B.M_ID
	--WHERE NOT(M_ID LIKE '%test%')


	IF ( @PROCESS_DATE_T < '2016-09' )
	BEGIN
		UPDATE A
		SET A.M_GRADE = A.PREV_M_GRADE
		--	SELECT M_ID, M_GRADE, PREV_M_GRADE
		FROM TB_MEMBER A
		WHERE M_GRADE <> PREV_M_GRADE
		AND CASE WHEN M_GRADE = 'B' THEN 1 WHEN M_GRADE = 'S' THEN 2 WHEN M_GRADE = 'G' THEN 3 WHEN M_GRADE = 'V' THEN 4 END < CASE WHEN PREV_M_GRADE = 'B' THEN 1 WHEN PREV_M_GRADE = 'S' THEN 2 WHEN PREV_M_GRADE = 'G' THEN 3 WHEN PREV_M_GRADE = 'V' THEN 4 END
	END


	IF OBJECT_ID('tempdb..#GRADE_TMP') is not null
	BEGIN
	  DROP TABLE #GRADE_TMP ;
	END
/*

EXEC SP_AGENT_MEMBER_GRADE_PROCESS

EXEC SP_AGENT_MEMBER_GRADE_PROCESS '2015-07'

UPDATE TB_MEMBER
SET M_GRADE = 'B'
WHERE NOT(M_ID LIKE '%test%')


UPDATE TB_MEMBER
SET M_GRADE = PREV_M_GRADE


SELECT CONVERT(CHAR(7), DATEADD(DAY, -1, GETDATE()), 121)


	SELECT OM.M_ID, OD.REAL_PAY_PRICE
	FROM TB_ORDER_MASTER OM WITH (NOLOCK)
		INNER JOIN TB_ORDER_DETAIL OD WITH (NOLOCK)
			ON OM.ORDER_IDX = OD.ORDER_IDX
			AND OD.ORDER_DETAIL_STATUS IN ('20','30','40','50','60')
	WHERE OM.MEMBER_ORDER_GBN = '1'
*/	

END
GO
/****** Object:  StoredProcedure [dbo].[SP_AGENT_BATCH_REALNAME_LOG_DEL]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-09-06
-- Description:	aocl: 실명인증 로그 삭제 : 7일 이상 경과된 로그 삭제
-- ussage: exec SP_AGENT_BATCH_REALNAME_LOG_DEL
-- =============================================
CREATE procedure [dbo].[SP_AGENT_BATCH_REALNAME_LOG_DEL]
AS
BEGIN


	DELETE 
	FROM  TB_MEMBER_REALNAME_LOG 
	WHERE INS_DATE < getdate() -7 ;  -- 7일 이상 경과된 로그 삭제


END
GO
/****** Object:  StoredProcedure [dbo].[SP_AGENT_BATCH_COUPON_MAKE_AT_MEM_BIRTHDAY_INSERT]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 생일쿠폰 발행  
 * Modified  :   2015.08.31
 * Modified  :     
 * Modified  :   
 ============================================================*/    
  
  
 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_SEL] 1,10,'','',''  
create PROCEDURE  [dbo].[SP_AGENT_BATCH_COUPON_MAKE_AT_MEM_BIRTHDAY_INSERT]  
AS  
  
 --SELECT GETDATE()
  
 SET NOCOUNT ON  
   
 DECLARE @CD_COUPON VARCHAR(6)  
 DECLARE @COUPON_CNT INT  
 DECLARE @I INT , @J INT 
 
 DECLARE @M_GRADE_CNT TINYINT  
 
 DECLARE @M_GBN VARCHAR(1) ,  @M_GRADE VARCHAR(1) 
 DECLARE @MEM_CNT INT      
 DECLARE @M_ID VARCHAR(13)  
 
 SET @MEM_CNT = 0
 SET @M_GRADE_CNT = 0    
 SET @CD_COUPON = '';  
 SET @COUPON_CNT = 0;  
 SET @I = 1;
 SET @J =1;
 
 --생일계산관련 날짜정보 [시작]
 
DECLARE @THIS_YEAR_START VARCHAR(30)
DECLARE @THIS_YEAR_END VARCHAR(30)

DECLARE @TODAY VARCHAR(10)
DECLARE @TODAY_START DATETIME
DECLARE @TODAY_END DATETIME

SET @TODAY = CONVERT (VARCHAR(10),GETDATE(),120)
SET @TODAY_START = CAST(@TODAY  AS DATETIME)
SET @TODAY_END =  CAST((@TODAY  + ' 23:59:59') AS DATETIME)

--SET @THIS_YEAR_START = CAST(  DATEPART(Year,GETDATE()) AS VARCHAR(4)) + '-12-31 23:59:59'
--SELECT CAST(  DATEPART(Year,GETDATE()) AS VARCHAR(4)) + '-01-01 00:00:01'
--SELECT @THIS_YEAR_START

SET @THIS_YEAR_START = CAST(CAST(  DATEPART(Year,GETDATE()) AS VARCHAR(4)) + '-01-01 00:00:01.000' AS DATETIME)

SET @THIS_YEAR_END   = CAST(CAST(  DATEPART(Year,GETDATE()) AS VARCHAR(4)) + '-12-31 23:59:59.998' AS DATETIME)
--SELECT @THIS_YEAR_START
--SELECT @THIS_YEAR_END
--생일계산관련 날짜정보 [끝]
 
 
DECLARE @TEMP_BIRTH_DAY_MEMBERS TABLE
(
	 SEQ INT NOT NULL IDENTITY(1,1)
    ,M_ID VARCHAR(13)
    ,M_GBN VARCHAR(1)
    ,M_GRADE VARCHAR(1)
)
 
 
 /**
 DECLARE @V_TB_COUPON_MEMBER_GRADE TABLE           
     (           
         IDX INT NOT NULL IDENTITY(1,1)           
       , M_GBN VARCHAR(1)          
       , M_GRADE VARCHAR(1)           
      )          
**/
 
 DECLARE        
		 @COUPON_GBN VARCHAR(1)        
		,@COUPON_GBN_M VARCHAR(1)        
		,@RATE_OR_MONEY VARCHAR(1)        
		,@COUPON_DISCOUNT_MONEY INT        
		,@COUPON_DISCOUNT_RATE  TINYINT        
		,@COUPON_NUM_CHECK_TF VARCHAR(1)        
		,@SERVICE_LIFE_GBN  VARCHAR(1)        
		,@USABLE_DEVICE_GBN VARCHAR(1)        
		,@FIXED_PERIOD_FROM DATETIME        
		,@FIXED_PERIOD_TO DATETIME        
		,@EXRIRED_DAY_FROM_ISSUE_DT INT        
		,@MASTER_FROM_DATE DATETIME        
		,@MASTER_TO_DATE DATETIME        
		,@DOWNLOAD_DATE_FROM DATETIME        
		,@DOWNLOAD_DATE_TO DATETIME      
	      

  --오늘이 생일인 사람 임시테이블에 넣기
  INSERT @TEMP_BIRTH_DAY_MEMBERS(M_ID,M_GBN,M_GRADE)
	  SELECT M_ID,M_GBN,M_GRADE
	  FROM TB_MEMBER 
	  WHERE  DATEADD(year, DATEPART(Year,@TODAY_START)- DATEPART(Year,CAST(M_BIRTHDAY AS DATETIME))
			   ,CAST(M_BIRTHDAY AS DATETIME))  
			   BETWEEN @TODAY_START AND @TODAY_END
			   
  SELECT @MEM_CNT = @@ROWCOUNT
	      
 --회원 등급 가져오기          
 --SELECT @M_GBN=M_GBN , @M_GRADE=M_GRADE FROM TB_MEMBER WITH(NOLOCK) WHERE M_ID=@M_ID
 
 
 
 --[1]유효한 쿠폰이 있는지   
 SET @CD_COUPON = ''
 
 SELECT TOP 1 @CD_COUPON = ISNULL(CD_COUPON,'')  
    FROM TB_COUPON_MASTER WITH(NOLOCK)  
    WHERE   
        USABLE_YN='Y' AND ( MASTER_FROM_DATE <= GETDATE() AND  MASTER_TO_DATE >= GETDATE())  
     AND   
     ( COUPON_GBN_M = 'B' AND ISSUE_METHOD_GBN='A' AND ISSUE_METHOD_WITH_AUTO ='B' )  

   
   
 IF( @CD_COUPON != '')  
 BEGIN  
  
      WHILE (@MEM_CNT >= @I)-- 생일인 회원에게 루프돌며 발행
      BEGIN 

		SELECT @M_ID = M_ID , @M_GBN=M_GBN,@M_GRADE=M_GRADE FROM @TEMP_BIRTH_DAY_MEMBERS WHERE SEQ=@I
		  
         --PRINT 'SELECT M_GBN,M_GRADE FROM TB_COUPON_MEMBER_GRADE WHERE CD_COUPON='+@CD_COUPON+' AND M_GBN='+@M_GBN+' AND M_GRADE=' + @M_GRADE 
		 --쿠폰 발행대상 회원등급에 해당되는지           
		 IF( EXISTS(SELECT M_GBN,M_GRADE FROM TB_COUPON_MEMBER_GRADE WHERE CD_COUPON=@CD_COUPON AND M_GBN=@M_GBN AND M_GRADE=@M_GRADE  ))
		 BEGIN    
		 
			 --PRINT 'SELECT IDX_COUPON_NUMBER FROM  dbo.TB_COUPON_ISSUED_DETAIL WITH(NOLOCK)    WHERE CD_COUPON='+@CD_COUPON+' AND M_ID='+@M_ID +' AND (ISSUE_DATE >='+ CAST(@THIS_YEAR_START AS VARCHAR(24)) +'AND ISSUE_DATE <=' + CAST(@THIS_YEAR_END  AS VARCHAR(24))
			         
			  --이미 쿠폰을 발급받았으면 발급하지 않는다
			  IF(NOT EXISTS(SELECT IDX_COUPON_NUMBER FROM  dbo.TB_COUPON_ISSUED_DETAIL WITH(NOLOCK)   
					 WHERE CD_COUPON=@CD_COUPON AND M_ID=@M_ID  AND (ISSUE_DATE >= @THIS_YEAR_START AND ISSUE_DATE <= @THIS_YEAR_END )))  
			  BEGIN  
		         
				     
					SELECT         
					  @COUPON_GBN=COUPON_GBN        
					 ,@COUPON_GBN_M=COUPON_GBN_M        
					 ,@RATE_OR_MONEY=RATE_OR_MONEY        
					 ,@COUPON_DISCOUNT_MONEY=COUPON_DISCOUNT_MONEY        
					 ,@COUPON_DISCOUNT_RATE=COUPON_DISCOUNT_RATE      
				        
					 ,@COUPON_NUM_CHECK_TF=COUPON_NUM_CHECK_TF        
					 ,@SERVICE_LIFE_GBN=SERVICE_LIFE_GBN        
					 ,@USABLE_DEVICE_GBN=USABLE_DEVICE_GBN        
					 ,@FIXED_PERIOD_FROM=FIXED_PERIOD_FROM        
					 ,@FIXED_PERIOD_TO=FIXED_PERIOD_TO        
					 ,@EXRIRED_DAY_FROM_ISSUE_DT=EXRIRED_DAY_FROM_ISSUE_DT        
					 ,@MASTER_FROM_DATE=MASTER_FROM_DATE        
					 ,@MASTER_TO_DATE=MASTER_TO_DATE        
					 ,@DOWNLOAD_DATE_FROM =DOWNLOAD_DATE_FROM        
					 ,@DOWNLOAD_DATE_TO =DOWNLOAD_DATE_TO        
				   FROM TB_COUPON_MASTER  
				   WHERE 
					   CD_COUPON = @CD_COUPON         
				           
				           
				           
				         
				              
					DECLARE @USABLE_DATE_FROM DATETIME , @USABLE_DATE_TO DATETIME --쿠폰사용가능기간          
					DECLARE @ISSUED_DATE DATETIME        
				            
					SELECT  @ISSUED_DATE = GETDATE()-- 쿠폰발행일자         
				            
					IF @SERVICE_LIFE_GBN ='A'  --사용기간 기준이 고정기간 기준이면        
					BEGIN            
						SET @USABLE_DATE_FROM = @FIXED_PERIOD_FROM        
						SET @USABLE_DATE_TO =   @FIXED_PERIOD_TO        
					END        
				            
					IF @SERVICE_LIFE_GBN ='B'  --사용기간 기준이 발행일 기준이면        
					BEGIN        
						SET @USABLE_DATE_FROM = @ISSUED_DATE        
						SET @USABLE_DATE_TO = DATEADD(DAY,@EXRIRED_DAY_FROM_ISSUE_DT,@ISSUED_DATE)        
					END         
				            
					--DOWNLOAD일자를 정의하지 않았으면 사용가능 일자로 대체        
					IF @DOWNLOAD_DATE_FROM IS NULL        
					BEGIN        
						 SET @DOWNLOAD_DATE_FROM = @USABLE_DATE_FROM        
						 SET @DOWNLOAD_DATE_TO = @USABLE_DATE_TO        
					END        
				    
				    
					INSERT [TB_COUPON_ISSUED_DETAIL]        
					  (            
						  [CD_COUPON]   
						 ,[COUPON_VERIFI_NUMBER]             
						 ,[COUPON_MONEY]        
						 ,[COUPON_DISCOUNT_RATE]        
						 --,[CD_COUPON_KIND]        
						 ,[USE_STATUS]        
						 ,[USABLE_TF]        
						 ,[M_ID]        
						 ,[ISSUE_DATE]        
						 ,[USABLE_DATE_FROM]        
						 ,[USABLE_DATE_TO]        
						 ,[ORDER_NO]        
						 ,[ORDER_DETAIL_NO]        
						 ,[ORDER_CANCEL_FL]        
						 ,[RE_ISSUE_FL]        
						 ,[RE_ISSUE_DATE]        
						 ,[DOWNLOAD_DATE_FROM]        
						 ,[DOWNLOAD_DATE_TO]        
						 ,[ISSUED_GBN]        
						 ,[ISSUED_MEMO]        
						 ,[ADMIN_ID]        
						)        
						VALUES  
						(  
						 @CD_COUPON        
							  ,NULL        
							  ,ISNULL(@COUPON_DISCOUNT_MONEY,0)        
							  ,ISNULL(@COUPON_DISCOUNT_RATE,0)         
							  ,'1' --USE_STATUS(발행단계)        
							  ,'Y' --USABLE_TF        
							  ,@M_ID        
							  ,@ISSUED_DATE --ISSUE_DATE 발행일자        
							  ,@USABLE_DATE_FROM        
							  ,@USABLE_DATE_TO        
							  ,NULL --ORDER_NO        
							  ,NULL --ORDER_DETAIL_NO        
							  ,NULL --ORDER_CANCEL_FL        
							  ,NULL --RE_ISSUE_FL        
							  ,NULL --RE_ISSUE_DATE        
							  ,@DOWNLOAD_DATE_FROM         
							  ,@DOWNLOAD_DATE_TO        
							  ,'A' -- ISSUED_GBN (A=일괄발행, B=개별발행)        
							  ,'생일쿠폰 자동발행' --ISSUED_MEMO (개별발행시 메모)        
							  ,''   
						)            
			      
				END   --- 쿠폰 발급대상 회원등급인지 ----------------------------------------
				
				SET @I = @I+1
				
				          
			    SET @USABLE_DATE_FROM = NULL       
			    SET @USABLE_DATE_TO =   NULL        
				        
			    SET @USABLE_DATE_FROM = NULL        
			    SET @USABLE_DATE_TO = NULL      
				
			    SET @DOWNLOAD_DATE_FROM = NULL        
			    SET @DOWNLOAD_DATE_TO = NULL    
		
				
			End  
		
	   END --   WHILE  ----------------------------------------------------------------	
			
  END  -- 발급할 수 있는 쿠폰정책이 존재하는지----------------------------------------------
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_STAT_ORDER_DAY]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_STAT_ORDER_DAY
일별통계

파라미터 설명
@FROM_DATE VARCHAR(10)		-- 시작 주문일자 (ex 2015-07-09)
, @TO_DATE VARCHAR(10)		-- 종료 주문일자 (ex 2015-07-09)
, @PAT_GUBUN1 BIT			-- 매체구분-WEB (CHECK:1, NONE:0)
, @PAT_GUBUN2 BIT			-- 매체구분-MOBILE (CHECK:1, NONE:0)
, @MEMBER_GBN1 BIT			-- 회원구분-일반회원 (CHECK:1, NONE:0)
, @MEMBER_GBN2 BIT			-- 회원구분-임직원 (CHECK:1, NONE:0)
, @MEMBER_GBN3 BIT			-- 회원구분-비회원 (CHECK:1, NONE:0)

exec SP_ADMIN_STAT_ORDER_DAY '2015-01-01','2015-12-31',1,0,1,1,1

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_STAT_ORDER_DAY]
@FROM_DATE VARCHAR(10) = ''		-- 시작 주문일자 (ex 2015-07-09)
, @TO_DATE VARCHAR(10) = ''		-- 종료 주문일자 (ex 2015-07-09)
, @PAT_GUBUN1 BIT = 1			-- 매체구분-WEB (CHECK:1, NONE:0)
, @PAT_GUBUN2 BIT = 1			-- 매체구분-MOBILE (CHECK:1, NONE:0)
, @MEMBER_GBN1 BIT = 1			-- 회원구분-일반회원 (CHECK:1, NONE:0)
, @MEMBER_GBN2 BIT = 1			-- 회원구분-임직원 (CHECK:1, NONE:0)
, @MEMBER_GBN3 BIT = 1			-- 회원구분-비회원 (CHECK:1, NONE:0)
AS
BEGIN
	SET NOCOUNT ON


	DECLARE @v_SQL_WHERE VARCHAR(3000) = '' ;
	DECLARE @v_SQL VARCHAR(3000) = '' ;

	IF @FROM_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,A.ORDER_DATE ,121) >= '''+@FROM_DATE+''' ';
	END
	IF @TO_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,A.ORDER_DATE ,121) <= '''+@TO_DATE+''' ';
	END

	IF ( ( @PAT_GUBUN1 = 1 ) OR ( @PAT_GUBUN2 = 1 ) )
	BEGIN
		IF ( ( @PAT_GUBUN1 = 0 ) OR ( @PAT_GUBUN2 = 0 ) )
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( (1=2) ';
			IF @PAT_GUBUN1 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR ( A.PAT_GUBUN = ''Web'' ) ';
			END
			IF @PAT_GUBUN2 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR ( A.PAT_GUBUN = ''Mobile'' ) ';
			END
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' ) ';
		END;
	END

	IF ( ( @MEMBER_GBN1 = 1 ) OR ( @MEMBER_GBN2 = 1 ) OR ( @MEMBER_GBN3 = 1 ) )
	BEGIN
		IF ( ( @MEMBER_GBN1 = 0 ) OR ( @MEMBER_GBN2 = 0 ) OR ( @MEMBER_GBN3 = 0 ) )
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( (1=2) ';
			IF @MEMBER_GBN1 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR ( A.MEMBER_ORDER_GBN = ''1'' AND A.M_GBN = ''A'' ) ';
			END
			IF @MEMBER_GBN2 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR ( A.MEMBER_ORDER_GBN = ''1'' AND A.M_GBN = ''S'' ) ';
			END
			IF @MEMBER_GBN3 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR ( A.MEMBER_ORDER_GBN = ''2'' ) ';
			END
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' ) ';
		END;
	END

	IF OBJECT_ID('tempdb..#TMP_ORDERLIST') is not null
	BEGIN
	  DROP TABLE #TMP_ORDERLIST;
	END

	CREATE TABLE #TMP_ORDERLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		ORDER_IDX	INT
	)

	SET @v_SQL  = '
		insert into #TMP_ORDERLIST (ORDER_IDX)
		SELECT A.ORDER_IDX 
		FROM TB_ORDER_MASTER A WITH (NOLOCK)
		WHERE 1=1
		' + @v_SQL_WHERE ;
	--PRINT @v_SQL;
	EXEC(@v_SQL);

	SELECT ISNULL(ORDER_DATE,'합계') AS ORDER_DATE
		, SUM(ORDER_CNT) AS ORDER_CNT
		, SUM(ORDER_PCNT) AS ORDER_PCNT
		, SUM(ORDER_PRICE) AS ORDER_PRICE
		, SUM(POINT_USE_PRICE) AS POINT_USE_PRICE
		, SUM(COUPON_DISCOUNT_AMT) AS COUPON_DISCOUNT_AMT
		, SUM(GRADE_DISCOUNT_AMT) AS GRADE_DISCOUNT_AMT
		, SUM(EMP_DISCOUNT_AMT) AS EMP_DISCOUNT_AMT
		, SUM(TRANS_CNT) AS TRANS_CNT
		, SUM(TRANS_PRICE) AS TRANS_PRICE
		, SUM(TOTAL_PAY_PRICE) AS TOTAL_PAY_PRICE
		, SUM(CANCEL_CNT) AS CANCEL_CNT
		, SUM(CANCEL_PRICE) AS CANCEL_PRICE
		, SUM(RETURN_CNT) AS RETURN_CNT
		, SUM(RETURN_PRICE) AS RETURN_PRICE
		, SUM(CHANGE_CNT) AS CHANGE_CNT
		, SUM(CHANGE_PRICE) AS CHANGE_PRICE
	FROM (
		SELECT CONVERT(VARCHAR(10), OM.ORDER_DATE, 121) AS ORDER_DATE
			, COUNT(OM.ORDER_CODE) AS ORDER_CNT
			, 0 AS ORDER_PCNT
			, SUM(OM.TOTAL_ORDER_PRICE) AS ORDER_PRICE
			, SUM(OM.POINT_USE_PRICE) AS POINT_USE_PRICE
			, SUM(OM.COUPON_DISCOUNT_AMT) AS COUPON_DISCOUNT_AMT
			, SUM(OM.GRADE_DISCOUNT_AMT) AS GRADE_DISCOUNT_AMT
			, SUM(OM.EMP_DISCOUNT_AMT) AS EMP_DISCOUNT_AMT
			, SUM( CASE WHEN OM.TRANS_PRICE > 0 THEN 1 ELSE 0 END ) AS TRANS_CNT
			, SUM(OM.TRANS_PRICE) AS TRANS_PRICE
			, SUM(OM.TOTAL_PAY_PRICE) AS TOTAL_PAY_PRICE
			, 0 AS CANCEL_CNT
			, 0 AS CANCEL_PRICE
			, 0 AS RETURN_CNT
			, 0 AS RETURN_PRICE
			, 0 AS CHANGE_CNT
			, 0 AS CHANGE_PRICE
		FROM #TMP_ORDERLIST TM
			INNER JOIN TB_ORDER_MASTER OM WITH (NOLOCK)
				ON TM.ORDER_IDX = OM.ORDER_IDX
		GROUP BY CONVERT(VARCHAR(10), OM.ORDER_DATE, 121)

		UNION ALL
		
		SELECT CONVERT(VARCHAR(10), OM.ORDER_DATE, 121)
			, 0
			, SUM(OD.P_COUNT)
			, 0
			, 0
			, 0
			, 0
			, 0
			, 0
			, 0
			, 0
			, SUM( CASE WHEN OD.ORDER_DETAIL_STATUS = '90' THEN 1 ELSE 0 END )
			, SUM( CASE WHEN OD.ORDER_DETAIL_STATUS = '90' THEN OD.REAL_PAY_PRICE ELSE 0 END )
			, SUM( CASE WHEN OD.ORDER_DETAIL_STATUS = '80' THEN 1 ELSE 0 END )
			, SUM( CASE WHEN OD.ORDER_DETAIL_STATUS = '80' THEN OD.REAL_PAY_PRICE ELSE 0 END )
			, SUM( CASE WHEN OD.ORDER_DETAIL_STATUS = '70' THEN 1 ELSE 0 END )
			, SUM( CASE WHEN OD.ORDER_DETAIL_STATUS = '70' THEN OD.REAL_PAY_PRICE ELSE 0 END )
		FROM #TMP_ORDERLIST TM
			INNER JOIN TB_ORDER_MASTER OM WITH (NOLOCK)
				ON TM.ORDER_IDX = OM.ORDER_IDX
			INNER JOIN TB_ORDER_DETAIL OD WITH (NOLOCK)
				ON TM.ORDER_IDX = OD.ORDER_IDX
		GROUP BY CONVERT(VARCHAR(10), OM.ORDER_DATE, 121)
	) AS SRC
	GROUP BY ORDER_DATE WITH ROLLUP
	
/*
	SELECT *
	FROM TB_ORDER_MASTER
	
*/

	SET NOCOUNT OFF ;
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_STAT_ORDER_CATEGORY]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_STAT_ORDER_CATEGORY
카테고리별 매출통계

파라미터 설명
@FROM_DATE VARCHAR(10)		-- 시작 주문일자 (ex 2015-07-09)
, @TO_DATE VARCHAR(10)		-- 종료 주문일자 (ex 2015-07-09)
, @PAT_GUBUN1 BIT			-- 매체구분-WEB (CHECK:1, NONE:0)
, @PAT_GUBUN2 BIT			-- 매체구분-MOBILE (CHECK:1, NONE:0)
, @MEMBER_GBN1 BIT			-- 회원구분-일반회원 (CHECK:1, NONE:0)
, @MEMBER_GBN2 BIT			-- 회원구분-임직원 (CHECK:1, NONE:0)
, @MEMBER_GBN3 BIT			-- 회원구분-비회원 (CHECK:1, NONE:0)
, @cateCode CHAR(9)			-- 대분류코드

SELECT * FROM TB_ORDER_DETAIL

exec SP_ADMIN_STAT_ORDER_CATEGORY '2015-01-01','2015-12-31',1,1,1,1,1,'','',''

exec SP_ADMIN_STAT_ORDER_CATEGORY '2015-01-01','2015-12-31',1,1,1,1,1,'102100100'

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_STAT_ORDER_CATEGORY]
@FROM_DATE VARCHAR(10)		-- 시작 주문일자 (ex 2015-07-09)
, @TO_DATE VARCHAR(10)		-- 종료 주문일자 (ex 2015-07-09)
, @PAT_GUBUN1 BIT			-- 매체구분-WEB (CHECK:1, NONE:0)
, @PAT_GUBUN2 BIT			-- 매체구분-MOBILE (CHECK:1, NONE:0)
, @MEMBER_GBN1 BIT			-- 회원구분-일반회원 (CHECK:1, NONE:0)
, @MEMBER_GBN2 BIT			-- 회원구분-임직원 (CHECK:1, NONE:0)
, @MEMBER_GBN3 BIT			-- 회원구분-비회원 (CHECK:1, NONE:0)
, @cateCode CHAR(9)			-- P_CATE_CODE
AS
BEGIN
	SET NOCOUNT ON


	DECLARE @v_SQL_WHERE VARCHAR(3000) = '' ;
	DECLARE @v_SQL VARCHAR(3000) = '' ;

	IF @FROM_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,A.ORDER_DATE ,121) >= '''+@FROM_DATE+''' ';
	END
	IF @TO_DATE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,A.ORDER_DATE ,121) <= '''+@TO_DATE+''' ';
	END

	IF ( ( @PAT_GUBUN1 = 1 ) OR ( @PAT_GUBUN2 = 1 ) )
	BEGIN
		IF ( ( @PAT_GUBUN1 = 0 ) OR ( @PAT_GUBUN2 = 0 ) )
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( (1=2) ';
			IF @PAT_GUBUN1 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR ( A.PAT_GUBUN = ''Web'' ) ';
			END
			IF @PAT_GUBUN2 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR ( A.PAT_GUBUN = ''Mobile'' ) ';
			END
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' ) ';
		END;
	END

	IF ( ( @MEMBER_GBN1 = 1 ) OR ( @MEMBER_GBN2 = 1 ) OR ( @MEMBER_GBN3 = 1 ) )
	BEGIN
		IF ( ( @MEMBER_GBN1 = 0 ) OR ( @MEMBER_GBN2 = 0 ) OR ( @MEMBER_GBN3 = 0 ) )
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( (1=2) ';
			IF @MEMBER_GBN1 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR ( A.MEMBER_ORDER_GBN = ''1'' AND A.M_GBN = ''A'' ) ';
			END
			IF @MEMBER_GBN2 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR ( A.MEMBER_ORDER_GBN = ''1'' AND A.M_GBN = ''S'' ) ';
			END
			IF @MEMBER_GBN3 = 1
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' OR ( A.MEMBER_ORDER_GBN = ''2'' ) ';
			END
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' ) ';
		END;
	END

	IF @cateCode <> '' 
		BEGIN
			IF SUBSTRING(@cateCode,4,3) = '100'
			BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( SUBSTRING(B.P_CATE_CODE,0,4) = ''' + SUBSTRING(@cateCode,0,4) + ''' ) '	
			END
			ELSE IF SUBSTRING(@cateCode,7,3) = '100'
			BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( SUBSTRING(B.P_CATE_CODE,0,7) = ''' + SUBSTRING(@cateCode,0,7) + ''' ) '	
			END
			ELSE
			BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( B.P_CATE_CODE = ''' + @cateCode + ''' ) '	
			END
		END 
	--IF @P_CATE_CODE <> ''
	--BEGIN
	--	SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND B.P_CATE_CODE = '''+@P_CATE_CODE+''' ';
	--END
	--IF @C_CATE_CODE <> ''
	--BEGIN
	--	SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND B.C_CATE_CODE = '''+@C_CATE_CODE+''' ';
	--END	
	--IF @L_CATE_CODE <> ''
	--BEGIN
	--	SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND B.L_CATE_CODE = '''+@L_CATE_CODE+''' ';
	--END
	
	IF OBJECT_ID('tempdb..#TMP_ORDERLIST') is not null
	BEGIN
	  DROP TABLE #TMP_ORDERLIST;
	END

	CREATE TABLE #TMP_ORDERLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		ORDER_IDX	INT
	)

	SET @v_SQL  = '
		insert into #TMP_ORDERLIST (ORDER_IDX)
		SELECT A.ORDER_IDX 
		FROM TB_ORDER_MASTER A WITH (NOLOCK)
			INNER JOIN TB_ORDER_DETAIL B WITH (NOLOCK)
				ON A.ORDER_IDX = B.ORDER_IDX
		WHERE 1=1
		' + @v_SQL_WHERE ;
	-- PRINT @v_SQL;
	EXEC(@v_SQL);

	SELECT *
	FROM (
		SELECT 1 AS ORD
			, OD.P_CODE
			, OD.P_NAME
			, OD.P_IMG1_S
			, COUNT( DISTINCT OD.ORDER_IDX) AS ORDER_CNT
			, SUM(OD.P_COUNT) AS P_COUNT
			, SUM(OD.REAL_PAY_PRICE) AS REAL_PAY_PRICE
		FROM #TMP_ORDERLIST TM
			INNER JOIN TB_ORDER_DETAIL OD WITH (NOLOCK)
				ON TM.ORDER_IDX = OD.ORDER_IDX
		GROUP BY OD.P_CODE, OD.P_NAME, OD.P_IMG1_S
		
		UNION ALL
		
		SELECT 2 AS ORD
			, '합계'
			, ''
			, ''
			, COUNT( DISTINCT OD.ORDER_IDX) AS ORDER_CNT
			, SUM(OD.P_COUNT) AS P_COUNT
			, SUM(OD.REAL_PAY_PRICE) AS REAL_PAY_PRICE
		FROM #TMP_ORDERLIST TM
			INNER JOIN TB_ORDER_DETAIL OD WITH (NOLOCK)
				ON TM.ORDER_IDX = OD.ORDER_IDX

	) AS SRC
	ORDER BY SRC.ORD, SRC.ORDER_CNT DESC, SRC.P_COUNT DESC, SRC.REAL_PAY_PRICE DESC
/*
	SELECT *
	FROM TB_ORDER_MASTER
	
*/

	SET NOCOUNT OFF ;
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_SMS_INS]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : SMS 등록 (admin)
 * Modified  :   2015.08.13
 * Modified  :   2015.08.19
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_ADMIN_SMS_INS]

@SMS_FLAG			VARCHAR(1)	=''			--SEND FLAG(‘1’:SMS 즉시, ‘2’:SMS 예약 , '3':LMS 즉시, '4':LMS 예약)
,@SEND_TIME			VARCHAR(20)	=''			--예약 시간 2015-06-16 14:00:00
,@HANDPHONE			VARCHAR(15)	=''			--HANDPHONE 숫자 부분만
,@CALLBACK_NO		VARCHAR(15)	=''			--발신번호 숫자 부분만
,@TITLE				VARCHAR(40)	=''			--제목
,@SEND_MSG			VARCHAR(2000)	=''		--호출 메시지
,@INTRESULT			INT OUTPUT				--결과값
AS

SET NOCOUNT ON
	
	--SMS 즉시 발송 INSERT
	IF @SMS_FLAG = '1'
	BEGIN

	INSERT INTO MFLY_SEND_MSG 
	 (	SEND_FLAG, 
		SEND_TIME, 
		HANDPHONE, 
		CALLBACK_NO,	
		SEND_MSG, 	
		TRANS_STATUS, 
		INSERT_TIME
	  ) 
	 values (
		'1', 
		CONVERT(CHAR(19), GETDATE(), 120), 
		@HANDPHONE,
		@CALLBACK_NO,
		@SEND_MSG, 
		'1', 
		CONVERT(CHAR(19), GETDATE(), 120)
	  )

	END 

	--SMS 예약 발송 INSERT
	IF @SMS_FLAG = '2'
	BEGIN
	
	INSERT INTO MFLY_SEND_MSG 
	 (	SEND_FLAG, 
		SEND_TIME, 
		HANDPHONE, 
		CALLBACK_NO,	
		SEND_MSG, 	
		TRANS_STATUS, 
		INSERT_TIME
	  ) 
	 values (
		'2', 
		@SEND_TIME, 
		@HANDPHONE,
		@CALLBACK_NO,
		@SEND_MSG, 
		'0', 
		CONVERT(CHAR(19), GETDATE(), 120)
	  )
	END 

	--LMS 즉시 발송 INSERT
	IF @SMS_FLAG = '3'
	BEGIN
	
	INSERT INTO MFLY_SEND_MMS  
	 (	SEND_FLAG, 
		SEND_TIME, 
		HANDPHONE, 
		CALLBACK_NO,	
		TITLE, 	
		SEND_MSG, 	
		TRANS_STATUS, 
		INSERT_TIME
	  ) 
	 values (
		'1', 
		CONVERT(CHAR(19), GETDATE(), 120), 
		@HANDPHONE,
		@CALLBACK_NO,
		@TITLE,
		@SEND_MSG, 
		'1', 
		CONVERT(CHAR(19), GETDATE(), 120)
	  )
	END 

	--LMS 예약 발송 INSERT
	IF @SMS_FLAG = '4'
	BEGIN
	
	INSERT INTO MFLY_SEND_MMS  
	 (	SEND_FLAG, 
		SEND_TIME, 
		HANDPHONE, 
		CALLBACK_NO,
		TITLE, 	
		SEND_MSG, 	
		TRANS_STATUS, 
		INSERT_TIME
	  ) 
	 values (
		'2', 
		@SEND_TIME, 
		@HANDPHONE,
		@CALLBACK_NO,
		@TITLE,
		@SEND_MSG, 
		'0', 
		CONVERT(CHAR(19), GETDATE(), 120)
	  )
	END 	 		

	SET @INTRESULT = @@ERROR
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_SHOPINFO_VIEW]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 [SP_ADMIN_SHOPINFO_VIEW]
매장 상세보기

SELECT * FROM TB_SHOPINFO

EXEC SP_SHOPINFO_VIEW 2

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_SHOPINFO_VIEW]
@IDX INT
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT A.IDX
		, A.SHOP_NAME
		, A.TEL_NUM
		, A.POST
		, A.ADDR1
		, A.ADDR2
		, A.LOCATION_INFO
		, A.LATITUDE
		, A.LONGITUDE
		, A.DISPLAY_ORDER
		, A.USE_YN
		, A.ADM_ID
		, A.REG_DATE
	FROM TB_SHOPINFO a WITH (NOLOCK)
	WHERE a.IDX = @IDX
	
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_SHOPINFO_UPD]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_SHOPINFO_UPD
어드민의 매장관리페이지에서 매거진 등록

SELECT * FROM TB_SHOPINFO

EXEC SP_ADMIN_SHOPINFO_UPD  1,'매장1__수정','02-1234-5678','12345','주소111','주소222','오시는길내용','37.12345678','122.12345678',2,'Y','kmg5302'
EXEC SP_ADMIN_SHOPINFO_UPD  2,'매장2__수정','02-1234-5678','12345','주소111','주소222','오시는길내용','37.12345678','122.12345678',1,'Y','kmg5302'


*/

CREATE PROC [dbo].[SP_ADMIN_SHOPINFO_UPD]
@IDX INT						-- TB_SHOPINFO테이블 PK
, @SHOP_NAME VARCHAR(100)		-- 매장명
, @TEL_NUM VARCHAR(20)			-- 전화번호
, @POST VARCHAR(7)				-- 우편번호
, @ADDR1 VARCHAR(200)			-- 주소1
, @ADDR2 VARCHAR(200)			-- 주소2
, @LOCATION_INFO VARCHAR(200)	-- 오시는길
, @LATITUDE VARCHAR(20)			-- 위도
, @LONGITUDE VARCHAR(20)		-- 경도
, @DISPLAY_ORDER INT			-- 전시순서
, @USE_YN CHAR(1) = 'N'			-- 전시구분   ( Y:전시  N:비전시 )
, @ADM_ID VARCHAR(20)			-- 등록자ID
AS

SET NOCOUNT ON ;

		UPDATE TB_SHOPINFO
		SET SHOP_NAME = @SHOP_NAME
		, TEL_NUM = @TEL_NUM
		, POST = @POST
		, ADDR1 = @ADDR1
		, ADDR2 = @ADDR2
		, LOCATION_INFO = @LOCATION_INFO
		, LATITUDE = @LATITUDE
		, LONGITUDE = @LONGITUDE
		, DISPLAY_ORDER = @DISPLAY_ORDER
		, USE_YN = @USE_YN
		, ADM_ID = @ADM_ID
		, REG_DATE = GETDATE()
		WHERE IDX = @IDX
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_SHOPINFO_SEL]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_SHOPINFO_SEL
어드민의 매거진관리페이지에서 리스트조회시

SELECT * FROM TB_SHOPINFO

exec SP_ADMIN_SHOPINFO_SEL 'A','SHOP_NAME','1'
exec SP_ADMIN_SHOPINFO_SEL 'A','LOCATION_INFO','오시는'

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_SHOPINFO_SEL]
@USE_YN CHAR(1)			-- 전시구분 A:전체, Y:전시, N:비전시
,@SEARCH_COL VARCHAR(50)	='' 
,@SEARCH_KEYWORD VARCHAR(50)	='' 
,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈
AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ; 
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  --print 'drop...'
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

	SET @v_SQL_WHERE = ' WHERE (1=1)' 
	
	IF @USE_YN <> 'A'
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( USE_YN = ''' + @USE_YN + ''' ) '
	END
	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
	END

	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @v_SQL  ='INSERT INTO #TEMPLIST (IDX_TMP) '
	SET @v_SQL  =@v_SQL + ' SELECT  IDX ';
	SET @v_SQL  =@v_SQL + ' FROM TB_SHOPINFO WITH (NOLOCK) ';
	SET @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	SET @v_SQL  =@v_SQL + '	ORDER BY IDX DESC ';
	EXEC(@v_SQL);

	-- PRINT @v_SQL
	SET ROWCOUNT 0 ;

	



	SELECT A.IDX
		, A.SHOP_NAME
		, A.TEL_NUM
		, A.POST
		, A.ADDR1
		, A.ADDR2
		, A.LOCATION_INFO
		, A.LATITUDE
		, A.LONGITUDE
		, A.DISPLAY_ORDER
		, A.USE_YN
		, A.ADM_ID
		, A.REG_DATE
	FROM TB_SHOPINFO A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T on A.IDX = T.IDX_TMP
	WHERE t.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END	 
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_SHOPINFO_INS]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_SHOPINFO_INS
어드민의 매장관리페이지에서 매거진 등록

SELECT * FROM TB_SHOPINFO

EXEC SP_ADMIN_SHOPINFO_INS  '매장1','02-1234-5678','12345','주소111','주소222','오시는길내용','37.12345678','122.12345678',1,'Y','kmg5302',1
EXEC SP_ADMIN_SHOPINFO_INS  '매장2','02-1234-5678','12345','주소111','주소222','오시는길내용','37.12345678','122.12345678',2,'Y','kmg5302',1


*/

CREATE PROC [dbo].[SP_ADMIN_SHOPINFO_INS]
@SHOP_NAME VARCHAR(100)			-- 매장명
, @TEL_NUM VARCHAR(20)			-- 전화번호
, @POST VARCHAR(7)				-- 우편번호
, @ADDR1 VARCHAR(200)			-- 주소1
, @ADDR2 VARCHAR(200)			-- 주소2
, @LOCATION_INFO VARCHAR(200)	-- 오시는길
, @LATITUDE VARCHAR(20)			-- 위도
, @LONGITUDE VARCHAR(20)		-- 경도
, @DISPLAY_ORDER INT			-- 전시순서
, @USE_YN CHAR(1) = 'N'			-- 전시구분   ( Y:전시  N:비전시 )
, @ADM_ID VARCHAR(20)			-- 등록자ID

,@NEW_IDX INT OUTPUT
AS

SET NOCOUNT ON ;

INSERT INTO TB_SHOPINFO 
	(	SHOP_NAME
		, TEL_NUM
		, POST
		, ADDR1
		, ADDR2
		, LOCATION_INFO
		, LATITUDE
		, LONGITUDE
		, DISPLAY_ORDER
		, USE_YN
		, ADM_ID
		, REG_DATE
	)
VALUES
	(	@SHOP_NAME
		, @TEL_NUM
		, @POST
		, @ADDR1
		, @ADDR2
		, @LOCATION_INFO
		, @LATITUDE
		, @LONGITUDE
		, @DISPLAY_ORDER
		, @USE_YN
		, @ADM_ID
		, GETDATE());


SELECT @NEW_IDX = SCOPE_IDENTITY() ;
GO
/****** Object:  StoredProcedure [dbo].[SP_CATEGORY_NAME_INFO_VIEW]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 카테고리 정보 보기 
 * Modified  :   2015.08.11
 ============================================================*/  
  
CREATE PROCEDURE [dbo].[SP_CATEGORY_NAME_INFO_VIEW]
@CATE_CODE			CHAR(9) =''				-- 카테고리 
AS

 SET NOCOUNT ON
 
	--카테고리 VIEW
	SELECT IDX
	, CATE_GBN
	, CATE_CODE
	, RE_SORT
	, DEPTH1_CODE
	, DEPTH1_NAME
	, DEPTH2_CODE
	, DEPTH2_NAME
	, DEPTH_FLAG
	, DISPLAY_YN
	FROM TB_CATEGORY
	WHERE CATE_CODE = @CATE_CODE
	AND DISPLAY_YN = 'Y'
GO
/****** Object:  StoredProcedure [dbo].[SP_CATEGORY_DEPTH_SEL]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : depth별 카테고리 리스트
 * Modified  :   2015.07.14
 exec [SP_ADMIN_CATEGORY_DEPTH_SEL] 'PRODUCT_TYPE','101','101'
 ============================================================*/ 

--exec [SP_ADMIN_CATEGORY_DEPTH_SEL] 'PRODUCT_TYPE','101',''
  
CREATE PROCEDURE [dbo].[SP_CATEGORY_DEPTH_SEL]
@CATE_GBN			VARCHAR(15) =''			--카테고리 구분값 PRODUCT_TYPE/SKIN_TYPE/LINE_TYPE
,@DEPTH1_CODE			CHAR(3) =''			--1DEPTH 카테고리 코드값 EX>101,102,103
,@DEPTH2_CODE			CHAR(3) =''			--2DEPTH 카테고리 코드값 EX>101,102,103
AS

	SET NOCOUNT ON
	
	--1DEPTH 카테고리 가져오기
	IF @DEPTH1_CODE = ''
	BEGIN
		SELECT IDX
			,CATE_GBN
			,CATE_CODE
			,RE_SORT
			,DEPTH1_CODE
			,DEPTH1_NAME
			,DEPTH2_CODE
			,DEPTH2_NAME
			,DEPTH3_CODE
			,DEPTH3_NAME
			,DEPTH_FLAG
			,DISPLAY_YN
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE CATE_GBN = @CATE_GBN --PRODUCT/COLLECTION/LINE
				AND DEPTH_FLAG = '1'  --1DEPTH
				AND DISPLAY_YN = 'Y'
		ORDER BY RE_SORT 
	END
	--1DEPTH에 속한 2DEPTH 카테고리 가져오기
	ELSE IF @DEPTH1_CODE != '' AND @DEPTH2_CODE = ''
		BEGIN
		SELECT IDX
			,CATE_GBN
			,CATE_CODE
			,RE_SORT
			,DEPTH1_CODE
			,DEPTH1_NAME
			,DEPTH2_CODE
			,DEPTH2_NAME
			,DEPTH3_CODE
			,DEPTH3_NAME
			,DEPTH_FLAG
			,DISPLAY_YN
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE CATE_GBN = @CATE_GBN --PRODUCT/COLLECTION/LINE
				AND DEPTH1_CODE = @DEPTH1_CODE --1DEPTH CODE
				AND DEPTH_FLAG = '2'  --1DEPTH
				AND DISPLAY_YN = 'Y'
		ORDER BY RE_SORT 
	END
	--1DEPTH에 속한 2DEPTH에 속한 3DEPTH 카테고리 가져오기
	ELSE IF @DEPTH1_CODE != '' AND @DEPTH2_CODE != ''
		BEGIN
		SELECT IDX
			,CATE_GBN
			,CATE_CODE
			,RE_SORT
			,DEPTH1_CODE
			,DEPTH1_NAME
			,DEPTH2_CODE
			,DEPTH2_NAME
			,DEPTH3_CODE
			,DEPTH3_NAME
			,DEPTH_FLAG
			,DISPLAY_YN
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE CATE_GBN = @CATE_GBN --PRODUCT/COLLECTION/LINE
				AND DEPTH1_CODE = @DEPTH1_CODE --1DEPTH CODE
				AND DEPTH2_CODE = @DEPTH2_CODE --2DEPTH CODE
				AND DEPTH_FLAG = '3'  --1DEPTH
				AND DISPLAY_YN = 'Y'
		ORDER BY RE_SORT 
	END
	--1DEPTH카테고리 가져오기
	ELSE 
		BEGIN
		SELECT IDX
			,CATE_GBN
			,CATE_CODE
			,RE_SORT
			,DEPTH1_CODE
			,DEPTH1_NAME
			,DEPTH2_CODE
			,DEPTH2_NAME
			,DEPTH3_CODE
			,DEPTH3_NAME
			,DEPTH_FLAG
			,DISPLAY_YN
			,CONVERT(VARCHAR(10),INS_DATE,121) AS REGDATE
		FROM TB_CATEGORY WITH (NOLOCK) 
		WHERE CATE_GBN = @CATE_GBN --PRODUCT/COLLECTION/LINE
				--AND DEPTH1_CODE = @DEPTH1_CODE --1DEPTH CODE
				AND DEPTH_FLAG = '1'  --1DEPTH
				AND DISPLAY_YN = 'Y'
		ORDER BY RE_SORT 
		END

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_APP_LOG_DETAIL_SEL]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_APP_LOG_DETAIL_SEL]
	@SEQNO INT 
AS


   SELECT A.[SEQNO]
      ,A.[ERR_DATE]
      ,A.[MODULE_ID]
      ,A.[ERR_NO]
      ,A.[ERR_MSG]
      ,A.[ERR_QUERY]
      ,A.[COMPUTER_NAME]
      ,A.[EMP_NAME]
      ,A.[EMP_EMAIL]
      ,A.[MEMB_ID]
      ,A.[RESULT_YN]
      ,A.[POST_DATA]
      ,A.[PCID]
      ,A.[HTTP_COOKIE]
  FROM [dbo].[TB_APP_ERROR_LOG] A WITH (NOLOCK)  
  WHERE SEQNO =@SEQNO
GO
/****** Object:  StoredProcedure [dbo].[SP_APP_ERRORLOG_INS]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 어플리케이션 에러로그 인서트 
                    
 * Modified  :   2015.08.30 
 * Modified  :       
 * Modified  :      
 ============================================================*/ 
 
 CREATE PROC [dbo].[SP_APP_ERRORLOG_INS]
	 @MODULE_ID varchar(100) 
	,@ERR_NUM bigint 
	,@ERR_MSG varchar(max)
	,@ERR_QUERY varchar(1000) 
	,@COMPUTER_NAME varchar(100) 
	,@EMP_NAME varchar(20) 
	,@EMP_EMAIL varchar(50) 
	,@MEMB_ID varchar(20) 
	,@RESULT_YN char(1) = '' 
	,@POST_DATA varchar(500) 
	,@PCID bigint 
	,@HTTP_COOKIE varchar(2000) 
 AS   
 
    SET NOCOUNT ON 
    
    
    INSERT INTO [TB_APP_ERROR_LOG]
           ([ERR_DATE]
           ,[MODULE_ID]
           ,[ERR_NO]
           ,[ERR_MSG]
           ,[ERR_QUERY]
           ,[COMPUTER_NAME]
           ,[EMP_NAME]
           ,[EMP_EMAIL]
           ,[MEMB_ID]
           ,[RESULT_YN]
           ,[POST_DATA]
           ,[PCID]
           ,[HTTP_COOKIE]
           )
     VALUES
           ( 
             GETDATE()
            ,@MODULE_ID 
			,@ERR_NUM 
			,@ERR_MSG 
			,@ERR_QUERY 
			,@COMPUTER_NAME  
			,@EMP_NAME  
			,@EMP_EMAIL  
			,@MEMB_ID  
			,@RESULT_YN 
			,@POST_DATA 
			,@PCID 
			,@HTTP_COOKIE  
	      )
GO
/****** Object:  StoredProcedure [dbo].[SP_APP_ERROR_LOG_SEL]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE  [dbo].[SP_APP_ERROR_LOG_SEL]  
 @PAGE    INT   --현재 PAGE  
,@PAGESIZE   INT   --페이지 사이즈  
,@SEARCH_KEY  VARCHAR(100) ='' --검색 필드  
,@SEARCH_KEYWORD VARCHAR(100) ='' --검색 키워드  
  
AS  
  
BEGIN  

  
 SET NOCOUNT ON  

   
   
 DECLARE @LISTCOUNT INT  
 DECLARE @V_SQL NVARCHAR(MAX);  
   
   
 -- 기존에 사용하는 #TEMPLIST 있으면 DROP  
 IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL  
 BEGIN  
   DROP TABLE #TEMPLIST ;  
   PRINT 'DROP...'   
 END   
   
 CREATE TABLE #TEMPLIST  (  
  SEQ   INT IDENTITY(1,1) PRIMARY KEY,  
  IDX_SEQ INT  
 )  
  
 SET @LISTCOUNT = @PAGE * @PAGESIZE  
 SET ROWCOUNT @LISTCOUNT  
  
 SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT SEQNO ';  
 SET @V_SQL  =@V_SQL + ' FROM  dbo.TB_APP_ERROR_LOG WITH (NOLOCK) '  
 SET @V_SQL  =@V_SQL + '    WHERE 1=1 ';  
  
 IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''  
  BEGIN  
  SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '   
  END  
   
    
 SET @V_SQL  =@V_SQL + ' ORDER BY SEQNO DESC' ;  
   
 EXEC(@V_SQL);  
 --PRINT @V_SQL  
  
  
 SET ROWCOUNT 0  
   
  
 -- 리스트 조회  
   SELECT A.[SEQNO]
      ,A.[ERR_DATE]
      ,A.[MODULE_ID]
      ,A.[ERR_NO]
      ,A.[ERR_MSG]
      ,A.[ERR_QUERY]
      ,A.[COMPUTER_NAME]
      ,A.[EMP_NAME]
      ,A.[EMP_EMAIL]
      ,A.[MEMB_ID]
      ,A.[RESULT_YN]
      ,A.[POST_DATA]
      ,A.[PCID]
      ,A.[HTTP_COOKIE]
  FROM [dbo].[TB_APP_ERROR_LOG] A WITH (NOLOCK)  
  INNER JOIN #TEMPLIST T ON A.SEQNO = T.IDX_SEQ   
 WHERE T.SEQ > (@PAGE -1) * @PAGESIZE  
 ORDER BY T.SEQ  
   
 DROP TABLE #TEMPLIST ;  
  
 SET NOCOUNT OFF  
   
END
GO
/****** Object:  StoredProcedure [dbo].[SP_AGENT_SELLING_MONTH_COUNT]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_AGENT_SELLING_MONTH_COUNT
월별 판매량을 집계하여 카운트

EXEC SP_AGENT_SELLING_MONTH_COUNT

SELECT P_CODE, SELLING_MONTH_COUNT FROM TB_PRODUCT_INFO ORDER BY SELLING_MONTH_COUNT DESC


*/
CREATE PROCEDURE [dbo].[SP_AGENT_SELLING_MONTH_COUNT]
AS
BEGIN
	SET NOCOUNT ON

	-- 먼저 지지난달 판매수량을 초기화
	UPDATE TB_PRODUCT_INFO
	SET SELLING_MONTH_COUNT = 0
	
	-- 지난달 판매량 업데이트
	--	UPDATE A
	--	SET A.SELLING_COUNT = ISNULL(A.SELLING_COUNT,0) + B.P_COUNT

	;
	WITH SRC AS (
		SELECT TD.P_CODE, SUM(ISNULL(TD.P_COUNT,1)) AS SUM_P_COUNT
		FROM TB_ORDER_MASTER TM
			INNER JOIN TB_ORDER_DETAIL TD
				ON TM.ORDER_IDX = TD.ORDER_IDX
				AND TD.ORDER_DETAIL_STATUS IN ('20','30','50','50','60','70')
		WHERE CONVERT(VARCHAR(6),TM.ORDER_DATE,112) = CONVERT(VARCHAR(6),GETDATE(),112)-1
		GROUP BY TD.P_CODE
	)
	UPDATE A
	SET A.SELLING_MONTH_COUNT = SRC.SUM_P_COUNT
	FROM TB_PRODUCT_INFO A
		INNER JOIN SRC
			ON A.P_CODE = SRC.P_CODE

	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_DOWNLOAD_AT_PC_VERSION_UPDATE]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 쿠폰 다운로드 처리 /PC버전 쿠폰/ 번호 수동인증 하지 않아도 되는 쿠폰만  
                    
 * Modified  :   2015.07.21 , 8.24 
 * Modified  :       
 * Modified  :      
 ============================================================*/     
  
CREATE PROC [dbo].[SP_COUPON_DOWNLOAD_AT_PC_VERSION_UPDATE]  
  @M_ID VARCHAR(13)  -- 회원아이디  
 ,@IDX_COUPON_NUMBER INT = 0 --쿠폰번호  
 ,@METHOD VARCHAR(1) -- 다운로드 S = single(하나만 다운로드)  ,  A = All (모두 다운로드)  
AS  
  
  
SET NOCOUNT ON   


IF(RTRIM(LTRIM(@M_ID)) != '')
BEGIN 
	IF @METHOD = 'S' --쿠폰번호 하나만 다운로드로 업데이트 할때   
	BEGIN  
	   
	  UPDATE A  
		SET A.USE_STATUS = '5'  
	  FROM  TB_COUPON_ISSUED_DETAIL  A JOIN TB_COUPON_MASTER B  
		   ON A.CD_COUPON = B.CD_COUPON  
		AND ( A.DOWNLOAD_DATE_FROM <= GETDATE() AND A.DOWNLOAD_DATE_TO >= GETDATE() )--다운로드가능일자는 발행쿠폰에 있다  
		AND B.USABLE_DEVICE_GBN = 'P'-- P = PC&모바일 용 쿠폰만  
		AND B.USABLE_YN = 'Y'  
		AND ( B.COUPON_NUM_CHECK_TF = 'N' OR  B.COUPON_NUM_CHECK_TF  IS NULL )-- 쿠폰번호를 인증하지 않아도 되는 쿠폰만   
		AND ( A.USABLE_TF = 'Y' AND  A.USABLE_TF IS NOT NULL)  
	     
	  WHERE   
		   A.IDX_COUPON_NUMBER = @IDX_COUPON_NUMBER  
		AND  
		A.M_ID = @M_ID   
		AND   
		A.USE_STATUS = '1' -- 사용상태가 1=발행인 쿠폰만  
	      
	END  
	  
	IF @METHOD = 'A' --쿠폰 모두를 다운로드로 업데이트 할때   
	BEGIN  
		 UPDATE A  
		SET A.USE_STATUS = '5'  
	  FROM  TB_COUPON_ISSUED_DETAIL  A JOIN TB_COUPON_MASTER B  
		   ON A.CD_COUPON = B.CD_COUPON  
		AND ( A.DOWNLOAD_DATE_FROM <= GETDATE() AND A.DOWNLOAD_DATE_TO >= GETDATE() )--다운로드가능일자는 발행쿠폰에 있다  
		AND B.USABLE_DEVICE_GBN = 'P'-- P = PC&모바일 용 쿠폰만  
		AND B.USABLE_YN = 'Y'  
		AND ( B.COUPON_NUM_CHECK_TF = 'N' OR  B.COUPON_NUM_CHECK_TF  IS NULL )-- 쿠폰번호를 인증하지 않아도 되는 쿠폰만   
		AND ( A.USABLE_TF = 'Y' AND  A.USABLE_TF IS NOT NULL)  
	  WHERE   
		A.M_ID = @M_ID   
		AND   
		A.USE_STATUS = '1' -- 사용상태가 1=발행인 쿠폰만  
	  
	END  
 END
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_DOWNLOAD_AT_MOBILE_VERSION_UPDATE]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 쿠폰 다운로드 처리 /모바일전용버전+모바일-pc혼용버전 쿠폰/ 번호 수동인증 하지 않아도 되는 쿠폰만  
                    
 * Modified  :   2015.08.12  
 * Modified  :       
 * Modified  :      
 ============================================================*/     
  
CREATE PROC [dbo].[SP_COUPON_DOWNLOAD_AT_MOBILE_VERSION_UPDATE]  
  @M_ID VARCHAR(13)  -- 회원아이디  
 ,@IDX_COUPON_NUMBER INT = 0 --쿠폰번호  
 ,@METHOD VARCHAR(1) -- 다운로드 S = single(하나만 다운로드)  ,  A = All (모두 다운로드)  
AS  
  
  
SET NOCOUNT ON   
  
  
IF @METHOD = 'S' --쿠폰번호 하나만 다운로드로 업데이트 할때   
BEGIN  
   
  UPDATE A  
    SET A.USE_STATUS = '5'  
  FROM  TB_COUPON_ISSUED_DETAIL  A JOIN TB_COUPON_MASTER B  
       ON A.CD_COUPON = B.CD_COUPON  
    AND ( A.DOWNLOAD_DATE_FROM <= GETDATE() AND A.DOWNLOAD_DATE_TO >= GETDATE() )--다운로드가능일자는 발행쿠폰에 있다  
    --AND B.USABLE_DEVICE_GBN = 'P'-- P = PC&모바일 용 쿠폰만  
    AND B.USABLE_YN = 'Y'  
    AND ( B.COUPON_NUM_CHECK_TF = 'N' OR  B.COUPON_NUM_CHECK_TF  IS NULL )-- 쿠폰번호를 인증하지 않아도 되는 쿠폰만   
    AND ( A.USABLE_TF = 'Y' AND  A.USABLE_TF IS NOT NULL)  
     
  WHERE   
       A.IDX_COUPON_NUMBER = @IDX_COUPON_NUMBER  
    AND  
    A.M_ID = @M_ID   
    AND   
    A.USE_STATUS = '1' -- 사용상태가 1=발행인 쿠폰만  
      
END  
  
IF @METHOD = 'A' --쿠폰 모두를 다운로드로 업데이트 할때   
BEGIN  
     UPDATE A  
    SET A.USE_STATUS = '5'  
  FROM  TB_COUPON_ISSUED_DETAIL  A JOIN TB_COUPON_MASTER B  
       ON A.CD_COUPON = B.CD_COUPON  
    AND ( A.DOWNLOAD_DATE_FROM <= GETDATE() AND A.DOWNLOAD_DATE_TO >= GETDATE() )--다운로드가능일자는 발행쿠폰에 있다  
    --AND B.USABLE_DEVICE_GBN = 'P'-- P = PC&모바일 용 쿠폰만  
    AND B.USABLE_YN = 'Y'  
    AND ( B.COUPON_NUM_CHECK_TF = 'N' OR  B.COUPON_NUM_CHECK_TF  IS NULL )-- 쿠폰번호를 인증하지 않아도 되는 쿠폰만   
    AND ( A.USABLE_TF = 'Y' AND  A.USABLE_TF IS NOT NULL)  
  WHERE   
    A.M_ID = @M_ID   
    AND   
    A.USE_STATUS = '1' -- 사용상태가 1=발행인 쿠폰만  
  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_MASTER_INFO_SEL]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 개별 쿠폰당 사용가능 상품리스트 RESULTSET 용 
                  
 * Modified  :   2015.07.22
 * Modified  :     
 * Modified  :    
 ============================================================*/   

CREATE PROC [dbo].[SP_COUPON_MASTER_INFO_SEL]
 @M_ID VARCHAR(13)
,@IDX_COUPON_SERIAL INT


AS

    SET NOCOUNT ON 
    
    SELECT A.[IDX]
      ,A.[CD_COUPON]
      ,A.[COUPON_NAME]
      ,A.[COUPON_AD_MSG]
      ,A.[COUPON_USE_DESCRIPTION]
      ,A.[COUPON_GBN]
      ,A.[COUPON_GBN_M]
      ,A.[RATE_OR_MONEY]
      ,A.[SERVICE_LIFE_GBN]
      ,A.[EXRIRED_DAY_FROM_ISSUE_DT]
      ,A.[USABLE_DEVICE_GBN]
      ,A.[PRODUCT_APP_SCOPE_GBN]
      ,A.[MEMBER_APP_SCOPE_GBN]
      ,A.[ISSUE_METHOD_GBN]
      ,A.[ISSUE_METHOD_WITH_AUTO]
      ,A.[COUPON_NUM_CHECK_TF]
      ,A.[ISSUE_MAX_LIMIT]
      ,A.[MASTER_FROM_DATE]
      ,A.[MASTER_TO_DATE]
      ,A.[COUPON_DISCOUNT_MONEY]
      ,A.[COUPON_DISCOUNT_RATE]
      ,A.[USABLE_YN]
      ,A.[INS_DATE]
      ,B.USABLE_DATE_FROM
      ,B.USABLE_DATE_TO
  FROM [TB_COUPON_MASTER] A WITH(NOLOCK) JOIN TB_COUPON_ISSUED_DETAIL B WITH(NOLOCK)
	  ON A.CD_COUPON = B.CD_COUPON
	  AND  
	  B.IDX_COUPON_NUMBER = @IDX_COUPON_SERIAL
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_MAKE_AT_MEM_JOIN_INSERT]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 회원가입시 가입쿠폰이 있으면 발행    
 * Modified  :   2015.08.12 , 8,18 - 복수의 쿠폰정책에서 발행될 수 있도록 수정 , 배송쿠폰도 발행될 수 있도록 수정   
 * Modified  :   2015.09.07 수정   
 * Modified  :    exec [SP_COUPON_MAKE_AT_MEM_JOIN_INSERT] 'fkiller'  
 ============================================================*/      
    
    
 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_SEL] 1,10,'','',''    
CREATE PROCEDURE  [dbo].[SP_COUPON_MAKE_AT_MEM_JOIN_INSERT]    
    @M_ID VARCHAR(13)    
AS    
    
   
 --DECLARE @M_ID VARCHAR(13)  
 SET NOCOUNT ON    
     
 DECLARE @CD_COUPON VARCHAR(6)    
 DECLARE @COUPON_CNT INT    
 DECLARE @I INT   
   
 DECLARE @M_GRADE_CNT TINYINT    
   
 DECLARE @M_GBN VARCHAR(1) ,  @M_GRADE VARCHAR(1)          
   
 SET @M_GRADE_CNT = 0      
 SET @CD_COUPON = '';    
 SET @COUPON_CNT = 0;    
 SET @I = 1;  
   
   
   
 DECLARE  @TEMP_COUPON_MASTER TABLE  
 (  
   IDX INT NOT NULL IDENTITY(1,1)  
 , CD_COUPON VARCHAR(6)  
 )  
  
   
 /**  
 DECLARE @V_TB_COUPON_MEMBER_GRADE TABLE             
     (             
         IDX INT NOT NULL IDENTITY(1,1)             
       , M_GBN VARCHAR(1)            
       , M_GRADE VARCHAR(1)             
      )            
**/  
   
 DECLARE          
   @COUPON_GBN VARCHAR(1)          
  ,@COUPON_GBN_M VARCHAR(1)          
  ,@RATE_OR_MONEY VARCHAR(1)          
  ,@COUPON_DISCOUNT_MONEY INT          
  ,@COUPON_DISCOUNT_RATE  TINYINT          
  ,@COUPON_NUM_CHECK_TF VARCHAR(1)          
  ,@SERVICE_LIFE_GBN  VARCHAR(1)          
  ,@USABLE_DEVICE_GBN VARCHAR(1)          
  ,@FIXED_PERIOD_FROM DATETIME          
  ,@FIXED_PERIOD_TO DATETIME          
  ,@EXRIRED_DAY_FROM_ISSUE_DT INT          
  ,@MASTER_FROM_DATE DATETIME          
  ,@MASTER_TO_DATE DATETIME          
  ,@DOWNLOAD_DATE_FROM DATETIME          
  ,@DOWNLOAD_DATE_TO DATETIME        
         
         
 --회원 등급 가져오기            
 SELECT @M_GBN=M_GBN , @M_GRADE=M_GRADE FROM TB_MEMBER WITH(NOLOCK) WHERE M_ID=@M_ID  
   
   
   
 --[1]유효한 쿠폰이 있는지     
 INSERT @TEMP_COUPON_MASTER(CD_COUPON)  
 SELECT CD_COUPON    
    FROM TB_COUPON_MASTER WITH(NOLOCK)    
    WHERE     
        USABLE_YN='Y' AND ( MASTER_FROM_DATE <= GETDATE() AND  MASTER_TO_DATE >= GETDATE())    
     AND     
     ( COUPON_GBN_M = 'R' AND ISSUE_METHOD_GBN='A' AND ISSUE_METHOD_WITH_AUTO ='A' )    
         
 SELECT @COUPON_CNT = @@ROWCOUNT    
     
     
 IF( @COUPON_CNT > 0)    
 BEGIN    
    
      WHILE (@COUPON_CNT >= @I)  
      BEGIN   
   SELECT @CD_COUPON = CD_COUPON FROM @TEMP_COUPON_MASTER WHERE IDX=@I  
                 
   --쿠폰 발행대상 회원등급에 해당되는지             
   IF( EXISTS(SELECT M_GBN,M_GRADE FROM TB_COUPON_MEMBER_GRADE WHERE CD_COUPON=@CD_COUPON AND M_GBN=@M_GBN AND M_GRADE=@M_GRADE  ))  
   BEGIN           
              
     --이미 쿠폰을 발급받지 않았는지  
     IF(NOT EXISTS(SELECT IDX_COUPON_NUMBER FROM  dbo.TB_COUPON_ISSUED_DETAIL WITH(NOLOCK)     
      WHERE CD_COUPON=@CD_COUPON AND M_ID=@M_ID  ))    
     BEGIN    
        
           
     SELECT           
       @COUPON_GBN=COUPON_GBN          
      ,@COUPON_GBN_M=COUPON_GBN_M          
      ,@RATE_OR_MONEY=RATE_OR_MONEY          
      ,@COUPON_DISCOUNT_MONEY=COUPON_DISCOUNT_MONEY          
      ,@COUPON_DISCOUNT_RATE=COUPON_DISCOUNT_RATE        
              
      ,@COUPON_NUM_CHECK_TF=COUPON_NUM_CHECK_TF          
      ,@SERVICE_LIFE_GBN=SERVICE_LIFE_GBN          
      ,@USABLE_DEVICE_GBN=USABLE_DEVICE_GBN          
      ,@FIXED_PERIOD_FROM=FIXED_PERIOD_FROM          
      ,@FIXED_PERIOD_TO=FIXED_PERIOD_TO          
      ,@EXRIRED_DAY_FROM_ISSUE_DT=EXRIRED_DAY_FROM_ISSUE_DT          
      ,@MASTER_FROM_DATE=MASTER_FROM_DATE          
      ,@MASTER_TO_DATE=MASTER_TO_DATE          
      ,@DOWNLOAD_DATE_FROM =DOWNLOAD_DATE_FROM          
      ,@DOWNLOAD_DATE_TO =DOWNLOAD_DATE_TO          
       FROM TB_COUPON_MASTER    
       WHERE   
        CD_COUPON = @CD_COUPON           
                 
                 
                 
               
                
     DECLARE @USABLE_DATE_FROM DATETIME , @USABLE_DATE_TO DATETIME --쿠폰사용가능기간            
     DECLARE @ISSUED_DATE DATETIME          
                  
     SELECT  @ISSUED_DATE = GETDATE()-- 쿠폰발행일자           
                  
     IF @SERVICE_LIFE_GBN ='A'  --사용기간 기준이 고정기간 기준이면          
     BEGIN              
      SET @USABLE_DATE_FROM = @FIXED_PERIOD_FROM          
      SET @USABLE_DATE_TO =   @FIXED_PERIOD_TO          
     END          
                  
     IF @SERVICE_LIFE_GBN ='B'  --사용기간 기준이 발행일 기준이면          
     BEGIN          
      SET @USABLE_DATE_FROM = @ISSUED_DATE          
      SET @USABLE_DATE_TO = DATEADD(DAY,@EXRIRED_DAY_FROM_ISSUE_DT,@ISSUED_DATE)          
     END           
                  
     --DOWNLOAD일자를 정의하지 않았으면 사용가능 일자로 대체          
     IF @DOWNLOAD_DATE_FROM IS NULL          
     BEGIN          
       SET @DOWNLOAD_DATE_FROM = @USABLE_DATE_FROM          
       SET @DOWNLOAD_DATE_TO = @USABLE_DATE_TO          
     END          
          
          
     INSERT [TB_COUPON_ISSUED_DETAIL]          
       (              
        [CD_COUPON]     
       ,[COUPON_VERIFI_NUMBER]               
       ,[COUPON_MONEY]          
       ,[COUPON_DISCOUNT_RATE]          
       --,[CD_COUPON_KIND]          
       ,[USE_STATUS]          
       ,[USABLE_TF]          
       ,[M_ID]          
       ,[ISSUE_DATE]          
       ,[USABLE_DATE_FROM]          
       ,[USABLE_DATE_TO]          
       ,[ORDER_NO]          
       ,[ORDER_DETAIL_NO]          
       ,[ORDER_CANCEL_FL]          
       ,[RE_ISSUE_FL]          
       ,[RE_ISSUE_DATE]          
       ,[DOWNLOAD_DATE_FROM]          
       ,[DOWNLOAD_DATE_TO]          
       ,[ISSUED_GBN]          
       ,[ISSUED_MEMO]          
       ,[ADMIN_ID]          
      )          
      VALUES    
      (    
       @CD_COUPON          
         ,NULL          
         ,ISNULL(@COUPON_DISCOUNT_MONEY,0)          
         ,ISNULL(@COUPON_DISCOUNT_RATE,0)           
         ,'1' --USE_STATUS(발행단계)          
         ,'Y' --USABLE_TF          
         ,@M_ID          
         ,@ISSUED_DATE --ISSUE_DATE 발행일자          
         ,@USABLE_DATE_FROM          
         ,@USABLE_DATE_TO          
         ,NULL --ORDER_NO          
         ,NULL --ORDER_DETAIL_NO          
         ,NULL --ORDER_CANCEL_FL          
         ,NULL --RE_ISSUE_FL          
         ,NULL --RE_ISSUE_DATE          
         ,@DOWNLOAD_DATE_FROM           
         ,@DOWNLOAD_DATE_TO          
         ,'B' -- ISSUED_GBN (A=일괄발행, B=개별발행)          
         ,'회원가입시 개별발행' --ISSUED_MEMO (개별발행시 메모)          
         ,''     
      )              
           
    END   --- 쿠폰 발급대상 회원등급인지 ----------------------------------------  
      
  
      
                
       SET @USABLE_DATE_FROM = NULL         
       SET @USABLE_DATE_TO =   NULL          
              
       SET @USABLE_DATE_FROM = NULL          
       SET @USABLE_DATE_TO = NULL        
      
       SET @DOWNLOAD_DATE_FROM = NULL          
       SET @DOWNLOAD_DATE_TO = NULL      
    
      
      End    
     
      SET @I = @I+1  
    
    END --   WHILE  ----------------------------------------------------------------   
     
  END  -- 발급할 수 있는 쿠폰정책이 존재하는지----------------------------------------------  
            
   
    
 SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_TOP1_BY_PRD_SEL_NO_LOGIN_SEL]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품별 유효 쿠폰 정책이 있는지 (일반/브론즈 회원 사용 가능한) TOP 1 
 * Modified  :   2015.08.06
 * Modified  :   
 * Modified  :  
 EXEC  [SP_COUPON_TOP1_BY_PRD_SEL_NO_LOGIN_SEL] 'RAA00001','P'
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL] 1
CREATE PROCEDURE  [dbo].[SP_COUPON_TOP1_BY_PRD_SEL_NO_LOGIN_SEL]
    @P_CODE VARCHAR(10)
   ,@USABLE_DEVICE_GBN VARCHAR(1) --PC OR MOBILE 
AS

SET NOCOUNT ON 

SELECT    
  TOP 1 
    B.P_CODE --상품코드   
   ,C.CD_COUPON --쿠폰마스터 코드
   ,C.USABLE_DEVICE_GBN --  사용가능한 DEVICE : P=PC AND 모바일 , M=모바일 전용  (7/24 추가) 
   ,C.COUPON_NAME -- 쿠폰명
   ,C.RATE_OR_MONEY -- R: 정률할인 , M:정액할인
   ,ISNULL(C.COUPON_DISCOUNT_MONEY,0) AS COUPON_DISCOUNT_MONEY -- 할인액
   ,ISNULL(C.COUPON_DISCOUNT_RATE,0) AS COUPON_DISCOUNT_RATE  -- 할인율(%) 
FROM    
TB_COUPON_PRODUCT B WITH(NOLOCK) INNER JOIN TB_COUPON_MASTER C  WITH(NOLOCK)   
    ON B.CD_COUPON = C.CD_COUPON  
    AND B.P_CODE =@P_CODE
    AND ( C.USABLE_YN IS NOT NULL AND C.USABLE_YN = 'Y' )  
    AND C.COUPON_GBN = 'M' AND C.COUPON_GBN_M ='E' AND C.ISSUE_METHOD_GBN='B' -- 배송쿠폰 제외하고 지불쿠폰만 AND 일반 이벤트 쿠폰만  AND 수동발행 쿠폰만
    AND C.ISSUE_YN = 'Y' --한번이라도 발행한적이 있는지
    AND(C.MASTER_FROM_DATE < GETDATE() AND C.MASTER_TO_DATE > GETDATE() ) 
    AND C.USABLE_DEVICE_GBN =@USABLE_DEVICE_GBN -- PC OR Mobile 버전
INNER JOIN TB_COUPON_MEMBER_GRADE G WITH(NOLOCK) ON C.CD_COUPON = G.CD_COUPON
    AND ( G.M_GBN ='A' AND G.M_GRADE ='B' ) -- 일반회원 브론즈등급으로만 타겟팅하여 조회
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_TOP_1_BY_MEMBER_BY_PRD_SEL]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================              
 * Author  : 송선우 (swsong2@cstone.co.kr)              
 * Company  : 코너스톤 인터랙티브              
 * Description : 상품별, 회원별 사용가능 혹은 다운로드 가능한 쿠폰 TOP 1            
                 ==> 사용가능한것 다운로드가능한것 모두 있을때는 사용가능한것 우선    
                 ==> pc, 모바일버전은 파라미터에 따라     
                 ==> 번호인증 필요한 쿠폰까지                          
        
 * Modified  :   2015.08.05   , 8/8   , 8/13  , 8/26
             
 * exec [SP_COUPON_TOP_1_BY_MEMBER_BY_PRD_SEL] 'P' ,'RAA00137' , 'kkonnny'        
 ============================================================*/              
CREATE PROC [dbo].[SP_COUPON_TOP_1_BY_MEMBER_BY_PRD_SEL]            
     @USABLE_DEVICE_GBN VARCHAR(1)        
    ,@P_CODE VARCHAR(10)         
    ,@M_ID VARCHAR(13)        
AS            
        
        
IF @USABLE_DEVICE_GBN = 'P'   
BEGIN   
  
 SELECT           
   TOP 1         
           
   B.P_CODE --상품코드           
  ,C.CD_COUPON --쿠폰마스터 코드        
  ,C.COUPON_NAME --쿠폰이름         
  ,C.USABLE_DEVICE_GBN --  사용가능한 DEVICE : P=PC AND 모바일 , M=모바일 전용  (7/24 추가)         
  ,C.ISSUE_METHOD_GBN --   발행방법 :  A = 자동발행 , B=수동발행 (7/24 추가)         
  ,ISNULL(C.COUPON_NUM_CHECK_TF,'N') AS COUPON_NUM_CHECK_TF --Y = 쿠폰번호를 이용자 입력확인 , N=쿠폰번호 비확인 (SMS쿠폰의 경우 Y)        
  ,C.RATE_OR_MONEY      
  ,C.COUPON_DISCOUNT_RATE      
  ,C.COUPON_DISCOUNT_MONEY      
        
  ,D.IDX_COUPON_NUMBER --쿠폰번호            
  ,D.M_ID --회원아이디          
  ,D.USE_STATUS -- 사용가능상태- 1,5,10        
  ,E.P_NAME          
  ,E.MAIN_IMG          
  ,E.OTHER_IMG1          
  ,E.SELLING_PRICE          
  ,E.DISCOUNT_PRICE          
  ,E.P_SUB_TITLE          
  ,E.P_TAG          
 FROM            
 TB_COUPON_PRODUCT B WITH(NOLOCK) INNER JOIN TB_COUPON_MASTER C             
  ON B.CD_COUPON = C.CD_COUPON  AND ( C.USABLE_YN IS NOT NULL AND C.USABLE_YN = 'Y' )          
  AND C.COUPON_GBN = 'M' -- 배송쿠폰 제외하고 지불쿠폰만  -- 7/24           
  AND B.P_CODE=@P_CODE        
  AND C.USABLE_DEVICE_GBN = 'P'  -- PC & 모바일버전     
 INNER JOIN TB_COUPON_ISSUED_DETAIL  D WITH(NOLOCK)             
  ON C.CD_COUPON = D.CD_COUPON           
  AND ( D.USABLE_TF IS NOT NULL AND D.USABLE_TF = 'Y' )  -- 쿠폰 사용가능상태-- 7/24         
  AND ( D.USABLE_DATE_FROM <= GETDATE() AND D.USABLE_DATE_TO >= GETDATE() ) -- 쿠폰유효기간 -- 7/24         
  AND ( D.USE_STATUS = '1' OR  D.USE_STATUS = '5')   -- 사용가능상태-다운로드 혹은 사용가능 -- 7/24         
  AND D.M_ID = @M_ID        
 INNER JOIN TB_PRODUCT_INFO E WITH(NOLOCK)           
  ON B.P_CODE = E.P_CODE AND E.DISPLAY_YN = 'Y'          
  AND ( E.P_OUTLET_YN != 'Y' AND E.P_OUTLET_YN IS NOT NULL)         
          
 ORDER BY D.USE_STATUS DESC , D.IDX_COUPON_NUMBER DESC        
  
  
END   
ELSE IF  @USABLE_DEVICE_GBN = 'M'   
BEGIN   
 SELECT           
   TOP 1         
           
   B.P_CODE --상품코드           
  ,C.CD_COUPON --쿠폰마스터 코드        
  ,C.COUPON_NAME --쿠폰이름         
  ,C.USABLE_DEVICE_GBN --  사용가능한 DEVICE : P=PC AND 모바일 , M=모바일 전용  (7/24 추가)         
  ,C.ISSUE_METHOD_GBN --   발행방법 :  A = 자동발행 , B=수동발행 (7/24 추가)         
  ,ISNULL(C.COUPON_NUM_CHECK_TF,'N') AS COUPON_NUM_CHECK_TF --Y = 쿠폰번호를 이용자 입력확인 , N=쿠폰번호 비확인 (SMS쿠폰의 경우 Y)        
  ,C.RATE_OR_MONEY      
  ,C.COUPON_DISCOUNT_RATE      
  ,C.COUPON_DISCOUNT_MONEY      
        
  ,D.IDX_COUPON_NUMBER --쿠폰번호            
  ,D.M_ID --회원아이디          
  ,D.USE_STATUS -- 사용가능상태- 1,5,10        
  ,E.P_NAME          
  ,E.MAIN_IMG          
  ,E.OTHER_IMG1          
  ,E.SELLING_PRICE          
  ,E.DISCOUNT_PRICE          
  ,E.P_SUB_TITLE          
  ,E.P_TAG          
 FROM            
 TB_COUPON_PRODUCT B WITH(NOLOCK) INNER JOIN TB_COUPON_MASTER C             
  ON B.CD_COUPON = C.CD_COUPON  AND ( C.USABLE_YN IS NOT NULL AND C.USABLE_YN = 'Y' )          
  AND C.COUPON_GBN = 'M' -- 배송쿠폰 제외하고 지불쿠폰만  -- 7/24           
  AND B.P_CODE=@P_CODE        
  --AND C.USABLE_DEVICE_GBN = 'P'     -- 모바일전용 & PC 모바일 혼용 모두 가져옴---------------------  
 INNER JOIN TB_COUPON_ISSUED_DETAIL  D WITH(NOLOCK)             
  ON C.CD_COUPON = D.CD_COUPON           
  AND ( D.USABLE_TF IS NOT NULL AND D.USABLE_TF = 'Y' )  -- 쿠폰 사용가능상태-- 7/24         
  AND ( D.USABLE_DATE_FROM <= GETDATE() AND D.USABLE_DATE_TO >= GETDATE() ) -- 쿠폰유효기간 -- 7/24         
  AND ( D.USE_STATUS >= '1' AND  D.USE_STATUS <= '5')   -- 사용가능상태-다운로드 혹은 사용가능 -- 7/24         
  AND D.M_ID = @M_ID        
 INNER JOIN TB_PRODUCT_INFO E WITH(NOLOCK)           
  ON B.P_CODE = E.P_CODE AND E.DISPLAY_YN = 'Y'          
  AND ( E.P_OUTLET_YN != 'Y' AND E.P_OUTLET_YN IS NOT NULL)         
          
 ORDER BY D.USE_STATUS DESC , D.IDX_COUPON_NUMBER DESC        
  
END
GO
/****** Object:  StoredProcedure [dbo].[SP_MYPAGE_ORDERLIST_DETAIL_PRODUCT_LIST]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_MYPAGE_ORDERLIST_DETAIL_PRODUCT_LIST
마이페이지-주문상세 상단 주문제품리스트

파라미터 설명
 @ORDER_CODE VARCHAR(20)	-- ORDER_MASTER 주문번호
,@M_ID VARCHAR(13)			-- 회원ID

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec SP_MYPAGE_ORDERLIST_DETAIL_PRODUCT_LIST '20150720-100044','test_b1s'

*/
CREATE PROCEDURE [dbo].[SP_MYPAGE_ORDERLIST_DETAIL_PRODUCT_LIST]
 @ORDER_CODE VARCHAR(20)	-- ORDER_MASTER 주문번호
,@M_ID VARCHAR(13)=''			-- 회원ID
AS
BEGIN
	SET NOCOUNT ON
		
	IF @M_ID <> ''
	BEGIN
		SELECT OD.ORDER_DETAIL_IDX
			, OD.P_CODE
			, OD.P_IMG1_S
			, OD.P_NAME
			, OD.P_SUB_TITLE
			, OD.ICON_NEW
			, OD.ICON_BEST
			, OD.ICON_SOLDOUT
			, OD.ICON_CUSTOM
			, OD.ICON_ONEPLUS
			, OD.ICON_SET
			, OD.ICON_TIME
			, OD.ICON_COUPON
			, OD.P_COUNT
			, OD.PROMOTION_TYPE
			, CASE WHEN ISNULL(OD.PROMOTION_TYPE,'') = '99' THEN '-' 
				WHEN ISNULL(OD.PROMOTION_TYPE,'') = '01' THEN 'SET상품' 
				WHEN ISNULL(OD.PROMOTION_TYPE,'') = '02' THEN '1+1' 
				WHEN ISNULL(OD.PROMOTION_TYPE,'') = '03' THEN '일반할인' 
				ELSE '코드오류' END AS PROMOTION
			, ISNULL(PP.PMO_PRODUCT_NAME,'') AS PROMOTION_NAME
			, OD.SELLING_PRICE					-- 정상가
			, OD.DISCOUNT_PRICE					-- 할인가
			, OD.EMP_DISCOUNT_AMT				-- 임직원 할인받은 금액
			, OD.EMP_DISCOUNT_PRICE				-- 임직원 할인가
			, OD.IDX_COUPON_NUMBER				-- 적용된 쿠폰IDX
			, ISNULL(OD.CD_COUPON,'') AS CD_COUPON			-- 적용된 쿠폰코드
			, ISNULL(CM.COUPON_NAME,'') AS COUPON_NAME		-- 적용된 쿠폰명
			, OD.COUPON_DISCOUNT_AMT						-- 쿠폰으로 할인받은 금액
			, OD.COUPON_DISCOUNT_PRICE * OD.P_COUNT AS COUPON_DISCOUNT_PRICE	-- 쿠폰이 적용된 금액 ([[[중요]]]리스트상단에서 주문금액에는 이 금액을 뿌려줘야 함)
			, OD.USE_POINT					-- 사용한 포인트가 제품별로 나뉘어져 들어간 금액
			, OD.GRADE_DISCOUNT_AMT			-- 등급 할인받은 금액
			, OD.ORDER_PRICE AS ORDER_PRICE			-- 상단에 표시될 상품가격
			, OD.REAL_PAY_PRICE				-- 제품별 실제 구매금액
			, OD.POINT_ACCML				-- 제품별 적립예정 포인트
			, OD.DELIVERY_NUM
			, OD.ORDER_DETAIL_STATUS
			, CASE	WHEN OD.ORDER_DETAIL_STATUS = '10' THEN '결제대기'
					WHEN OD.ORDER_DETAIL_STATUS = '20' THEN '결제완료'
					WHEN OD.ORDER_DETAIL_STATUS = '30' THEN '상품준비중'
					WHEN OD.ORDER_DETAIL_STATUS = '40' THEN '배송중'
					WHEN OD.ORDER_DETAIL_STATUS = '50' THEN '배송완료'
					WHEN OD.ORDER_DETAIL_STATUS = '60' THEN '구매확정'
					WHEN OD.ORDER_DETAIL_STATUS = '70' THEN '교환'
					WHEN OD.ORDER_DETAIL_STATUS = '80' THEN '반품'
					WHEN OD.ORDER_DETAIL_STATUS = '90' THEN '취소'
					ELSE '코드오류' END AS ORDER_DETAIL_STATUS_NM
			, CASE WHEN ISNULL(TR.REVIEW_CNT,0) > 0 THEN 'Y' ELSE 'N' END AS REVIEW_YN
		FROM TB_ORDER_DETAIL OD WITH (NOLOCK)
			LEFT JOIN TB_ORDER_MASTER OM WITH (NOLOCK)
				ON OD.ORDER_CODE = OM.ORDER_CODE
			LEFT OUTER JOIN TB_PROMOTION_BY_PRODUCT PP WITH (NOLOCK)
				ON OD.CD_PROMOTION_PRODUCT = PP.CD_PROMOTION_PRODUCT
			LEFT OUTER JOIN TB_COUPON_MASTER CM WITH (NOLOCK)
				ON OD.CD_COUPON = CM.CD_COUPON
			LEFT OUTER JOIN ( SELECT TR.ORDER_DETAIL_IDX, COUNT(*) AS REVIEW_CNT FROM TB_REVIEW_PRODUCT TR WITH (NOLOCK) GROUP BY TR.ORDER_DETAIL_IDX ) TR
				ON OD.ORDER_DETAIL_IDX = TR.ORDER_DETAIL_IDX
		WHERE OD.ORDER_CODE = @ORDER_CODE
		AND CASE WHEN ISNULL(OM.M_ID,'') = '' THEN '1' ELSE OM.M_ID END = @M_ID
		ORDER BY OD.ORDER_DETAIL_IDX	
	END
	ELSE BEGIN
		SELECT OD.ORDER_DETAIL_IDX
			, OD.P_CODE
			, OD.P_IMG1_S
			, OD.P_NAME
			, OD.P_SUB_TITLE
			, OD.ICON_NEW
			, OD.ICON_BEST
			, OD.ICON_SOLDOUT
			, OD.ICON_CUSTOM
			, OD.ICON_ONEPLUS
			, OD.ICON_SET
			, OD.ICON_TIME
			, OD.ICON_COUPON
			, OD.P_COUNT
			, OD.PROMOTION_TYPE
			, CASE WHEN ISNULL(OD.PROMOTION_TYPE,'') = '99' THEN '-' 
				WHEN ISNULL(OD.PROMOTION_TYPE,'') = '01' THEN 'SET상품' 
				WHEN ISNULL(OD.PROMOTION_TYPE,'') = '02' THEN '1+1' 
				WHEN ISNULL(OD.PROMOTION_TYPE,'') = '03' THEN '일반할인' 
				ELSE '코드오류' END AS PROMOTION
			, ISNULL(PP.PMO_PRODUCT_NAME,'') AS PROMOTION_NAME
			, OD.SELLING_PRICE					-- 정상가
			, OD.DISCOUNT_PRICE					-- 할인가
			, OD.EMP_DISCOUNT_AMT				-- 임직원 할인받은 금액
			, OD.EMP_DISCOUNT_PRICE				-- 임직원 할인가
			, OD.IDX_COUPON_NUMBER				-- 적용된 쿠폰IDX
			, ISNULL(OD.CD_COUPON,'') AS CD_COUPON			-- 적용된 쿠폰코드
			, ISNULL(CM.COUPON_NAME,'') AS COUPON_NAME		-- 적용된 쿠폰명
			, OD.COUPON_DISCOUNT_AMT						-- 쿠폰으로 할인받은 금액
			, OD.COUPON_DISCOUNT_PRICE * OD.P_COUNT AS COUPON_DISCOUNT_PRICE	-- 쿠폰이 적용된 금액 ([[[중요]]]리스트상단에서 주문금액에는 이 금액을 뿌려줘야 함)
			, OD.USE_POINT					-- 사용한 포인트가 제품별로 나뉘어져 들어간 금액
			, OD.GRADE_DISCOUNT_AMT			-- 등급 할인받은 금액
			, OD.ORDER_PRICE AS ORDER_PRICE			-- 상단에 표시될 상품가격
			, OD.REAL_PAY_PRICE				-- 제품별 실제 구매금액
			, OD.POINT_ACCML				-- 제품별 적립예정 포인트
			, OD.DELIVERY_NUM
			, OD.ORDER_DETAIL_STATUS
			, CASE	WHEN OD.ORDER_DETAIL_STATUS = '10' THEN '결제대기'
					WHEN OD.ORDER_DETAIL_STATUS = '20' THEN '결제완료'
					WHEN OD.ORDER_DETAIL_STATUS = '30' THEN '상품준비중'
					WHEN OD.ORDER_DETAIL_STATUS = '40' THEN '배송중'
					WHEN OD.ORDER_DETAIL_STATUS = '50' THEN '배송완료'
					WHEN OD.ORDER_DETAIL_STATUS = '60' THEN '구매확정'
					WHEN OD.ORDER_DETAIL_STATUS = '70' THEN '교환'
					WHEN OD.ORDER_DETAIL_STATUS = '80' THEN '반품'
					WHEN OD.ORDER_DETAIL_STATUS = '90' THEN '취소'
					ELSE '코드오류' END AS ORDER_DETAIL_STATUS_NM
			, 'N' AS REVIEW_YN
		FROM TB_ORDER_DETAIL OD WITH (NOLOCK)
			LEFT JOIN TB_ORDER_MASTER OM WITH (NOLOCK)
				ON OD.ORDER_CODE = OM.ORDER_CODE
			LEFT OUTER JOIN TB_PROMOTION_BY_PRODUCT PP WITH (NOLOCK)
				ON OD.CD_PROMOTION_PRODUCT = PP.CD_PROMOTION_PRODUCT
			LEFT OUTER JOIN TB_COUPON_MASTER CM WITH (NOLOCK)
				ON OD.CD_COUPON = CM.CD_COUPON
		WHERE OD.ORDER_CODE = @ORDER_CODE
		ORDER BY OD.ORDER_DETAIL_IDX	
	END


/*
	SELECT * FROM TB_ORDER_DETAIL

*/
	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_MYPAGE_ORDERLIST_DETAIL_INFO]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_MYPAGE_ORDERLIST_DETAIL_INFO
마이페이지-주문상세 하단의 주문내역

파라미터 설명
 @ORDER_CODE VARCHAR(20)	-- ORDER_MASTER 주문번호
,@M_ID VARCHAR(13)			-- 회원ID

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec SP_MYPAGE_ORDERLIST_DETAIL_INFO '20150723-100052',''
exec SP_MYPAGE_ORDERLIST_DETAIL_INFO '20150720-100044','test_b1s'

*/
CREATE PROCEDURE [dbo].[SP_MYPAGE_ORDERLIST_DETAIL_INFO]
 @ORDER_CODE VARCHAR(20)	-- ORDER_MASTER 주문번호
,@M_ID VARCHAR(13)=''			-- 회원ID
AS
BEGIN
	SET NOCOUNT ON

	IF @M_ID <> ''
	BEGIN
		SELECT OM.ORDER_IDX, OM.ORDER_CODE, OM.ORDER_DATE
			, OM.ORDER_STATUS
			, OM.PAY_GBN
			, CASE WHEN OM.PAY_GBN = '1' THEN '신용카드'
					WHEN OM.PAY_GBN = '2' THEN CASE WHEN OM.ESCROW_YN='Y' THEN '실시간계좌이체(에스크로)' ELSE '실시간계좌이체' END
					WHEN OM.PAY_GBN = '3' THEN '가상계좌'
					WHEN OM.PAY_GBN = '4' THEN '포인트결제'
					ELSE '결제코드오류' END AS PAY_GBN_NM
			, OM.ESCROW_YN
			, OM.PAT_TID
			, OM.SENDER_EMAIL
			, CASE WHEN OM.MEMBER_ORDER_GBN = '1' THEN OM.M_NAME ELSE OM.SENDER_NAME END AS ORDER_NAME
			, CASE WHEN OM.MEMBER_ORDER_GBN = '1' THEN OM.M_ID ELSE '(비회원)' END AS ORDER_ID
			, OM.SENDER_POST
			, OM.SENDER_ADDR1
			, OM.SENDER_ADDR2
			, OM.SENDER_HP
			, OM.SENDER_TEL
			, OM.RECEIVER_NAME
			, OM.RECEIVER_POST
			, OM.RECEIVER_ADDR1
			, OM.RECEIVER_ADDR2
			, OM.RECEIVER_TEL
			, OM.RECEIVER_HP
			, OM.ORDER_MEMO
			, OM.MANAGER_MEMO
			, OM.TOTAL_ORDER_PRICE AS TOTAL_PRICE		-- 전체상품금액
			, OM.TRANS_PRICE							-- 배송비
			, OM.TRANS_COUPON							-- 배송쿠폰 일련번호
			, OM.DISCOUNT_AMT							-- 총 할인금액
			, OM.COUPON_DISCOUNT_AMT					-- 쿠폰할인금액
			, OM.POINT_USE_PRICE						-- 포인트 결제금액
			, OM.GRADE_DISCOUNT_AMT						-- 등급할인금액
			, OM.EMP_DISCOUNT_AMT						-- 임직원할인금액
			, OM.TOTAL_PAY_PRICE						-- 총 결제금액
			, OM.ACCML_POINT							-- 예상 포인트적립액
			, OM.NOMEMBER_PASS
			, OM.VACT_Num
			, OM.VACT_BankCode
			-- 03:기업은행, 04:국민은행, 05:외환은행, 06:국민은행(구 주택은행), 07:수협중앙회, 11:농협중앙회, 12:단위농협, 20:우리은행, 21:조흥은행, 23:제일은행, 32:부산은행, 71:우체국, 81:하나은행, 88:신한은행
			, CASE WHEN OM.VACT_BankCode = '03' THEN '기업은행'
					WHEN OM.VACT_BankCode = '04' THEN '국민은행'
					WHEN OM.VACT_BankCode = '05' THEN '외환은행'
					WHEN OM.VACT_BankCode = '06' THEN '국민은행'
					WHEN OM.VACT_BankCode = '07' THEN '수협중앙회'
					WHEN OM.VACT_BankCode = '11' THEN '농협중앙회'
					WHEN OM.VACT_BankCode = '12' THEN '단위농협'
					WHEN OM.VACT_BankCode = '20' THEN '우리은행'
					WHEN OM.VACT_BankCode = '21' THEN '조흥은행'
					WHEN OM.VACT_BankCode = '23' THEN '제일은행'
					WHEN OM.VACT_BankCode = '32' THEN '부산은행'
					WHEN OM.VACT_BankCode = '71' THEN '우체국'
					WHEN OM.VACT_BankCode = '81' THEN '하나은행'
					WHEN OM.VACT_BankCode = '88' THEN '신한은행'
					ELSE '기타은행' END AS VACT_BankName
			, OM.VACT_Name
			, OM.VACT_Date
			, OM.PAT_GUBUN
			, OM.OLD_ORDER_IDX
			, OM.INIESCROW_DELIVERY
			, OM.INIESCROW_CONFIRM
			, OM.INIESCROW_CANCEL			
			, OM.ESCROW_USER_CMD
			, OM.ESCROW_USER_DATE
		FROM TB_ORDER_MASTER OM WITH (NOLOCK)
		WHERE OM.ORDER_CODE = @ORDER_CODE
		AND CASE WHEN ISNULL(OM.M_ID,'') = '' THEN '1' ELSE OM.M_ID END = @M_ID
	END
	ELSE BEGIN
		SELECT OM.ORDER_IDX, OM.ORDER_CODE, OM.ORDER_DATE
			, OM.ORDER_STATUS
			, OM.PAY_GBN
			, CASE WHEN OM.PAY_GBN = '1' THEN '신용카드'
					WHEN OM.PAY_GBN = '2' THEN CASE WHEN OM.ESCROW_YN='Y' THEN '실시간계좌이체(에스크로)' ELSE '실시간계좌이체' END
					WHEN OM.PAY_GBN = '3' THEN '가상계좌'
					WHEN OM.PAY_GBN = '4' THEN '포인트결제'
					ELSE '결제코드오류' END AS PAY_GBN_NM
			, OM.ESCROW_YN
			, OM.PAT_TID
			, OM.SENDER_EMAIL
			, CASE WHEN OM.MEMBER_ORDER_GBN = '1' THEN OM.M_NAME ELSE OM.SENDER_NAME END AS ORDER_NAME
			, CASE WHEN OM.MEMBER_ORDER_GBN = '1' THEN OM.M_ID ELSE '(비회원)' END AS ORDER_ID
			, OM.SENDER_POST
			, OM.SENDER_ADDR1
			, OM.SENDER_ADDR2
			, OM.SENDER_HP
			, OM.SENDER_TEL
			, OM.RECEIVER_NAME
			, OM.RECEIVER_POST
			, OM.RECEIVER_ADDR1
			, OM.RECEIVER_ADDR2
			, OM.RECEIVER_TEL
			, OM.RECEIVER_HP
			, OM.ORDER_MEMO
			, OM.MANAGER_MEMO
			, OM.TOTAL_ORDER_PRICE AS TOTAL_PRICE		-- 전체상품금액
			, OM.TRANS_PRICE							-- 배송비
			, OM.TRANS_COUPON							-- 배송쿠폰 일련번호
			, OM.DISCOUNT_AMT							-- 총 할인금액
			, OM.COUPON_DISCOUNT_AMT					-- 쿠폰할인금액
			, OM.POINT_USE_PRICE						-- 포인트 결제금액
			, OM.GRADE_DISCOUNT_AMT						-- 등급할인금액
			, OM.EMP_DISCOUNT_AMT						-- 임직원할인금액
			, OM.TOTAL_PAY_PRICE						-- 총 결제금액
			, OM.ACCML_POINT							-- 예상 포인트적립액
			, OM.NOMEMBER_PASS
			, OM.VACT_Num
			, OM.VACT_BankCode
			-- 03:기업은행, 04:국민은행, 05:외환은행, 06:국민은행(구 주택은행), 07:수협중앙회, 11:농협중앙회, 12:단위농협, 20:우리은행, 21:조흥은행, 23:제일은행, 32:부산은행, 71:우체국, 81:하나은행, 88:신한은행
			, CASE WHEN OM.VACT_BankCode = '03' THEN '기업은행'
					WHEN OM.VACT_BankCode = '04' THEN '국민은행'
					WHEN OM.VACT_BankCode = '05' THEN '외환은행'
					WHEN OM.VACT_BankCode = '06' THEN '국민은행'
					WHEN OM.VACT_BankCode = '07' THEN '수협중앙회'
					WHEN OM.VACT_BankCode = '11' THEN '농협중앙회'
					WHEN OM.VACT_BankCode = '12' THEN '단위농협'
					WHEN OM.VACT_BankCode = '20' THEN '우리은행'
					WHEN OM.VACT_BankCode = '21' THEN '조흥은행'
					WHEN OM.VACT_BankCode = '23' THEN '제일은행'
					WHEN OM.VACT_BankCode = '32' THEN '부산은행'
					WHEN OM.VACT_BankCode = '71' THEN '우체국'
					WHEN OM.VACT_BankCode = '81' THEN '하나은행'
					WHEN OM.VACT_BankCode = '88' THEN '신한은행'
					ELSE '기타은행' END AS VACT_BankName
			, OM.VACT_Name
			, OM.VACT_Date
			, OM.PAT_GUBUN
			, OM.OLD_ORDER_IDX
			, OM.INIESCROW_DELIVERY
			, OM.INIESCROW_CONFIRM
			, OM.INIESCROW_CANCEL			
			, OM.ESCROW_USER_CMD
			, OM.ESCROW_USER_DATE
		FROM TB_ORDER_MASTER OM WITH (NOLOCK)
		WHERE OM.ORDER_CODE = @ORDER_CODE
	END
	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_RESULT_PRODUCT_LIST]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_RESULT_PRODUCT_LIST
주문결과페이지의 상단 주문제품리스트

파라미터 설명
 @ORDER_CODE VARCHAR(20)	-- ORDER_MASTER 주문번호
,@M_ID VARCHAR(13)			-- 회원ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
,@SESSION_ID VARCHAR(50)	-- 세션ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec SP_ORDER_RESULT_PRODUCT_LIST '20150720-100044','test_b1s',''

*/
CREATE PROCEDURE [dbo].[SP_ORDER_RESULT_PRODUCT_LIST]
 @ORDER_CODE VARCHAR(20)	-- ORDER_MASTER 주문번호
,@M_ID VARCHAR(13)			-- 회원ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
,@SESSION_ID VARCHAR(50)	-- 세션ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
AS
BEGIN
	SET NOCOUNT ON
		
	IF @M_ID <> ''
	BEGIN
		SELECT OD.ORDER_DETAIL_IDX
			, OD.P_CODE
			, OD.P_IMG1_S
			, OD.P_NAME
			, OD.P_SUB_TITLE
			, OD.ICON_NEW
			, OD.ICON_BEST
			, OD.ICON_SOLDOUT
			, OD.ICON_CUSTOM
			, OD.ICON_ONEPLUS
			, OD.ICON_SET
			, OD.ICON_TIME
			, OD.ICON_COUPON
			, OD.P_COUNT
			, OD.PROMOTION_TYPE
			, CASE WHEN ISNULL(OD.PROMOTION_TYPE,'') = '99' THEN '-' 
				WHEN ISNULL(OD.PROMOTION_TYPE,'') = '01' THEN 'SET상품' 
				WHEN ISNULL(OD.PROMOTION_TYPE,'') = '02' THEN '1+1' 
				WHEN ISNULL(OD.PROMOTION_TYPE,'') = '03' THEN '일반할인' 
				ELSE '코드오류' END AS PROMOTION
			, ISNULL(PP.PMO_PRODUCT_NAME,'') AS PROMOTION_NAME
			, OD.SELLING_PRICE					-- 정상가
			, OD.DISCOUNT_PRICE					-- 할인가
			, OD.EMP_DISCOUNT_AMT				-- 임직원 할인받은 금액
			, OD.EMP_DISCOUNT_PRICE				-- 임직원 할인가
			, OD.IDX_COUPON_NUMBER				-- 적용된 쿠폰IDX
			, ISNULL(OD.CD_COUPON,'') AS CD_COUPON			-- 적용된 쿠폰코드
			, ISNULL(CM.COUPON_NAME,'') AS COUPON_NAME		-- 적용된 쿠폰명
			, OD.COUPON_DISCOUNT_AMT						-- 쿠폰으로 할인받은 금액
			, OD.COUPON_DISCOUNT_PRICE * OD.P_COUNT AS COUPON_DISCOUNT_PRICE	-- 쿠폰이 적용된 금액 ([[[중요]]]리스트상단에서 주문금액에는 이 금액을 뿌려줘야 함)
			, OD.USE_POINT					-- 사용한 포인트가 제품별로 나뉘어져 들어간 금액
			, OD.GRADE_DISCOUNT_AMT			-- 등급 할인받은 금액
			, OD.ORDER_PRICE AS ORDER_PRICE			-- 상단에 표시될 상품가격
			, OD.REAL_PAY_PRICE				-- 제품별 실제 구매금액
			, OD.POINT_ACCML				-- 제품별 적립예정 포인트
		FROM TB_ORDER_DETAIL OD WITH (NOLOCK)
			LEFT JOIN TB_ORDER_MASTER OM WITH (NOLOCK)
				ON OD.ORDER_CODE = OM.ORDER_CODE
			LEFT OUTER JOIN TB_PROMOTION_BY_PRODUCT PP WITH (NOLOCK)
				ON OD.CD_PROMOTION_PRODUCT = PP.CD_PROMOTION_PRODUCT
			LEFT OUTER JOIN TB_COUPON_MASTER CM WITH (NOLOCK)
				ON OD.CD_COUPON = CM.CD_COUPON
		WHERE OD.ORDER_CODE = @ORDER_CODE
		AND CASE WHEN ISNULL(OM.M_ID,'') = '' THEN '1' ELSE OM.M_ID END = @M_ID
		ORDER BY OD.ORDER_DETAIL_IDX	
	END
	ELSE BEGIN
		SELECT OD.ORDER_DETAIL_IDX
			, OD.P_CODE
			, OD.P_IMG1_S
			, OD.P_NAME
			, OD.P_SUB_TITLE
			, OD.ICON_NEW
			, OD.ICON_BEST
			, OD.ICON_SOLDOUT
			, OD.ICON_CUSTOM
			, OD.ICON_ONEPLUS
			, OD.ICON_SET
			, OD.ICON_TIME
			, OD.ICON_COUPON
			, OD.P_COUNT
			, OD.PROMOTION_TYPE
			, CASE WHEN ISNULL(OD.PROMOTION_TYPE,'') = '99' THEN '-' 
				WHEN ISNULL(OD.PROMOTION_TYPE,'') = '01' THEN 'SET상품' 
				WHEN ISNULL(OD.PROMOTION_TYPE,'') = '02' THEN '1+1' 
				WHEN ISNULL(OD.PROMOTION_TYPE,'') = '03' THEN '일반할인' 
				ELSE '코드오류' END AS PROMOTION
			, ISNULL(PP.PMO_PRODUCT_NAME,'') AS PROMOTION_NAME
			, OD.SELLING_PRICE					-- 정상가
			, OD.DISCOUNT_PRICE					-- 할인가
			, OD.EMP_DISCOUNT_AMT				-- 임직원 할인받은 금액
			, OD.EMP_DISCOUNT_PRICE				-- 임직원 할인가
			, OD.IDX_COUPON_NUMBER				-- 적용된 쿠폰IDX
			, ISNULL(OD.CD_COUPON,'') AS CD_COUPON			-- 적용된 쿠폰코드
			, ISNULL(CM.COUPON_NAME,'') AS COUPON_NAME		-- 적용된 쿠폰명
			, OD.COUPON_DISCOUNT_AMT						-- 쿠폰으로 할인받은 금액
			, OD.COUPON_DISCOUNT_PRICE * OD.P_COUNT AS COUPON_DISCOUNT_PRICE	-- 쿠폰이 적용된 금액 ([[[중요]]]리스트상단에서 주문금액에는 이 금액을 뿌려줘야 함)
			, OD.USE_POINT					-- 사용한 포인트가 제품별로 나뉘어져 들어간 금액
			, OD.GRADE_DISCOUNT_AMT			-- 등급 할인받은 금액
			, OD.ORDER_PRICE AS ORDER_PRICE			-- 상단에 표시될 상품가격
			, OD.REAL_PAY_PRICE				-- 제품별 실제 구매금액
			, OD.POINT_ACCML				-- 제품별 적립예정 포인트
		FROM TB_ORDER_DETAIL OD WITH (NOLOCK)
			LEFT JOIN TB_ORDER_MASTER OM WITH (NOLOCK)
				ON OD.ORDER_CODE = OM.ORDER_CODE
			LEFT OUTER JOIN TB_PROMOTION_BY_PRODUCT PP WITH (NOLOCK)
				ON OD.CD_PROMOTION_PRODUCT = PP.CD_PROMOTION_PRODUCT
			LEFT OUTER JOIN TB_COUPON_MASTER CM WITH (NOLOCK)
				ON OD.CD_COUPON = CM.CD_COUPON
		WHERE OD.ORDER_CODE = @ORDER_CODE
		AND CASE WHEN ISNULL(OM.SESSION_ID,'') = '' THEN '1' ELSE OM.SESSION_ID END  = @SESSION_ID
		ORDER BY OD.ORDER_DETAIL_IDX	
	END


/*
	SELECT * FROM TB_ORDER_DETAIL

*/
	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_RESULT_DETAIL]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_RESULT_DETAIL
주문결과페이지 하단의 주문내역

파라미터 설명
 @ORDER_CODE VARCHAR(20)	-- ORDER_MASTER 주문번호
,@M_ID VARCHAR(13)			-- 회원ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
,@SESSION_ID VARCHAR(50)	-- 세션ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec SP_ORDER_RESULT_DETAIL '20150723-100052','','4nrtqqjvg24hrm3hrb0alqbs'

*/
CREATE PROCEDURE [dbo].[SP_ORDER_RESULT_DETAIL]
 @ORDER_CODE VARCHAR(20)	-- ORDER_MASTER 주문번호
,@M_ID VARCHAR(13)			-- 회원ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
,@SESSION_ID VARCHAR(50)	-- 세션ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
AS
BEGIN
	SET NOCOUNT ON

	IF @M_ID <> ''
	BEGIN
		SELECT OM.ORDER_IDX, OM.ORDER_CODE, OM.ORDER_DATE
			, OM.ORDER_STATUS
			, OM.PAY_GBN
			, CASE WHEN OM.PAY_GBN = '1' THEN '신용카드'
					WHEN OM.PAY_GBN = '2' THEN CASE WHEN OM.ESCROW_YN='Y' THEN '실시간계좌이체(에스크로)' ELSE '실시간계좌이체' END
					WHEN OM.PAY_GBN = '3' THEN '가상계좌'
					WHEN OM.PAY_GBN = '4' THEN '포인트결제'
					ELSE '결제코드오류' END AS PAY_GBN_NM
			, OM.ESCROW_YN
			, OM.PAT_TID
			, OM.SENDER_EMAIL
			, CASE WHEN OM.MEMBER_ORDER_GBN = '1' THEN OM.M_NAME ELSE OM.SENDER_NAME END AS ORDER_NAME
			, CASE WHEN OM.MEMBER_ORDER_GBN = '1' THEN OM.M_ID ELSE '(비회원)' END AS ORDER_ID
			, OM.SENDER_POST
			, OM.SENDER_ADDR1
			, OM.SENDER_ADDR2
			, OM.SENDER_HP
			, OM.SENDER_TEL
			, OM.RECEIVER_NAME
			, OM.RECEIVER_POST
			, OM.RECEIVER_ADDR1
			, OM.RECEIVER_ADDR2
			, OM.RECEIVER_TEL
			, OM.RECEIVER_HP
			, OM.ORDER_MEMO
			, OM.MANAGER_MEMO
			, OM.VACT_Num
			, OM.VACT_BankCode
			-- 03:기업은행, 04:국민은행, 05:외환은행, 06:국민은행(구 주택은행), 07:수협중앙회, 11:농협중앙회, 12:단위농협, 20:우리은행, 21:조흥은행, 23:제일은행, 32:부산은행, 71:우체국, 81:하나은행, 88:신한은행
			, CASE WHEN OM.VACT_BankCode = '03' THEN '기업은행'
					WHEN OM.VACT_BankCode = '04' THEN '국민은행'
					WHEN OM.VACT_BankCode = '05' THEN '외환은행'
					WHEN OM.VACT_BankCode = '06' THEN '국민은행'
					WHEN OM.VACT_BankCode = '07' THEN '수협중앙회'
					WHEN OM.VACT_BankCode = '11' THEN '농협중앙회'
					WHEN OM.VACT_BankCode = '12' THEN '단위농협'
					WHEN OM.VACT_BankCode = '20' THEN '우리은행'
					WHEN OM.VACT_BankCode = '21' THEN '조흥은행'
					WHEN OM.VACT_BankCode = '23' THEN '제일은행'
					WHEN OM.VACT_BankCode = '32' THEN '부산은행'
					WHEN OM.VACT_BankCode = '71' THEN '우체국'
					WHEN OM.VACT_BankCode = '81' THEN '하나은행'
					WHEN OM.VACT_BankCode = '88' THEN '신한은행'
					ELSE '' END AS VACT_BankName
			, OM.VACT_Name
			, OM.VACT_Date
			, OM.TOTAL_ORDER_PRICE AS TOTAL_PRICE		-- 전체상품금액
			, OM.TRANS_PRICE							-- 배송비
			, OM.TRANS_COUPON							-- 배송쿠폰 일련번호
			, OM.DISCOUNT_AMT							-- 총 할인금액
			, OM.COUPON_DISCOUNT_AMT					-- 쿠폰할인금액
			, OM.POINT_USE_PRICE						-- 포인트 결제금액
			, OM.GRADE_DISCOUNT_AMT						-- 등급할인금액
			, OM.EMP_DISCOUNT_AMT						-- 임직원할인금액
			, OM.TOTAL_PAY_PRICE						-- 총 결제금액
			, OM.ACCML_POINT							-- 예상 포인트적립액
			, OM.NOMEMBER_PASS
		FROM TB_ORDER_MASTER OM WITH (NOLOCK)
		WHERE OM.ORDER_CODE = @ORDER_CODE
		AND CASE WHEN ISNULL(OM.M_ID,'') = '' THEN '1' ELSE OM.M_ID END = @M_ID
	END
	ELSE BEGIN
		SELECT OM.ORDER_IDX, OM.ORDER_CODE, OM.ORDER_DATE
			, OM.ORDER_STATUS
			, OM.PAY_GBN
			, CASE WHEN OM.PAY_GBN = '1' THEN '신용카드'
					WHEN OM.PAY_GBN = '2' THEN '실시간 계좌이체'
					WHEN OM.PAY_GBN = '3' THEN '가상계좌'
					WHEN OM.PAY_GBN = '4' THEN '포인트결제'
					ELSE '결제코드오류' END AS PAY_GBN_NM
			, OM.ESCROW_YN
			, OM.PAT_TID
			, OM.SENDER_EMAIL
			, CASE WHEN OM.MEMBER_ORDER_GBN = '1' THEN OM.M_NAME ELSE OM.SENDER_NAME END AS ORDER_NAME
			, CASE WHEN OM.MEMBER_ORDER_GBN = '1' THEN OM.M_ID ELSE '(비회원)' END AS ORDER_ID
			, OM.SENDER_POST
			, OM.SENDER_ADDR1
			, OM.SENDER_ADDR2
			, OM.SENDER_HP
			, OM.SENDER_TEL
			, OM.RECEIVER_NAME
			, OM.RECEIVER_POST
			, OM.RECEIVER_ADDR1
			, OM.RECEIVER_ADDR2
			, OM.RECEIVER_TEL
			, OM.RECEIVER_HP
			, OM.ORDER_MEMO
			, OM.MANAGER_MEMO
			, OM.VACT_Num
			, OM.VACT_BankCode
			-- 03:기업은행, 04:국민은행, 05:외환은행, 06:국민은행(구 주택은행), 07:수협중앙회, 11:농협중앙회, 12:단위농협, 20:우리은행, 21:조흥은행, 23:제일은행, 32:부산은행, 71:우체국, 81:하나은행, 88:신한은행
			, CASE WHEN OM.VACT_BankCode = '03' THEN '기업은행'
					WHEN OM.VACT_BankCode = '04' THEN '국민은행'
					WHEN OM.VACT_BankCode = '05' THEN '외환은행'
					WHEN OM.VACT_BankCode = '06' THEN '국민은행'
					WHEN OM.VACT_BankCode = '07' THEN '수협중앙회'
					WHEN OM.VACT_BankCode = '11' THEN '농협중앙회'
					WHEN OM.VACT_BankCode = '12' THEN '단위농협'
					WHEN OM.VACT_BankCode = '20' THEN '우리은행'
					WHEN OM.VACT_BankCode = '21' THEN '조흥은행'
					WHEN OM.VACT_BankCode = '23' THEN '제일은행'
					WHEN OM.VACT_BankCode = '32' THEN '부산은행'
					WHEN OM.VACT_BankCode = '71' THEN '우체국'
					WHEN OM.VACT_BankCode = '81' THEN '하나은행'
					WHEN OM.VACT_BankCode = '88' THEN '신한은행'
					ELSE '기타은행' END AS VACT_BankName
			, OM.VACT_Name
			, OM.VACT_Date
			, OM.TOTAL_ORDER_PRICE AS TOTAL_PRICE		-- 전체상품금액
			, OM.TRANS_PRICE							-- 배송비
			, OM.TRANS_COUPON							-- 배송쿠폰 일련번호
			, OM.DISCOUNT_AMT							-- 총 할인금액
			, OM.COUPON_DISCOUNT_AMT					-- 쿠폰할인금액
			, OM.POINT_USE_PRICE						-- 포인트 결제금액
			, OM.GRADE_DISCOUNT_AMT						-- 등급할인금액
			, OM.EMP_DISCOUNT_AMT						-- 임직원할인금액
			, OM.TOTAL_PAY_PRICE						-- 총 결제금액
			, OM.ACCML_POINT							-- 예상 포인트적립액
			, OM.NOMEMBER_PASS
		FROM TB_ORDER_MASTER OM WITH (NOLOCK)
		WHERE OM.ORDER_CODE = @ORDER_CODE
		AND CASE WHEN ISNULL(OM.SESSION_ID,'') = '' THEN '1' ELSE OM.SESSION_ID END  = @SESSION_ID
--		AND isnull(OM.M_ID, '') = ''
	END
	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_NOMEMBER_LOGIN]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 [SP_ORDER_NOMEBER_LOGIN]
비회원 주문조회 로그인

	SELECT * 
	FROM TB_ORDER_MASTER m
	
	exec [SP_ORDER_NOMEMBER_LOGIN] '20150723-100051', '1111'
*/
CREATE PROCEDURE [dbo].[SP_ORDER_NOMEMBER_LOGIN]
 @ORDER_CODE   VARCHAR(20)	-- 주문번호
,@NOMEMBER_PASS VARCHAR(20)	-- 비회원비밀번호
AS
BEGIN
	SET NOCOUNT ON
	DECLARE @SELECT_ORDER_CODE VARCHAR(20)
	
	set @SELECT_ORDER_CODE = ''
	
	SELECT @SELECT_ORDER_CODE = ORDER_CODE 
	FROM TB_ORDER_MASTER m
	where m.ORDER_CODE = @ORDER_CODE
	AND m.NOMEMBER_PASS = @NOMEMBER_PASS 
	AND MEMBER_ORDER_GBN = 2

	SELECT @SELECT_ORDER_CODE AS ORDER_CODE
	
	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_NOMEBER_LOGIN]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 [SP_ORDER_NOMEBER_LOGIN]
비회원 주문조회 로그인

	SELECT * 
	FROM TB_ORDER_MASTER m
	
	exec [SP_ORDER_NOMEBER_LOGIN] '20150723-100051', '1111'
*/
CREATE PROCEDURE [dbo].[SP_ORDER_NOMEBER_LOGIN]
 @ORDER_CODE   VARCHAR(20)	-- 주문번호
,@NOMEMBER_PASS VARCHAR(20)	-- 비회원비밀번호
AS
BEGIN
	SET NOCOUNT ON
	DECLARE @SELECT_ORDER_CODE VARCHAR(20)
	
	set @SELECT_ORDER_CODE = ''
	
	SELECT @SELECT_ORDER_CODE = ORDER_CODE 
	FROM TB_ORDER_MASTER m
	where m.ORDER_CODE = @ORDER_CODE
	AND m.NOMEMBER_PASS = @NOMEMBER_PASS 
	AND MEMBER_ORDER_GBN = 2

	SELECT @SELECT_ORDER_CODE AS ORDER_CODE
	
	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_MEMBER_SEL]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

프로시져명 SP_ORDER_MEMBER_SEL
주문시 로그인한 회원의 포인트,개인정보등을 SELECT
파라미터 설명
@M_ID : 회원ID

SELECT * FROM TB_CART

SELECT * FROM TB_MEMBER
SELECT * FROM TB_PRODUCT_INFO


exec SP_ORDER_MEMBER_SEL 'KMG5302'

*/
CREATE PROCEDURE [dbo].[SP_ORDER_MEMBER_SEL]
 @M_ID	VARCHAR(13)

-- ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

	SET NOCOUNT ON

	IF @M_ID = ''
	RETURN

	SELECT M_ID, M_NAME, M_POINT
	FROM TB_MEMBER
	WHERE M_ID = @M_ID


		
/*
TRUNCATE TABLE TB_CART
SELECT * FROM TB_CART

SELECT * FROM TB_PRODUCT_INFO


		exec SP_TB_CART_PRODUCT_ADD 'KMG5302','','555,35,wer','2,3','Y'
		exec SP_TB_CART_PRODUCT_ADD '','0342R78G324FV','555,35,wer','2,3','Y'

*/

	
	
	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_GET_ORDERCODE_BY_TMP_ORDERIDX]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_GET_ORDERCODE_BY_TMP_ORDERIDX
모바일결제시 이니시스에서 결제 승인결과를 여러번 보내기때문에 
저장되어있는지 체크해야함.
SELECT * FROM TB_ORDER_MASTER

exec [SP_ORDER_GET_ORDERCODE_BY_TMP_ORDERIDX] 8888

*/
CREATE PROCEDURE [dbo].[SP_ORDER_GET_ORDERCODE_BY_TMP_ORDERIDX]
 @OLD_ORDER_IDX INT	-- TB_ORDER_MASTER_TMP의 ORDER_IDX
AS
BEGIN
	SET NOCOUNT ON
	DECLARE @ORDER_CODE VARCHAR(20),
		@MASTER_ORDER_IDX INT,
		@PAY_GBN VARCHAR(1);
		
	set @ORDER_CODE = ''
	set @MASTER_ORDER_IDX = -1
	set	@PAY_GBN= ''
	
	SELECT @ORDER_CODE = OM.ORDER_CODE
		, @MASTER_ORDER_IDX = OM.ORDER_IDX
		, @PAY_GBN = OM.PAY_GBN			
	FROM TB_ORDER_MASTER OM WITH (NOLOCK)
	WHERE OM.OLD_ORDER_IDX = @OLD_ORDER_IDX
		
	select @ORDER_CODE as ORDER_CODE, @MASTER_ORDER_IDX as ORDER_IDX, @PAY_GBN as PAY_GBN
		
	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_ESCROW_USER_SET]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_ESCROW_USER_SET
주문건 ESCROW 지급확인/지급거절 셋팅

파라미터 설명
 @ORDER_IDX	INT							-- MASTER 주문일련번호
 , @ESCROW_USER_CMD CHAR(1)				-- Y : 지급승인요청, N : 지급거절요청
 , @ESCROW_USER_DESC VARCHAR(500) = ''	-- 유저요청메모(사유)

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec SP_ORDER_ESCROW_USER_SET 1, 'N','물건이 마음에 안들어서'
*/
CREATE PROCEDURE [dbo].[SP_ORDER_ESCROW_USER_SET]
 @ORDER_IDX	INT							-- MASTER 주문일련번호
 , @ESCROW_USER_CMD CHAR(1)				-- Y : 지급승인요청, N : 지급거절요청
 , @ESCROW_USER_DESC VARCHAR(500) = ''	-- 유저요청메모(사유)
AS
BEGIN
	SET NOCOUNT ON

	IF @ESCROW_USER_CMD = 'Y'
	BEGIN
		UPDATE TB_ORDER_MASTER
		SET ESCROW_USER_CMD = @ESCROW_USER_CMD
			, ESCROW_USER_DATE = GETDATE()
			, ESCROW_USER_DESC = @ESCROW_USER_DESC
		WHERE ORDER_IDX = @ORDER_IDX
	END
	ELSE IF @ESCROW_USER_CMD = 'N'
	BEGIN
		UPDATE TB_ORDER_MASTER
		SET ESCROW_USER_CMD = @ESCROW_USER_CMD
			, ESCROW_USER_DATE = GETDATE()
			, ESCROW_USER_DESC = @ESCROW_USER_DESC
		WHERE ORDER_IDX = @ORDER_IDX
	END

	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_MYPAGE_ORDERLIST]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_MYPAGE_ORDERLIST
마이페이지 주문내역 리스트

파라미터 설명
@ORDER_CODE VARCHAR(20)='' -- 주문번호
,@M_ID VARCHAR(13)=''   -- 회원ID
,@FROM_DATE VARCHAR(10) = ''		-- 시작 주문일자 (ex 2015-07-09)
,@TO_DATE VARCHAR(10) = ''		-- 종료 주문일자 (ex 2015-07-09)
,@PAGE			--현재 PAGE (기본값 1)
,@PAGESIZE		--페이지 사이즈  (기본값 20)



SELECT * 
--	UPDATE A SET A.M_GRADE = 'V'
FROM TB_MEMBER A
WHERE M_ID = 'KMG5302'

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

exec SP_MYPAGE_ORDERLIST_CNT '','test_b1s','2015-01-01','2015-12-31'
exec SP_MYPAGE_ORDERLIST '','test_b1s','2015-01-01','2015-12-31'
exec SP_MYPAGE_ORDERLIST_CNT '20150722-100048'
exec SP_MYPAGE_ORDERLIST '20150722-100048'

*/
CREATE PROCEDURE [dbo].[SP_MYPAGE_ORDERLIST]
@ORDER_CODE VARCHAR(20)='' -- 주문번호
,@M_ID VARCHAR(13)=''   -- 회원ID
,@FROM_DATE VARCHAR(10) = ''		-- 시작 주문일자 (ex 2015-07-09)
,@TO_DATE VARCHAR(10) = ''		-- 종료 주문일자 (ex 2015-07-09)

,@PAGE			INT	= 1		--현재 PAGE
,@PAGESIZE		INT = 20	--페이지 사이즈
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @v_SQL_WHERE VARCHAR(3000) = '' ;
	DECLARE @v_SQL VARCHAR(3000) = '' ;
	DECLARE @LISTCOUNT INT

	IF @ORDER_CODE <> ''
	BEGIN
		SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND A.ORDER_CODE = '''+@ORDER_CODE+''' ';
	END
	ELSE BEGIN
		IF @M_ID <> ''
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND A.M_ID = '''+@M_ID+''' ';
		END
		IF @FROM_DATE <> ''
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,A.ORDER_DATE ,121) >= '''+@FROM_DATE+''' ';
		END
		IF @TO_DATE <> ''
		BEGIN
			SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND CONVERT(CHAR(10) ,A.ORDER_DATE ,121) <= '''+@TO_DATE+''' ';
		END
	END

	

	IF OBJECT_ID('tempdb..#TMP_ORDERLIST') is not null
	BEGIN
	  DROP TABLE #TMP_ORDERLIST;
	END

	CREATE TABLE #TMP_ORDERLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		ORDER_IDX	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT
	
	SET @v_SQL  = '
		insert into #TMP_ORDERLIST (ORDER_IDX)
		SELECT A.ORDER_IDX 
		FROM TB_ORDER_MASTER A WITH (NOLOCK)
			, TB_ORDER_DETAIL B WITH (NOLOCK)
		WHERE A.ORDER_IDX = B.ORDER_IDX
		' + @v_SQL_WHERE + 
		' GROUP BY A.ORDER_IDX , A.ORDER_DATE
		  ORDER BY A.ORDER_DATE DESC ' ;
	--	PRINT @v_SQL;
	EXEC(@v_SQL);
	
	SET ROWCOUNT 0 ;

	;
	WITH OD AS (
		SELECT OD.ORDER_IDX
			, MIN(OD.P_NAME) + CASE WHEN COUNT(*) = 1 THEN '' ELSE '외 ' + CONVERT(VARCHAR,COUNT(*)-1) + '건' END AS P_NAME
			, SUM(P_COUNT) AS P_COUNT
			, MIN(P_IMG1_S) AS P_IMG1_S
			, MAX(ISNULL(DELIVERY_NUM,'')) AS DELIVERY_NUM
		FROM #TMP_ORDERLIST T
			LEFT JOIN TB_ORDER_DETAIL OD
				ON T.ORDER_IDX = OD.ORDER_IDX
		WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
		GROUP BY OD.ORDER_IDX
	)
	SELECT OM.ORDER_IDX, OM.M_ID, OM.SESSION_ID
		, OM.ORDER_CODE, OM.ORDER_DATE
		, OD.P_NAME
		, OD.P_IMG1_S
		, OM.TOTAL_PAY_PRICE
		, OM.ORDER_STATUS
		, CASE	WHEN OM.ORDER_STATUS = '10' THEN '결제대기'
				WHEN OM.ORDER_STATUS = '20' THEN '결제완료'
				WHEN OM.ORDER_STATUS = '30' THEN '상품준비중'
				WHEN OM.ORDER_STATUS = '40' THEN '배송중'
				WHEN OM.ORDER_STATUS = '50' THEN '배송완료'
				WHEN OM.ORDER_STATUS = '60' THEN '구매확정'
				WHEN OM.ORDER_STATUS = '70' THEN '교환'
				WHEN OM.ORDER_STATUS = '80' THEN '반품'
				WHEN OM.ORDER_STATUS = '90' THEN '취소'
				WHEN OM.ORDER_STATUS = '99' THEN '기타'
				ELSE '코드오류' END AS ORDER_STATUS_NM
		, OD.DELIVERY_NUM
		, OD.P_COUNT
		, OM.ACCML_POINT
	FROM #TMP_ORDERLIST T
		LEFT JOIN TB_ORDER_MASTER OM
			ON T.ORDER_IDX = OM.ORDER_IDX
		LEFT JOIN OD
			ON T.ORDER_IDX = OD.ORDER_IDX
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ ASC ;

	SET NOCOUNT OFF ;
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_MYPAGE_MAIN_STATUS]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_MYPAGE_MAIN_STATUS
마이페이지 메인화면에 배송현황 및 일대일분의,교환반품신청 건수체크

파라미터 설명
@M_ID VARCHAR(13)=''   -- 회원ID

exec SP_MYPAGE_MAIN_STATUS 'test_b1s'

*/
CREATE PROCEDURE [dbo].[SP_MYPAGE_MAIN_STATUS]
@M_ID VARCHAR(13)=''   -- 회원ID
AS
BEGIN
	SET NOCOUNT ON

	SELECT SUM(STATUS_ALL) AS STATUS_ALL
		, SUM(STATUS_10) AS STATUS_10
		, SUM(STATUS_20) AS STATUS_20
		, SUM(STATUS_30) AS STATUS_30
		, SUM(STATUS_40) AS STATUS_40
		, SUM(STATUS_50) AS STATUS_50
		, SUM(QNA_ING) AS QNA_ING
		, SUM(QNA_END) AS QNA_END
		, SUM(RECALL_ING) AS RECALL_ING
		, SUM(RECALL_END) AS RECALL_END
	FROM (
		SELECT SUM(CASE WHEN OM.ORDER_STATUS = '10' THEN 1 
						WHEN OM.ORDER_STATUS = '20' THEN 1 
						WHEN OM.ORDER_STATUS = '30' THEN 1 
						WHEN OM.ORDER_STATUS = '40' THEN 1 
						WHEN OM.ORDER_STATUS = '50' THEN 1 ELSE 0 END) AS STATUS_ALL
			, SUM(CASE WHEN OM.ORDER_STATUS = '10' THEN 1 ELSE 0 END) AS STATUS_10
			, SUM(CASE WHEN OM.ORDER_STATUS = '20' THEN 1 ELSE 0 END) AS STATUS_20
			, SUM(CASE WHEN OM.ORDER_STATUS = '30' THEN 1 ELSE 0 END) AS STATUS_30
			, SUM(CASE WHEN OM.ORDER_STATUS = '40' THEN 1 ELSE 0 END) AS STATUS_40
			, SUM(CASE WHEN OM.ORDER_STATUS = '50' THEN 1 ELSE 0 END) AS STATUS_50
			, 0 AS QNA_ING
			, 0 AS QNA_END
			, 0 AS RECALL_ING
			, 0 AS RECALL_END
		FROM TB_ORDER_MASTER OM WITH (NOLOCK)
		WHERE OM.M_ID = @M_ID

		UNION ALL
		
		SELECT 0 AS STATUS_ALL
			, 0 AS STATUS_10
			, 0 AS STATUS_20
			, 0 AS STATUS_30
			, 0 AS STATUS_40
			, 0 AS STATUS_50
			, SUM(CASE WHEN QNA.STATUS = '1' THEN 1 ELSE 0 END) AS QNA_ING
			, SUM(CASE WHEN QNA.STATUS = '2' THEN 1 ELSE 0 END) AS QNA_END
			, 0 AS RECALL_ING
			, 0 AS RECALL_END
		FROM TB_QNA QNA WITH (NOLOCK)
		WHERE QNA.M_ID = @M_ID

		UNION ALL
		
		SELECT 0 AS STATUS_ALL
			, 0 AS STATUS_10
			, 0 AS STATUS_20
			, 0 AS STATUS_30
			, 0 AS STATUS_40
			, 0 AS STATUS_50
			, 0 AS QNA_ING
			, 0 AS QNA_END
			, SUM(CASE WHEN RECALL.STATUS = '1' THEN 1 ELSE 0 END) AS RECALL_ING
			, SUM(CASE WHEN RECALL.STATUS = '2' THEN 1 ELSE 0 END) AS RECALL_END
		FROM TB_RECALL_BBS RECALL WITH (NOLOCK)
		WHERE RECALL.REG_ID = @M_ID
	) SRC
	


	SET NOCOUNT OFF ;
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_MEMBER_VIEW]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-09
-- Description:	회원-1건 상세 :회원 상세(정보수정),로그인...
-- ussage: exec SP_MEMBER_VIEW 'id'
-- =============================================
CREATE PROCEDURE [dbo].[SP_MEMBER_VIEW]
 @M_ID	varchar(13)	='' 

AS
BEGIN

	SET NOCOUNT ON ; -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	SET ROWCOUNT 0 ;
	----------------------------------------

	SELECT 	[M_NO],
	[M_ID],
	[M_NAME],
	[M_PWD],
	[M_GRADE],
	[M_SEX],
	[M_BIRTHDAY],
	[M_MOBILE],
	[M_PHONE],
	[M_EMAIL],
	[M_ZIPCODE],
	[M_ADDR1],
	[M_ADDR2],
	[M_ISSMS],
	[M_ISEMAIL],
	[M_ISDM],
	[M_POINT],
	[M_CREDATE],
	[M_VISITCNT],
	[M_LASTVISITDATE],
	[M_UPDATEDATE],
	[M_JOIN_MODE],
	[M_DI],
	[M_SKIN_TROUBLE_CD],
	[M_AGREE],
	[M_AGREE2],
	[M_GBN],
	[M_STAFF_COMPANY],
	[M_STAFF_ID],
	[M_STAFF_APPROV_DATE],
	[M_IS_RETIRE],
	[M_DEL_DATE],
	[M_DEL_POINT],
	[M_DEL_REASON]
	from [TB_MEMBER] with (nolock)
	where (M_ID=@M_ID) AND (M_IS_RETIRE='N');

		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_MEMBER_UPD_SKIN_TROUBLE]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-07
-- Description:	회원- 정보수정 :피부트러블 변경
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_MEMBER_UPD_SKIN_TROUBLE]
	 @M_ID	varchar(13)	='' -- 회원계정
	,@M_SKIN_TROUBLE_CD char(9)  =''

	,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.

AS
BEGIN
	Declare @strPWD_CUR varchar(10);

	IF not exists(select M_ID from TB_MEMBER with(NOLOCK) where (M_ID=@M_ID) AND (M_IS_RETIRE='N'))
	begin
		set @ERR_CODE=10; -- 회원부재
		return -1 ;
	end
	
	
	--회원 피부트러블 변경
	UPDATE TB_MEMBER
	set M_SKIN_TROUBLE_CD=@M_SKIN_TROUBLE_CD
	,M_UPDATEDATE=getdate()
	where (M_ID=@M_ID) AND (M_IS_RETIRE='N');

	SET @ERR_CODE = @@ERROR;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_MEMBER_UPD_RETIRE]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-07
-- Description:	회원- 수정:탈퇴처리
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_MEMBER_UPD_RETIRE]
	 @M_ID	varchar(13)	='' -- 회원계정
	,@M_IS_RETIRE varchar(1)  =''
	,@M_DEL_REASON varchar(2000)  =''
	,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.

AS
BEGIN
	declare  @nOLD_POINT int ; --삭제전 보유포인트

	set @nOLD_POINT =0;

	IF exists(select M_ID from TB_MEMBER with(NOLOCK) where (M_ID=@M_ID) AND (M_IS_RETIRE='N'))
	begin
		--기존 포인트 기억
		select @nOLD_POINT = isnull(M_POINT,0) from TB_MEMBER where (M_ID=@M_ID) AND (M_IS_RETIRE='N');

		UPDATE TB_MEMBER
		set 
		 M_IS_RETIRE	=	@M_IS_RETIRE
		 ,M_DEL_REASON	=	@M_DEL_REASON
		 ,M_DEL_DATE	=	getdate()
		 ,M_DEL_POINT =	@nOLD_POINT

		 -- 신상정보 초기화
		 ,M_POINT=0
		 ,M_DI=''
		 ,M_SEX=''
		 ,M_BIRTHDAY='--'
		 ,M_MOBILE='--'
		 ,M_PHONE='--'
		 ,M_EMAIL='@'
		 ,M_ZIPCODE=''
		 ,M_ADDR1=''
		 ,M_ADDR2=''

		 ,M_ISDM='N'
		 ,M_ISSMS='N'
		 ,M_ISEMAIL='N'
		 ,M_AGREE='N'
		 ,M_AGREE2='N'
		 ,M_JOIN_MODE=''

		where (M_ID=@M_ID) AND (M_IS_RETIRE='N') ;

		-- 탈퇴회원 이관
		insert into [TB_MEMBER_RETIRE]
		([M_NO],[M_ID],[M_NAME],[M_PWD],[M_GRADE],[M_SEX],[M_BIRTHDAY],[M_MOBILE],[M_PHONE],[M_EMAIL],[M_ZIPCODE],[M_ADDR1],[M_ADDR2],[M_ISSMS],[M_ISEMAIL],[M_ISDM],[M_POINT],[M_CREDATE],[M_VISITCNT],[M_LASTVISITDATE],[M_UPDATEDATE],[M_JOIN_MODE],[M_DI],[M_SKIN_TROUBLE_CD],[M_AGREE],[M_AGREE2],[M_GBN],[M_STAFF_COMPANY],[M_STAFF_ID],[M_STAFF_APPROV_DATE],[M_IS_RETIRE],[M_DEL_DATE],[M_DEL_POINT],[M_DEL_REASON],[M_DEVICE_GBN],[ZZ_OLD_PWD_MD5],[ZZ_ETC1],[ZZ_ETC2],[ZZ_ETC3])
		select [M_NO],[M_ID],[M_NAME],[M_PWD],[M_GRADE],[M_SEX],[M_BIRTHDAY],[M_MOBILE],[M_PHONE],[M_EMAIL],[M_ZIPCODE],[M_ADDR1],[M_ADDR2],[M_ISSMS],[M_ISEMAIL],[M_ISDM],[M_POINT],[M_CREDATE],[M_VISITCNT],[M_LASTVISITDATE],[M_UPDATEDATE],[M_JOIN_MODE],[M_DI],[M_SKIN_TROUBLE_CD],[M_AGREE],[M_AGREE2],[M_GBN],[M_STAFF_COMPANY],[M_STAFF_ID],[M_STAFF_APPROV_DATE],[M_IS_RETIRE],[M_DEL_DATE],[M_DEL_POINT],[M_DEL_REASON],[M_DEVICE_GBN],[ZZ_OLD_PWD_MD5],[ZZ_ETC1],[ZZ_ETC2],[ZZ_ETC3]
		from [TB_MEMBER]
		where M_IS_RETIRE='Y' ;

		--활동회원에서 삭제
		delete from [TB_MEMBER] where M_IS_RETIRE='Y' ;


		SET @ERR_CODE = @@ERROR;

	end
	ELSE
	begin
		SET @ERR_CODE = 10;  -- 회원부재 or 이미 탈퇴
	end 


END
GO
/****** Object:  StoredProcedure [dbo].[SP_MEMBER_UPD_PWD]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-07
-- Description:	회원- 정보수정 :암호변경
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_MEMBER_UPD_PWD]
	 @M_ID	varchar(13)	='' -- 회원계정
	,@M_PWD_OLD varchar(100)  =''
	,@M_PWD_NEW varchar(100)  =''

	,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.

AS
BEGIN
	Declare @strPWD_CUR varchar(100);

	IF not exists(select M_ID from TB_MEMBER with(NOLOCK) where (M_ID=@M_ID) AND (M_IS_RETIRE='N'))
	begin
		set @ERR_CODE=10; -- 회원부재
		return -1 ;
	end
	
	--기존 비밀번호 가져오기
	select @strPWD_CUR = M_PWD from TB_MEMBER with(NOLOCK) where (M_ID=@M_ID) AND (M_IS_RETIRE='N');

	if @strPWD_CUR <>@M_PWD_OLD  
	begin
		set @ERR_CODE=20; -- 기존 비밀번호 불일치
		return -1 ;
	end
	
	--회원 비번 수정
	UPDATE TB_MEMBER
	set M_PWD=@M_PWD_NEW
	,M_UPDATEDATE=getdate()
	where (M_ID=@M_ID) AND (M_IS_RETIRE='N');

	SET @ERR_CODE = @@ERROR;



END
GO
/****** Object:  StoredProcedure [dbo].[SP_MEMBER_UPD]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-07
-- Description:	회원- 정보수정
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_MEMBER_UPD]
	 @M_ID	varchar(13)	='' -- 회원계정
	,@M_MOBILE varchar(15)  =''
	,@M_PHONE varchar(15)  =''
	,@M_EMAIL varchar(100)  =''
	,@M_ZIPCODE varchar(7)  =''
	,@M_ADDR1 varchar(100)  =''
	,@M_ADDR2 varchar(100)  =''
	,@M_ISSMS char(1)  =''
	,@M_ISEMAIL char(1)  =''
	,@M_ISDM char(1)  =''

	,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.

AS
BEGIN

	IF not exists(select M_ID from TB_MEMBER with(NOLOCK) where (M_ID=@M_ID) AND (M_IS_RETIRE='N'))
	begin
		set @ERR_CODE=10; -- 회원부재
		return -1 ;
	end

	IF exists(select M_ID from TB_MEMBER with(NOLOCK) where (M_ID<>@M_ID) AND (M_IS_RETIRE='N') AND (M_EMAIL=@M_EMAIL) )
	begin
		set @ERR_CODE=11; -- EMAIL중복오류
		return -1 ;
	end
		
	--회원 정보수정
	UPDATE TB_MEMBER
	set M_MOBILE=@M_MOBILE
		,M_PHONE=@M_PHONE
		,M_EMAIL=@M_EMAIL
		,M_ZIPCODE=@M_ZIPCODE
		,M_ADDR1=@M_ADDR1
		,M_ADDR2=@M_ADDR2
		,M_ISSMS=@M_ISSMS
		,M_ISEMAIL=@M_ISEMAIL
		,M_ISDM=@M_ISDM
		,M_UPDATEDATE=getdate()

	where (M_ID=@M_ID) AND (M_IS_RETIRE='N');

	SET @ERR_CODE = @@ERROR;



END
GO
/****** Object:  StoredProcedure [dbo].[SP_MEMBER_STAFF_REQUEST_INS]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-07
-- Description:	임직원 신청 등록
-- ussage: exec [SP_MEMBER_STAFF_REQUEST_INS] 'aaa','bbb','A','ccc','nnn','aaaaaaaa',@err
-- =============================================
CREATE PROCEDURE [dbo].[SP_MEMBER_STAFF_REQUEST_INS]
	 @M_ID	varchar(13)	='' -- 신청자계정
	,@M_NAME varchar(30)  =''-- 신청자이믈
	,@M_GRADE varchar(1)  ='' -- 신청자 등급
	
	,@STAFF_COMPANY varchar(50)  ='' --임직원 소속회사
	,@STAFF_ID varchar(50)  ='' --임직원 사번
	,@STAFF_NAME varchar(30)  ='' --임직원 이름

	,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.

AS
BEGIN

	
	--회원 신규가입
	INSERT into [TB_MEMBER_STAFF_REQUST]
		(M_ID,M_NAME,M_GRADE,INS_DATE
		,STAFF_COMPANY,STAFF_ID,STAFF_NAME,STATUS)
	values
		(@M_ID,@M_NAME,@M_GRADE,getdate()
		,@STAFF_COMPANY,@STAFF_ID,@STAFF_NAME,'접수');

	SET @ERR_CODE = @@ERROR;



END
GO
/****** Object:  StoredProcedure [dbo].[SP_MEMBER_REALNAME_LOG_VIEW]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-07
-- Description:	회원- 실명증 로그 1건 가져오기
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_MEMBER_REALNAME_LOG_VIEW]
	 @WORK_TMP_ID	varchar(50)	=''
AS
BEGIN

	
	--실명증 로그 1건
	if(@WORK_TMP_ID ='')
		select WORK_TMP_ID,M_JOIN_TYPE,RESULT_CODE,TRAN_NO,M_NAME,di,ci,M_BIRTHDAY,M_SEX,nation,RETURN_MSG_ALL,INS_DATE,IP
		from TB_MEMBER_REALNAME_LOG with(nolock) 
		where (1=0) ;
	else
		select WORK_TMP_ID,M_JOIN_TYPE,RESULT_CODE,TRAN_NO,M_NAME,di,ci,M_BIRTHDAY,M_SEX,nation,RETURN_MSG_ALL,INS_DATE,IP
		from TB_MEMBER_REALNAME_LOG with(nolock) 
		where (WORK_TMP_ID=@WORK_TMP_ID) AND (len(di)>20) AND (INS_DATE > dateadd(hour,-1,getdate()));  -- 1시간 전까지만 유효


END
GO
/****** Object:  StoredProcedure [dbo].[SP_MEMBER_REALNAME_LOG_INS]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-07
-- Description:	회원- 실명증 로그저장
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_MEMBER_REALNAME_LOG_INS]
	 @WORK_TMP_ID	varchar(50)	=''
	,@M_JOIN_TYPE varchar(10)  =''
	,@RESULT_CODE varchar(10)  =''
	,@TRAN_NO varchar(50)  =''
	,@M_NAME varchar(30)  =''
	,@di varchar(100)  =''
	,@ci varchar(100)  =''
	,@M_BIRTHDAY varchar(10)  =''
	,@M_SEX varchar(1)  =''
	,@nation varchar(10)  =''
	,@RETURN_MSG_ALL varchar(5000)  =''
	,@IP varchar(20)  =''
AS
BEGIN

	
	--실명증 로그저장
	INSERT into TB_MEMBER_REALNAME_LOG
		(WORK_TMP_ID,M_JOIN_TYPE,RESULT_CODE,TRAN_NO,M_NAME,di,ci,M_BIRTHDAY,M_SEX,nation,RETURN_MSG_ALL,INS_DATE,IP)
	values
		(@WORK_TMP_ID,@M_JOIN_TYPE,@RESULT_CODE,@TRAN_NO,@M_NAME,@di,@ci,@M_BIRTHDAY,@M_SEX,@nation,@RETURN_MSG_ALL,getdate(),@IP);


END
GO
/****** Object:  StoredProcedure [dbo].[SP_MEMBER_LOGIN_UPD]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-09
-- Description:	회원-로그인후 처리 :방문횟수 +, 마지막방문일, ...
-- ussage: exec [SP_MEMBER_LOGIN_UPD] 'id'
-- =============================================
CREATE PROCEDURE [dbo].[SP_MEMBER_LOGIN_UPD]
 @M_ID	varchar(13)	='' 

AS
BEGIN

	UPDATE [TB_MEMBER]
	set
		[M_VISITCNT] =isnull([M_VISITCNT],0) +1
		,[M_LASTVISITDATE] =getdate()
	from [TB_MEMBER] with (nolock)
	where (M_ID=@M_ID) ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_EXHIBIT_PCODE_LINK_ALL]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_EXHIBIT_PCODE_LINK_ALL
제품상세에 보여질 관련 기획전 데이터

SELECT * FROM TB_EXHIBIT
SELECT * FROM TB_EXHIBIT_TAB_PRODUCT

exec SP_EXHIBIT_PCODE_LINK_ALL '1111113'
*/
CREATE PROCEDURE [dbo].[SP_EXHIBIT_PCODE_LINK_ALL]
 @P_CODE VARCHAR(10)	-- 검색할 상품P_CODE
AS
BEGIN

	SET NOCOUNT ON

	SELECT TE.IDX
		, TE.EXHIBIT_NAME
		, TE.FROM_DATE
		, TE.TO_DATE
		, TE.WEB_BANNER
		, TE.MOBILE_BANNER
		, '/Event/ExhibitView?IDX='+CONVERT(VARCHAR,TE.IDX) AS LINK_URL
	FROM TB_EXHIBIT TE WITH (NOLOCK)
		INNER JOIN TB_EXHIBIT_TAB_PRODUCT TP WITH (NOLOCK)
			ON TE.IDX = TP.EXHIBIT_IDX
			AND TP.P_CODE = @P_CODE
	WHERE ( TE.FROM_DATE + ' ' + TE.FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 ) )
	AND ( TE.TO_DATE + ' ' + TE.TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 ) )
	AND TE.USE_YN= 'Y'
	ORDER BY TE.DISPLAY_ORDER

-- /Event/ExhibitView?IDX=1

--SELECT * FROM TB_PRODUCT_INFO
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_EXHIBIT_PCODE_LINK]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_EXHIBIT_PCODE_LINK
체험단 리뷰상세페이지 하단에 보여질 관련 기획전 데이터

SELECT * FROM TB_EXHIBIT
SELECT * FROM TB_EXHIBIT_TAB_PRODUCT

exec SP_EXHIBIT_PCODE_LINK '1111113'
*/
CREATE PROCEDURE [dbo].[SP_EXHIBIT_PCODE_LINK]
 @P_CODE VARCHAR(10)	-- 검색할 상품P_CODE
AS
BEGIN

	SET NOCOUNT ON

	SELECT TOP 1 TE.IDX
		, TE.EXHIBIT_NAME
		, TE.FROM_DATE+' ~ '+TE.TO_DATE
		, TE.WEB_BANNER
		, TE.MOBILE_BANNER
		, '/Event/ExhibitView?IDX='+CONVERT(VARCHAR,TE.IDX) AS LINK_URL
	FROM TB_EXHIBIT TE WITH (NOLOCK)
		INNER JOIN TB_EXHIBIT_TAB_PRODUCT TP WITH (NOLOCK)
			ON TE.IDX = TP.EXHIBIT_IDX
			AND TP.P_CODE = @P_CODE
	WHERE ( TE.FROM_DATE + ' ' + TE.FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 ) )
	AND ( TE.TO_DATE + ' ' + TE.TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 ) )
	AND TE.USE_YN= 'Y'
	ORDER BY TE.DISPLAY_ORDER

-- /Event/ExhibitView?IDX=1

--SELECT * FROM TB_PRODUCT_INFO
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_EVENT_VIEW]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 [SP_EVENT_VIEW]
이벤트 조회

SELECT * FROM TB_EVENT

*/
CREATE PROCEDURE [dbo].[SP_EVENT_VIEW]
@IDX INT
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT 
		a.IDX
		,a.EVENT_NAME
		,a.FROM_DATE
		,a.FROM_TIME
		,a.TO_DATE
		,a.TO_TIME
		,a.EVENT_GBN
		,a.WEB_CONTENTS
		,a.MOBILE_FILE
		,a.WEB_BANNER
		,a.MOBILE_BANNER
		,a.USE_YN
		,a.ADM_ID
		,a.REG_DATE
	FROM TB_EVENT a WITH (NOLOCK)
	WHERE a.IDX = @IDX
	AND a.USE_YN = 'Y'
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_EVENT_MAIN_VIEW]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
이벤트 메인 조회

SELECT * FROM TB_EVENT_MAIN

*/
CREATE PROCEDURE [dbo].[SP_EVENT_MAIN_VIEW]
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT TOP 1
		IDX
		, MAIN_IMG1
		, MAIN_URL1
		, MAIN_IMG2
		, MAIN_URL2
		, MAIN_IMG3
		, MAIN_URL3
		, MAIN_IMG4
		, MAIN_URL4
		, MAIN_IMG5
		, MAIN_URL5
		, RIGHT_IMG
		, RIGHT_URL
		, MIDDLE_IMG1
		, MIDDLE_URL1
		, MIDDLE_TITLE1
		, MIDDLE_DESC1
		, MIDDLE_IMG2
		, MIDDLE_URL2
		, MIDDLE_TITLE2
		, MIDDLE_DESC2
		, MIDDLE_IMG3
		, MIDDLE_URL3
		, MIDDLE_TITLE3
		, MIDDLE_DESC3
		, MIDDLE_IMG4
		, MIDDLE_URL4
		, ADM_ID
		, REG_DATE
	FROM TB_EVENT_MAIN A WITH (NOLOCK)
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_EVENT_ING_LIST]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_EVENT_ING_LIST
진행중인 이벤트 리스트 조회

SELECT * FROM TB_EVENT

exec SP_EVENT_ING_LIST
*/
CREATE PROCEDURE [dbo].[SP_EVENT_ING_LIST]
AS
BEGIN

	SET NOCOUNT ON

	SELECT *
	FROM (
		SELECT 'EVENT' AS GBN
			, A.IDX
			, A.EVENT_NAME AS NAME
			, A.FROM_DATE
			, A.FROM_TIME
			, A.TO_DATE
			, A.TO_TIME
			, A.WEB_CONTENTS
			, A.MOBILE_FILE
			, A.WEB_BANNER
			, A.MOBILE_BANNER
			, A.DISPLAY_ORDER
			, A.ADM_ID
			, A.REG_DATE
		FROM TB_EVENT A WITH (NOLOCK)
		WHERE A.FROM_DATE + ' ' + A.FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 )
		AND A.TO_DATE + ' ' + A.TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 )
		AND A.USE_YN = 'Y'
		
		UNION ALL
		
		SELECT 'EXHIBIT' AS GBN
			, A.IDX
			, A.EXHIBIT_NAME AS NAME
			, A.FROM_DATE
			, A.FROM_TIME
			, A.TO_DATE
			, A.TO_TIME
			, A.WEB_CONTENTS
			, A.MOBILE_FILE
			, A.WEB_BANNER
			, A.MOBILE_BANNER
			, A.DISPLAY_ORDER
			, A.ADM_ID
			, A.REG_DATE
		FROM TB_EXHIBIT A WITH (NOLOCK)
		WHERE A.FROM_DATE + ' ' + A.FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 )
		AND A.TO_DATE + ' ' + A.TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 )
		AND A.USE_YN = 'Y'

		UNION ALL
		
		SELECT 'SAMPLE' AS GBN
			, A.IDX
			, A.SAMPLE_NAME AS NAME
			, A.FROM_DATE
			, A.FROM_TIME
			, A.TO_DATE
			, A.TO_TIME
			, A.WEB_CONTENTS
			, A.MOBILE_FILE
			, A.WEB_BANNER
			, A.MOBILE_BANNER
			, A.DISPLAY_ORDER
			, A.ADM_ID
			, A.REG_DATE
		FROM TB_SAMPLE A WITH (NOLOCK)
		WHERE A.FROM_DATE + ' ' + A.FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 )
		AND A.TO_DATE + ' ' + A.TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 )
		AND A.USE_YN = 'Y'
	) AA
	ORDER BY AA.DISPLAY_ORDER ASC, AA.REG_DATE DESC
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_EVENT_END_LIST]    Script Date: 09/11/2015 16:07:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_EVENT_END_LIST
종료된 이벤트 리스트 조회

SELECT * FROM TB_EVENT

exec SP_EVENT_END_LIST
*/
CREATE PROCEDURE [dbo].[SP_EVENT_END_LIST]
AS
BEGIN

	SET NOCOUNT ON

	SELECT *
	FROM (
		SELECT 'EVENT' AS GBN
			, A.IDX
			, A.EVENT_NAME AS NAME
			, A.FROM_DATE
			, A.FROM_TIME
			, A.TO_DATE
			, A.TO_TIME
			, A.WEB_CONTENTS
			, A.MOBILE_FILE
			, A.WEB_BANNER
			, A.MOBILE_BANNER
			, A.DISPLAY_ORDER
			, A.ADM_ID
			, A.REG_DATE
		FROM TB_EVENT A WITH (NOLOCK)
		WHERE A.TO_DATE + ' ' + A.TO_TIME  < CONVERT(CHAR(13), GETDATE(), 121 )
		AND A.USE_YN = 'Y'
		
		UNION ALL
		
		SELECT 'EXHIBIT' AS GBN
			, A.IDX
			, A.EXHIBIT_NAME AS NAME
			, A.FROM_DATE
			, A.FROM_TIME
			, A.TO_DATE
			, A.TO_TIME
			, A.WEB_CONTENTS
			, A.MOBILE_FILE
			, A.WEB_BANNER
			, A.MOBILE_BANNER
			, A.DISPLAY_ORDER
			, A.ADM_ID
			, A.REG_DATE
		FROM TB_EXHIBIT A WITH (NOLOCK)
		WHERE A.TO_DATE + ' ' + A.TO_TIME  < CONVERT(CHAR(13), GETDATE(), 121 )
		AND A.USE_YN = 'Y'

		UNION ALL
		
		SELECT 'SAMPLE' AS GBN
			, A.IDX
			, A.SAMPLE_NAME AS NAME
			, A.FROM_DATE
			, A.FROM_TIME
			, A.TO_DATE
			, A.TO_TIME
			, A.WEB_CONTENTS
			, A.MOBILE_FILE
			, A.WEB_BANNER
			, A.MOBILE_BANNER
			, A.DISPLAY_ORDER
			, A.ADM_ID
			, A.REG_DATE
		FROM TB_SAMPLE A WITH (NOLOCK)
		WHERE A.TO_DATE + ' ' + A.TO_TIME  < CONVERT(CHAR(13), GETDATE(), 121 )
		AND A.USE_YN = 'Y'
	) AA
	ORDER BY AA.TO_DATE DESC, AA.REG_DATE DESC

	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_DUMMY_ADMIN_SEL]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_DUMMY_ADMIN_SEL]
AS

SELECT [IDX]
      ,[ADM_ID]
      ,[ADM_PASS]
      ,[ADM_NAME]
      ,[ADM_DEPT]
      ,[PHONE]
      ,[MOBILE]
      ,[EMAIL]
      ,[ADM_ROLE_GRADE]
      ,[MEMO]
      ,[INS_DATE]
  FROM [AboutMe].[dbo].[ADMIN_MEMBER]
GO
/****** Object:  StoredProcedure [dbo].[SP_MAGAZINE_VIEW]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_MAGAZINE_VIEW
매거진 상세보기

SELECT * FROM TB_MAGAZINE

EXEC SP_MAGAZINE_VIEW 2

*/
CREATE PROCEDURE [dbo].[SP_MAGAZINE_VIEW]
@IDX INT
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT 
		A.IDX
		, A.TITLE
		, A.SUB_TITLE
		, A.CONTENT_GBN
		, A.THUMB_IMG_PATH
		, A.IMG_PATH
		, A.MOVIE_URL
		, A.DISPLAY_ORDER
	FROM TB_MAGAZINE a WITH (NOLOCK)
	WHERE a.IDX = @IDX
	AND a.USE_YN = 'Y'
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_MAGAZINE_LIST]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_MAGAZINE_LIST
매거진 리스트 조회

SELECT * FROM TB_MAGAZINE

exec SP_MAGAZINE_LIST
*/
CREATE PROCEDURE [dbo].[SP_MAGAZINE_LIST]
AS
BEGIN

	SET NOCOUNT ON

	SELECT A.IDX
		, A.TITLE
		, A.SUB_TITLE
		, A.CONTENT_GBN
		, A.THUMB_IMG_PATH
		, A.IMG_PATH
		, A.MOVIE_URL
		, A.DISPLAY_ORDER
		, A.REG_DATE
	FROM TB_MAGAZINE A WITH (NOLOCK)
	WHERE A.USE_YN = 'Y'
	ORDER BY A.DISPLAY_ORDER ASC, A.IDX DESC

	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_EXHIBIT_VIEW]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 [SP_EXHIBIT_VIEW]
기획전  조회

SELECT * FROM TB_EXHIBIT

exec [SP_EXHIBIT_VIEW]  1
*/
CREATE PROCEDURE [dbo].[SP_EXHIBIT_VIEW]
@IDX INT
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT 
		a.IDX
		,a.EXHIBIT_NAME
		,a.FROM_DATE
		,a.FROM_TIME
		,a.TO_DATE
		,a.TO_TIME
		,a.EXHIBIT_GBN
		,a.WEB_CONTENTS
		,a.MOBILE_FILE
		,a.WEB_BANNER
		,a.MOBILE_BANNER
		,a.USE_YN
		,a.ADM_ID
		,a.REG_DATE
	FROM TB_EXHIBIT a
	WHERE a.IDX = @IDX
	AND a.USE_YN = 'Y'
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_MEMBER_FIND_PWD]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-09
-- Description:	회원- 암호찾기:  신규세팅
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_MEMBER_FIND_PWD]
 @M_ID	varchar(15)	='' 
 ,@M_NAME	varchar(30)	='' 
 ,@M_EMAIL	varchar(100)	='' 
 ,@M_MOBILE	varchar(15)	='' 
 ,@M_PWD_NEW	varchar(100)	='' --신규암호가 c#에서 넘어와야 함. Why: md5 + sha256  enc 

 ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
 ,@RET_M_NAME		varchar(30) OUTPUT	--이름 못 찾을시 공란.@ERR_CODE =0 이어야 정상 찾아짐
 ,@RET_M_EMAIL		varchar(100) OUTPUT	--EMAIL 못 찾을시 공란.@ERR_CODE =0 이어야 정상 찾아짐

AS
BEGIN

	set @RET_M_NAME=''; -- 일단 회원 부재 오류
	set @RET_M_EMAIL=''; -- 일단 회원 부재 오류

	set @ERR_CODE =10 ; -- 일단 회원 부재 오류

	--파라메타 검증
	if(len(@M_ID)<4 or  len(@M_NAME)<2 or len(@M_EMAIL)<4 or len(@M_MOBILE)<5)
	begin 
		set @ERR_CODE =20 ; -- 파라메타 오류
		return -1 ;
	end


	if(exists(select M_ID from [TB_MEMBER] with (nolock) where (M_ID=@M_ID) AND (M_NAME=@M_NAME) AND (M_EMAIL=@M_EMAIL) AND (M_MOBILE=@M_MOBILE) AND (M_IS_RETIRE='N') ))
	begin 
		update [TB_MEMBER]
		set M_PWD =@M_PWD_NEW ,@RET_M_NAME=M_NAME ,@RET_M_EMAIL=M_EMAIL
		,M_UPDATEDATE=getdate()
		where (M_ID=@M_ID) AND (M_NAME=@M_NAME) AND (M_EMAIL=@M_EMAIL) AND (M_MOBILE=@M_MOBILE) AND (M_IS_RETIRE='N') ;

		set @ERR_CODE =0;
	end



END
GO
/****** Object:  StoredProcedure [dbo].[SP_MEMBER_FIND_ID]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-09
-- Description:	회원-ID찾기
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_MEMBER_FIND_ID]
 @M_NAME	varchar(30)	='' 
 ,@M_EMAIL	varchar(100)	='' 
 ,@M_MOBILE	varchar(15)	='' 

 ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
 ,@RET_M_ID		varchar(13) OUTPUT	--ID 못 찾을시 공란.@ERR_CODE =0 이어야 정상 찾아짐
 ,@RET_M_NAME		varchar(30) OUTPUT	--이름 못 찾을시 공란.@ERR_CODE =0 이어야 정상 찾아짐
 ,@RET_M_CREDATE		varchar(30) OUTPUT	--가입일 못 찾을시 공란.@ERR_CODE =0 이어야 정상 찾아짐

AS
BEGIN

	SET NOCOUNT ON ; -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	SET ROWCOUNT 0 ;
	----------------------------------------

	set @RET_M_ID=''; -- 일단 회원 부재 오류
	set @RET_M_NAME=''; -- 일단 회원 부재 오류
	set @RET_M_CREDATE=''; -- 일단 회원 부재 오류
	set @ERR_CODE =10 ; -- 일단 회원 부재 오류

	--파라메타 검증
	if(len(@M_NAME)<2 or len(@M_EMAIL)<4 or len(@M_MOBILE)<5)
	begin 
		set @ERR_CODE =20 ; -- 파라메타 오류
		return -1 ;
	end


	if(exists(select M_ID from [TB_MEMBER] with (nolock) where (M_NAME=@M_NAME) AND (M_EMAIL=@M_EMAIL) AND (M_MOBILE=@M_MOBILE) AND (M_IS_RETIRE='N') ))
	begin 
		SELECT 	top 1 @RET_M_ID = [M_ID] ,@RET_M_NAME=M_NAME ,@RET_M_CREDATE= CONVERT(VARCHAR(16), M_CREDATE, 120)
		from [TB_MEMBER] with (nolock)
		where (M_NAME=@M_NAME) AND (M_EMAIL=@M_EMAIL) AND (M_MOBILE=@M_MOBILE) AND (M_IS_RETIRE='N') ;

		set @ERR_CODE =0;
	end


		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_MEMBER_FIND_DI]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-09
-- Description:	회원-DI가 사용중에 있는지? (동일인 중복가입방지)
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_MEMBER_FIND_DI]
 @M_DI	varchar(100)	=''  -- 실명인증용 DI값

 ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
 ,@RET_M_ID		varchar(13) OUTPUT	--ID 못 찾을시 공란.@ERR_CODE <>0 일때 채워짐
AS
BEGIN

	SET NOCOUNT ON ; -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	SET ROWCOUNT 0 ;
	----------------------------------------

	set @RET_M_ID=''; -- 일단 회원 부재 오류
	set @ERR_CODE =0 ; --일단 오류 없음

	--파라메타 검증
	if(len(@M_DI)<20)
	begin 
		set @ERR_CODE =20 ; -- 파라메타 오류
		return -1 ;
	end


	if(exists(select M_ID from [TB_MEMBER] with (nolock) where (M_DI=@M_DI) AND (M_IS_RETIRE='N') ))
	begin 
		SELECT 	top 1 @RET_M_ID = [M_ID]
		from [TB_MEMBER] with (nolock)
		where (M_DI=@M_DI) AND (M_IS_RETIRE='N');

		set @ERR_CODE =10; --이미 가입한적이 있음
	end


		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_MEMBER_DUP_CHK_EMAIL]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-09
-- Description:	회원-EMAIL 중복체크
-- ussage: exec [SP_MEMBER_DUP_CHK_EMAIL] 'id','aaa@ccc.com' ,@ERR_CODE
-- =============================================
CREATE PROCEDURE [dbo].[SP_MEMBER_DUP_CHK_EMAIL]
 @M_ID	varchar(13)	='' 
,@M_EMAIL	varchar(100)	='' 
,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

	SET NOCOUNT ON ; -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	SET ROWCOUNT 0 ;
	----------------------------------------
	set @ERR_CODE =0; -- 일단 오류없음

	if(len(@M_EMAIL)<4 or len(@M_EMAIL)>99)
		set @ERR_CODE =1; -- EMAIL 길이오류
	else
		if(exists(select M_EMAIL from TB_MEMBER with(nolock) where (M_EMAIL=@M_EMAIL) AND (M_IS_RETIRE='N') AND (M_ID<>@M_ID)))
			set @ERR_CODE =11; -- EMAIL 중복오류

			
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  View [dbo].[VIEW_USABLE_COUPON_PRODUCT_LIST]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 사용가능한 쿠폰상품 리스트     
                    
 * Modified  :   2015.07.18  , 7/20 , 7,23 상품테이블 관련 컬럼 추가   
                 7/24 조회조건및 컬럼추가, 8/3 아웃렛 상품은 빠지게
 * Modified  :       
 * Modified  :      
 ============================================================*/      
    
CREATE VIEW [dbo].[VIEW_USABLE_COUPON_PRODUCT_LIST]    
     
AS    
    
SELECT    
  B.P_CODE --상품코드   
 ,C.CD_COUPON --쿠폰마스터 코드
 ,C.USABLE_DEVICE_GBN --  사용가능한 DEVICE : P=PC AND 모바일 , M=모바일 전용  (7/24 추가) 
 ,C.ISSUE_METHOD_GBN --   발행방법 :  A = 자동발행 , B=수동발행 (7/24 추가) 
 ,D.IDX_COUPON_NUMBER --쿠폰번호    
 ,D.M_ID --회원아이디    
 ,E.P_NAME  
 ,E.MAIN_IMG  
 ,E.OTHER_IMG1  
 ,E.SELLING_PRICE  
 ,E.DISCOUNT_PRICE  
 ,E.P_SUB_TITLE  
 ,E.P_TAG  
FROM    
TB_COUPON_PRODUCT B WITH(NOLOCK) INNER JOIN TB_COUPON_MASTER C     
    ON B.CD_COUPON = C.CD_COUPON  AND ( C.USABLE_YN IS NOT NULL AND C.USABLE_YN = 'Y' )  
    AND C.COUPON_GBN = 'M' -- 배송쿠폰 제외하고 지불쿠폰만  -- 7/24   
INNER JOIN TB_COUPON_ISSUED_DETAIL  D WITH(NOLOCK)     
    ON C.CD_COUPON = D.CD_COUPON   
    AND ( D.USABLE_TF IS NOT NULL AND D.USABLE_TF = 'Y' )  -- 쿠폰 사용가능상태-- 7/24 
    AND ( D.USABLE_DATE_FROM <= GETDATE() AND D.USABLE_DATE_TO >= GETDATE() ) -- 쿠폰유효기간 -- 7/24 
    AND D.USE_STATUS = '5' -- 사용가능상태 -- 7/24 
INNER JOIN TB_PRODUCT_INFO E WITH(NOLOCK)   
    ON B.P_CODE = E.P_CODE AND E.DISPLAY_YN = 'Y'  
    AND ( E.P_OUTLET_YN != 'Y' AND E.P_OUTLET_YN IS NOT NULL)
GO
/****** Object:  View [dbo].[VIEW_USABLE_COUPON_LIST]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 사용가능한 쿠폰리스트, 단  WHERE절에서 USE_STATUS에서 1,5,10 등으로 조회해야한다
                
 * Modified  :   2015.07.18 , 7/22
 * Modified  :   
 * Modified  :  
 ============================================================*/  

CREATE VIEW [dbo].[VIEW_USABLE_COUPON_LIST]
AS


SELECT
	 A.COUPON_GBN  -- M= 지불쿠폰, S=배송쿠폰
	,A.RATE_OR_MONEY -- R=정률 ,M=정액
	,A.USABLE_DEVICE_GBN -- P=PC AND 모바일 , M=모바일 전용
    ,B.IDX_COUPON_NUMBER -- 쿠폰번호
    ,A.CD_COUPON
    ,A.COUPON_NAME	-- 쿠폰명
    ,A.COUPON_AD_MSG --  쿠폰 광고메시지
    ,A.COUPON_USE_DESCRIPTION -- 쿠폰 사용조건 광고 DESCRIPTTION ( EX 30000~50000 이상 구매시 사용할 수 있습니다...)
    ,B.COUPON_MONEY  -- 쿠폰 금액 
    ,B.COUPON_DISCOUNT_RATE --쿠폰할인율 (정률제의 경우)
	,B.USE_STATUS -- 쿠폰사용단계 : 발행(다운로드가능) = 1 , 사용가능(인증,다운로드완료)= 5 , 사용완료 = 10  
    ,B.ORDER_NO -- 사용주문번호
    ,B.ORDER_DETAIL_NO --사용주문번호 상세
    ,B.DOWNLOAD_DATE_FROM --다운로드가능일자(FROM)
    ,B.DOWNLOAD_DATE_TO --다운로드가능일자(TO)
    ,B.USABLE_DATE_FROM --사용가능기간(FROM)
    ,B.USABLE_DATE_TO --사용가능기간(TO)
    ,B.M_ID -- 이용자 아이디
FROM
TB_COUPON_MASTER A WITH(NOLOCK)  INNER JOIN TB_COUPON_ISSUED_DETAIL B WITH(NOLOCK) 
ON A.CD_COUPON = B.CD_COUPON 
   AND ( A.USABLE_YN IS NOT NULL AND A.USABLE_YN = 'Y' )
   AND ( B.USABLE_TF IS NOT NULL AND B.USABLE_TF = 'Y' )
   AND ( B.USABLE_DATE_FROM <= GETDATE() AND B.USABLE_DATE_TO >= GETDATE() )
GO
/****** Object:  View [dbo].[VIEW_PROMOTION_TOTAL_INFO]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 전체할인 정보   
                  
 * Modified  :   2015.08.25  
 * Modified  :     
 * Modified  :    
 ============================================================*/  

CREATE VIEW [dbo].[VIEW_PROMOTION_TOTAL_INFO]
AS

  SELECT      
      D.PMO_TOTAL_CATEGORY --00 : 임직원 전용할인 , 03: 등급기준 할인    
     ,D.PMO_TOTAL_RATE_OR_MONEY -- R: 정률할인 , M:정액할인    
     ,D.PMO_TOTAL_DISCOUNT_RATE  -- 할인율    
     ,D.PMO_TOTAL_DISCOUNT_MONEY -- 할인액     
     ,E.M_GBN    
     ,E.M_GRADE    
     ,CASE M_GRADE WHEN 'B' THEN '브론즈' WHEN 'S' THEN '실버' WHEN 'G' THEN '골드'  WHEN 'V' THEN 'VIP' END AS  M_GRADE_DESC     
   FROM    
   TB_PROMOTION_BY_TOTAL D WITH(NOLOCK) INNER JOIN  TB_PROMOTION_BY_TOTAL_MEM_GRADE E WITH(NOLOCK)  
   ON D.CD_PROMOTION_TOTAL = E.CD_PROMOTION_TOTAL     
   AND ( D.USABLE_YN ='Y' AND D.USABLE_YN IS NOT NULL )      
   AND ( D.PMO_TOTAL_DATE_FROM <= GETDATE() AND D.PMO_TOTAL_DATE_TO >=GETDATE() )   
   --AND ( E.M_GBN =@MEM_GBN AND E.M_GRADE=@MEM_GRADE )
GO
/****** Object:  View [dbo].[VIEW_PRODUCT_VS_PROMOTION_LIST]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 상품별 최종판매가 리스트  
                  
 * Modified  :   2015.07.05 , 7/15  , 7/20
 * Modified  :     
 * Modified  :    
 * Modified  :   2015.07.23 A.IDX 추가 HSW
 * Modified  :   2015.08.03 [SELLING_MONTH_COUNT] 추가 HSW
 ============================================================*/    
  
CREATE VIEW [dbo].[VIEW_PRODUCT_VS_PROMOTION_LIST]  
AS  
  
  
SELECT  
		 CASE WHEN C.CD_PROMOTION_PRODUCT IS NOT NULL THEN 'Y' ELSE 'N' END AS PROMOTION_PRODUCT_YN  
		,ISNULL(B.PMO_PRICE,A.DISCOUNT_PRICE) AS RESULT_PRICE -- 장바구니.주문서에는 이 가격을 보면 됨  
		  
		,B.PMO_PRICE  
		,B.IDX AS PRODUCT_PRICE_IDX   
		,ISNULL(C.CD_PROMOTION_PRODUCT,'0') AS CD_PROMOTION_PRODUCT  
		,C.PMO_PRODUCT_NAME  
		,C.PMO_SET_DISCOUNT_CNT  
		,C.PMO_ONEONE_MULTIPLE_CNT  
		,C.PMO_PRODUCT_DATE_FROM   
	    ,C.PMO_PRODUCT_DATE_TO  
	    ,C.PMO_PRODUCT_CATEGORY -- 01 ='세트상품' , 02 = 1+1 , 03 = 타임세일, 04=일반할인 , 05=아웃렛 
	  ,A.[IDX]
      ,A.[P_CATE_CODE]
      ,A.[C_CATE_CODE]
      ,A.[L_CATE_CODE]
      ,A.[P_CODE]
      ,A.[P_NAME]
      ,A.[P_SUB_TITLE]
      ,A.[P_COUNT]
      ,A.[SELLING_PRICE]
      ,A.[DISCOUNT_RATE]
      ,A.[DISCOUNT_PRICE]
      ,A.[SOLDOUT_YN]
      ,A.[P_INFO_DETAIL_WEB]
      ,A.[P_INFO_DETAIL_MOBILE]
      ,A.[MV_URL]
      ,A.[P_COMPONENT_INFO]
      ,A.[P_TAG]
      ,A.[MAIN_IMG]
      ,A.[OTHER_IMG1]
      ,A.[OTHER_IMG2]
      ,A.[OTHER_IMG3]
      ,A.[OTHER_IMG4]
      ,A.[OTHER_IMG5]
      ,A.[RE_SORT]
      ,A.[DISPLAY_YN]
      ,A.[ICON_YN]
      ,A.[SELLING_COUNT]
      ,A.[SELLING_MONTH_COUNT]
      ,A.[P_VIEW_COUNT]
      ,A.[WITH_PRODUCT_LIST]
      ,A.[P_OUTLET_YN]
      ,A.[UPD_DATE]
      ,A.[INS_DATE]
FROM   
TB_PROMOTION_BY_PRODUCT_PRICE B WITH(NOLOCK) INNER JOIN TB_PROMOTION_BY_PRODUCT C WITH(NOLOCK)   
   ON B.CD_PROMOTION_PRODUCT = C.CD_PROMOTION_PRODUCT   
      AND   
      (B.USABLE_YN IS NOT NULL AND B.USABLE_YN = 'Y')  
      AND   
      ( C.USABLE_YN = 'Y' AND C.USABLE_YN IS NOT NULL )  
      AND   
      ( C.PMO_PRODUCT_DATE_FROM <= GETDATE() AND C.PMO_PRODUCT_DATE_TO >=GETDATE() )   
  
RIGHT OUTER JOIN TB_PRODUCT_INFO A WITH(NOLOCK) ON B.P_CODE =A.P_CODE  
        
WHERE   
      ( A.DISPLAY_YN = 'Y' AND A.DISPLAY_YN IS NOT NULL)
GO
/****** Object:  View [dbo].[VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST_ON_Mobile]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 상품리스트페이지에서 쓰기위한 뷰 - 각 상품별로 쿠폰이 존재하는지만 조회..(일반회원 브론즈 등급으로 타겟팅)    
                 ( Mobile 버전만 가져오기 )  
 * Modified  :   2015.08.05 , 08.06  , 08.31
 * Modified  :       
 * Modified  :      
 ============================================================*/      
CREATE VIEW [dbo].[VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST_ON_Mobile]  
  
AS  
SELECT      
  DISTINCT   
  B.P_CODE --상품코드     
 --,C.CD_COUPON --쿠폰마스터 코드  
 --,C.USABLE_DEVICE_GBN --  사용가능한 DEVICE : P=PC AND 모바일 , M=모바일 전용  (7/24 추가)   
 --,C.RATE_OR_MONEY -- R: 정률할인 , M:정액할인  
 --,ISNULL(C.COUPON_DISCOUNT_MONEY,0) AS COUPON_DISCOUNT_MONEY -- 할인액  
 --,ISNULL(C.COUPON_DISCOUNT_RATE,0) AS COUPON_DISCOUNT_RATE  -- 할인율(%)   
FROM      
TB_COUPON_PRODUCT B WITH(NOLOCK) INNER JOIN TB_COUPON_MASTER C  WITH(NOLOCK)     
    ON B.CD_COUPON = C.CD_COUPON  AND ( C.USABLE_YN IS NOT NULL AND C.USABLE_YN = 'Y' )    
    AND C.COUPON_GBN = 'M' AND C.COUPON_GBN_M ='E' AND ISSUE_METHOD_GBN='B' -- 배송쿠폰 제외하고 지불쿠폰만 AND 일반 이벤트 쿠폰만  AND 수동발행 쿠폰만  
    AND C.ISSUE_YN = 'Y' --한번이라도 발행한적이 있는지  
    AND C.PRODUCT_APP_SCOPE_GBN = 'A' -- 특정상품을 대상으로 발행된 쿠폰만 가져오기 (전체상품대상 쿠폰은 제외)  
    AND ( C.MASTER_FROM_DATE < GETDATE() AND C.MASTER_TO_DATE > GETDATE() )   
    --AND C.USABLE_DEVICE_GBN ='P' or C.USABLE_DEVICE_GBN ='M' -- PC & Mobile 버전 or Mobile  모두 가져오기    
INNER JOIN TB_COUPON_MEMBER_GRADE G WITH(NOLOCK) ON C.CD_COUPON = G.CD_COUPON  
    AND ( G.M_GBN ='A' AND G.M_GRADE ='B' ) -- 일반회원 브론즈등급으로만 타겟팅하여 조회
GO
/****** Object:  View [dbo].[VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST_ALL]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 관리자 주문쪽 상품리스트페이지에서 쓰기위한 뷰 
          - 각 상품별로 쿠폰이 존재하는지만 조회..
                 ( PC & Mobile 버전만 가져오기 )
 * Modified  :   2015.08.06
 * Modified  :     
 * Modified  :    
 ============================================================*/    
CREATE VIEW [dbo].[VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST_ALL]

AS


SELECT    
  DISTINCT 
  B.P_CODE --상품코드   

FROM    
TB_COUPON_PRODUCT B WITH(NOLOCK) INNER JOIN TB_COUPON_MASTER C  WITH(NOLOCK)   
    ON B.CD_COUPON = C.CD_COUPON  AND ( C.USABLE_YN IS NOT NULL AND C.USABLE_YN = 'Y' )  
    AND C.COUPON_GBN = 'M' --AND C.COUPON_GBN_M ='E' AND ISSUE_METHOD_GBN='B' -- 배송쿠폰 제외하고 지불쿠폰만 
    AND C.ISSUE_METHOD_GBN = 'B' --수동발행 쿠폰만
    AND C.ISSUE_YN = 'Y' --한번이라도 발행한적이 있는지
    AND ( C.MASTER_FROM_DATE < GETDATE() AND C.MASTER_TO_DATE > GETDATE() ) 
    --AND C.USABLE_DEVICE_GBN ='P' -- PC & Mobile 버전만 
--INNER JOIN TB_COUPON_MEMBER_GRADE G WITH(NOLOCK) ON C.CD_COUPON = G.CD_COUPON
    --AND ( G.M_GBN ='A' AND G.M_GRADE ='B' ) -- 일반회원 브론즈등급으로만 타겟팅하여 조회
GO
/****** Object:  View [dbo].[VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : FRONT 상품리스트페이지에서 쓰기위한 뷰 - 각 상품별로 쿠폰이 존재하는지만 조회..(일반회원 브론즈 등급으로 타겟팅)  
                 ( PC & Mobile 버전만 가져오기 )
 * Modified  :   2015.08.05 / 08.06 / 8.8 
 * Modified  :     
 * Modified  :    
 ============================================================*/    
CREATE VIEW [dbo].[VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST]

AS
SELECT    
  DISTINCT 
  B.P_CODE --상품코드   
 --,C.CD_COUPON --쿠폰마스터 코드
 --,C.USABLE_DEVICE_GBN --  사용가능한 DEVICE : P=PC AND 모바일 , M=모바일 전용  (7/24 추가) 
 --,C.COUPON_NAME -- 쿠폰명
 --,C.RATE_OR_MONEY -- R: 정률할인 , M:정액할인
 --,ISNULL(C.COUPON_DISCOUNT_MONEY,0) AS COUPON_DISCOUNT_MONEY -- 할인액
 --,ISNULL(C.COUPON_DISCOUNT_RATE,0) AS COUPON_DISCOUNT_RATE  -- 할인율(%) 
FROM    
TB_COUPON_PRODUCT B WITH(NOLOCK) INNER JOIN TB_COUPON_MASTER C  WITH(NOLOCK)   
    ON B.CD_COUPON = C.CD_COUPON  AND ( C.USABLE_YN IS NOT NULL AND C.USABLE_YN = 'Y' )  
    AND C.COUPON_GBN = 'M' AND C.COUPON_GBN_M ='E' AND ISSUE_METHOD_GBN='B' -- 배송쿠폰 제외하고 지불쿠폰만 AND 일반 이벤트 쿠폰만  AND 수동발행 쿠폰만
    AND C.ISSUE_YN = 'Y' --한번이라도 발행한적이 있는지
    AND ( C.MASTER_FROM_DATE < GETDATE() AND C.MASTER_TO_DATE > GETDATE() ) 
    AND C.USABLE_DEVICE_GBN ='P' -- PC & Mobile 버전만 
    AND C.PRODUCT_APP_SCOPE_GBN = 'A' -- 특정상품을 대상으로 발행된 쿠폰만 가져오기 (전체상품대상 쿠폰은 제외)
INNER JOIN TB_COUPON_MEMBER_GRADE G WITH(NOLOCK) ON C.CD_COUPON = G.CD_COUPON
    AND ( G.M_GBN ='A' AND G.M_GRADE ='B' ) -- 일반회원 브론즈등급으로만 타겟팅하여 조회
GO
/****** Object:  View [dbo].[VIEW_PRODUCT_PROMOTION_TOTAL]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 전체할인 정보
                
 * Modified  :   2015.07.15
 * Modified  :   
 * Modified  :  
 ============================================================*/  

create VIEW [dbo].[VIEW_PRODUCT_PROMOTION_TOTAL]

AS

SELECT
 A.PMO_TOTAL_CATEGORY    --00 = 임직원 할인 , 03 = 등급할인 (VIP 할인)
,A.PMO_TOTAL_CATEGORY_NAME
,A.PMO_TOTAL_DISCOUNT_RATE  --할인율
,A.PMO_TOTAL_DISCOUNT_MONEY --할인액 
,A.PMO_TOTAL_RATE_OR_MONEY  --정률할인(R) ,정액할인(M)
,B.M_GBN
,B.M_GRADE
FROM 
  TB_PROMOTION_BY_TOTAL  A WITH(NOLOCK) INNER JOIN  TB_PROMOTION_BY_TOTAL_MEM_GRADE B WITH(NOLOCK) 
	   ON A.CD_PROMOTION_TOTAL = B.CD_PROMOTION_TOTAL 
	   AND ( A.USABLE_YN ='Y' AND A.USABLE_YN IS NOT NULL )  
	   AND ( A.PMO_TOTAL_DATE_FROM <= GETDATE() AND A.PMO_TOTAL_DATE_TO >=GETDATE() ) 

--WHERE E.M_GBN = 'S' AND E.M_GRADE = 'B'
GO
/****** Object:  View [dbo].[VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL]    Script Date: 09/11/2015 16:07:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품별 프로모션에 소속된 상품별로 전체할인(임직원,VIP등)의 적용정보 
                
 * Modified  :   2015.07.05
 * Modified  :   
 * Modified  :  
 ============================================================*/  

CREATE VIEW [dbo].[VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL]
AS
SELECT
 A.P_CODE
,A.P_NAME
,B.PMO_PRICE
,B.CD_PROMOTION_PRODUCT
,D.PMO_TOTAL_CATEGORY
,D.PMO_TOTAL_CATEGORY_NAME
,D.PMO_TOTAL_DISCOUNT_RATE  --할인율
,D.PMO_TOTAL_DISCOUNT_MONEY --할인액 
,D.PMO_TOTAL_RATE_OR_MONEY  --정률할인(R) ,정액할인(M)
,E.M_GBN
,E.M_GRADE

FROM 
	TB_PRODUCT_INFO A WITH(NOLOCK) INNER JOIN  TB_PROMOTION_BY_PRODUCT_PRICE B WITH(NOLOCK) 
	ON A.P_CODE = B.P_CODE AND (B.USABLE_YN = 'Y' AND B.USABLE_YN IS NOT NULL)
	/**
	INNER JOIN TB_PROMOTION_BY_PRODUCT C WITH(NOLOCK) 
		 ON B.CD_PROMOTION_PRODUCT = C.CD_PROMOTION_PRODUCT 
	**/
	INNER JOIN TB_PROMOTION_PRODUCT_VS_TOTAL C  WITH(NOLOCK) 
	   ON B.IDX = C.PRODUCT_PRICE_IDX
    INNER JOIN TB_PROMOTION_BY_TOTAL D
	   ON C.CD_PROMOTION_TOTAL = D.CD_PROMOTION_TOTAL 
	   AND ( D.USABLE_YN ='Y' AND D.USABLE_YN IS NOT NULL )  
	   AND ( D.PMO_TOTAL_DATE_FROM <= GETDATE() AND D.PMO_TOTAL_DATE_TO >=GETDATE() ) 
	INNER JOIN  TB_PROMOTION_BY_TOTAL_MEM_GRADE E WITH(NOLOCK) 
	   ON D.CD_PROMOTION_TOTAL = E.CD_PROMOTION_TOTAL 
	INNER JOIN TB_PROMOTION_BY_PRODUCT F
	   ON B.CD_PROMOTION_PRODUCT = F.CD_PROMOTION_PRODUCT
	   AND ( F.USABLE_YN ='Y' AND F.USABLE_YN IS NOT NULL )  
	   AND ( F.PMO_PRODUCT_DATE_FROM <= GETDATE() AND F.PMO_PRODUCT_DATE_TO >=GETDATE() )  
WHERE A.DISPLAY_YN = 'Y'
--WHERE E.M_GBN = 'S' AND E.M_GRADE = 'B'
GO
/****** Object:  View [dbo].[VIEW_PRODUCT_NO_PRD_PROMOTION_LIST]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 상품별 프로모션에 소속되지 않은 모든 상품의 리스트 
                  
 * Modified  :   2015.08.08
 * Modified  :     
 * Modified  :    

 ============================================================*/    
  
CREATE VIEW [dbo].[VIEW_PRODUCT_NO_PRD_PROMOTION_LIST]

AS
SELECT 
	P_CODE 
    --INTO #TEMP 
FROM TB_PRODUCT_INFO MP
WHERE DISPLAY_YN ='Y'  AND P_CODE NOT IN 
(
	SELECT 
		A.P_CODE 
	FROM 
	TB_PRODUCT_INFO A WITH(NOLOCK) INNER JOIN  TB_PROMOTION_BY_PRODUCT_PRICE B WITH(NOLOCK)   
		ON A.P_CODE = B.P_CODE AND A.DISPLAY_YN='Y' AND (B.USABLE_YN = 'Y' AND B.USABLE_YN IS NOT NULL)  
			INNER JOIN TB_PROMOTION_BY_PRODUCT F  
		ON B.CD_PROMOTION_PRODUCT = F.CD_PROMOTION_PRODUCT  
			AND ( F.USABLE_YN ='Y' AND F.USABLE_YN IS NOT NULL )    
			AND ( F.PMO_PRODUCT_DATE_FROM <= GETDATE() AND F.PMO_PRODUCT_DATE_TO >=GETDATE() )    
	WHERE A.DISPLAY_YN = 'Y'  
	  
 )
GO
/****** Object:  View [dbo].[VIEW_MEMBER_TOTAL]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-06-19
-- Description:	회원 + 탈퇴회원 VIEW
-- ussage: 
-- =============================================

CREATE VIEW [dbo].[VIEW_MEMBER_TOTAL]
AS
SELECT [M_NO],[M_ID],[M_NAME],[M_PWD],[M_GRADE],[M_SEX],[M_BIRTHDAY],[M_MOBILE],[M_PHONE],[M_EMAIL],[M_ZIPCODE],[M_ADDR1],[M_ADDR2],[M_ISSMS],[M_ISEMAIL],[M_ISDM],[M_POINT],[M_CREDATE],[M_VISITCNT],[M_LASTVISITDATE],[M_UPDATEDATE],[M_JOIN_MODE],[M_DI],[M_SKIN_TROUBLE_CD],[M_AGREE],[M_AGREE2],[M_GBN],[M_STAFF_COMPANY],[M_STAFF_ID],[M_STAFF_APPROV_DATE],[M_IS_RETIRE],[M_DEL_DATE],[M_DEL_POINT],[M_DEL_REASON],[M_DEVICE_GBN],[ZZ_OLD_PWD_MD5],[ZZ_ETC1],[ZZ_ETC2],[ZZ_ETC3]
FROM [AboutMe].[dbo].[TB_MEMBER] --활동회원
UNION ALL
SELECT [M_NO],[M_ID],[M_NAME],[M_PWD],[M_GRADE],[M_SEX],[M_BIRTHDAY],[M_MOBILE],[M_PHONE],[M_EMAIL],[M_ZIPCODE],[M_ADDR1],[M_ADDR2],[M_ISSMS],[M_ISEMAIL],[M_ISDM],[M_POINT],[M_CREDATE],[M_VISITCNT],[M_LASTVISITDATE],[M_UPDATEDATE],[M_JOIN_MODE],[M_DI],[M_SKIN_TROUBLE_CD],[M_AGREE],[M_AGREE2],[M_GBN],[M_STAFF_COMPANY],[M_STAFF_ID],[M_STAFF_APPROV_DATE],[M_IS_RETIRE],[M_DEL_DATE],[M_DEL_POINT],[M_DEL_REASON],[M_DEVICE_GBN],[ZZ_OLD_PWD_MD5],[ZZ_ETC1],[ZZ_ETC2],[ZZ_ETC3]
FROM [AboutMe].[dbo].[TB_MEMBER_RETIRE]--탈퇴회원
GO
/****** Object:  View [dbo].[VIEW_CLOSED_COUPON_LIST]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 사용완료되거나 기한이 지난 쿠폰 리스트    
                  
 * Modified  :   2015.08.18
 * Modified  :     
 * Modified  :    
 ============================================================*/    
  
CREATE VIEW [dbo].[VIEW_CLOSED_COUPON_LIST]  
AS  
  
  
SELECT  
  A.COUPON_GBN  -- M= 지불쿠폰, S=배송쿠폰  
 ,A.RATE_OR_MONEY -- R=정률 ,M=정액  
 ,A.USABLE_DEVICE_GBN -- P=PC AND 모바일 , M=모바일 전용  
    ,B.IDX_COUPON_NUMBER -- 쿠폰번호  
    ,A.CD_COUPON  
    ,A.COUPON_NAME -- 쿠폰명  
    ,A.COUPON_AD_MSG --  쿠폰 광고메시지  
    ,A.COUPON_USE_DESCRIPTION -- 쿠폰 사용조건 광고 DESCRIPTTION ( EX 30000~50000 이상 구매시 사용할 수 있습니다...)  
    ,B.COUPON_MONEY  -- 쿠폰 금액   
    ,B.COUPON_DISCOUNT_RATE --쿠폰할인율 (정률제의 경우)  
 ,B.USE_STATUS -- 쿠폰사용단계 : 발행(다운로드가능) = 1 , 사용가능(인증,다운로드완료)= 5 , 사용완료 = 10    
    ,B.ORDER_NO -- 사용주문번호  
    ,B.ORDER_DETAIL_NO --사용주문번호 상세  
    ,B.DOWNLOAD_DATE_FROM --다운로드가능일자(FROM)  
    ,B.DOWNLOAD_DATE_TO --다운로드가능일자(TO)  
    ,B.USABLE_DATE_FROM --사용가능기간(FROM)  
    ,B.USABLE_DATE_TO --사용가능기간(TO)  
    ,B.M_ID -- 이용자 아이디  
FROM  
TB_COUPON_MASTER A WITH(NOLOCK)  INNER JOIN TB_COUPON_ISSUED_DETAIL B WITH(NOLOCK)   
ON A.CD_COUPON = B.CD_COUPON   
   AND ( A.USABLE_YN IS NOT NULL AND A.USABLE_YN = 'Y' )  
   AND ( B.USABLE_TF IS NOT NULL AND B.USABLE_TF = 'Y' )  
   AND ( B.USABLE_DATE_TO < GETDATE() OR B.USE_STATUS = '10' ) -- 만료되거나 사용완료된 쿠폰
GO
/****** Object:  StoredProcedure [dbo].[SP_POPUP_WEB_SEL]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2015-08-10
-- Description:	팝업 조회
-- ussage: exec SP_POPUP_WEB_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_POPUP_WEB_SEL]
	
AS
BEGIN
	SET NOCOUNT ON;
	
		DECLARE @TODAY DATETIME = GETDATE();
		
		SELECT 
			IDX,
			MEDIA_GBN
			,TITLE
			,IS_DISPLAY
			,DISPLAY_START
			,DISPLAY_END
			
			,POS_TOP
			,POS_LEFT
			,SIZE_WIDTH
			,SIZE_HEIGHT
			
			,WEB_IMG
			,WEB_LINK
			,WEB_TARGET

		FROM TB_POPUP WITH (NOLOCK)
		WHERE IS_DISPLAY='Y' 
			AND IS_REMOVE<>'Y' 
			AND (MEDIA_GBN='10' OR MEDIA_GBN='30')
			AND (DISPLAY_START <= @TODAY AND DISPLAY_END >= @TODAY);

    SET NOCOUNT OFF;
    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POPUP_MOBILE_SEL]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2015-08-10
-- Description:	팝업 조회
-- ussage: exec SP_POPUP_MOBILE_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_POPUP_MOBILE_SEL]
	
AS
BEGIN
	SET NOCOUNT ON;
	
		DECLARE @TODAY DATETIME = GETDATE();
		
		SELECT 
			IDX,
			MEDIA_GBN
			,TITLE
			,IS_DISPLAY
			,DISPLAY_START
			,DISPLAY_END
			
			,POS_TOP
			,POS_LEFT
			,SIZE_WIDTH
			,SIZE_HEIGHT
		
			
			,MOBILE_IMG
			,MOBILE_LINK
		FROM TB_POPUP WITH (NOLOCK)
		WHERE IS_DISPLAY='Y' 
			AND IS_REMOVE<>'Y' 
			AND (MEDIA_GBN='20' OR MEDIA_GBN='30')
			AND (DISPLAY_START <= @TODAY AND DISPLAY_END >= @TODAY);

    SET NOCOUNT OFF;
    
END


--------------------------------------------------------------------
--------------------------------------------------------------------


SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[SP_POPUP_DETAIL]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2015-08-10
-- Description:	팝업 조회
-- ussage: exec SP_POPUP_DETAIL
-- =============================================
CREATE PROCEDURE [dbo].[SP_POPUP_DETAIL]
	@IDX INT = NULL
AS
BEGIN
	SET NOCOUNT ON;

		SELECT 
			IDX
			,TITLE			
			,WEB_IMG
			,WEB_LINK
			,WEB_TARGET			
			,MOBILE_IMG
			,MOBILE_LINK
			,INS_DATE
		FROM TB_POPUP WITH (NOLOCK)
		WHERE IDX=@IDX;

    SET NOCOUNT OFF;    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_STEP2_BASEADDR_INFO]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_STEP2_BASEADDR_INFO
주문페이지에서 회원정보(기본주소)를 조회할때

파라미터 설명
@M_ID : 회원ID

SELECT * FROM TB_ORDER_MASTER_TMP
SELECT * FROM TB_ORDER_DETAIL_TMP


exec SP_ORDER_STEP2_BASEADDR_INFO 'test_b1s'

*/
CREATE PROCEDURE [dbo].[SP_ORDER_STEP2_BASEADDR_INFO]
 @M_ID	VARCHAR(13)
AS
BEGIN
	SET NOCOUNT ON

	SELECT M_ID
		, M_NAME
		, M_ZIPCODE
		--, isnull(PARSENAME(REPLACE(M_ZIPCODE, '-', '.'), 2),'') as M_ZIPCODE1 
		--, isnull(PARSENAME(REPLACE(M_ZIPCODE, '-', '.'), 1),'') as M_ZIPCODE2
		, M_ADDR1
		, M_ADDR2
		, isnull(PARSENAME(REPLACE(M_PHONE, '-', '.'), 3),'') as M_PHONE1 
		, isnull(PARSENAME(REPLACE(M_PHONE, '-', '.'), 2),'') as M_PHONE2
		, isnull(PARSENAME(REPLACE(M_PHONE, '-', '.'), 1),'') as M_PHONE3
		, isnull(PARSENAME(REPLACE(M_MOBILE, '-', '.'), 3),'') as M_MOBILE1 
		, isnull(PARSENAME(REPLACE(M_MOBILE, '-', '.'), 2),'') as M_MOBILE2
		, isnull(PARSENAME(REPLACE(M_MOBILE, '-', '.'), 1),'') as M_MOBILE3
		, substring(M_EMAIL,0,charindex('@',M_EMAIL,0)) as M_EMAIL1
		, substring(M_EMAIL,charindex('@',M_EMAIL,0)+1, len(M_EMAIL)) as M_EMAIL2
	FROM TB_MEMBER WITH (NOLOCK)
	WHERE M_ID = @M_ID


	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_STEP2_ADDR_SAVE]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_STEP2_ADDR_SAVE
주문페이지에서 [지금주소로 저장]을 클릭할때
넘어온 데이터를 회원정보로 저정

파라미터 설명
 @M_ID	VARCHAR(13)			-- 회원ID
,@SENDER_POST VARCHAR(7)	-- 우편번호
,@SENDER_ADDR1 VARCHAR(255)	-- 주소1
,@SENDER_ADDR2 VARCHAR(255)	-- 주소2
,@SENDER_TEL1 VARCHAR(3)	-- 전화번호1
,@SENDER_TEL2 VARCHAR(4)	-- 전화번호2
,@SENDER_TEL3 VARCHAR(4)	-- 전화번호3
,@SENDER_HP1 VARCHAR(3)		-- 핸드폰번호1
,@SENDER_HP2 VARCHAR(4)		-- 핸드폰번호2
,@SENDER_HP3 VARCHAR(4)		-- 핸드폰번호3
,@SENDER_EMAIL1 VARCHAR(30)	-- 이메일 앞자리
,@SENDER_EMAIL2 VARCHAR(150)	-- 이메일 뒷자리


SELECT * FROM TB_MEMBER
WHERE M_ID = 'KMG5302'


exec SP_ORDER_STEP2_ADDR_SAVE 'KMG5302','40425','인천 서구 가좌동','코너스톤','070','4226','1289','010','2256','0318','KMG','gxensoft.com'

*/
CREATE PROCEDURE [dbo].[SP_ORDER_STEP2_ADDR_SAVE]
 @M_ID	VARCHAR(13)			-- 회원ID
,@SENDER_POST VARCHAR(7)	-- 우편번호
,@SENDER_ADDR1 VARCHAR(255)	-- 주소1
,@SENDER_ADDR2 VARCHAR(255)	-- 주소2
,@SENDER_TEL1 VARCHAR(3)	-- 전화번호1
,@SENDER_TEL2 VARCHAR(4)	-- 전화번호2
,@SENDER_TEL3 VARCHAR(4)	-- 전화번호3
,@SENDER_HP1 VARCHAR(3)		-- 핸드폰번호1
,@SENDER_HP2 VARCHAR(4)		-- 핸드폰번호2
,@SENDER_HP3 VARCHAR(4)		-- 핸드폰번호3
,@SENDER_EMAIL1 VARCHAR(30)	-- 이메일 앞자리
,@SENDER_EMAIL2 VARCHAR(150)	-- 이메일 뒷자리
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @SENDER_TEL VARCHAR(15) = ''
		, @SENDER_HP VARCHAR(15) = ''
		, @SENDER_EMAIL VARCHAR(200) = ''

	SET @SENDER_TEL = @SENDER_TEL1 + '-' + @SENDER_TEL2 + '-' + @SENDER_TEL3
	SET @SENDER_HP = @SENDER_HP1 + '-' + @SENDER_HP2 + '-' + @SENDER_HP3
	SET @SENDER_EMAIL = @SENDER_EMAIL1 + '@' + @SENDER_EMAIL2

	UPDATE A
	SET A.M_ZIPCODE = @SENDER_POST
		, A.M_ADDR1 = @SENDER_ADDR1
		, A.M_ADDR2 = @SENDER_ADDR2
		, A.M_PHONE = @SENDER_TEL
		, A.M_MOBILE = @SENDER_HP
		, A.M_EMAIL = @SENDER_EMAIL
	FROM TB_MEMBER A
	WHERE A.M_ID = @M_ID


	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_SAVE_TOTAL]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-06-27
-- Description:	지정한 사용자의 총 적립 포인트
-- ussage: exec SP_POINT_SAVE_TOTAL '회원아이디' -> 총적립 포인트
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_SAVE_TOTAL]
 @M_ID	varchar(13) = NULL, -- 회원아이디
 @GET_TOTAL_SAVE_POINT INT  = 0 OUTPUT
AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	
	DECLARE @TOTAL_SAVE_POINT INT;
	/**
		누적 적립금 합산
	*/
	SELECT @TOTAL_SAVE_POINT = SUM(SAVE_POINT + SAVE_OFFSET_POINT)
	FROM  TB_POINT_SAVE WITH (NOLOCK)
	WHERE M_ID=@M_ID AND EXPIRE_YN='N' AND (SAVE_POINT + SAVE_OFFSET_POINT) > 0
	
	/**
		합산 값이 NULL일 경우 0
	*/
	IF @TOTAL_SAVE_POINT IS NULL
	BEGIN
		SET @TOTAL_SAVE_POINT = 0;
	END
	
	--PRINT '@TOTAL_SAVE_POINT : ' + CAST(@TOTAL_SAVE_POINT AS VARCHAR);
	
	SET @GET_TOTAL_SAVE_POINT = @TOTAL_SAVE_POINT;
	
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	
	RETURN @TOTAL_SAVE_POINT;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_SAVE_SETUP_MEMBER_OLD_POINT]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-06-26
-- Description:	기존 보유중인 포인트 적립. 사이트 오픈 초기에만 사용할 것.
-- ussage: exec SP_POINT_SAVE_SETUP_MEMBER_OLD_POINT
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_SAVE_SETUP_MEMBER_OLD_POINT]

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	
	INSERT INTO TB_POINT_SAVE (M_ID,SAVE_POINT,SAVE_SUM_POINT,SAVE_CODE)
	SELECT TM.M_ID, TM.M_POINT, TM.M_POINT, 'S05'
	FROM TB_MEMBER AS TM
	LEFT JOIN TB_POINT_SAVE AS TPS
	ON TM.M_ID = TPS.M_ID
	WHERE TPS.M_ID IS NULL AND TM.M_POINT > 0 AND TM.M_IS_RETIRE<>'Y'

	
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 

/*
INSERT INTO TB_B (id)
SELECT A.id 
FROM TB_A AS A 
LEFT JOIN TB_B AS B 
ON A.id = B.id 
WHERE B.id IS NULL


*/
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_LOG]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-06-26
-- Description:	포인트 관련 로그
-- ussage: exec SP_POINT_LOG
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_LOG]
	@CODE VARCHAR(5) = NULL
	,@M_ID VARCHAR(30) = NULL
	,@POINT INT = NULL
	,@COMMENT VARCHAR(4000) = NULL
	,@ORDER_CODE VARCHAR(20) = NULL
	,@ORDER_DETAIL_IDX INT = NULL
AS
BEGIN
SET NOCOUNT ON

	INSERT INTO TB_POINT_LOG (
		CODE
		,M_ID
		,POINT
		,COMMENT
		,ORDER_CODE
		,ORDER_DETAIL_IDX
	) VALUES (
		@CODE
		,@M_ID
		,@POINT
		,@COMMENT
		,@ORDER_CODE
		,@ORDER_DETAIL_IDX
	);
	
SET NOCOUNT OFF
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_MY_HISTORY_CNT]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2015-08-07
-- Description:	관리자 포인트 내역 총합
-- ussage: exec SP_POINT_MY_HISTORY_CNT '회원아이디'
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_MY_HISTORY_CNT]
	@M_ID varchar(13) = NULL -- 회원아이디
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN

	/**
		회원 확인
	
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		RETURN(1);
	END
*/
	select COUNT(M_ID) AS CNT
	FROM (
		SELECT M_ID
			FROM TB_POINT_SAVE WITH(NOLOCK)
		WHERE M_ID=@M_ID
			UNION ALL
		SELECT M_ID
			FROM TB_POINT_USE WITH(NOLOCK)
		WHERE M_ID=@M_ID
	) A;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_MEMBER_UPDATE]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-07
-- Description:	회원 테이블의 마이 포인트 갱신
-- ussage: exec SP_POINT_MEMBER_UPDATE
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_MEMBER_UPDATE] 
@M_ID varchar(13) = NULL -- 회원아이디
,@CURRENT_POINT INT = NULL --현재 포인트
,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;

	/**
		회원 확인
	*/
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		RETURN(1);
	END
	
	IF @CURRENT_POINT < 0
	BEGIN
		PRINT '입력하는 포인트는 0 이상이어야 합니다';
		SET @RET_NUM = '2';
		SET @RET_MESSAGE = '입력하는 포인트는 0 이상이어야 합니다';
		RETURN(2)
	END
	
	
	UPDATE TB_MEMBER
	SET M_POINT = @CURRENT_POINT
	WHERE M_ID=@M_ID;
	
	SET NOCOUNT OFF ; 
	
	SET @RET_NUM = '0';
	RETURN(0)
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_MEMBER_SEL]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2015.07.02
-- Description:	포인트 테스트를 위힌 임시 회원목록
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_MEMBER_SEL]
@PAGE				INT = 1		--현재 PAGE
,@PAGESIZE			INT = 10		--페이지 사이즈
,@SEARCH_KEY		VARCHAR(100) = ''	--검색 필드
,@SEARCH_VALUE		VARCHAR(100) = ''	--검색 값
AS
BEGIN
	SET NOCOUNT ON;
	
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				-- declaration + dummy query 
				-- to allow EF obtain complex data type:
				DECLARE @MyStoredProcResult TABLE(
					M_NO INT NOT NULL,
					M_ID VARCHAR(13) NOT NULL,
					M_NAME VARCHAR(30) NOT NULL,
					M_GRADE VARCHAR(1) NOT NULL,
					M_POINT INT NOT NULL,
					M_CREDATE DATETIME NOT NULL,
					M_GBN VARCHAR(1) NOT NULL
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END   

	----------------------------------------	
	DECLARE @LISTCOUNT INT	

	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @V_SQL NVARCHAR(MAX);
	 
	-----------------------------

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		M_ID_TMP	varchar(13)
	)
	
	set @v_SQL_ORDERBY = ' M_CREDATE DESC ' ;
	set @v_SQL_WHERE = ' (1=1) AND M_IS_RETIRE<>''Y''';
	
	IF @SEARCH_KEY <>'' AND @SEARCH_VALUE <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_KEY + ' like ''%' + @SEARCH_VALUE + '%'') ';
 

	
	SET @V_SQL  = 'INSERT INTO #TEMPLIST (M_ID_TMP)'
	SET @V_SQL  = @V_SQL + ' SELECT M_ID ';
	SET @V_SQL  = @V_SQL + ' FROM TB_MEMBER WITH (NOLOCK) '
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	SET @V_SQL  = @V_SQL + ' ORDER BY ' +  @v_SQL_ORDERBY;
	print @V_SQL;

	SET @LISTCOUNT = @PAGE * @PAGESIZE;
	SET ROWCOUNT @LISTCOUNT;
	
	EXEC(@V_SQL);
	
	SET ROWCOUNT 0 ; --기본값 복원 
	
	SELECT 	
	M_NO,
	M_ID,
	M_NAME,
	M_GRADE,
	M_POINT,
	M_CREDATE,
	M_GBN
	from TB_MEMBER a with (nolock)
		inner join #TEMPLIST t on a.M_ID = t.M_ID_TMP
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;
	
	
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_MEMBER_PROFILE]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-14
-- Description:	구매시 포인트 사용
-- ussage: exec SP_POINT_MEMBER_PROFILE '회원아이디'
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_MEMBER_PROFILE]
	@M_ID varchar(13) = NULL -- 회원아이디
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN

	SET NOCOUNT ON;
	
	/**
		회원 확인
	*/
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		RETURN(1);
	END
	
	SELECT M_ID, M_NAME, M_GRADE,M_POINT,M_EMAIL,M_PHONE,M_MOBILE FROM TB_MEMBER
	WHERE M_ID=@M_ID;
	
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_STEP2_SENDER_RECEIVER_SAVE]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_STEP2_SENDER_RECEIVER_SAVE
주문페이지에서 [주문결제]버튼을 클릭할때, 가장먼저 호출되는 프로시져
보낸사람,받는사람정보를 주문테이블에 저장
이때, 비회원의 경우 비밀번호도 함께 저장

파라미터 설명
 @ORDER_IDX	INT				-- 주문번호
,@SENDER_NAME VARCHAR(30)	-- 주문자 이름
,@SENDER_POST VARCHAR(7)	-- 주문자 우편번호
,@SENDER_ADDR1 VARCHAR(255)	-- 주문자 주소1
,@SENDER_ADDR2 VARCHAR(255)	-- 주문자 주소2
,@SENDER_TEL1 VARCHAR(3)	-- 주문자 전화번호1
,@SENDER_TEL2 VARCHAR(4)	-- 주문자 전화번호2
,@SENDER_TEL3 VARCHAR(4)	-- 주문자 전화번호3
,@SENDER_HP1 VARCHAR(3)		-- 주문자 핸드폰번호1
,@SENDER_HP2 VARCHAR(4)		-- 주문자 핸드폰번호2
,@SENDER_HP3 VARCHAR(4)		-- 주문자 핸드폰번호3
,@SENDER_EMAIL1 VARCHAR(30)	-- 주문자 이메일 앞자리
,@SENDER_EMAIL2 VARCHAR(150)	-- 주문자 이메일 뒷자리

,@RECEIVER_NAME VARCHAR(30)	-- 받는사람 이름
,@RECEIVER_POST VARCHAR(7)	-- 받는사람 우편번호
,@RECEIVER_ADDR1 VARCHAR(255)	-- 받는사람 주소1
,@RECEIVER_ADDR2 VARCHAR(255)	-- 받는사람 주소2
,@RECEIVER_TEL1 VARCHAR(3)	-- 받는사람 전화번호1
,@RECEIVER_TEL2 VARCHAR(4)	-- 받는사람 전화번호2
,@RECEIVER_TEL3 VARCHAR(4)	-- 받는사람 전화번호3
,@RECEIVER_HP1 VARCHAR(3)		-- 받는사람 핸드폰번호1
,@RECEIVER_HP2 VARCHAR(4)		-- 받는사람 핸드폰번호2
,@RECEIVER_HP3 VARCHAR(4)		-- 받는사람 핸드폰번호3

,@ORDER_MEMO VARCHAR(500)		-- 배송시 요청사항

,@NOMEMBER_PASS VARCHAR(20)		-- 비회원 비밀번호 (비회원의 경우만 전달. 기본값은 '')

SELECT * FROM TB_ORDER_MASTER_TMP


exec SP_ORDER_STEP2_SENDER_RECEIVER_SAVE 1,'고민권','40425','인천 서구 가좌동','코너스톤','070','4226','1289','010','2256','0318','KMG','gxensoft.com','강병철','40425','인천 서구 가좌동','코너스톤','070','4226','1289','010','2256','0318','조심히 배달요망'

*/
CREATE PROCEDURE [dbo].[SP_ORDER_STEP2_SENDER_RECEIVER_SAVE]
 @ORDER_IDX	INT				-- 주문번호
,@SENDER_NAME VARCHAR(30)	-- 주문자 이름
,@SENDER_POST VARCHAR(7)	-- 주문자 우편번호
,@SENDER_ADDR1 VARCHAR(255)	-- 주문자 주소1
,@SENDER_ADDR2 VARCHAR(255)	-- 주문자 주소2
,@SENDER_TEL1 VARCHAR(3)	-- 주문자 전화번호1
,@SENDER_TEL2 VARCHAR(4)	-- 주문자 전화번호2
,@SENDER_TEL3 VARCHAR(4)	-- 주문자 전화번호3
,@SENDER_HP1 VARCHAR(3)		-- 주문자 핸드폰번호1
,@SENDER_HP2 VARCHAR(4)		-- 주문자 핸드폰번호2
,@SENDER_HP3 VARCHAR(4)		-- 주문자 핸드폰번호3
,@SENDER_EMAIL1 VARCHAR(30)	-- 주문자 이메일 앞자리
,@SENDER_EMAIL2 VARCHAR(150)	-- 주문자 이메일 뒷자리

,@RECEIVER_NAME VARCHAR(30)	-- 받는사람 이름
,@RECEIVER_POST VARCHAR(7)	-- 받는사람 우편번호
,@RECEIVER_ADDR1 VARCHAR(255)	-- 받는사람 주소1
,@RECEIVER_ADDR2 VARCHAR(255)	-- 받는사람 주소2
,@RECEIVER_TEL1 VARCHAR(3)	-- 받는사람 전화번호1
,@RECEIVER_TEL2 VARCHAR(4)	-- 받는사람 전화번호2
,@RECEIVER_TEL3 VARCHAR(4)	-- 받는사람 전화번호3
,@RECEIVER_HP1 VARCHAR(3)		-- 받는사람 핸드폰번호1
,@RECEIVER_HP2 VARCHAR(4)		-- 받는사람 핸드폰번호2
,@RECEIVER_HP3 VARCHAR(4)		-- 받는사람 핸드폰번호3

,@ORDER_MEMO VARCHAR(500)		-- 배송시 요청사항

,@NOMEMBER_PASS VARCHAR(20) = ''		-- 비회원 비밀번호 (비회원의 경우만 전달. 기본값은 '')
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @SENDER_TEL VARCHAR(15) = ''
		, @SENDER_HP VARCHAR(15) = ''
		, @SENDER_EMAIL VARCHAR(200) = ''
		, @RECEIVER_TEL VARCHAR(15) = ''
		, @RECEIVER_HP VARCHAR(15) = ''

	SET @SENDER_TEL = @SENDER_TEL1 + '-' + @SENDER_TEL2 + '-' + @SENDER_TEL3
	SET @SENDER_HP = @SENDER_HP1 + '-' + @SENDER_HP2 + '-' + @SENDER_HP3
	SET @SENDER_EMAIL = @SENDER_EMAIL1 + '@' + @SENDER_EMAIL2

	SET @RECEIVER_TEL = @RECEIVER_TEL1 + '-' + @RECEIVER_TEL2 + '-' + @RECEIVER_TEL3
	SET @RECEIVER_HP = @RECEIVER_HP1 + '-' + @RECEIVER_HP2 + '-' + @RECEIVER_HP3

	UPDATE A
	SET A.SENDER_NAME = @SENDER_NAME
		, A.SENDER_POST = @SENDER_POST
		, A.SENDER_ADDR1 = @SENDER_ADDR1
		, A.SENDER_ADDR2 = @SENDER_ADDR2
		, A.SENDER_TEL = @SENDER_TEL
		, A.SENDER_HP = @SENDER_HP
		, A.SENDER_EMAIL = @SENDER_EMAIL
		, A.RECEIVER_NAME = @RECEIVER_NAME
		, A.RECEIVER_POST = @RECEIVER_POST
		, A.RECEIVER_ADDR1 = @RECEIVER_ADDR1
		, A.RECEIVER_ADDR2 = @RECEIVER_ADDR2
		, A.RECEIVER_TEL = @RECEIVER_TEL
		, A.RECEIVER_HP = @RECEIVER_HP
		, A.ORDER_MEMO = @ORDER_MEMO
		, A.NOMEMBER_PASS = @NOMEMBER_PASS
	FROM TB_ORDER_MASTER_TMP A
	WHERE A.ORDER_IDX = @ORDER_IDX


	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_STEP2_RECENTADDR_INFO]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_STEP2_RECENTADDR_INFO
주문페이지에서 최근 배송지를 조회할때

파라미터 설명
@M_ID : 회원ID

SELECT * FROM TB_ORDER_MASTER_TMP
SELECT * FROM TB_ORDER_DETAIL_TMP


exec SP_ORDER_STEP2_RECENTADDR_INFO 'test_b1s'

*/
CREATE PROCEDURE [dbo].[SP_ORDER_STEP2_RECENTADDR_INFO]
 @M_ID	VARCHAR(13)
AS
BEGIN
	SET NOCOUNT ON

	SELECT TOP 1 
		RECEIVER_NAME
		--, isnull(PARSENAME(REPLACE(RECEIVER_POST, '-', '.'), 2),'') as RECEIVER_POST1 
		--, isnull(PARSENAME(REPLACE(RECEIVER_POST, '-', '.'), 1),'') as RECEIVER_POST2 
		, RECEIVER_POST
		, RECEIVER_ADDR1
		, RECEIVER_ADDR2
		, isnull(PARSENAME(REPLACE(RECEIVER_TEL, '-', '.'), 3),'') as RECEIVER_TEL1 
		, isnull(PARSENAME(REPLACE(RECEIVER_TEL, '-', '.'), 2),'') as RECEIVER_TEL2
		, isnull(PARSENAME(REPLACE(RECEIVER_TEL, '-', '.'), 1),'') as RECEIVER_TEL3
		, isnull(PARSENAME(REPLACE(RECEIVER_HP, '-', '.'), 3),'') as RECEIVER_HP1 
		, isnull(PARSENAME(REPLACE(RECEIVER_HP, '-', '.'), 2),'') as RECEIVER_HP2
		, isnull(PARSENAME(REPLACE(RECEIVER_HP, '-', '.'), 1),'') as RECEIVER_HP3
	FROM TB_ORDER_MASTER WITH (NOLOCK)
	WHERE M_ID = @M_ID
	ORDER BY ORDER_IDX DESC


	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_STEP2_PRODUCT_LIST]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_STEP2_PRODUCT_LIST
주문페이지 상단의 주문제품리스트

파라미터 설명
@ORDER_IDX		-- ORDER_MASTER_TMP 주문일련번호

SELECT * FROM TB_ORDER_MASTER_TMP
SELECT * FROM TB_ORDER_DETAIL_TMP

exec SP_ORDER_STEP2_PRODUCT_LIST 296

*/
CREATE PROCEDURE [dbo].[SP_ORDER_STEP2_PRODUCT_LIST]
 @ORDER_IDX	INT
AS
BEGIN
	SET NOCOUNT ON

	SELECT OD.ORDER_DETAIL_IDX
		, OD.P_CODE
		, OD.P_IMG1_S
		, OD.P_NAME
		, OD.P_COUNT
		, OD.PROMOTION_TYPE
		, CASE WHEN ISNULL(OD.PROMOTION_TYPE,'') = '99' THEN '-' 
			WHEN ISNULL(OD.PROMOTION_TYPE,'') = '01' THEN 'SET상품' 
			WHEN ISNULL(OD.PROMOTION_TYPE,'') = '02' THEN '1+1' 
			WHEN ISNULL(OD.PROMOTION_TYPE,'') = '03' THEN '일반할인' 
			ELSE '코드오류' END AS PROMOTION
		, ISNULL(PP.PMO_PRODUCT_NAME,'') AS PROMOTION_NAME
		, OD.SELLING_PRICE					-- 정상가
		, OD.DISCOUNT_PRICE					-- 할인가
		, OD.EMP_DISCOUNT_AMT				-- 임직원 할인받은 금액
		, OD.EMP_DISCOUNT_PRICE				-- 임직원 할인가
		, OD.IDX_COUPON_NUMBER				-- 적용된 쿠폰IDX
		, ISNULL(OD.CD_COUPON,'') AS CD_COUPON			-- 적용된 쿠폰코드
		, ISNULL(CM.COUPON_NAME,'') AS COUPON_NAME		-- 적용된 쿠폰명
		, OD.COUPON_DISCOUNT_AMT						-- 쿠폰으로 할인받은 금액
		, CASE WHEN OD.RATE_OR_MONEY = 'M' THEN OD.COUPON_DISCOUNT_PRICE
			   ELSE OD.COUPON_DISCOUNT_PRICE * OD.P_COUNT 
			   END AS COUPON_DISCOUNT_PRICE	-- 쿠폰이 적용된 금액 ([[[중요]]]리스트상단에서 주문금액에는 이 금액을 뿌려줘야 함)
		, OD.USE_POINT					-- 사용한 포인트가 제품별로 나뉘어져 들어간 금액
		, OD.GRADE_DISCOUNT_AMT			-- 등급 할인받은 금액
		, OD.ORDER_PRICE AS ORDER_PRICE			-- 상단에 표시될 상품가격
		, OD.REAL_PAY_PRICE				-- 제품별 실제 구매금액
		, OD.POINT_ACCML				-- 제품별 적립예정 포인트
		, OD.P_SUB_TITLE
		, OD.ICON_NEW
		, OD.ICON_BEST
		, OD.ICON_SOLDOUT
		, OD.ICON_CUSTOM
		, OD.ICON_ONEPLUS
		, OD.ICON_SET
		, OD.ICON_TIME
		, OD.ICON_COUPON
		
	FROM TB_ORDER_DETAIL_TMP OD WITH (NOLOCK)
		LEFT OUTER JOIN TB_PROMOTION_BY_PRODUCT PP WITH (NOLOCK)
			ON OD.CD_PROMOTION_PRODUCT = PP.CD_PROMOTION_PRODUCT
		LEFT OUTER JOIN TB_COUPON_MASTER CM WITH (NOLOCK)
			ON OD.CD_COUPON = CM.CD_COUPON
	WHERE OD.ORDER_IDX = @ORDER_IDX
	ORDER BY OD.ORDER_DETAIL_IDX


	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_STEP2_PRICE_INFO]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_STEP2_PRICE_INFO
주문페이지 각종 금액 합

파라미터 설명
@ORDER_IDX		-- ORDER_MASTER_TMP 주문일련번호

SELECT * FROM TB_ORDER_MASTER_TMP
SELECT * FROM TB_ORDER_DETAIL_TMP

exec SP_ORDER_STEP2_PRODUCT_LIST 1
exec SP_ORDER_STEP2_PRICE_INFO 1

*/
CREATE PROCEDURE [dbo].[SP_ORDER_STEP2_PRICE_INFO]
 @ORDER_IDX	INT
AS
BEGIN
	SET NOCOUNT ON

	SELECT OM.TOTAL_ORDER_PRICE + OM.TRANS_PRICE AS TOTAL_PRICE		-- 배송비가 포함된 상품금액
		, OM.TOTAL_ORDER_PRICE			-- 할인전 정상가 (상품자체의 할인가는 적용된)
		, OM.TRANS_PRICE				-- 배송비
		
		, OM.DISCOUNT_AMT				-- 할인금액 합
		, OM.EMP_DISCOUNT_AMT			-- 임직원 할인 합
		, OM.COUPON_DISCOUNT_AMT		-- 쿠폰으로 할인받은 금액 합
		, OM.POINT_USE_PRICE			-- 보유포인트 사용값
		, OM.GRADE_DISCOUNT_AMT			-- 등급으로 할인받은 금액 합

		, OM.TOTAL_PAY_PRICE			-- 총 결제금액
		, OM.ACCML_POINT				-- 예상 적립포인트 합		
		
	FROM TB_ORDER_MASTER_TMP OM WITH (NOLOCK)
	WHERE OM.ORDER_IDX = @ORDER_IDX


	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_STEP2_POINT_APPLY]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_STEP2_POINT_APPLY
[주문페이지] 특정상품에 포인트 적용

파라미터 설명
@M_ID	VARCHAR(13)			-- 회원ID
@ORDER_IDX	INT				-- 포인트를 적용할 주문번호
@USE_POINT	INT				-- 사용할 포인트금액 (0으로 전달시 기존포인트 적용내역 삭제)


SELECT * FROM TB_ORDER_MASTER_TMP
SELECT * FROM TB_ORDER_DETAIL_TMP

SELECT *
FROM TB_MEMBER
--	UPDATE TB_MEMBER SET M_POINT = 1000000
WHERE M_ID = 'test_b1s'

exec SP_ORDER_STEP2_POINT_APPLY 'test_b1s',48,200000
	


DECLARE @ORDER_IDX INT = 48
SELECT * FROM TB_ORDER_MASTER_TMP WHERE ORDER_IDX = @ORDER_IDX
SELECT * FROM TB_ORDER_DETAIL_TMP WHERE ORDER_IDX = @ORDER_IDX

*/
CREATE PROCEDURE [dbo].[SP_ORDER_STEP2_POINT_APPLY]
@M_ID	VARCHAR(13)			-- 회원ID
,@ORDER_IDX	INT				-- 포인트를 적용할 주문번호
,@USE_POINT	INT				-- 사용할 포인트금액
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @SAVE_POINT_VAL NUMERIC(10,3) = 0.0
	
	SELECT @SAVE_POINT_VAL = CASE WHEN M_GRADE = 'V' THEN 0.05
								  WHEN M_GRADE = 'G' THEN 0.03
								  ELSE 0.02 END
	FROM TB_MEMBER
	WHERE M_ID = @M_ID
	
	UPDATE A
	SET A.TRANS_COUPON = NULL
	FROM TB_ORDER_MASTER_TMP A
	WHERE A.ORDER_IDX = @ORDER_IDX

	IF @USE_POINT > 0
	BEGIN
		-- 사용할만큼 포인트가 실제 존재하는지 검사
		DECLARE @M_POINT INT = 0
		
		SELECT @M_POINT = ISNULL(A.M_POINT,0)
		FROM TB_MEMBER A WITH (NOLOCK)
		WHERE A.M_ID = @M_ID
		
		IF @USE_POINT > @M_POINT
		BEGIN
			-- PRINT '포인트 부족'
			RETURN
		END

		UPDATE A
		SET A.POINT_ACCML = FLOOR( ( A.ORDER_PRICE - A.COUPON_DISCOUNT_AMT - A.GRADE_DISCOUNT_AMT ) * @SAVE_POINT_VAL )
			, A.REAL_PAY_PRICE = ( A.ORDER_PRICE - A.COUPON_DISCOUNT_AMT  - A.GRADE_DISCOUNT_AMT )
		FROM TB_ORDER_DETAIL_TMP A
		WHERE A.ORDER_IDX = @ORDER_IDX

		UPDATE A
		SET A.USE_POINT = 0
		FROM TB_ORDER_DETAIL_TMP A
		WHERE A.ORDER_IDX = @ORDER_IDX
		PRINT '초기화 완료'

		-- 포인트 분배
		DECLARE @REAL_PAY_PRICE_SUM INT = 0
		SELECT @REAL_PAY_PRICE_SUM = SUM(REAL_PAY_PRICE)
		FROM TB_ORDER_DETAIL_TMP A WITH (NOLOCK)
		WHERE A.ORDER_IDX = @ORDER_IDX

		UPDATE A
		SET A.USE_POINT = FLOOR( @USE_POINT * ( A.REAL_PAY_PRICE * 1.0 / @REAL_PAY_PRICE_SUM ) )
		FROM TB_ORDER_DETAIL_TMP A
		WHERE A.ORDER_IDX = @ORDER_IDX

		DECLARE @REAL_POINT_SUM INT = 0
		SELECT @REAL_POINT_SUM = SUM(USE_POINT)
		FROM TB_ORDER_DETAIL_TMP A WITH (NOLOCK)
		WHERE A.ORDER_IDX = @ORDER_IDX

		DECLARE @MAX_ORDER_DETAIL_IDX INT
		SELECT TOP 1 @MAX_ORDER_DETAIL_IDX = ORDER_DETAIL_IDX
		FROM TB_ORDER_DETAIL_TMP A WITH (NOLOCK)
		WHERE A.ORDER_IDX = @ORDER_IDX
		
		UPDATE A
		SET A.USE_POINT = A.USE_POINT + ( @USE_POINT - @REAL_POINT_SUM )
		FROM TB_ORDER_DETAIL_TMP A
		WHERE A.ORDER_DETAIL_IDX = @MAX_ORDER_DETAIL_IDX
	END
	ELSE BEGIN
		UPDATE A
		SET A.USE_POINT = 0
		FROM TB_ORDER_DETAIL_TMP A
		WHERE A.ORDER_IDX = @ORDER_IDX
	END

	-- DETAIL 업데이트
	UPDATE A
	SET A.GRADE_DISCOUNT_AMT = 0
	FROM TB_ORDER_DETAIL_TMP A
	WHERE A.ORDER_IDX = @ORDER_IDX
	AND A.GRADE_PMO_TOTAL_RATE_OR_MONEY IS NULL

	UPDATE A
	SET A.GRADE_DISCOUNT_AMT = 
			CASE WHEN A.GRADE_PMO_TOTAL_RATE_OR_MONEY = 'R' 
				THEN ( ( ( A.COUPON_DISCOUNT_PRICE * A.P_COUNT ) - A.USE_POINT )  - FLOOR( ( ( A.COUPON_DISCOUNT_PRICE * A.P_COUNT ) - A.USE_POINT ) / 100.0 * ( 100 - A.GRADE_PMO_TOTAL_DISCOUNT_RATE ) ) ) 
			ELSE ( A.GRADE_PMO_TOTAL_DISCOUNT_MONEY * A.P_COUNT ) END
	FROM TB_ORDER_DETAIL_TMP A
	WHERE A.ORDER_IDX = @ORDER_IDX
	AND A.GRADE_DISCOUNT = 1
	AND A.GRADE_PMO_TOTAL_RATE_OR_MONEY IS NOT NULL

	UPDATE A
	SET A.POINT_ACCML = FLOOR( ( ( A.EMP_DISCOUNT_PRICE * A.P_COUNT ) - A.COUPON_DISCOUNT_AMT - A.USE_POINT - A.GRADE_DISCOUNT_AMT ) * @SAVE_POINT_VAL )
		, A.REAL_PAY_PRICE = ( A.ORDER_PRICE - A.COUPON_DISCOUNT_AMT - A.USE_POINT - A.GRADE_DISCOUNT_AMT )
	FROM TB_ORDER_DETAIL_TMP A
	WHERE A.ORDER_IDX = @ORDER_IDX



	UPDATE A
	SET A.GRADE_DISCOUNT_AMT = CASE WHEN A.GRADE_DISCOUNT_AMT < 0 THEN 0 ELSE A.GRADE_DISCOUNT_AMT END
		, A.POINT_ACCML = CASE WHEN A.POINT_ACCML < 0 THEN 0 ELSE A.POINT_ACCML END
		, A.REAL_PAY_PRICE = CASE WHEN A.REAL_PAY_PRICE < 0 THEN 0 ELSE A.REAL_PAY_PRICE END
	FROM TB_ORDER_DETAIL_TMP A
	WHERE A.ORDER_IDX = @ORDER_IDX



	/*
		상품의 가격들을 SUM하여 TB_ORDER_MASTER_TMP에 업데이트
	*/
	;
	WITH SRC AS (
	SELECT MAX(ORDER_IDX) AS ORDER_IDX
		, SUM(SELLING_PRICE) AS SELLING_PRICE
		, SUM(DISCOUNT_PRICE * P_COUNT) AS DISCOUNT_PRICE		
		, SUM(ORDER_PRICE) AS ORDER_PRICE
		, SUM(COUPON_DISCOUNT_AMT) AS COUPON_DISCOUNT_AMT
		, SUM(USE_POINT) AS USE_POINT
		, SUM(GRADE_DISCOUNT_AMT) AS GRADE_DISCOUNT_AMT
		, SUM(EMP_DISCOUNT_AMT) AS EMP_DISCOUNT_AMT
		, SUM(REAL_PAY_PRICE) AS REAL_PAY_PRICE
		, SUM(POINT_ACCML) AS POINT_ACCML
	FROM TB_ORDER_DETAIL_TMP
	WHERE ORDER_IDX = @ORDER_IDX
	)
--	SELECT * FROM TB_ORDER_MASTER_TMP
	UPDATE A
	SET A.TOTAL_ORDER_PRICE = SRC.DISCOUNT_PRICE
		, A.COUPON_DISCOUNT_AMT = SRC.COUPON_DISCOUNT_AMT
		, A.GRADE_DISCOUNT_AMT = SRC.GRADE_DISCOUNT_AMT
		, A.POINT_USE_PRICE = SRC.USE_POINT
		, A.EMP_DISCOUNT_AMT = SRC.EMP_DISCOUNT_AMT
		, A.DISCOUNT_AMT = SRC.COUPON_DISCOUNT_AMT + SRC.GRADE_DISCOUNT_AMT + SRC.EMP_DISCOUNT_AMT + SRC.USE_POINT
		, A.TOTAL_PAY_PRICE = SRC.REAL_PAY_PRICE
		, A.ACCML_POINT = SRC.POINT_ACCML
	FROM TB_ORDER_MASTER_TMP A, SRC
	WHERE A.ORDER_IDX = SRC.ORDER_IDX
	AND A.ORDER_IDX = @ORDER_IDX

	UPDATE A
	SET A.TRANS_PRICE = CASE WHEN A.TOTAL_PAY_PRICE >= 30000 THEN 0 WHEN ISNULL(A.TRANS_COUPON,0) > 0 THEN 0 ELSE 2500 END
		, A.TOTAL_PAY_PRICE = A.TOTAL_PAY_PRICE + CASE WHEN A.TOTAL_PAY_PRICE >= 30000 THEN 0 WHEN ISNULL(A.TRANS_COUPON,0) > 0 THEN 0 ELSE 2500 END
	FROM TB_ORDER_MASTER_TMP A
	WHERE A.ORDER_IDX = @ORDER_IDX



	SELECT A.POINT_USE_PRICE
	FROM TB_ORDER_MASTER_TMP A WITH (NOLOCK)
	WHERE A.ORDER_IDX = @ORDER_IDX

/*
SELECT	
	COUPON_DISCOUNT_AMT, GRADE_PMO_TOTAL_DISCOUNT_RATE
	,FLOOR(A.COUPON_DISCOUNT_AMT / 100.0 * ( 100 - A.GRADE_PMO_TOTAL_DISCOUNT_RATE ) ),
			CASE WHEN A.GRADE_PMO_TOTAL_RATE_OR_MONEY = 'R' THEN ( A.COUPON_DISCOUNT_AMT  - FLOOR(A.COUPON_DISCOUNT_AMT / 100.0 * ( 100 - A.GRADE_PMO_TOTAL_DISCOUNT_RATE ) ) ) * A.P_COUNT
			ELSE ( A.GRADE_PMO_TOTAL_DISCOUNT_MONEY * A.P_COUNT ) END
	FROM TB_ORDER_DETAIL_TMP A
	WHERE A.ORDER_IDX = 1
	
exec SP_ORDER_STEP2_COUPON_APPLY 'test_b1s',5,100009089
exec SP_ORDER_STEP2_COUPON_APPLY 'test_b1s',2,100019360


DECLARE @ORDER_IDX INT = 2
SELECT * FROM TB_ORDER_MASTER_TMP WHERE ORDER_IDX = @ORDER_IDX
SELECT * FROM TB_ORDER_DETAIL_TMP WHERE ORDER_IDX = @ORDER_IDX

*/

	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_STEP2_DISCOUNT_INFO]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_STEP2_DISCOUNT_INFO
주문페이지 할인혜택 정보

파라미터 설명
@ORDER_IDX		-- ORDER_MASTER_TMP 주문일련번호

SELECT * FROM TB_ORDER_MASTER_TMP
SELECT * FROM TB_ORDER_DETAIL_TMP

exec SP_ORDER_STEP2_DISCOUNT_INFO 1

*/
CREATE PROCEDURE [dbo].[SP_ORDER_STEP2_DISCOUNT_INFO]
 @ORDER_IDX	INT
AS
BEGIN
	SET NOCOUNT ON

	SELECT OM.ORDER_IDX
		, OM.COUPON_DISCOUNT_AMT		-- 쿠폰으로 할인받은 금액 합
		, OM.POINT_USE_PRICE			-- 보유포인트 사용값
		, OM.GRADE_DISCOUNT_AMT			-- 등급으로 할인받은 금액 합
		, OM.TRANS_PRICE				-- 배송비
		, OM.TRANS_COUPON				-- 사용된 배송쿠폰 ID
		
		
	FROM TB_ORDER_MASTER_TMP OM WITH (NOLOCK)
	WHERE OM.ORDER_IDX = @ORDER_IDX


	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_SHOPINFO_LIST]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_SHOPINFO_LIST
매장 리스트 조회

SELECT * FROM TB_SHOPINFO

exec SP_SHOPINFO_LIST
*/
CREATE PROCEDURE [dbo].[SP_SHOPINFO_LIST]
AS
BEGIN

	SET NOCOUNT ON

	SELECT A.IDX
		, A.SHOP_NAME
		, A.TEL_NUM
		, A.POST
		, A.ADDR1
		, A.ADDR2
		, A.LOCATION_INFO
		, A.LATITUDE
		, A.LONGITUDE
		, A.DISPLAY_ORDER
		, A.USE_YN
		, A.ADM_ID
		, A.REG_DATE
	FROM TB_SHOPINFO A WITH (NOLOCK)
	WHERE A.USE_YN = 'Y'
	ORDER BY A.DISPLAY_ORDER, A.REG_DATE DESC

	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_SAMPLE_VIEW]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_SAMPLE_VIEW
샘플/체험단 조회

SELECT * FROM TB_SAMPLE

*/
CREATE PROCEDURE [dbo].[SP_SAMPLE_VIEW]
@IDX INT
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT 
		a.IDX
		,a.SAMPLE_NAME
		,a.FROM_DATE
		,a.FROM_TIME
		,a.TO_DATE
		,a.TO_TIME
		,a.SAMPLE_GBN
		,a.WEB_CONTENTS
		,a.MOBILE_FILE
		,a.WEB_BANNER
		,a.MOBILE_BANNER
		,a.USE_YN
		,a.ADM_ID
		,a.REG_DATE
	FROM TB_SAMPLE a WITH (NOLOCK)
	WHERE a.IDX = @IDX
	AND a.USE_YN = 'Y'
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_SAMPLE_REQUEST]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_SAMPLE_REQUEST
샘플/체험단 조회

SELECT * FROM TB_SAMPLE

SELECT * FROM TB_SAMPLE_MEMBER 

EXEC SP_SAMPLE_REQUEST 5,'test_b1s'

*/
CREATE PROCEDURE [dbo].[SP_SAMPLE_REQUEST]
@SAMPLE_IDX INT
, @M_ID VARCHAR(13)
AS
BEGIN

	SET NOCOUNT ON

	DECLARE @SAMPLE_CNT INT = 0
	
	SELECT @SAMPLE_CNT = COUNT(*)
	FROM TB_SAMPLE A WITH (NOLOCK)
	WHERE A.FROM_DATE + ' ' + A.FROM_TIME  <= CONVERT(CHAR(13), GETDATE(), 121 )
	AND A.TO_DATE + ' ' + A.TO_TIME  >= CONVERT(CHAR(13), GETDATE(), 121 )
	AND A.USE_YN = 'Y'
	AND A.IDX = @SAMPLE_IDX
	
	IF @SAMPLE_CNT = 0
	BEGIN
		RAISERROR ('해당 데이터는 존재하지 않거나, 신청기간이 아닙니다.',16,1);
		RETURN
	END

	SELECT @SAMPLE_CNT = COUNT(*)
	FROM TB_SAMPLE_MEMBER A WITH (NOLOCK)
	WHERE SAMPLE_IDX = @SAMPLE_IDX
	AND M_ID = @M_ID

	IF @SAMPLE_CNT > 0
	BEGIN
		RAISERROR ('이미 신청되었습니다.',16,1);
		RETURN
	END

	INSERT TB_SAMPLE_MEMBER (SAMPLE_IDX, M_ID, REG_DATE)
	VALUES ( @SAMPLE_IDX, @M_ID, GETDATE() )
	
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_PRODUCT_UPD]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-17
-- Description:	상품 리뷰 수정
-- ussage: exec SP_REVIEW_PRODUCT_UPD
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_PRODUCT_UPD]
	@IDX INT = NULL -- 리뷰 고유 아이디
	,@COMMENT TEXT = NULL -- 내용
	,@ADD_IMAGE VARCHAR(100) = NULL -- 이미지
	
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
	
	/**
		리뷰 작성여부
	*/
	IF NOT EXISTS ( SELECT IDX FROM TB_REVIEW_PRODUCT WITH (NOLOCK) WHERE IDX=@IDX )
	BEGIN 
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '해당 상품리뷰가 존재하지 않습니다.';
		RETURN(1);
	END
	
	UPDATE TB_REVIEW_PRODUCT
		SET COMMENT=@COMMENT,
			ADD_IMAGE = @ADD_IMAGE
	WHERE IDX=@IDX;

		
    SET NOCOUNT OFF;
    
    SET @RET_NUM = 0;
    SET @RET_MESSAGE = 'SUCCESS';
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_PRODUCT_SEL]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-24
-- Description:	리뷰 목록 조회.
-- ussage: exec SP_REVIEW_PRODUCT_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_PRODUCT_SEL]
	@TAIL_IDX INT = NULL
	,@CATE_CODE VARCHAR(9) = ''
	,@SORT VARCHAR(1) = '' --기본 포토 정렬
	,@TOTAL INT OUTPUT
AS
BEGIN
	SET NOCOUNT ON;
	
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				DECLARE @MyStoredProcResult TABLE(
						IDX INT,
						M_ID VARCHAR(13),
						M_ID_LBL VARCHAR(13),
						M_NAME VARCHAR(30),
						M_SEX CHAR(1),
						M_SEX_LBL VARCHAR(2) ,
						M_BIRTHDAY VARCHAR(10),						
						M_BIRTHDAY_LBL VARCHAR(5) ,
						ORDER_DETAIL_IDX INT,
						P_CODE VARCHAR(10),
						P_NAME VARCHAR(100),
						P_SUB_TITLE VARCHAR(200),
						C_CATE_CODE CHAR(9),
						P_MAIN_IMG VARCHAR(100),
						CATE_GBN VARCHAR(3),
						SKIN_TYPE CHAR(2),
						SKIN_TYPE_LBL VARCHAR(5),
						SKIN_TYPE_CSS VARCHAR(5),
						COMMENT TEXT,
						ADD_IMAGE VARCHAR(100),
						IS_PHOTO VARCHAR(1),
						IS_BEST VARCHAR(1),
						INS_DATE DATETIME
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END   
	
	DECLARE @TOP_LIMIT INT = 10;
	DECLARE @v_SQL_WHERE NVARCHAR(MAX)='';
	DECLARE @v_SQL_ORDERBY NVARCHAR(MAX)='';
	DECLARE @V_SQL NVARCHAR(MAX)='';
	
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  drop table #TEMPLIST ;
	  --print 'drop...'
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)	
	
	SET @v_SQL_WHERE = ' (1=1) AND IS_DISPLAY=''Y''   ';


	
	
	IF CHARINDEX('101',@CATE_CODE) = 1 OR  CHARINDEX('102',@CATE_CODE) = 1  OR  CHARINDEX('103',@CATE_CODE) = 1 
		BEGIN
			
			DECLARE @DEPTH1 VARCHAR(6) = SUBSTRING(@CATE_CODE, 1,3);
			DECLARE @DEPTH2 VARCHAR(6) = SUBSTRING(@CATE_CODE, 1,6);
			DECLARE @DEPTH3 VARCHAR(6) = SUBSTRING(@CATE_CODE, 4,6);
			
			print @DEPTH1;
			print @DEPTH2;
			IF @DEPTH3 = '100100' --전체
				BEGIN 
					SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND R.C_CATE_CODE like '''+@DEPTH1+'%'' ';
				END 
			ELSE
				BEGIN 
					SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND R.C_CATE_CODE like '''+@DEPTH2+'%'' ';
				END 
		END
	ELSE
		BEGIN
			--SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND TAG like '''+@DEPTH2+'%'' ';
			
			DECLARE @TAG VARCHAR(MAX) = '';
			
			SELECT @TAG = TAG FROM TB_REVIEW_CATE_THEMA WITH (NOLOCK) WHERE CODE=@CATE_CODE;
			
			DECLARE @WHERE_TAG VARCHAR(MAX)='';
			DECLARE @DELIMITER VARCHAR(10)= ',';
			DECLARE @START INT, @END INT 
			SELECT @START = 1, @END = CHARINDEX(@DELIMITER, @TAG) 
			WHILE @START < LEN(@TAG) + 1 BEGIN 
				IF @END = 0  
					SET @END = LEN(@TAG) + 1;
					
					DECLARE @WORD VARCHAR(MAX);
					SET @WORD = ltrim(rtrim(SUBSTRING(@TAG, @START, @END - @START)));
					
					DECLARE @STR_OR VARCHAR(2) = 'OR';
					IF @WHERE_TAG = ''
					BEGIN 
						SET @STR_OR = '';
					END
					
					SET @WHERE_TAG = @WHERE_TAG + @STR_OR+' P.P_TAG LIKE ''%' +@WORD+ '%'' '
					
					PRINT @WHERE_TAG;
					PRINT @START;

				SET @START = @END + 1;
				SET @END = CHARINDEX(@DELIMITER, @TAG, @START);
			END 
			
			IF @WHERE_TAG <> ''
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ('+ @WHERE_TAG + ')';
			END			
		END
	
	/**
		정렬
	*/
	SET @v_SQL_ORDERBY = 'IS_BEST DESC';
	
	IF @SORT = '0'
		BEGIN
			set @v_SQL_ORDERBY = @v_SQL_ORDERBY +  ' ,IS_PHOTO DESC ' ;
			set @v_SQL_ORDERBY = @v_SQL_ORDERBY + ', IDX DESC ' ;
		END
	ELSE IF @SORT = '1'
		BEGIN
			set @v_SQL_ORDERBY = @v_SQL_ORDERBY + ', IDX DESC ' ;
			set @v_SQL_ORDERBY = @v_SQL_ORDERBY +  ' ,IS_PHOTO DESC ' ;
		END
	
	

	
	SET @V_SQL  = 'INSERT INTO #TEMPLIST (IDX_TMP)';
	SET @V_SQL  = @V_SQL + ' SELECT R.IDX';	
	SET @V_SQL  = @V_SQL + ' FROM TB_REVIEW_PRODUCT AS R WITH (NOLOCK) ';
	SET @V_SQL  = @V_SQL + ' INNER JOIN TB_PRODUCT_INFO AS P WITH (NOLOCK) ';
	SET @V_SQL  = @V_SQL + ' ON R.P_CODE=P.P_CODE ';
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	SET @V_SQL  = @V_SQL + ' ORDER BY ' +  @v_SQL_ORDERBY;
	
	print @V_SQL;

	
	EXEC(@V_SQL);	
	
	DECLARE @SEQ_TMP INT;
	
	IF @TAIL_IDX IS NULL OR @TAIL_IDX=-1
		BEGIN
			SET @SEQ_TMP = 0;
		END 
	ELSE
		BEGIN
			SELECT @SEQ_TMP = SEQ FROM #TEMPLIST WITH (NOLOCK) WHERE IDX_TMP = @TAIL_IDX;
		END
	
	
	SELECT @TOTAL = COUNT(SEQ) FROM #TEMPLIST WITH (NOLOCK);
	/*
	SELECT TOP (@TOP_LIMIT)
		@NEXT_TAIL_IDX = IDX		
	FROM TB_REVIEW_PRODUCT A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T WITH (NOLOCK)
		ON A.IDX = T.IDX_TMP
	WHERE @SEQ_TMP < T.SEQ
	ORDER BY T.SEQ ASC ;
	*/
	
	SELECT TOP (@TOP_LIMIT)
		IDX,
		M_ID,
		(
			LEFT(M_ID, LEN(M_ID) - LEN(M_ID)/2) +  SUBSTRING('**************', 1, LEN(M_ID)/2)
		) 
		AS M_ID_LBL,
		M_NAME,		
		M_SEX,
		(
			CASE M_SEX
			 WHEN '1' THEN '남자'
			 WHEN '2' THEN '여자'
			 ELSE ''
			END						
		) AS M_SEX_LBL,
		M_BIRTHDAY,						
		(
			CONVERT(varchar, DATEDIFF(yyyy,convert(datetime, M_BIRTHDAY, 0),GETDATE()) /10 * 10)
		) AS M_BIRTHDAY_LBL,
		ORDER_DETAIL_IDX,
		P_CODE,
		P_NAME,
		P_SUB_TITLE,
		A.C_CATE_CODE,
		P_MAIN_IMG,
		IS_BEST,
		CATE_GBN,
		SKIN_TYPE,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN '건성'
				WHEN '20' THEN '중성'
				WHEN '30' THEN '지복합성'
				ELSE ''
			END 
		) AS SKIN_TYPE_LBL,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN 'dry'
				WHEN '20' THEN 'normal'
				WHEN '30' THEN 'oily'
				ELSE ''
			END 
		) AS SKIN_TYPE_CSS,
		COMMENT,
		ADD_IMAGE,
		IS_PHOTO,
		INS_DATE
	FROM TB_REVIEW_PRODUCT A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T WITH (NOLOCK)
		ON A.IDX = T.IDX_TMP
	WHERE @SEQ_TMP < T.SEQ
	ORDER BY T.SEQ ASC ;
	
	--SELECT * FROM @TMP_TBL WITH (NOLOCK);
	
	
	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END 
	
	SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_PRODUCT_READY_SEL]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-16
-- Description:	작성 가능한 리뷰 조회. 확정된 주문 상품만 리뷰 작성 가능 (60)
-- ussage: exec SP_REVIEW_PRODUCT_READY_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_PRODUCT_READY_SEL]
	@M_ID varchar(13) = NULL -- 회원아이디
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
	
		
	SELECT 
		S.ORDER_CODE
		,S.ORDER_DETAIL_IDX
		,M.M_ID
		,M.M_NAME
		,S.P_CODE
		,S.P_NAME
		,S.C_CATE_CODE
		,S.P_IMG1_S
		,S.REAL_PAY_PRICE
		,S.P_COUNT
		,P.P_SUB_TITLE
	FROM  
		TB_ORDER_MASTER  AS M WITH (NOLOCK) 
			INNER JOIN 
		TB_ORDER_DETAIL AS S WITH (NOLOCK)
			ON M.ORDER_IDX = S.ORDER_IDX
				LEFT JOIN
		TB_REVIEW_PRODUCT AS R WITH (NOLOCK)
			ON S.ORDER_DETAIL_IDX = R.ORDER_DETAIL_IDX
				LEFT JOIN				
		TB_PRODUCT_INFO AS P WITH (NOLOCK)
			ON S.P_CODE = P.P_CODE
	WHERE M.M_ID=@M_ID 
		AND S.ORDER_DETAIL_STATUS='60' AND R.IDX IS NULL;
	
	SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_PRODUCT_READY_CNT]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-16
-- Description:	작성 가능한 리뷰 총수. 확정된 주문 상품만 리뷰 작성 가능 (60)
-- ussage: exec SP_REVIEW_PRODUCT_READY_CNT
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_PRODUCT_READY_CNT]
	@M_ID varchar(13) = NULL -- 회원아이디
AS
BEGIN
	SET NOCOUNT ON;
	
		
	SELECT 
		COUNT(S.ORDER_DETAIL_IDX)
	FROM  
		TB_ORDER_MASTER  AS M WITH (NOLOCK) 
			INNER JOIN 
		TB_ORDER_DETAIL AS S WITH (NOLOCK)
			ON M.ORDER_IDX = S.ORDER_IDX
				LEFT JOIN
		TB_REVIEW_PRODUCT AS R WITH (NOLOCK)
			ON S.ORDER_DETAIL_IDX = R.ORDER_DETAIL_IDX
				LEFT JOIN				
		TB_PRODUCT_INFO AS P WITH (NOLOCK)
			ON S.P_CODE = P.P_CODE
	WHERE M.M_ID=@M_ID 
		AND S.ORDER_DETAIL_STATUS='60' AND R.IDX IS NULL;
	
	SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_PRODUCT_MOBILE_SEL]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-24
-- Description:	리뷰 목록 조회.
-- ussage: exec SP_REVIEW_PRODUCT_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_PRODUCT_MOBILE_SEL]
	@PAGE INT =  NULL
	,@PAGESIZE INT=  NULL
	,@CATE_CODE VARCHAR(9) = ''
	,@SORT VARCHAR(1) = '' --기본 포토 정렬
	
	,@TOTAL_PAGE INT OUTPUT
	,@TOTAL_ITEM INT OUTPUT
AS
BEGIN
	SET NOCOUNT ON;
	
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				DECLARE @MyStoredProcResult TABLE(
						IDX INT,
						M_ID VARCHAR(13),
						M_ID_LBL VARCHAR(13),
						M_NAME VARCHAR(30),
						M_SEX CHAR(1),
						M_SEX_LBL VARCHAR(2) ,
						M_BIRTHDAY VARCHAR(10),						
						M_BIRTHDAY_LBL VARCHAR(5) ,
						ORDER_DETAIL_IDX INT,
						P_CODE VARCHAR(10),
						P_NAME VARCHAR(100),
						P_SUB_TITLE VARCHAR(200),
						C_CATE_CODE CHAR(9),
						P_MAIN_IMG VARCHAR(100),
						CATE_GBN VARCHAR(3),
						SKIN_TYPE CHAR(2),
						SKIN_TYPE_LBL VARCHAR(5),
						SKIN_TYPE_CSS VARCHAR(5),
						COMMENT TEXT,
						ADD_IMAGE VARCHAR(100),
						IS_PHOTO VARCHAR(1),
						IS_BEST VARCHAR(1),
						INS_DATE DATETIME
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END 
	  
	DECLARE @LISTCOUNT INT;
	--DECLARE @TOP_LIMIT INT = 10;
	DECLARE @v_SQL_WHERE NVARCHAR(MAX)='';
	DECLARE @v_SQL_ORDERBY NVARCHAR(MAX)='';
	DECLARE @V_SQL NVARCHAR(MAX)='';
	
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  drop table #TEMPLIST ;
	  --print 'drop...'
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)	
	
	SET @v_SQL_WHERE = ' (1=1) AND IS_DISPLAY=''Y''   ';


	
	
	IF CHARINDEX('101',@CATE_CODE) = 1 OR  CHARINDEX('102',@CATE_CODE) = 1  OR  CHARINDEX('103',@CATE_CODE) = 1 
		BEGIN
			
			DECLARE @DEPTH1 VARCHAR(6) = SUBSTRING(@CATE_CODE, 1,3);
			DECLARE @DEPTH2 VARCHAR(6) = SUBSTRING(@CATE_CODE, 1,6);
			DECLARE @DEPTH3 VARCHAR(6) = SUBSTRING(@CATE_CODE, 4,6);
			
			print @DEPTH1;
			print @DEPTH2;
			IF @DEPTH3 = '100100' --전체
				BEGIN 
					SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND R.C_CATE_CODE like '''+@DEPTH1+'%'' ';
				END 
			ELSE
				BEGIN 
					SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND R.C_CATE_CODE like '''+@DEPTH2+'%'' ';
				END 
		END
	ELSE
		BEGIN
			--SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND TAG like '''+@DEPTH2+'%'' ';
			
			DECLARE @TAG VARCHAR(MAX) = '';
			
			SELECT @TAG = TAG FROM TB_REVIEW_CATE_THEMA WITH (NOLOCK) WHERE CODE=@CATE_CODE;
			
			DECLARE @WHERE_TAG VARCHAR(MAX)='';
			DECLARE @DELIMITER VARCHAR(10)= ',';
			DECLARE @START INT, @END INT 
			SELECT @START = 1, @END = CHARINDEX(@DELIMITER, @TAG) 
			WHILE @START < LEN(@TAG) + 1 BEGIN 
				IF @END = 0  
					SET @END = LEN(@TAG) + 1;
					
					DECLARE @WORD VARCHAR(MAX);
					SET @WORD = ltrim(rtrim(SUBSTRING(@TAG, @START, @END - @START)));
					
					DECLARE @STR_OR VARCHAR(2) = 'OR';
					IF @WHERE_TAG = ''
					BEGIN 
						SET @STR_OR = '';
					END
					
					SET @WHERE_TAG = @WHERE_TAG + @STR_OR+' P.P_TAG LIKE ''%' +@WORD+ '%'' '
					
					PRINT @WHERE_TAG;
					PRINT @START;

				SET @START = @END + 1;
				SET @END = CHARINDEX(@DELIMITER, @TAG, @START);
			END 
			
			IF @WHERE_TAG <> ''
			BEGIN
				SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND ('+ @WHERE_TAG + ')';
			END			
		END
	
	/**
		정렬
	*/
	SET @v_SQL_ORDERBY = 'IS_BEST DESC';
	
	IF @SORT = '0'
		BEGIN
			set @v_SQL_ORDERBY = @v_SQL_ORDERBY +  ' ,IS_PHOTO DESC ' ;
			set @v_SQL_ORDERBY = @v_SQL_ORDERBY + ', IDX DESC ' ;
		END
	ELSE IF @SORT = '1'
		BEGIN
			set @v_SQL_ORDERBY = @v_SQL_ORDERBY + ', IDX DESC ' ;
			set @v_SQL_ORDERBY = @v_SQL_ORDERBY +  ' ,IS_PHOTO DESC ' ;
		END
	
	/**
		총수
	*/	
	SET @V_SQL  = 'SELECT @rowcount=COUNT(R.IDX) ';	
	SET @V_SQL  = @V_SQL + ' FROM TB_REVIEW_PRODUCT AS R WITH (NOLOCK) ';
	SET @V_SQL  = @V_SQL + ' INNER JOIN TB_PRODUCT_INFO AS P WITH (NOLOCK) ';
	SET @V_SQL  = @V_SQL + ' ON R.P_CODE=P.P_CODE ';
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	
	print @V_SQL;
	
	EXEC sp_executesql @V_SQL, N'@rowcount int output', @TOTAL_ITEM output;
	
	print @TOTAL_ITEM;
	
	SET @TOTAL_PAGE = CEILING (@TOTAL_ITEM/(@PAGESIZE *1.0));
	IF @TOTAL_PAGE = 0
		SET @TOTAL_PAGE = 1;

	/*
		조회
	*/
	SET @V_SQL  = 'INSERT INTO #TEMPLIST (IDX_TMP)';
	SET @V_SQL  = @V_SQL + ' SELECT R.IDX';	
	SET @V_SQL  = @V_SQL + ' FROM TB_REVIEW_PRODUCT AS R WITH (NOLOCK) ';
	SET @V_SQL  = @V_SQL + ' INNER JOIN TB_PRODUCT_INFO AS P WITH (NOLOCK) ';
	SET @V_SQL  = @V_SQL + ' ON R.P_CODE=P.P_CODE ';
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	SET @V_SQL  = @V_SQL + ' ORDER BY ' +  @v_SQL_ORDERBY;
	
	print @V_SQL;
	
	SET @LISTCOUNT = @PAGE * @PAGESIZE;
	SET ROWCOUNT @LISTCOUNT;
	
	EXEC(@V_SQL);	

	SET ROWCOUNT 0 ; --기본값 복원 
	
	--SELECT @TOTAL_ITEM = COUNT(SEQ) FROM #TEMPLIST WITH (NOLOCK);
	SET @TOTAL_PAGE = CEILING (@TOTAL_ITEM/(@PAGESIZE *1.0));
	IF @TOTAL_PAGE = 0
		SET @TOTAL_PAGE = 1;
	
	SELECT
		IDX,
		M_ID,
		(
			LEFT(M_ID, LEN(M_ID) - LEN(M_ID)/2) +  SUBSTRING('**************', 1, LEN(M_ID)/2)
		) 
		AS M_ID_LBL,
		M_NAME,		
		M_SEX,
		(
			CASE M_SEX
			 WHEN '1' THEN '남자'
			 WHEN '2' THEN '여자'
			 ELSE ''
			END						
		) AS M_SEX_LBL,
		M_BIRTHDAY,						
		(
			CONVERT(varchar, DATEDIFF(yyyy,convert(datetime, M_BIRTHDAY, 0),GETDATE()) /10 * 10)
		) AS M_BIRTHDAY_LBL,
		ORDER_DETAIL_IDX,
		P_CODE,
		P_NAME,
		P_SUB_TITLE,
		A.C_CATE_CODE,
		P_MAIN_IMG,
		IS_BEST,
		CATE_GBN,
		SKIN_TYPE,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN '건성'
				WHEN '20' THEN '중성'
				WHEN '30' THEN '지복합성'
				ELSE ''
			END 
		) AS SKIN_TYPE_LBL,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN 'dry'
				WHEN '20' THEN 'normal'
				WHEN '30' THEN 'oily'
				ELSE ''
			END 
		) AS SKIN_TYPE_CSS,
		COMMENT,
		ADD_IMAGE,
		IS_PHOTO,
		INS_DATE
	FROM TB_REVIEW_PRODUCT A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T WITH (NOLOCK)
		ON A.IDX = T.IDX_TMP
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ ASC;	
	

	
	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END 
	
	SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_PRODUCT_INFO]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-04
-- Description:	상품 리뷰 상세
-- ussage: exec SP_REVIEW_PRODUCT_INFO
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_PRODUCT_INFO]
	@IDX INT = NULL -- 리뷰 고유 아이디
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
	
	
	IF NOT EXISTS( SELECT IDX FROM TB_REVIEW_PRODUCT WITH (NOLOCK) WHERE IDX=@IDX )
	BEGIN 
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않는 상품리뷰 입니다.';
		RETURN
	END
	
	SELECT 
		IDX,
		ORDER_DETAIL_IDX,
		M.M_ID,
		M.M_NAME,
		P_CODE,
		P_NAME,
		P_MAIN_IMG,
		P_SUB_TITLE,
		C_CATE_CODE,
		IS_BEST,		
		CATE_GBN,			
		COMMENT,
		IS_PHOTO,
		VIEW_CNT,
		M.M_GRADE,
		MEDIA_GBN,
		ADD_IMAGE,	
		IS_DISPLAY,	
		SKIN_TYPE,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN '건성'
				WHEN '20' THEN '중성'
				WHEN '30' THEN '지복합성'
				ELSE ''
			END 
		) AS SKIN_TYPE_LBL,
		INS_DATE
	FROM TB_REVIEW_PRODUCT  R WITH (NOLOCK)
			INNER JOIN
		TB_MEMBER  M WITH (NOLOCK)
		ON R.M_ID=M.M_ID
	WHERE IDX=@IDX;
		
    SET NOCOUNT OFF;
    
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_PRODUCT_IN_SHOPPING_DETAIL]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-28
-- Description:	 리뷰 상품 (상품 상세)
-- ussage: exec SP_REVIEW_PRODUCT_IN_SHOPPING_DETAIL
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_PRODUCT_IN_SHOPPING_DETAIL]
	@P_CODE VARCHAR(10) = NULL
	,@PAGE				INT = 1		--현재 PAGE
	,@PAGESIZE			INT = 10		--페이지 사이즈
	,@TOTAL INT = 0 OUTPUT
AS
BEGIN
	SET NOCOUNT ON;
	
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				DECLARE @MyStoredProcResult TABLE(
						IDX INT,
						M_ID VARCHAR(13),
						M_ID_LBL VARCHAR(13),
						M_NAME VARCHAR(30),
						M_SEX CHAR(1),
						M_SEX_LBL VARCHAR(2) ,
						M_BIRTHDAY VARCHAR(10),						
						M_BIRTHDAY_LBL VARCHAR(5) ,
						ORDER_DETAIL_IDX INT,
						P_CODE VARCHAR(10),
						P_NAME VARCHAR(100),
						P_SUB_TITLE VARCHAR(200),
						C_CATE_CODE CHAR(9),
						P_MAIN_IMG VARCHAR(100),
						CATE_GBN VARCHAR(3),
						SKIN_TYPE CHAR(2),
						SKIN_TYPE_LBL VARCHAR(5),
						SKIN_TYPE_CSS VARCHAR(5),
						COMMENT TEXT,
						ADD_IMAGE VARCHAR(100),
						IS_PHOTO VARCHAR(1),
						IS_BEST VARCHAR(1),
						INS_DATE DATETIME
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END 
	
	DECLARE @LISTCOUNT INT;

	DECLARE @v_SQL_WHERE NVARCHAR(MAX) ;
	DECLARE @v_SQL_ORDERBY NVARCHAR(MAX) ;
	DECLARE @V_SQL NVARCHAR(MAX);

	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	VARCHAR(13)
	)
	
	SET @v_SQL_WHERE = ' (1=1) AND IS_DISPLAY=''Y''';
	SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND P_CODE=''' + @P_CODE+'''';
	
	SET @v_SQL_ORDERBY = ' IDX DESC ' ;	
 
	SET @V_SQL  = 'INSERT INTO #TEMPLIST (IDX_TMP)'
	SET @V_SQL  = @V_SQL + ' SELECT IDX ';
	SET @V_SQL  = @V_SQL + ' FROM TB_REVIEW_PRODUCT WITH (NOLOCK) '
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	SET @V_SQL  = @V_SQL + ' ORDER BY ' +  @v_SQL_ORDERBY;
	
	--PRINT @V_SQL;
	
	SELECT @TOTAL = COUNT(IDX) FROM TB_REVIEW_PRODUCT WITH (NOLOCK) 
	WHERE P_CODE=@P_CODE AND IS_DISPLAY='Y'
	
	

	SET @LISTCOUNT = @PAGE * @PAGESIZE;
	SET ROWCOUNT @LISTCOUNT;
	
	EXEC(@V_SQL);
	
	SET ROWCOUNT 0 ; --기본값 복원 
	
	SELECT 	
		IDX,
		M_ID,
		(
			LEFT(M_ID, LEN(M_ID) - LEN(M_ID)/2) +  SUBSTRING('**************', 1, LEN(M_ID)/2)
		) 
		AS M_ID_LBL,
		M_NAME,		
		M_SEX,
		(
			CASE M_SEX
			 WHEN '1' THEN '남자'
			 WHEN '2' THEN '여자'
			 ELSE ''
			END						
		) AS M_SEX_LBL,
		M_BIRTHDAY,						
		(
			CONVERT(varchar, DATEDIFF(yyyy,convert(datetime, M_BIRTHDAY, 0),GETDATE()) /10 * 10)
		) AS M_BIRTHDAY_LBL,
		ORDER_DETAIL_IDX,
		P_CODE,
		P_NAME,
		P_SUB_TITLE,
		A.C_CATE_CODE,
		P_MAIN_IMG,
		IS_BEST,
		CATE_GBN,
		SKIN_TYPE,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN '건성'
				WHEN '20' THEN '중성'
				WHEN '30' THEN '지복합성'
				ELSE ''
			END 
		) AS SKIN_TYPE_LBL,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN 'dry'
				WHEN '20' THEN 'normal'
				WHEN '30' THEN 'oily'
				ELSE ''
			END 
		) AS SKIN_TYPE_CSS,
		COMMENT,
		ADD_IMAGE,
		IS_PHOTO,
		INS_DATE
	FROM TB_REVIEW_PRODUCT A WITH (NOLOCK)
			INNER JOIN 
		#TEMPLIST T WITH (NOLOCK)
			ON A.IDX = T.IDX_TMP
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ ASC;	
	
	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST;
	END
	
	
	SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_PRODUCT_COMPLETE_SEL]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-22
-- Description:	작성 완료 리뷰 조회.
-- ussage: exec SP_REVIEW_PRODUCT_COMPLETE_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_PRODUCT_COMPLETE_SEL]
	@M_ID varchar(13) = NULL -- 회원아이디
	,@PAGE				INT = 1		--현재 PAGE
	,@PAGESIZE			INT = 10		--페이지 사이즈
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE NVARCHAR(MAX) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
	
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				DECLARE @MyStoredProcResult TABLE(
						IDX INT,
						M_ID VARCHAR(13),
						M_ID_LBL VARCHAR(13),
						M_NAME VARCHAR(30),
						M_SEX CHAR(1),
						M_SEX_LBL VARCHAR(2) ,
						M_BIRTHDAY VARCHAR(10),						
						M_BIRTHDAY_LBL VARCHAR(5) ,
						ORDER_DETAIL_IDX INT,
						P_CODE VARCHAR(10),
						P_NAME VARCHAR(100),
						P_SUB_TITLE VARCHAR(200),
						C_CATE_CODE CHAR(9),
						P_MAIN_IMG VARCHAR(100),
						CATE_GBN VARCHAR(3),
						SKIN_TYPE CHAR(2),
						SKIN_TYPE_LBL VARCHAR(5),
						SKIN_TYPE_CSS VARCHAR(5),
						COMMENT TEXT,
						ADD_IMAGE VARCHAR(100),
						IS_PHOTO VARCHAR(1),
						IS_BEST VARCHAR(1),
						INS_DATE DATETIME
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END   

	/**
	
	*/
	DECLARE @LISTCOUNT INT;

	DECLARE @v_SQL_WHERE NVARCHAR(MAX) ;
	DECLARE @v_SQL_ORDERBY NVARCHAR(MAX) ;
	DECLARE @V_SQL NVARCHAR(MAX);

	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	VARCHAR(13)
	)
	
	--SET @v_SQL_WHERE = ' (1=1) AND IS_DISPLAY=''Y''';
	SET @v_SQL_WHERE = ' (1=1) ';
	SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND M_ID=''' + @M_ID+'''';
	
	SET @v_SQL_ORDERBY = ' IDX DESC ' ;	
 
	SET @V_SQL  = 'INSERT INTO #TEMPLIST (IDX_TMP)'
	SET @V_SQL  = @V_SQL + ' SELECT IDX ';
	SET @V_SQL  = @V_SQL + ' FROM TB_REVIEW_PRODUCT WITH (NOLOCK) '
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	SET @V_SQL  = @V_SQL + ' ORDER BY ' +  @v_SQL_ORDERBY;
	
	PRINT @V_SQL;

	SET @LISTCOUNT = @PAGE * @PAGESIZE;
	SET ROWCOUNT @LISTCOUNT;
	
	EXEC(@V_SQL);
	
	SET ROWCOUNT 0 ; --기본값 복원 
	
	SELECT 	
		IDX,
		M_ID,
		(M_ID+'**') AS M_ID_LBL,
		M_NAME,		
		M_SEX,
		(
			CASE M_SEX
			 WHEN '1' THEN '남자'
			 WHEN '2' THEN '여자'
			 ELSE ''
			END						
		) AS M_SEX_LBL,
		M_BIRTHDAY,						
		(
			CONVERT(varchar, DATEDIFF(yyyy,convert(datetime, M_BIRTHDAY, 0),GETDATE()) /10 * 10)
		) AS M_BIRTHDAY_LBL,
		ORDER_DETAIL_IDX,
		P_CODE,
		P_NAME,
		P_SUB_TITLE,
		A.C_CATE_CODE,
		P_MAIN_IMG,
		IS_BEST,
		CATE_GBN,
		SKIN_TYPE,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN '건성'
				WHEN '20' THEN '중성'
				WHEN '30' THEN '지복합성'
				ELSE ''
			END 
		) AS SKIN_TYPE_LBL,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN 'dry'
				WHEN '20' THEN 'normal'
				WHEN '30' THEN 'oily'
				ELSE ''
			END 
		) AS SKIN_TYPE_CSS,
		COMMENT,
		ADD_IMAGE,
		IS_PHOTO,
		INS_DATE
	FROM TB_REVIEW_PRODUCT A WITH (NOLOCK)
			INNER JOIN 
		#TEMPLIST T WITH (NOLOCK)
		ON A.IDX = T.IDX_TMP
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ ASC;	
	
	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  --print 'drop...'
	END 	 
		
    SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_PRODUCT_COMPLETE_CNT]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-22
-- Description:	작성 완료 리뷰 총게시물 수
-- ussage: exec SP_REVIEW_PRODUCT_COMPLETE_CNT
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_PRODUCT_COMPLETE_CNT]
	@M_ID varchar(13) = NULL -- 회원아이디
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT 	
		COUNT(IDX) as CNT
	FROM TB_REVIEW_PRODUCT
	WHERE M_ID=@M_ID;
	--WHERE M_ID=@M_ID AND IS_DISPLAY='Y';
	
	SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_PRODCUT_TOTAL_BY_PCODE]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2015-08-28
-- Description:	모바일 Talk on Beauty.
-- ussage: exec SP_REVIEW_PRODCUT_TOTAL_BY_PCODE
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_PRODCUT_TOTAL_BY_PCODE]
	@P_CODE VARCHAR(10) = NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT COUNT(IDX) AS CNT
		FROM TB_REVIEW_PRODUCT WITH (NOLOCK)
	WHERE P_CODE=@P_CODE;
		
			
	SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_PRODCUT_DETAIL_BY_MOST_REVIEW_PDT]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2015-08-28
-- Description:	모바일 Talk on Beauty.
-- ussage: exec SP_REVIEW_PRODCUT_DETAIL_BY_MOST_REVIEW_PDT
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_PRODCUT_DETAIL_BY_MOST_REVIEW_PDT]

AS
BEGIN
	SET NOCOUNT ON;
	
		SELECT TOP 1
			IDX,
			M_ID,
			(
				LEFT(M_ID, LEN(M_ID) - LEN(M_ID)/2) +  SUBSTRING('**************', 1, LEN(M_ID)/2)
			) 
			AS M_ID_LBL,
			M_NAME,		
			M_SEX,
			(
				CASE M_SEX
				 WHEN '1' THEN '남'
				 WHEN '2' THEN '여'
				 ELSE ''
				END						
			) AS M_SEX_LBL,
			M_BIRTHDAY,						
			(
				CONVERT(varchar, DATEDIFF(yyyy,convert(datetime, M_BIRTHDAY, 0),GETDATE()) /10 * 10)
			) AS M_BIRTHDAY_LBL,
			ORDER_DETAIL_IDX,
			P_CODE,
			P_NAME,
			P_SUB_TITLE,
			C_CATE_CODE,
			P_MAIN_IMG,
			IS_BEST,
			CATE_GBN,
			SKIN_TYPE,
			(
				CASE SKIN_TYPE
					WHEN '10' THEN '건성'
					WHEN '20' THEN '중성'
					WHEN '30' THEN '지복합성'
					ELSE ''
				END 
			) AS SKIN_TYPE_LBL,
			(
				CASE SKIN_TYPE
					WHEN '10' THEN 'dry'
					WHEN '20' THEN 'normal'
					WHEN '30' THEN 'oily'
					ELSE ''
				END 
			) AS SKIN_TYPE_CSS,
			COMMENT,
			ADD_IMAGE,
			IS_PHOTO,
			INS_DATE
		FROM TB_REVIEW_PRODUCT WITH (NOLOCK)
		WHERE IS_MOST_CNT='Y';
		
	SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_MY_EXP_UPD]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-11
-- Description:	나의 체험단 리뷰 수정
-- ussage: exec SP_REVIEW_MY_EXP_UPD
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_MY_EXP_UPD]
	@IDX INT,
	@M_ID VARCHAR(13)= NULL,
	@EXP_MASTER_IDX INT ,
	
	@P_CODE VARCHAR(10) = NULL,
	@TITLE VARCHAR(100) = NULL,
	@SKIN_TYPE VARCHAR(2) = NULL,
	@SUB_IMG_1 VARCHAR(100) = NULL,
	@SUB_IMG_2 VARCHAR(100) = NULL,
	@SUB_IMG_3 VARCHAR(100) = NULL,
	@TAG VARCHAR(100) = NULL,
	@COMMENT TEXT = NULL
	
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지

AS
BEGIN
	SET NOCOUNT ON;
	
		IF NOT EXISTS( SELECT IDX FROM TB_REVIEW_EXP_ARTICLE WITH (NOLOCK) WHERE M_ID=@M_ID AND EXP_MASTER_IDX=@EXP_MASTER_IDX)
		BEGIN
			SET @RET_NUM = '1';
			SET @RET_MESSAGE = '수정 권한이 없습니다';
			RETURN;
		END
		
	
		/**
			회원 확인
		*/
		IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
		BEGIN
			SET @RET_NUM = '3';
			SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
			RETURN(3);
		END
	
		DECLARE @IS_AUTH VARCHAR(1);
		SELECT @IS_AUTH = IS_AUTH FROM TB_REVIEW_EXP_MASTER WITH (NOLOCK) WHERE IDX=@EXP_MASTER_IDX;
		IF @IS_AUTH = 'N'
		BEGIN
			SET @RET_NUM = '2';
			SET @RET_MESSAGE = '당신은 권한이 없습니다. ';
			RETURN;
		END
		
		IF NOT EXISTS( SELECT IDX FROM TB_REVIEW_EXP_MASTER WITH (NOLOCK) WHERE IDX=@EXP_MASTER_IDX AND (GETDATE() >=FROM_DATE AND GETDATE() <= TO_DATE) )
		BEGIN
			SET @RET_NUM = '3';
			SET @RET_MESSAGE = '체험단 기간이 만료되었습니다.';
			RETURN;
		END
		
		
		IF NOT EXISTS( SELECT IDX FROM TB_REVIEW_EXP_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND EXP_MASTER_IDX=@EXP_MASTER_IDX)
		BEGIN
			SET @RET_NUM = '1';
			SET @RET_MESSAGE = '당신은 권한이 없습니다.';
			RETURN;
		END
		


	
	/**
		회원 정보 추가
	*/
	DECLARE @M_NAME VARCHAR(30);
	DECLARE @M_SEX CHAR(1);
	DECLARE @M_BIRTHDAY VARCHAR(10);
	
	SELECT 
		@M_NAME = M_NAME, 
		@M_SEX = M_SEX,
		@M_BIRTHDAY = M_BIRTHDAY
	FROM TB_MEMBER WITH (NOLOCK)
		WHERE M_ID=@M_ID;
	
	/**
		상품정보 추가
	*/	
	DECLARE @P_NAME VARCHAR(100);
	DECLARE @C_CATE_CODE CHAR(9);
	DECLARE @P_MAIN_IMG VARCHAR(100);
	DECLARE @P_SUB_TITLE VARCHAR(200);
	
	SELECT 
		@P_NAME = P_NAME, 
		@C_CATE_CODE = C_CATE_CODE,
		@P_MAIN_IMG = MAIN_IMG,
		@P_SUB_TITLE = P_SUB_TITLE 
	FROM TB_PRODUCT_INFO WITH (NOLOCK)
		WHERE P_CODE=@P_CODE;
	
	UPDATE TB_REVIEW_EXP_ARTICLE
		SET 			
			M_ID = @M_ID,
			M_NAME = @M_NAME, 
			M_SEX = @M_SEX,
			M_BIRTHDAY = @M_BIRTHDAY,
			P_CODE = @P_CODE,
			P_NAME = @P_NAME, 
			C_CATE_CODE = @C_CATE_CODE,
			P_MAIN_IMG = @P_MAIN_IMG,
			P_SUB_TITLE = @P_SUB_TITLE,				
			SKIN_TYPE = @SKIN_TYPE,
			TITLE =@TITLE,
			TAG = @TAG,
			COMMENT =@COMMENT,
			SUB_IMG_1 =@SUB_IMG_1,
			SUB_IMG_2 = @SUB_IMG_2,
			SUB_IMG_3 = @SUB_IMG_3
		
	WHERE IDX=@IDX;

    SET NOCOUNT OFF;
    
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_MY_EXP_MASTER_SEL]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-10
-- Description:	관리자 체험단 리뷰 마스터 조회
-- ussage: exec SP_REVIEW_MY_EXP_MASTER_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_MY_EXP_MASTER_SEL]
	@M_ID VARCHAR(13)= NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	
	SELECT 
		M.IDX,
		IS_AUTH,
		M.P_CODE,
		FROM_DATE,
		TO_DATE,
		(
			CASE 
				WHEN FROM_DATE <= GETDATE() AND GETDATE() <= TO_DATE  THEN 'Y'
				ELSE NULL
			END 
		) AS IS_DATE_VALID,
		(
			CASE
				WHEN  A.IDX IS NOT NULL THEN 'Y'
				ELSE 'N'
			END
		) AS IS_WRITTEN,
		A.IDX AS ARTICLE_IDX,
		M.INS_DATE
	FROM 
		TB_REVIEW_EXP_MEMBER AS B WITH (NOLOCK)
			LEFT JOIN 
		TB_REVIEW_EXP_MASTER AS M WITH (NOLOCK)
			ON M.IDX = B.EXP_MASTER_IDX
			LEFT JOIN
		TB_REVIEW_EXP_ARTICLE AS A  WITH (NOLOCK)
			ON M.IDX = A.EXP_MASTER_IDX AND B.M_ID=A.M_ID
	WHERE B.M_ID=@M_ID
		
    SET NOCOUNT OFF;
    

END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_MY_EXP_INS]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-10
-- Description:	나의 체험단 리뷰 저장
-- ussage: exec SP_REVIEW_MY_EXP_MASTER_INS
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_MY_EXP_INS]
	@M_ID VARCHAR(13)= NULL,
	@EXP_MASTER_IDX INT ,
	
	@P_CODE VARCHAR(10) = NULL,
	@TITLE VARCHAR(100) = NULL,
	@SKIN_TYPE VARCHAR(2) = NULL,
	@SUB_IMG_1 VARCHAR(100) = NULL,
	@SUB_IMG_2 VARCHAR(100) = NULL,
	@SUB_IMG_3 VARCHAR(100) = NULL,
	@TAG VARCHAR(100) = NULL,
	@COMMENT TEXT = NULL
	
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지

AS
BEGIN
	SET NOCOUNT ON;
	
		IF EXISTS( SELECT IDX FROM TB_REVIEW_EXP_ARTICLE WITH (NOLOCK) WHERE M_ID=@M_ID AND EXP_MASTER_IDX=@EXP_MASTER_IDX)
		BEGIN
			SET @RET_NUM = '1';
			SET @RET_MESSAGE = '이미 작성한 글이 있습니다.';
			RETURN;
		END
		
	
		/**
			회원 확인
		*/
		IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
		BEGIN
			SET @RET_NUM = '3';
			SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
			RETURN(3);
		END
	
		DECLARE @IS_AUTH VARCHAR(1);
		SELECT @IS_AUTH = IS_AUTH FROM TB_REVIEW_EXP_MASTER WITH (NOLOCK) WHERE IDX=@EXP_MASTER_IDX;
		IF @IS_AUTH = 'N'
		BEGIN
			SET @RET_NUM = '2';
			SET @RET_MESSAGE = '당신은 권한이 없습니다. ';
			RETURN;
		END
		
		IF NOT EXISTS( SELECT IDX FROM TB_REVIEW_EXP_MASTER WITH (NOLOCK) WHERE IDX=@EXP_MASTER_IDX AND (GETDATE() >=FROM_DATE AND GETDATE() <= TO_DATE) )
		BEGIN
			SET @RET_NUM = '3';
			SET @RET_MESSAGE = '체험단 기간이 만료되었습니다.';
			RETURN;
		END
		
		
		IF NOT EXISTS( SELECT IDX FROM TB_REVIEW_EXP_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND EXP_MASTER_IDX=@EXP_MASTER_IDX)
		BEGIN
			SET @RET_NUM = '1';
			SET @RET_MESSAGE = '당신은 권한이 없습니다.';
			RETURN;
		END
		


	
	/**
		회원 정보 추가
	*/
	DECLARE @M_NAME VARCHAR(30);
	DECLARE @M_SEX CHAR(1);
	DECLARE @M_BIRTHDAY VARCHAR(10);
	
	SELECT 
		@M_NAME = M_NAME, 
		@M_SEX = M_SEX,
		@M_BIRTHDAY = M_BIRTHDAY
	FROM TB_MEMBER WITH (NOLOCK)
		WHERE M_ID=@M_ID;
	
	/**
		상품정보 추가
	*/	
	DECLARE @P_NAME VARCHAR(100);
	DECLARE @C_CATE_CODE CHAR(9);
	DECLARE @P_MAIN_IMG VARCHAR(100);
	DECLARE @P_SUB_TITLE VARCHAR(200);
	
	SELECT 
		@P_NAME = P_NAME, 
		@C_CATE_CODE = C_CATE_CODE,
		@P_MAIN_IMG = MAIN_IMG,
		@P_SUB_TITLE = P_SUB_TITLE
	FROM TB_PRODUCT_INFO WITH (NOLOCK)
		WHERE P_CODE=@P_CODE;
	
	
	INSERT INTO TB_REVIEW_EXP_ARTICLE (
			M_ID,
			EXP_MASTER_IDX,
			M_NAME, 
			M_SEX,
			M_BIRTHDAY,
			P_CODE,
			P_NAME, 
			C_CATE_CODE,
			P_MAIN_IMG,
			P_SUB_TITLE,				
			SKIN_TYPE,
			TITLE,
			TAG,
			COMMENT,
			SUB_IMG_1,
			SUB_IMG_2,
			SUB_IMG_3
		) VALUES (
			@M_ID,
			@EXP_MASTER_IDX,
			@M_NAME, 
			@M_SEX,
			@M_BIRTHDAY,
			@P_CODE,
			@P_NAME, 
			@C_CATE_CODE,
			@P_MAIN_IMG,
			@P_SUB_TITLE,				
			@SKIN_TYPE,
			@TITLE,
			@TAG,
			@COMMENT,
			@SUB_IMG_1,
			@SUB_IMG_2,
			@SUB_IMG_3
		);
		
    SET NOCOUNT OFF;
    
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_MY_EXP_DETAIL]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-10
-- Description:	관리자 체험단 리뷰 마스터 조회
-- ussage: exec SP_REVIEW_MY_EXP_MASTER_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_MY_EXP_DETAIL]
	@IDX INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT 
			IDX,
			EXP_MASTER_IDX,
			P_CODE,
			TITLE,
			SKIN_TYPE,
			TAG,
			SUB_IMG_1,
			SUB_IMG_2,
			SUB_IMG_3,
			COMMENT
		FROM TB_REVIEW_EXP_ARTICLE AS A  WITH (NOLOCK)
	WHERE IDX=@IDX
		
    SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_GET_PRODUCT_INFO]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_GET_PRODUCT_INFO]
	@P_CODE VARCHAR(10) -- 상품코드
AS
BEGIN

	SET NOCOUNT ON;
	
	SELECT
		P_NAME,
		P_SUB_TITLE,
		C_CATE_CODE, 
		P_TAG,
		MAIN_IMG
	FROM TB_PRODUCT_INFO WITH (NOLOCK)
	WHERE P_CODE=@P_CODE;
	
	SET NOCOUNT OFF;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_EXP_SEL]    Script Date: 09/11/2015 16:07:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2015-08-11
-- Description:	리뷰 목록 조회.
-- ussage: exec SP_REVIEW_EXP_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_EXP_SEL]
	@TAIL_IDX INT = NULL
	,@CATE_CODE VARCHAR(9) = ''
	,@SORT VARCHAR(1) = '' --기본 최신순 정렬
	,@TOTAL INT OUTPUT
AS
BEGIN
	SET NOCOUNT ON;
	
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				DECLARE @MyStoredProcResult TABLE(
						IDX INT,
						M_ID VARCHAR(13),
						M_ID_LBL VARCHAR(13),
						M_NAME VARCHAR(30),
						M_SEX CHAR(1),
						M_SEX_LBL VARCHAR(2) ,
						M_BIRTHDAY VARCHAR(10),						
						M_BIRTHDAY_LBL VARCHAR(5) ,
						EXP_MASTER_IDX INT,
						P_CODE VARCHAR(10),
						P_NAME VARCHAR(100),
						P_SUB_TITLE VARCHAR(200),
						P_MAIN_IMG VARCHAR(100),	
						SKIN_TYPE CHAR(2),
						SKIN_TYPE_LBL VARCHAR(5),
						SKIN_TYPE_CSS VARCHAR(5),
						TITLE VARCHAR(100),
						COMMENT TEXT,
						SUB_IMG_1 VARCHAR(100),
						SUB_IMG_2 VARCHAR(100),
						SUB_IMG_3 VARCHAR(100),
						VIEW_CNT INT,
						TAG VARCHAR(100),
						IS_BEST VARCHAR(1),
						INS_DATE DATETIME
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END   
	
	DECLARE @TOP_LIMIT INT = 10;
	DECLARE @v_SQL_WHERE NVARCHAR(MAX)='';
	DECLARE @v_SQL_ORDERBY NVARCHAR(MAX)='';
	DECLARE @V_SQL NVARCHAR(MAX)='';
	
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  drop table #TEMPLIST ;
	  --print 'drop...'
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)	
	
	SET @v_SQL_WHERE = ' (1=1) AND IS_DISPLAY=''Y''   ';


	
	
	IF CHARINDEX('101',@CATE_CODE) = 1 OR  CHARINDEX('102',@CATE_CODE) = 1  OR  CHARINDEX('103',@CATE_CODE) = 1 
		BEGIN
			
			DECLARE @DEPTH1 VARCHAR(6) = SUBSTRING(@CATE_CODE, 1,3);
			DECLARE @DEPTH2 VARCHAR(6) = SUBSTRING(@CATE_CODE, 1,6);
			DECLARE @DEPTH3 VARCHAR(6) = SUBSTRING(@CATE_CODE, 4,6);
			
			print @DEPTH1;
			print @DEPTH2;
			IF @DEPTH3 = '100100' --전체
				BEGIN 
					SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND R.C_CATE_CODE like '''+@DEPTH1+'%'' ';
				END 
			ELSE
				BEGIN 
					SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND R.C_CATE_CODE like '''+@DEPTH2+'%'' ';
				END 
		END

	
	/**
		정렬
	*/
	SET @v_SQL_ORDERBY = 'IS_BEST DESC';
	
	IF @SORT = '0'
	BEGIN
		set @v_SQL_ORDERBY = @v_SQL_ORDERBY +  ' ,IDX DESC ' ;
		set @v_SQL_ORDERBY = @v_SQL_ORDERBY +  ' ,VIEW_CNT DESC ' ;
	END
	IF @SORT = '1'
	BEGIN
		set @v_SQL_ORDERBY = @v_SQL_ORDERBY +  ' ,VIEW_CNT DESC ' ;
		set @v_SQL_ORDERBY = @v_SQL_ORDERBY +  ' ,IDX DESC ' ;			
	END

	
	SET @V_SQL  = 'INSERT INTO #TEMPLIST (IDX_TMP)';
	SET @V_SQL  = @V_SQL + ' SELECT R.IDX';	
	SET @V_SQL  = @V_SQL + ' FROM TB_REVIEW_EXP_ARTICLE AS R WITH (NOLOCK) ';
	--SET @V_SQL  = @V_SQL + ' INNER JOIN TB_PRODUCT_INFO AS P WITH (NOLOCK) ';
	--SET @V_SQL  = @V_SQL + ' ON R.P_CODE=P.P_CODE ';
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	SET @V_SQL  = @V_SQL + ' ORDER BY ' +  @v_SQL_ORDERBY;
	
	print @V_SQL;

	
	EXEC(@V_SQL);	
	
	DECLARE @SEQ_TMP INT;
	
	IF @TAIL_IDX IS NULL OR @TAIL_IDX=-1
		BEGIN
			SET @SEQ_TMP = 0;
		END 
	ELSE
		BEGIN
			SELECT @SEQ_TMP = SEQ FROM #TEMPLIST WITH (NOLOCK) WHERE IDX_TMP = @TAIL_IDX;
		END
	
	
	SELECT @TOTAL = COUNT(SEQ) FROM #TEMPLIST WITH (NOLOCK);
	/*
	SELECT TOP (@TOP_LIMIT)
		@NEXT_TAIL_IDX = IDX		
	FROM TB_REVIEW_EXP_ARTICLE A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T WITH (NOLOCK)
		ON A.IDX = T.IDX_TMP
	WHERE @SEQ_TMP < T.SEQ
	ORDER BY T.SEQ ASC ;
	*/
	

						
	
	SELECT TOP (@TOP_LIMIT)
		IDX,
		M_ID,
		(
			LEFT(M_ID, LEN(M_ID) - LEN(M_ID)/2) +  SUBSTRING('**************', 1, LEN(M_ID)/2)
		) 
		AS M_ID_LBL,
		M_NAME,		
		M_SEX,
		(
			CASE M_SEX
			 WHEN '1' THEN '남자'
			 WHEN '2' THEN '여자'
			 ELSE ''
			END						
		) AS M_SEX_LBL,
		M_BIRTHDAY,						
		(
			CONVERT(varchar, DATEDIFF(yyyy,convert(datetime, M_BIRTHDAY, 0),GETDATE()) /10 * 10)
		) AS M_BIRTHDAY_LBL,
		P_CODE,
		P_NAME,
		P_SUB_TITLE,
		P_MAIN_IMG,
		IS_BEST,
		SKIN_TYPE,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN '건성'
				WHEN '20' THEN '중성'
				WHEN '30' THEN '지복합성'
				ELSE ''
			END 
		) AS SKIN_TYPE_LBL,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN 'dry'
				WHEN '20' THEN 'normal'
				WHEN '30' THEN 'oily'
				ELSE ''
			END 
		) AS SKIN_TYPE_CSS,
		COMMENT,
		
		TITLE,
		SUB_IMG_1,
		SUB_IMG_2,
		SUB_IMG_3,
		TAG,
		VIEW_CNT,
		EXP_MASTER_IDX,
		
		INS_DATE
	FROM TB_REVIEW_EXP_ARTICLE A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T WITH (NOLOCK)
		ON A.IDX = T.IDX_TMP
	WHERE @SEQ_TMP < T.SEQ
	ORDER BY T.SEQ ASC ;
	
	--SELECT * FROM @TMP_TBL WITH (NOLOCK);
	
	
	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END 
	
	SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_EXP_MOBILE_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2015-08-11
-- Description:	리뷰 목록 조회.
-- ussage: exec SP_REVIEW_EXP_MOBILE_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_EXP_MOBILE_SEL]
	@PAGE INT =  NULL
	,@PAGESIZE INT=  NULL
	,@CATE_CODE VARCHAR(9) = ''
	,@SORT VARCHAR(1) = '' --기본 포토 정렬
	
	,@TOTAL_PAGE INT OUTPUT
	,@TOTAL_ITEM INT OUTPUT
AS
BEGIN
	SET NOCOUNT ON;
	
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				DECLARE @MyStoredProcResult TABLE(
						IDX INT,
						M_ID VARCHAR(13),
						M_ID_LBL VARCHAR(13),
						M_NAME VARCHAR(30),
						M_SEX CHAR(1),
						M_SEX_LBL VARCHAR(2) ,
						M_BIRTHDAY VARCHAR(10),						
						M_BIRTHDAY_LBL VARCHAR(5) ,
						EXP_MASTER_IDX INT,
						P_CODE VARCHAR(10),
						P_NAME VARCHAR(100),
						P_SUB_TITLE VARCHAR(200),
						P_MAIN_IMG VARCHAR(100),	
						SKIN_TYPE CHAR(2),
						SKIN_TYPE_LBL VARCHAR(5),
						SKIN_TYPE_CSS VARCHAR(5),
						TITLE VARCHAR(100),
						COMMENT TEXT,
						SUB_IMG_1 VARCHAR(100),
						SUB_IMG_2 VARCHAR(100),
						SUB_IMG_3 VARCHAR(100),
						VIEW_CNT INT,
						TAG VARCHAR(100),
						IS_BEST VARCHAR(1),
						INS_DATE DATETIME
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END  
	 
	DECLARE @LISTCOUNT INT;
	--DECLARE @TOP_LIMIT INT = 10;
	DECLARE @v_SQL_WHERE NVARCHAR(MAX)='';
	DECLARE @v_SQL_ORDERBY NVARCHAR(MAX)='';
	DECLARE @V_SQL NVARCHAR(MAX)='';
	
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  drop table #TEMPLIST ;
	  --print 'drop...'
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)	
	
	SET @v_SQL_WHERE = ' (1=1) AND IS_DISPLAY=''Y''   ';


	
	
	IF CHARINDEX('101',@CATE_CODE) = 1 OR  CHARINDEX('102',@CATE_CODE) = 1  OR  CHARINDEX('103',@CATE_CODE) = 1 
		BEGIN
			
			DECLARE @DEPTH1 VARCHAR(6) = SUBSTRING(@CATE_CODE, 1,3);
			DECLARE @DEPTH2 VARCHAR(6) = SUBSTRING(@CATE_CODE, 1,6);
			DECLARE @DEPTH3 VARCHAR(6) = SUBSTRING(@CATE_CODE, 4,6);
			
			print @DEPTH1;
			print @DEPTH2;
			IF @DEPTH3 = '100100' --전체
				BEGIN 
					SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND R.C_CATE_CODE like '''+@DEPTH1+'%'' ';
				END 
			ELSE
				BEGIN 
					SET @v_SQL_WHERE = @v_SQL_WHERE + 'AND R.C_CATE_CODE like '''+@DEPTH2+'%'' ';
				END 
		END

	
	/**
		정렬
	*/
	SET @v_SQL_ORDERBY = 'IS_BEST DESC';
	
	IF @SORT = '0'
	BEGIN
		set @v_SQL_ORDERBY = @v_SQL_ORDERBY +  ' ,IDX DESC ' ;
		set @v_SQL_ORDERBY = @v_SQL_ORDERBY +  ' ,VIEW_CNT DESC ' ;
	END
	IF @SORT = '1'
	BEGIN
		set @v_SQL_ORDERBY = @v_SQL_ORDERBY +  ' ,VIEW_CNT DESC ' ;
		set @v_SQL_ORDERBY = @v_SQL_ORDERBY +  ' ,IDX DESC ' ;			
	END

	/**
		총수
	*/	
	SET @V_SQL  = 'SELECT @rowcount=COUNT(R.IDX) ';	
	SET @V_SQL  = @V_SQL + ' FROM TB_REVIEW_EXP_ARTICLE AS R WITH (NOLOCK) ';
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	
	EXEC sp_executesql @V_SQL, N'@rowcount int output', @TOTAL_ITEM output;
	
	SET @TOTAL_PAGE = CEILING (@TOTAL_ITEM/(@PAGESIZE *1.0));
	IF @TOTAL_PAGE = 0
		SET @TOTAL_PAGE = 1;

	
	/*
	 조회
	*/
	SET @V_SQL  = 'INSERT INTO #TEMPLIST (IDX_TMP)';
	SET @V_SQL  = @V_SQL + ' SELECT R.IDX';	
	SET @V_SQL  = @V_SQL + ' FROM TB_REVIEW_EXP_ARTICLE AS R WITH (NOLOCK) ';
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	SET @V_SQL  = @V_SQL + ' ORDER BY ' +  @v_SQL_ORDERBY;


	print @V_SQL;
	
	SET @LISTCOUNT = @PAGE * @PAGESIZE;
	SET ROWCOUNT @LISTCOUNT;
	
	EXEC(@V_SQL);	

	SET ROWCOUNT 0 ; --기본값 복원 
	

						
	
	SELECT
		IDX,
		M_ID,
		(
			LEFT(M_ID, LEN(M_ID) - LEN(M_ID)/2) +  SUBSTRING('**************', 1, LEN(M_ID)/2)
		) 
		AS M_ID_LBL,
		M_NAME,		
		M_SEX,
		(
			CASE M_SEX
			 WHEN '1' THEN '남자'
			 WHEN '2' THEN '여자'
			 ELSE ''
			END						
		) AS M_SEX_LBL,
		M_BIRTHDAY,						
		(
			CONVERT(varchar, DATEDIFF(yyyy,convert(datetime, M_BIRTHDAY, 0),GETDATE()) /10 * 10)
		) AS M_BIRTHDAY_LBL,
		P_CODE,
		P_NAME,
		P_SUB_TITLE,
		P_MAIN_IMG,
		IS_BEST,
		SKIN_TYPE,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN '건성'
				WHEN '20' THEN '중성'
				WHEN '30' THEN '지복합성'
				ELSE ''
			END 
		) AS SKIN_TYPE_LBL,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN 'dry'
				WHEN '20' THEN 'normal'
				WHEN '30' THEN 'oily'
				ELSE ''
			END 
		) AS SKIN_TYPE_CSS,
		COMMENT,
		
		TITLE,
		SUB_IMG_1,
		SUB_IMG_2,
		SUB_IMG_3,
		TAG,
		VIEW_CNT,
		EXP_MASTER_IDX,
		
		INS_DATE
	FROM TB_REVIEW_EXP_ARTICLE A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T WITH (NOLOCK)
		ON A.IDX = T.IDX_TMP
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ ASC;	
	
	--SELECT * FROM @TMP_TBL WITH (NOLOCK);
	
	
	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END 
	
	SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_EXP_IN_SHOPPING_DETAIL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-13
-- Description:	 체험단 리뷰 (상품 상세)
-- ussage: exec SP_REVIEW_EXP_IN_SHOPPING_DETAIL
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_EXP_IN_SHOPPING_DETAIL]
	@P_CODE VARCHAR(10) = NULL
	,@PAGE				INT = 1		--현재 PAGE
	,@PAGESIZE			INT = 10		--페이지 사이즈
	,@TOTAL INT = 0 OUTPUT
AS
BEGIN
	SET NOCOUNT ON;
	
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				DECLARE @MyStoredProcResult TABLE(
						IDX INT,
						M_ID VARCHAR(13),
						M_ID_LBL VARCHAR(13),
						M_NAME VARCHAR(30),
						M_SEX CHAR(1),
						M_SEX_LBL VARCHAR(2) ,
						M_BIRTHDAY VARCHAR(10),						
						M_BIRTHDAY_LBL VARCHAR(5) ,
						EXP_MASTER_IDX INT,
						P_CODE VARCHAR(10),
						P_NAME VARCHAR(100),
						P_SUB_TITLE VARCHAR(200),
						P_MAIN_IMG VARCHAR(100),	
						C_CATE_CODE CHAR(9),
						SKIN_TYPE CHAR(2),
						SKIN_TYPE_LBL VARCHAR(5),
						SKIN_TYPE_CSS VARCHAR(5),
						TITLE VARCHAR(100),
						COMMENT TEXT,
						SUB_IMG_1 VARCHAR(100),
						SUB_IMG_2 VARCHAR(100),
						SUB_IMG_3 VARCHAR(100),
						VIEW_CNT INT,
						TAG VARCHAR(100),
						IS_BEST VARCHAR(1),
						INS_DATE DATETIME
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END  
	
	DECLARE @LISTCOUNT INT;

	DECLARE @v_SQL_WHERE NVARCHAR(MAX) ;
	DECLARE @v_SQL_ORDERBY NVARCHAR(MAX) ;
	DECLARE @V_SQL NVARCHAR(MAX);

	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	END 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	VARCHAR(13)
	)
	
	SET @v_SQL_WHERE = ' (1=1) AND IS_DISPLAY=''Y''';
	SET @v_SQL_WHERE = @v_SQL_WHERE + ' AND P_CODE=''' + @P_CODE+'''';
	
	SET @v_SQL_ORDERBY = ' IDX DESC ' ;	
 
	SET @V_SQL  = 'INSERT INTO #TEMPLIST (IDX_TMP)'
	SET @V_SQL  = @V_SQL + ' SELECT IDX ';
	SET @V_SQL  = @V_SQL + ' FROM TB_REVIEW_EXP_ARTICLE WITH (NOLOCK) '
	SET @V_SQL  = @V_SQL + ' WHERE ' + @v_SQL_WHERE;
	SET @V_SQL  = @V_SQL + ' ORDER BY ' +  @v_SQL_ORDERBY;
	
	--PRINT @V_SQL;
	
	SELECT @TOTAL = COUNT(IDX) FROM TB_REVIEW_EXP_ARTICLE WITH (NOLOCK) 
	WHERE P_CODE=@P_CODE AND IS_DISPLAY='Y'
	
	

	SET @LISTCOUNT = @PAGE * @PAGESIZE;
	SET ROWCOUNT @LISTCOUNT;
	
	EXEC(@V_SQL);
	
	SET ROWCOUNT 0 ; --기본값 복원 
	
	SELECT 	
		IDX,
		M_ID,
		(
			LEFT(M_ID, LEN(M_ID) - LEN(M_ID)/2) +  SUBSTRING('**************', 1, LEN(M_ID)/2)
		) 
		AS M_ID_LBL,
		M_NAME,		
		M_SEX,
		(
			CASE M_SEX
			 WHEN '1' THEN '남자'
			 WHEN '2' THEN '여자'
			 ELSE ''
			END						
		) AS M_SEX_LBL,
		M_BIRTHDAY,						
		(
			CONVERT(varchar, DATEDIFF(yyyy,convert(datetime, M_BIRTHDAY, 0),GETDATE()) /10 * 10)
		) AS M_BIRTHDAY_LBL,
		P_CODE,
		P_NAME,
		P_SUB_TITLE,
		P_MAIN_IMG,
		C_CATE_CODE,
		IS_BEST,
		SKIN_TYPE,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN '건성'
				WHEN '20' THEN '중성'
				WHEN '30' THEN '지복합성'
				ELSE ''
			END 
		) AS SKIN_TYPE_LBL,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN 'dry'
				WHEN '20' THEN 'normal'
				WHEN '30' THEN 'oily'
				ELSE ''
			END 
		) AS SKIN_TYPE_CSS,
		COMMENT,
		
		TITLE,
		SUB_IMG_1,
		SUB_IMG_2,
		SUB_IMG_3,
		TAG,
		VIEW_CNT,
		EXP_MASTER_IDX,
		
		INS_DATE
	FROM TB_REVIEW_EXP_ARTICLE A WITH (NOLOCK)
			INNER JOIN 
		#TEMPLIST T WITH (NOLOCK)
			ON A.IDX = T.IDX_TMP
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ ASC;	
	
	IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST;
	END
	
	
	SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PROMOTION_POINT_SAVE_RATE_BY_MEMGRADE_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 회원등급별 포인트 적립률 가져오기 
 * Modified  :   2015.08.06
 * Modified  :   
 * Modified  :  
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL] 1
CREATE PROCEDURE  [dbo].[SP_PROMOTION_POINT_SAVE_RATE_BY_MEMGRADE_SEL]
   @M_GBN VARCHAR(1)
  ,@M_GRADE VARCHAR(1)
AS

SET NOCOUNT ON 

SELECT 
	SAVE_RATE FROM TB_POINT_SAVE_CODES WITH(NOLOCK) 
WHERE 
	CODE='S00' AND M_GBN=@M_GBN AND M_GRADE=@M_GRADE
GO
/****** Object:  StoredProcedure [dbo].[SP_PROMOTION_BY_PRODUCT_TOP_1_DETAIL_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 상품별 할인 프로모션 - 상품 리스트 가져오기(FRONT)  
 * Modified  :   2015.08.08  , 2015.08.18 이미지 5종 추가, 8.19 
 * Modified  :     
 * Modified  :    exec [SP_PROMOTION_BY_PRODUCT_TOP_1_DETAIL_SEL] '05'
 ============================================================*/    
  
  
 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL] 1  
CREATE PROCEDURE  [dbo].[SP_PROMOTION_BY_PRODUCT_TOP_1_DETAIL_SEL]  
  @PMO_PRODUCT_CATEGORY VARCHAR(2)-- '01' 세트상품 , --'02' 1+1 , '03' 타임세일 , '04' - 기타 품별할인 , 05-아웃렛?   
 AS  
  
BEGIN  
--SET FMTONLY OFF --complex type 생성시 필요  
--IF 1=0 BEGIN  
--   SET FMTONLY OFF  
--END  
  
   SET NOCOUNT ON  
     
   SELECT   
        TOP 1  
		CD_PROMOTION_PRODUCT  
	   ,PMO_PRODUCT_MAIN_TITLE  
	   ,PMO_PRODUCT_SUB_TITLE  
	   ,PMO_PRODUCT_SHOPPING_TIP  
	   ,PMO_ONEONE_MULTIPLE_CNT  
	   ,PMO_SET_DISCOUNT_CNT  
	   ,PMO_PRODUCT_DATE_FROM  
	   ,PMO_PRODUCT_DATE_TO  
	   ,PMO_PRODUCT_MAIN_IMG
	   ,PMO_PRODUCT_PC_MAINPG_IMG
	   ,PMO_PRODUCT_PC_MAINPG_SMALL_IMG 
	   ,PMO_PRODUCT_PC_EVENT_MAINPG_IMG 
	   ,PMO_PRODUCT_MOBILE_MAIN_IMG 
	   ,PMO_PRODUCT_MOBILE_MAINPG_IMG 
	   ,PMO_PRODUCT_MOBILE_EVENT_MAINPG_IMG
     
   FROM   
       TB_PROMOTION_BY_PRODUCT  WITH(NOLOCK)  
   WHERE PMO_PRODUCT_CATEGORY = @PMO_PRODUCT_CATEGORY  
         AND   
         ( PMO_PRODUCT_DATE_FROM < GETDATE() AND  PMO_PRODUCT_DATE_TO > GETDATE() )  
         AND   
         ( USABLE_YN IS NOT NULL AND USABLE_YN = 'Y' )  
    ORDER BY IDX DESC   
      
           
     -- PMO_PRODUCT_CATEGORY = '01' AND PROMOTION_PRODUCT_YN = 'Y'  
  
   SET NOCOUNT OFF  
   
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PROMOTION_BY_PRODUCT_SET_RELATED_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 프로모션->세트상품 -> 특정상품과 연관된 세트 상품 리스트 가져오기(FRONT)
                 => 파라미터로 입력된 상품코드의 상품은 제외 하고 가져오기
 * Modified  :   2015.08.06 , 8.8 ICON_YN 추가
 * Modified  :   
 * Modified  :  
 EXEC  [SP_PROMOTION_BY_PRODUCT_SET_RELATED_SEL] 'PP00005','RAA00005'
 ============================================================*/  


 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL] 1
CREATE PROCEDURE  [dbo].[SP_PROMOTION_BY_PRODUCT_SET_RELATED_SEL]
   @CD_PROMOTION_PRODUCT VARCHAR(7)  
  ,@P_CODE VARCHAR(10)
AS

BEGIN

SET NOCOUNT ON 

SELECT  
	  CASE WHEN C.CD_PROMOTION_PRODUCT IS NOT NULL THEN 'Y' ELSE 'N' END AS PROMOTION_PRODUCT_YN  
	  ,ISNULL(B.PMO_PRICE,A.DISCOUNT_PRICE) AS RESULT_PRICE -- 장바구니.주문서에는 이 가격을 보면 됨  
		  
	  ,B.PMO_PRICE  
	  ,B.IDX AS PRODUCT_PRICE_IDX   
	  ,C.CD_PROMOTION_PRODUCT  
	  ,C.PMO_PRODUCT_NAME  
	  ,C.PMO_SET_DISCOUNT_CNT  
	  ,C.PMO_ONEONE_MULTIPLE_CNT  
	  ,C.PMO_PRODUCT_DATE_FROM   
	  ,C.PMO_PRODUCT_DATE_TO  
	  --,C.PMO_PRODUCT_CATEGORY -- 01 ='세트상품' , 02 = 1+1 , 03 = 타임세일, 04=일반할인 , 05=아웃렛 
	  ,A.[IDX]
      ,A.[P_CATE_CODE]
      ,A.[C_CATE_CODE]
      ,A.[L_CATE_CODE]
      ,A.[P_CODE]
      ,A.[P_NAME]
      ,A.[P_SUB_TITLE]
      ,A.ICON_YN
      ,A.[SELLING_PRICE]
      ,A.[DISCOUNT_PRICE]
      ,A.[P_INFO_DETAIL_WEB]
      ,A.[P_INFO_DETAIL_MOBILE]
      ,A.[MV_URL]
      ,A.[P_TAG]
      ,A.[MAIN_IMG]
      ,A.[OTHER_IMG1]
      ,A.[OTHER_IMG2]
      ,A.[OTHER_IMG3]
      ,A.[OTHER_IMG4]
      ,A.[OTHER_IMG5]
      ,A.[RE_SORT]
      ,A.[DISPLAY_YN]
      ,A.[P_VIEW_COUNT]
      ,A.[P_OUTLET_YN]
 
FROM   
TB_PROMOTION_BY_PRODUCT_PRICE B WITH(NOLOCK) INNER JOIN TB_PROMOTION_BY_PRODUCT C WITH(NOLOCK)   
   ON B.CD_PROMOTION_PRODUCT = C.CD_PROMOTION_PRODUCT   
      AND   
      (B.USABLE_YN IS NOT NULL AND B.USABLE_YN = 'Y')   
      AND   
      C.PMO_PRODUCT_CATEGORY = '01' 
      AND
      ( C.USABLE_YN = 'Y' AND C.USABLE_YN IS NOT NULL )  
      AND   
      ( C.PMO_PRODUCT_DATE_FROM <= GETDATE() AND C.PMO_PRODUCT_DATE_TO >=GETDATE() )  
      AND
      C.CD_PROMOTION_PRODUCT =  @CD_PROMOTION_PRODUCT
      AND
      B.P_CODE != @P_CODE
   
 INNER JOIN TB_PRODUCT_INFO A WITH(NOLOCK) 
     ON B.P_CODE =A.P_CODE  
       AND 
       A.DISPLAY_YN = 'Y' AND A.DISPLAY_YN IS NOT NULL 
  
  
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_CATE_THEMA_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2015-08-05
-- Description:	상품 리뷰 테마 조회
-- ussage: exec SP_REVIEW_CATE_THEMA_SEL
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_CATE_THEMA_SEL]
AS
BEGIN
	SET NOCOUNT ON;
		SELECT 
			IDX,
			TITLE,
			CODE,
			TAG 
		FROM TB_REVIEW_CATE_THEMA
		WHERE IS_DISPLAY='Y';
		
    SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_QNA_VIEW]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_QNA

exec [SP_TB_QNA_VIEW] 1

*/
CREATE PROCEDURE [dbo].[SP_TB_QNA_VIEW]
 @IDX			INT
 ,@M_ID	varchar(13)	 
AS
BEGIN

	SET NOCOUNT ON
  
	SELECT IDX, CATEGORY , TITLE , QUESTION , ANSWER , STATUS , M_ID , REG_DATE , ANS_DATE
	FROM TB_QNA a with (nolock)
	WHERE IDX = @IDX
	AND M_ID = @M_ID
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_QNA_UPD]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_QNA

exec [SP_TB_QNA_UPD] 2,'2','제목테스트','내용테스트_수정','kmg5302',1

*/
CREATE PROCEDURE [dbo].[SP_TB_QNA_UPD]
 @IDX	INT
,@CATEGORY CHAR(1)
,@TITLE VARCHAR(100)
,@QUESTION TEXT
,@M_ID VARCHAR(13)
,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

	UPDATE TB_QNA
	SET CATEGORY = @CATEGORY 
	, TITLE = @TITLE
	, QUESTION = @QUESTION 
	WHERE IDX = @IDX 
	AND M_ID = @M_ID

	SET @ERR_CODE = @@ERROR;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_QNA_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_QNA

exec [SP_TB_QNA_SEL]  'TEST'
*/
CREATE PROCEDURE [dbo].[SP_TB_QNA_SEL]
 @M_ID	varchar(13)	  
,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈

AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ; 
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

	 
	set @v_SQL_WHERE = ' WHERE (1=1)' 
	 
	set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( M_ID = ''' + @M_ID + ''') '
  	 
	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	set @v_SQL  ='insert into #TEMPLIST (IDX_TMP) '
	set @v_SQL  =@v_SQL + ' SELECT  IDX ';
	set @v_SQL  =@v_SQL + ' FROM TB_QNA WITH (NOLOCK) ';
	set @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	set @v_SQL  =@v_SQL + '	ORDER BY IDX DESC ';
	exec(@v_SQL);


	SET ROWCOUNT 0 ;

	



	SELECT [IDX] ,CATEGORY, TITLE , QUESTION , ANSWER , STATUS , M_ID , REG_DATE , ANS_DATE
	from TB_QNA a with (nolock)
		inner join #TEMPLIST t on a.IDX = t.IDX_TMP
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_QNA_INS]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_QNA

exec SP_TB_QNA_INS '1','제목테스트','내용테스트','1','kmg5302',1

*/


CREATE PROC [dbo].[SP_TB_QNA_INS]
 @CATEGORY CHAR(1)
,@TITLE VARCHAR(100)
,@QUESTION TEXT
,@STATUS CHAR(1) = '1'
,@M_ID VARCHAR(13)
,@NEW_IDX INT OUTPUT
AS

SET NOCOUNT ON ;

INSERT INTO TB_QNA(CATEGORY, TITLE, QUESTION, STATUS, M_ID, REG_DATE)
VALUES(@CATEGORY, @TITLE, @QUESTION, @STATUS, @M_ID, GETDATE());


SELECT @NEW_IDX = SCOPE_IDENTITY() ;
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_QNA_DEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_QNA

exec [SP_TB_QNA_DEL] 1,1

*/
CREATE PROCEDURE [dbo].[SP_TB_QNA_DEL]
 @IDX	INT
 ,@M_ID	varchar(13)	 
AS
BEGIN
	DELETE FROM TB_QNA
	WHERE IDX = @IDX
	AND M_ID = @M_ID
END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_NOTICE_VIEW]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_NOTICE

exec [SP_TB_NOTICE_VIEW] 1

*/
CREATE PROCEDURE [dbo].[SP_TB_NOTICE_VIEW]
 @IDX			INT
AS
BEGIN

	SET NOCOUNT ON

	UPDATE TB_NOTICE
	SET VIEW_CNT = VIEW_CNT + 1
	WHERE IDX = @IDX
	

	SELECT IDX, TITLE, CONTENTS, VIEW_CNT, DISPLAY_YN, M_ID, REG_DATE
	FROM TB_NOTICE a with (nolock)
	WHERE IDX = @IDX
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_NOTICE_UPD]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_NOTICE

exec [SP_TB_NOTICE_UPD] 1,'제목테스트','내용테스트_수정','Y','kmg5302',1

*/
CREATE PROCEDURE [dbo].[SP_TB_NOTICE_UPD]
 @IDX	INT
,@TITLE VARCHAR(100)
,@CONTENTS TEXT
,@DISPLAY_YN CHAR(1) = 'N'
,@M_ID VARCHAR(13)
,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

	UPDATE TB_NOTICE
	SET TITLE = @TITLE
	, CONTENTS = @CONTENTS
	, DISPLAY_YN = @DISPLAY_YN
	, M_ID = @M_ID
	WHERE IDX = @IDX

	SET @ERR_CODE = @@ERROR;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_NOTICE_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_NOTICE

exec [SP_TB_NOTICE_SEL] 'TITLE','테스트','A'

*/
CREATE PROCEDURE [dbo].[SP_TB_NOTICE_SEL]
 @SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@DISPLAY_YN CHAR(1) = 'A'
,@SORT_COL	varchar(50)	='IDX' 
,@SORT_DIR	varchar(4)	='DESC' 

,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈

AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

	 
	set @v_SQL_WHERE = ' WHERE (1=1)'

	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '

	IF @DISPLAY_YN <> 'A'
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( DISPLAY_YN = ''' + @DISPLAY_YN + ''') '

	set @v_SQL_ORDERBY = ' ' + @SORT_COL  + ' ' + @SORT_DIR 
 
	 
	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	set @v_SQL  ='insert into #TEMPLIST (IDX_TMP) '
	set @v_SQL  =@v_SQL + ' SELECT  IDX ';
	set @v_SQL  =@v_SQL + ' FROM TB_NOTICE WITH (NOLOCK) ';
	set @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	set @v_SQL  =@v_SQL + '	ORDER BY ' + @v_SQL_ORDERBY ;
--	PRINT @v_SQL;
	exec(@v_SQL);


	SET ROWCOUNT 0 ;

	



	SELECT IDX, TITLE, CONTENTS, VIEW_CNT, DISPLAY_YN, M_ID, REG_DATE
	from TB_NOTICE a with (nolock)
		inner join #TEMPLIST t on a.IDX = t.IDX_TMP
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_NOTICE_INS]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_NOTICE

exec SP_TB_NOTICE_INS '제목테스트','내용테스트','Y','kmg5302',1

*/


CREATE PROC [dbo].[SP_TB_NOTICE_INS]
 @TITLE VARCHAR(100)
,@CONTENTS TEXT
,@DISPLAY_YN CHAR(1) = 'N'
,@M_ID VARCHAR(13)
,@NEW_IDX INT OUTPUT
AS

SET NOCOUNT ON ;

INSERT INTO TB_NOTICE(TITLE,CONTENTS,DISPLAY_YN,M_ID,REG_DATE)
VALUES(@TITLE,@CONTENTS,@DISPLAY_YN,@M_ID,GETDATE());


SELECT @NEW_IDX = SCOPE_IDENTITY() ;
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_NOTICE_DEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_NOTICE

exec [SP_TB_NOTICE_DEL] 55,1

*/
CREATE PROCEDURE [dbo].[SP_TB_NOTICE_DEL]
 @IDX	INT
 ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN


	DELETE FROM TB_NOTICE
	WHERE IDX = @IDX

	SET @ERR_CODE = @@ERROR;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_FAQ_VIEW]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_FAQ

exec [SP_TB_FAQ_VIEW] 1

*/
CREATE PROCEDURE [dbo].[SP_TB_FAQ_VIEW]
 @IDX			INT
AS
BEGIN

	SET NOCOUNT ON

	UPDATE TB_FAQ
	SET VIEW_CNT = VIEW_CNT + 1
	WHERE IDX = @IDX
	

	SELECT IDX, CATEGORY, TITLE, QUESTION, ANSWER, VIEW_CNT, DISPLAY_YN, M_ID, REG_DATE
	FROM TB_FAQ a with (nolock)
	WHERE IDX = @IDX
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_FAQ_UPD]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_FAQ

exec [SP_TB_FAQ_UPD] 1,'기타','FAQ테스트','질문내용테스트_수정','답변내용테스트_수정','Y','kmg5302',1

*/
CREATE PROCEDURE [dbo].[SP_TB_FAQ_UPD]
 @IDX	INT
,@CATEGORY VARCHAR(20)
,@TITLE VARCHAR(100)
,@QUESTION TEXT
,@ANSWER TEXT
,@DISPLAY_YN CHAR(1) = 'N'
,@M_ID VARCHAR(13)
,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

	UPDATE TB_FAQ
	SET TITLE = @TITLE
	, CATEGORY = @CATEGORY
	, QUESTION = @QUESTION
	, ANSWER = @ANSWER
	, DISPLAY_YN = @DISPLAY_YN
	, M_ID = @M_ID
	WHERE IDX = @IDX

	SET @ERR_CODE = @@ERROR;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_FAQ_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_FAQ

exec [SP_TB_FAQ_SEL] 'TITLE','테스트','A'

*/
CREATE PROCEDURE [dbo].[SP_TB_FAQ_SEL]
 @SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@DISPLAY_YN	CHAR(1) = 'A'
,@SORT_COL	varchar(50)	='IDX' 
,@SORT_DIR	varchar(4)	='DESC' 

,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈

AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

	 
	set @v_SQL_WHERE = ' WHERE (1=1)'

	
	IF @SEARCH_COL <> '' AND @SEARCH_KEYWORD <> '' 
	BEGIN
		IF (@SEARCH_COL = 'CATEGORY')
		BEGIN
			set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (CATEGORY =  ''' + @SEARCH_KEYWORD + ''') '
		END
		ELSE IF (@SEARCH_COL = 'ALL')
		BEGIN
			set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ((QUESTION like ''%' + @SEARCH_KEYWORD + '%'') or (ANSWER like ''%' + @SEARCH_KEYWORD + '%'') ) '
		END
		ELSE
		BEGIN
			set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
		END
	END
	IF @DISPLAY_YN <> 'A'
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( DISPLAY_YN = ''' + @DISPLAY_YN + ''') '
 
	set @v_SQL_ORDERBY = ' ' + @SORT_COL  + ' ' + @SORT_DIR 
 
	 
	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	set @v_SQL  ='insert into #TEMPLIST (IDX_TMP) '
	set @v_SQL  =@v_SQL + ' SELECT  IDX ';
	set @v_SQL  =@v_SQL + ' FROM TB_FAQ WITH (NOLOCK) ';
	set @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	set @v_SQL  =@v_SQL + '	ORDER BY ' + @v_SQL_ORDERBY ; 
	exec(@v_SQL);


	SET ROWCOUNT 0 ;

	



	SELECT [IDX] ,CATEGORY, TITLE , QUESTION , ANSWER , VIEW_CNT , DISPLAY_YN , M_ID , REG_DATE
	from TB_FAQ a with (nolock)
		inner join #TEMPLIST t on a.IDX = t.IDX_TMP
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ;
	SET ROWCOUNT 0 ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_FAQ_INS]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_FAQ

exec SP_TB_FAQ_INS '기타','FAQ테스트','질문내용테스트','답변내용테스트','Y','kmg5302',1

*/


CREATE PROC [dbo].[SP_TB_FAQ_INS]
 @CATEGORY VARCHAR(20)
,@TITLE VARCHAR(100)
,@QUESTION TEXT
,@ANSWER TEXT
,@DISPLAY_YN CHAR(1) = 'N'
,@M_ID VARCHAR(13)
,@NEW_IDX INT OUTPUT
AS

SET NOCOUNT ON ;

INSERT INTO TB_FAQ(CATEGORY,TITLE,QUESTION,ANSWER,DISPLAY_YN,M_ID,REG_DATE)
VALUES(@CATEGORY,@TITLE,@QUESTION,@ANSWER,@DISPLAY_YN,@M_ID,GETDATE());


SELECT @NEW_IDX = SCOPE_IDENTITY() ;
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_FAQ_DEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_FAQ

exec [SP_TB_NOTICE_FAQ] 55,1

*/
CREATE PROCEDURE [dbo].[SP_TB_FAQ_DEL]
 @IDX	INT
 ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN


	DELETE FROM TB_FAQ
	WHERE IDX = @IDX

	SET @ERR_CODE = @@ERROR;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_CART_PRODUCT_DEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

프로시져명 SP_TB_CART_PRODUCT_DEL
장바구니에 담긴 품목삭제
파라미터 설명
@M_ID : 회원ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
@SESSION_ID : 세션ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
@P_CODE_LIST : P_CODE를 ,로 구분조합하여 전달 (EX:PCODE1,PCODE2,PCODE3)

SELECT * FROM TB_CART

exec SP_TB_CART_PRODUCT_DEL 'KMG5302','','555,35,wer'
exec SP_TB_CART_PRODUCT_DEL 'test_b1s','nga0xjgtajrcvh1ja3vrbtxn','66'

*/
CREATE PROCEDURE [dbo].[SP_TB_CART_PRODUCT_DEL]
 @M_ID	VARCHAR(13)	= '' 
,@SESSION_ID	VARCHAR(50)	= '' 
,@CART_IDX VARCHAR(4000)

-- ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

	SET NOCOUNT ON

	SET @CART_IDX = RTRIM(LTRIM(@CART_IDX))

	DECLARE @CART_IDX_CUT VARCHAR(100)

	WHILE LEN(@CART_IDX) > 0
	BEGIN
		IF CHARINDEX(',',@CART_IDX) > 0
		BEGIN
			SET @CART_IDX_CUT = LEFT(@CART_IDX, CHARINDEX(',',@CART_IDX) - 1 )
			SET @CART_IDX = SUBSTRING( @CART_IDX, CHARINDEX(',',@CART_IDX)+1, LEN(@CART_IDX) )
		END
		ELSE BEGIN
			SET @CART_IDX_CUT = @CART_IDX
			SET @CART_IDX = ''
		END
		
		-- 장바구니 삭제 액션 실행
		IF @M_ID <> ''
		BEGIN
			DELETE
			FROM TB_CART
			WHERE M_ID = @M_ID
			AND IDX = @CART_IDX_CUT
		END
		ELSE BEGIN
			DELETE
			FROM TB_CART
			WHERE SESSION_ID = @SESSION_ID
			AND IDX = @CART_IDX_CUT
		END

		
/*
TRUNCATE TABLE TB_CART
SELECT * FROM TB_CART

exec SP_TB_CART_PRODUCT_DEL 'KMG5302','','555,35,wer'
exec SP_TB_CART_PRODUCT_DEL '','0342R78G324FV','555,35,wer'

*/
	END
	
	
	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_CART_PRODUCT_ADD]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

프로시져명 SP_TB_CART_PRODUCT_ADD
장바구니에 담긴 품목담기
파라미터 설명
@M_ID : 회원ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
@SESSION_ID : 세션ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
@P_CODE_LIST : P_CODE를 ,로 구분조합하여 전달 (EX:PCODE1,PCODE2,PCODE3)
@P_COUNT_LIST : 각 상품의 담을 갯수를 ,로 구분조합하여 전달 (EX:1,2,3)  기본값=1
@MERGY_OPT : 기존에 같은 상품이 있을때 옵션  ( Y : 해당상품의 수량을 증가시킴  N : 추가행위를 무효화[기본값] )

SELECT * FROM TB_CART

SELECT * FROM TB_MEMBER
SELECT * FROM TB_PRODUCT_INFO


exec SP_TB_CART_PRODUCT_ADD 'KMG5302','','555,35,wer','2,3','Y'
exec SP_TB_CART_PRODUCT_ADD '','0342R78G324FV','555,35,wer','2,3','Y'

*/
CREATE PROCEDURE [dbo].[SP_TB_CART_PRODUCT_ADD]
 @M_ID	VARCHAR(13)	= '' 
,@SESSION_ID	VARCHAR(50)	= '' 
,@P_CODE_LIST VARCHAR(1000)
,@P_COUNT_LIST VARCHAR(1000)
,@MERGY_OPT CHAR(1) = 'N'

-- ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

	SET NOCOUNT ON

	SET @P_CODE_LIST = RTRIM(LTRIM(@P_CODE_LIST))
	SET @P_COUNT_LIST = RTRIM(LTRIM(@P_COUNT_LIST))

	DECLARE @P_CODE_LIST_CUT VARCHAR(100)
	DECLARE @P_COUNT_LIST_CUT VARCHAR(100)

	WHILE LEN(@P_CODE_LIST) > 0
	BEGIN
		IF CHARINDEX(',',@P_CODE_LIST) > 0
		BEGIN
			SET @P_CODE_LIST_CUT = LEFT(@P_CODE_LIST, CHARINDEX(',',@P_CODE_LIST) - 1 )
			SET @P_CODE_LIST = SUBSTRING( @P_CODE_LIST, CHARINDEX(',',@P_CODE_LIST)+1, LEN(@P_CODE_LIST) )
		END
		ELSE BEGIN
			SET @P_CODE_LIST_CUT = @P_CODE_LIST
			SET @P_CODE_LIST = ''
		END
		
		IF CHARINDEX(',',@P_COUNT_LIST) > 0
		BEGIN
			SET @P_COUNT_LIST_CUT = LEFT(@P_COUNT_LIST, CHARINDEX(',',@P_COUNT_LIST) - 1 )
			SET @P_COUNT_LIST = SUBSTRING( @P_COUNT_LIST, CHARINDEX(',',@P_COUNT_LIST)+1, LEN(@P_COUNT_LIST) )
		END
		ELSE BEGIN
			SET @P_COUNT_LIST_CUT = @P_COUNT_LIST
			SET @P_COUNT_LIST = ''
		END
		IF @P_COUNT_LIST_CUT = ''
			SET @P_COUNT_LIST_CUT = '1'

		-- 장바구니에 담는 액션 실행
		DECLARE @ALLREADY_CNT INT = 0
		
		IF @M_ID <> ''
		BEGIN
			SELECT @ALLREADY_CNT = COUNT(IDX)
			FROM TB_CART WITH (NOLOCK)
			WHERE M_ID = @M_ID
			AND P_CODE = @P_CODE_LIST_CUT
			
			IF @ALLREADY_CNT = 0
			BEGIN
				INSERT INTO TB_CART (M_ID, P_CODE, P_COUNT, REG_DATE)
				SELECT @M_ID, P_CODE, @P_COUNT_LIST_CUT, GETDATE()
				FROM TB_PRODUCT_INFO WITH (NOLOCK)
				WHERE P_CODE = @P_CODE_LIST_CUT
			END
			ELSE IF @MERGY_OPT = 'Y'
			BEGIN
				UPDATE TB_CART
				SET P_COUNT = P_COUNT + @P_COUNT_LIST_CUT
				WHERE M_ID = @M_ID
				AND P_CODE = @P_CODE_LIST_CUT
			END
		END
		ELSE BEGIN
			SELECT @ALLREADY_CNT = COUNT(IDX)
			FROM TB_CART WITH (NOLOCK)
			WHERE SESSION_ID = @SESSION_ID
			AND P_CODE = @P_CODE_LIST_CUT

			IF @ALLREADY_CNT = 0
			BEGIN
				INSERT INTO TB_CART (SESSION_ID, P_CODE, P_COUNT, REG_DATE)
				SELECT @SESSION_ID, P_CODE, @P_COUNT_LIST_CUT, GETDATE()
				FROM TB_PRODUCT_INFO WITH (NOLOCK)
				WHERE P_CODE = @P_CODE_LIST_CUT
			END
			ELSE IF @MERGY_OPT = 'Y'
			BEGIN
				UPDATE TB_CART
				SET P_COUNT = P_COUNT + @P_COUNT_LIST_CUT
				WHERE SESSION_ID = @SESSION_ID
				AND P_CODE = @P_CODE_LIST_CUT
			END
		END

		
/*
TRUNCATE TABLE TB_CART
SELECT * FROM TB_CART

SELECT * FROM TB_PRODUCT_INFO


		exec SP_TB_CART_PRODUCT_ADD 'KMG5302','','555,35,wer','2,3','Y'
		exec SP_TB_CART_PRODUCT_ADD '','0342R78G324FV','555,35,wer','2,3','Y'

*/


	END
	
	
	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_CART_PCODE_CNT]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_TB_CART_PCODE_CNT
특정제품이 장바구니에 담긴 갯수확인
파라미터 설명
@P_CODE : 상품코드

SELECT * FROM TB_CART

exec SP_TB_CART_PCODE_CNT '1111111'
exec SP_TB_CART_PCODE_CNT '555'

*/
CREATE PROCEDURE [dbo].[SP_TB_CART_PCODE_CNT]
 @P_CODE	VARCHAR(50)
AS
BEGIN
	SET NOCOUNT ON

	SELECT COUNT(IDX) AS COUNT 
	FROM TB_CART  WITH (NOLOCK)
	WHERE P_CODE = @P_CODE

	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_CART_MERGE]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

프로시져명 SP_TB_CART_MERGE
로그인시 비회원장바구니에 담긴 품목을 회원 장바구니에 담기
파라미터 설명
@M_ID : 회원ID (@M_ID과 @SESSION_ID 둘 모두 입력)
@SESSION_ID : 세션ID (@M_ID과 @SESSION_ID 둘 모두 입력)
@MERGY_OPT : 기존에 같은 상품이 있을때 옵션  ( Y : 해당상품의 수량을 증가시킴  N : 추가행위를 무효화[기본값] )

SELECT * FROM TB_CART

SELECT * FROM TB_MEMBER
SELECT * FROM TB_PRODUCT_INFO


exec SP_TB_CART_MERGE 'KMG5302','0342R78G324FV','Y'
exec SP_TB_CART_MERGE 'KMG5302','0342R78G324FV','N'

*/
CREATE PROCEDURE [dbo].[SP_TB_CART_MERGE]
 @M_ID	VARCHAR(13)	= '' 
,@SESSION_ID	VARCHAR(50)	= '' 
,@MERGY_OPT CHAR(1) = 'N'

-- ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

	SET NOCOUNT ON

	IF @MERGY_OPT = 'Y'
	BEGIN
		UPDATE A
		SET A.P_COUNT = ISNULL(A.P_COUNT,0) + ISNULL(B.P_COUNT,0)
		FROM TB_CART A
		, TB_CART B
		WHERE A.M_ID = @M_ID
		AND B.SESSION_ID = @SESSION_ID
		AND A.P_CODE = B.P_CODE
	END

	DELETE B
	FROM TB_CART A
	, TB_CART B
	WHERE A.M_ID = @M_ID
	AND B.SESSION_ID = @SESSION_ID
	AND A.P_CODE = B.P_CODE

	INSERT INTO TB_CART (M_ID, P_CODE, P_COUNT, REG_DATE)
	SELECT @M_ID, P_CODE, P_COUNT, GETDATE()
	FROM TB_CART WITH (NOLOCK)
	WHERE SESSION_ID = @SESSION_ID

	DELETE
	FROM TB_CART
	WHERE SESSION_ID = @SESSION_ID

	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[TEST1]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[TEST1]
AS
BEGIN

RAISERROR ('ERROR',16,1);
RETURN

SELECT *
FROM TB_ORDER_MASTER


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_CART_GOTO_WISH]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

프로시져명 SP_TB_CART_GOTO_WISH
장바구니에 담긴 품목을 찜목록으로 이동
파라미터 설명
@M_ID : 회원ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
@SESSION_ID : 세션ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
@P_CODE_LIST : P_CODE를 ,로 구분조합하여 전달 (EX:PCODE1,PCODE2,PCODE3)
@MERGY_OPT : 찜목록에 기존에 같은 상품이 있을때 옵션  ( Y : 해당상품의 수량을 증가시킴  N : 추가행위를 무효화[기본값] )

SELECT * FROM TB_CART
SELECT * FROM TB_WISHLIST

exec SP_TB_CART_GOTO_WISH 'KMG5302','','555,35,wer','Y'
exec SP_TB_CART_GOTO_WISH '','0342R78G324FV','555,35,wer','Y'
*/
CREATE PROCEDURE [dbo].[SP_TB_CART_GOTO_WISH]
 @M_ID	VARCHAR(13)	= '' 
,@SESSION_ID	VARCHAR(50)	= '' 
,@P_CODE_LIST VARCHAR(1000)
,@MERGY_OPT CHAR(1) = 'N'

-- ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

	SET NOCOUNT ON

	SET @P_CODE_LIST = RTRIM(LTRIM(@P_CODE_LIST))

	DECLARE @P_CODE_LIST_CUT VARCHAR(100)

	WHILE LEN(@P_CODE_LIST) > 0
	BEGIN
		IF CHARINDEX(',',@P_CODE_LIST) > 0
		BEGIN
			SET @P_CODE_LIST_CUT = LEFT(@P_CODE_LIST, CHARINDEX(',',@P_CODE_LIST) - 1 )
			SET @P_CODE_LIST = SUBSTRING( @P_CODE_LIST, CHARINDEX(',',@P_CODE_LIST)+1, LEN(@P_CODE_LIST) )
		END
		ELSE BEGIN
			SET @P_CODE_LIST_CUT = @P_CODE_LIST
			SET @P_CODE_LIST = ''
		END

		-- 찜목록에 담는 액션 실행
		DECLARE @ALLREADY_CNT INT = 0
		IF @M_ID <> ''
		BEGIN
			SELECT @ALLREADY_CNT = ISNULL(SUM(P_COUNT),0)
			FROM TB_WISHLIST WITH (NOLOCK)
			WHERE M_ID = @M_ID
			AND P_CODE = @P_CODE_LIST_CUT
			
			IF @ALLREADY_CNT = 0
			BEGIN
				SELECT @ALLREADY_CNT = ISNULL(SUM(P_COUNT),0)
				FROM TB_CART WITH (NOLOCK)
				WHERE M_ID = @M_ID
				AND P_CODE = @P_CODE_LIST_CUT

				INSERT INTO TB_WISHLIST (M_ID, P_CODE, P_COUNT, REG_DATE)
				SELECT @M_ID, P_CODE, @ALLREADY_CNT, GETDATE()
				FROM TB_PRODUCT_INFO WITH (NOLOCK)
				WHERE P_CODE = @P_CODE_LIST_CUT
			END
			ELSE IF @MERGY_OPT = 'Y'
			BEGIN
				UPDATE TB_WISHLIST
				SET P_COUNT = P_COUNT + @ALLREADY_CNT
				WHERE M_ID = @M_ID
				AND P_CODE = @P_CODE_LIST_CUT
			END
		END
		ELSE BEGIN
			SELECT @ALLREADY_CNT = ISNULL(SUM(P_COUNT),0)
			FROM TB_WISHLIST WITH (NOLOCK)
			WHERE SESSION_ID = @SESSION_ID
			AND P_CODE = @P_CODE_LIST_CUT

			IF @ALLREADY_CNT = 0
			BEGIN
				SELECT @ALLREADY_CNT = ISNULL(SUM(P_COUNT),0)
				FROM TB_CART WITH (NOLOCK)
				WHERE SESSION_ID = @SESSION_ID
				AND P_CODE = @P_CODE_LIST_CUT

				INSERT INTO TB_WISHLIST (SESSION_ID, P_CODE, P_COUNT, REG_DATE)
				SELECT @SESSION_ID, P_CODE, @ALLREADY_CNT, GETDATE()
				FROM TB_PRODUCT_INFO WITH (NOLOCK)
				WHERE P_CODE = @P_CODE_LIST_CUT
			END
			ELSE IF @MERGY_OPT = 'Y'
			BEGIN
				UPDATE TB_WISHLIST
				SET P_COUNT = P_COUNT + @ALLREADY_CNT
				WHERE SESSION_ID = @SESSION_ID
				AND P_CODE = @P_CODE_LIST_CUT
			END
		END

		
/*
SELECT * FROM TB_CART
SELECT * FROM TB_WISHLIST


TRUNCATE TABLE TB_WISHLIST



SELECT * FROM TB_PRODUCT_INFO


exec SP_TB_CART_GOTO_WISH 'KMG5302','','555,35','Y'
exec SP_TB_CART_GOTO_WISH '','0342R78G324FV','555,35','Y'

*/


	END
	
	
	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_CART_COUNT_CHANGE]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

프로시져명 SP_TB_CART_COUNT_CHANGE
장바구니에 담긴 상품의 수량을 변경
파라미터 설명
@M_ID : 회원ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
@SESSION_ID : 세션ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
@P_CODE : 상품코드
@P_COUNT : 변경하려는 수치  기본값=1

SELECT * FROM TB_CART

SELECT * FROM TB_MEMBER
SELECT * FROM TB_PRODUCT_INFO


exec SP_TB_CART_COUNT_CHANGE 'KMG5302','','zxcv',3
exec SP_TB_CART_COUNT_CHANGE '','0342R78G324FV','555,3

*/
CREATE PROCEDURE [dbo].[SP_TB_CART_COUNT_CHANGE]
 @M_ID	VARCHAR(13)	= '' 
,@SESSION_ID	VARCHAR(50)	= '' 
,@CART_IDX INT
,@P_COUNT INT = 1
AS
BEGIN

	SET NOCOUNT ON

	IF @M_ID <> ''
	BEGIN
		UPDATE TB_CART
		SET P_COUNT = @P_COUNT
		WHERE M_ID = @M_ID
		AND IDX = @CART_IDX
	END
	ELSE BEGIN
		UPDATE TB_CART
		SET P_COUNT = @P_COUNT
		WHERE SESSION_ID = @SESSION_ID
		AND IDX = @CART_IDX
	END

		
/*
TRUNCATE TABLE TB_CART
SELECT * FROM TB_CART

SELECT * FROM TB_PRODUCT_INFO


		exec SP_TB_CART_PRODUCT_ADD 'KMG5302','','555,35,wer','2,3','Y'
		exec SP_TB_CART_PRODUCT_ADD '','0342R78G324FV','555,35,wer','2,3','Y'

*/

	
	
	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_CART_CNT]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_TB_CART_CNT
특정회원의 장바구니에 담긴 품목 갯수확인
파라미터 설명
@M_ID : 회원ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
@SESSION_ID : 세션ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)


SELECT * 
FROM TB_CART

SELECT *
FROM TB_PRODUCT_INFO

SELECT * FROM TB_MEMBER
SELECT * FROM TB_PRODUCT_INFO


exec SP_TB_CART_CNT 
exec SP_TB_CART_CNT 'test_b1s',''
exec SP_TB_CART_CNT '','AAA'

*/
CREATE PROCEDURE [dbo].[SP_TB_CART_CNT]
 @M_ID	varchar(13)	= '' 
,@SESSION_ID	varchar(50)	= '' 
AS
BEGIN

	SET NOCOUNT ON

	IF isnull(@M_ID,'') = '' AND isnull(@SESSION_ID,'') = ''
	BEGIN
		SELECT 0 AS COUNT
	END
	ELSE IF isnull(@M_ID,'') <> ''
	BEGIN
		SELECT COUNT(A.IDX) AS COUNT 
		FROM TB_CART A  WITH (NOLOCK)
			INNER JOIN TB_PRODUCT_INFO B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
				AND B.DISPLAY_YN = 'Y'
			--	AND ISNULL(B.SOLDOUT_YN,'N') = 'N'
		WHERE A.M_ID = @M_ID
	END
	ELSE BEGIN
		SELECT COUNT(A.IDX) AS COUNT 
		FROM TB_CART A  WITH (NOLOCK)
			INNER JOIN TB_PRODUCT_INFO B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
				AND B.DISPLAY_YN = 'Y'
			--	AND ISNULL(B.SOLDOUT_YN,'N') = 'N'
		WHERE A.SESSION_ID = @SESSION_ID
	END
	

	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_RECALL_BBS_VIEW]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_RECALL_BBS

exec [SP_TB_RECALL_BBS_VIEW] 1

*/
CREATE PROCEDURE [dbo].[SP_TB_RECALL_BBS_VIEW]
 @IDX			INT
,@REG_ID		VARCHAR(20) = '' 
,@ORDER_CODE    VARCHAR(20) = '' 
AS
BEGIN

	SET NOCOUNT ON
	if (@REG_ID <> '')
	begin
		SELECT IDX, ORDER_CODE, ORDER_DETAIL_IDX, GUBUN, TITLE, CONTENTS, 
			   CONFIRM_CONTENTS, STATUS,ADM_ID, REG_ID, REG_DATE
		FROM TB_RECALL_BBS a with (nolock)
		WHERE IDX = @IDX
		AND REG_ID = @REG_ID
	end
	else
	begin
		if (@ORDER_CODE <> '')
		BEGIN
			SELECT IDX, ORDER_CODE, ORDER_DETAIL_IDX, GUBUN, TITLE, CONTENTS, 
				   CONFIRM_CONTENTS, STATUS,ADM_ID, REG_ID, REG_DATE
			FROM TB_RECALL_BBS a with (nolock)
			WHERE IDX = @IDX
			AND ORDER_CODE = @ORDER_CODE
		END
	end		

	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_RECALL_BBS_UPD]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_RECALL_BBS

exec [SP_TB_RECALL_BBS_UPD] 2 , 1,'제목테스트','내용테스트_수정', '', 1,'kmg5302' , 1

*/
CREATE PROCEDURE [dbo].[SP_TB_RECALL_BBS_UPD]
 @IDX	INT
,@GUBUN INT  
,@TITLE VARCHAR(100)
,@CONTENTS TEXT
,@REG_ID VARCHAR(20) 
,@ORDER_CODE VARCHAR(20) = ''
AS
BEGIN
    IF (@REG_ID <> '')
    BEGIN
		UPDATE TB_RECALL_BBS
		SET GUBUN = @GUBUN 
		, TITLE = @TITLE
		, CONTENTS = @CONTENTS
		WHERE IDX = @IDX
		AND REG_ID = @REG_ID
	END
	ELSE
	BEGIN
		IF (@ORDER_CODE <> '')
		BEGIN
			UPDATE TB_RECALL_BBS
			SET GUBUN = @GUBUN 
			, TITLE = @TITLE
			, CONTENTS = @CONTENTS
			WHERE IDX = @IDX
			AND ORDER_CODE = @ORDER_CODE
		END
	END
END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_RECALL_BBS_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_RECALL
select * from tb_order_master
exec SP_TB_RECALL_BBS_SEL '', '', 'test_b1s','',''

insert into TB_RECALL_BBS (ORDER_CODE, ORDER_DETAIL_IDX, TITLE, CONTENTS, REG_ID)
values ('20150723-100053', 17, '테스트 17', '테스트입니다', 'test_b1s')
*/
CREATE PROCEDURE [dbo].[SP_TB_RECALL_BBS_SEL]
 @START_DATE	VARCHAR(10) = ''
,@END_DATE		VARCHAR(10) = ''
,@REG_ID		VARCHAR(20) = '' 
,@ORDER_CODE    VARCHAR(20) = '' 
,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈

AS
BEGIN

	SET NOCOUNT ON
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ; 
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_TMP	INT
	)

	 
	set @v_SQL_WHERE = ' WHERE (1=1)'
 
	
	IF @START_DATE <> '' AND @END_DATE <> ''
	begin
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( CONVERT(VARCHAR(10) , REG_DATE ,23) >= ''' + @START_DATE + ''' AND CONVERT(VARCHAR(10) , REG_DATE ,23) <= ''' + @END_DATE + ''' ) '
	end
		
	IF @REG_ID <> '' 
	begin
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( REG_ID = ''' + @REG_ID + ''') '
	end
	
	IF @REG_ID = '' AND @ORDER_CODE <> ''
	 begin
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND ( ORDER_CODE = ''' + @ORDER_CODE + ''') '
	 end 
	 
 
	 
	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	set @v_SQL  ='insert into #TEMPLIST (IDX_TMP) '
	set @v_SQL  =@v_SQL + ' SELECT  IDX ';
	set @v_SQL  =@v_SQL + ' FROM TB_RECALL_BBS WITH (NOLOCK) ';
	set @v_SQL  =@v_SQL + @v_SQL_WHERE ;
	set @v_SQL  =@v_SQL + '	ORDER BY IDX DESC ' ;

	exec(@v_SQL);


	SET ROWCOUNT 0 ;

	SELECT IDX, ORDER_CODE, ORDER_DETAIL_IDX, GUBUN, TITLE, CONTENTS, CONFIRM_CONTENTS,
		   STATUS, REG_ID, ADM_ID, REG_DATE, CONFIRM_DATE
	from TB_RECALL_BBS a with (nolock)
		inner join #TEMPLIST t on a.IDX = t.IDX_TMP
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_RECALL_BBS_INS]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*

SELECT * FROM TB_RECALL_BBS

exec SP_TB_RECALL_BBS_INS '20150723-100053','120','1','테스트20','내용테스트','1','test'

*/


CREATE PROC [dbo].[SP_TB_RECALL_BBS_INS]
 @ORDER_CODE VARCHAR(20)
,@ORDER_DETAIL_IDX INT
,@GUBUN INT  
,@TITLE VARCHAR(1000)
,@CONTENTS TEXT
,@REG_ID VARCHAR(20) = ''
AS
BEGIN

INSERT INTO TB_RECALL_BBS(ORDER_CODE,ORDER_DETAIL_IDX,GUBUN,TITLE,CONTENTS,STATUS,REG_ID,REG_DATE)
VALUES(@ORDER_CODE,@ORDER_DETAIL_IDX,@GUBUN,@TITLE,@CONTENTS,1,@REG_ID,GETDATE());

END
GO
/****** Object:  StoredProcedure [dbo].[TEST2]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE [dbo].[TEST2]
AS
BEGIN

exec TEST1

SELECT *
FROM TB_ORDER_MASTER


END
GO
/****** Object:  StoredProcedure [dbo].[SP_TB_CART_LIST]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_TB_CART_LIST
장바구니 리스트 SELECT
파라미터 설명
@M_ID : 회원ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
@SESSION_ID : 세션ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)

SELECT * FROM TB_CART

SELECT * FROM TB_MEMBER
SELECT * FROM TB_PRODUCT_INFO


exec SP_TB_CART_LIST 'test_v099s',''
exec SP_TB_CART_LIST '','mbbpgdbouf5zpnjdpdgdvdjd'
 exec SP_TB_CART_PRODUCT_ADD 'test_b1s','','CSTONE00','3','Y'
*/
CREATE PROCEDURE [dbo].[SP_TB_CART_LIST]
 @M_ID	varchar(13)	= '' 
,@SESSION_ID	varchar(50)	= '' 
AS
BEGIN

	SET NOCOUNT ON


--DECLARE @M_ID	varchar(13)	= 'test_b1s'
-- , @SESSION_ID varchar(50)	= ''

	IF OBJECT_ID('tempdb..#CARTLIST') is not null
	BEGIN
	  DROP TABLE #CARTLIST;
	END

	CREATE TABLE #CARTLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY
		, CART_IDX INT
		, M_ID VARCHAR(13)  -- 회원ID   ( 회원아이디 )
		, M_NAME VARCHAR(30)	-- 회원명
		, M_GRADE VARCHAR(1)	-- 회원등급
		, M_GBN VARCHAR(1) DEFAULT 'A'	-- 임직원구분 (A:일반회원,S:임직원)
		, P_CODE VARCHAR(50) NOT NULL		-- 상품코드   ( TB_PRODUCT_INFO 참조 )
		, P_COUNT INT	DEFAULT 1 NOT NULL	--	상품갯수
		, P_CATE_CODE CHAR(9)
		, P_CATE_NAME VARCHAR(50)
		, C_CATE_CODE CHAR(9)
		, C_CATE_NAME VARCHAR(50)
		, L_CATE_CODE CHAR(9)
		, L_CATE_NAME VARCHAR(50)
		, P_NAME VARCHAR(100)
		, P_SUB_TITLE VARCHAR(200)
		, SELLING_PRICE INT
		, DISCOUNT_RATE INT
		, DISCOUNT_PRICE INT						-- 상품금액
		, P_POINT INT DEFAULT 0
		, SOLDOUT_YN VARCHAR(1)
		, MAIN_IMG VARCHAR(100)
		, PROMOTION_TYPE CHAR(2) DEFAULT '99' NOT NULL		-- 프로모션 타입 (99:일반상품, 01:SET, 02:1+1, 03:TIME SALE등 일반할인)
		, EMP_DISCOUNT INT DEFAULT 1 NOT NULL				-- 임직원할인 대상여부 (0:비대상, 1:대상)
		, EMP_PMO_TOTAL_RATE_OR_MONEY VARCHAR(1)			-- 임직원 할인율 또는 할인금액 구분
		, EMP_PMO_TOTAL_DISCOUNT_RATE INT					-- 임직원 할인율
		, EMP_PMO_TOTAL_DISCOUNT_MONEY	INT					-- 임직원 할인금액
		, EMP_DISCOUNT_AMT INT DEFAULT 0 NOT NULL			-- 임직원 할인받은 금액
		, EMP_DISCOUNT_PRICE INT DEFAULT 0 NOT NULL			-- 임직원할인가 (구매가능한 상품가)
		, ORDER_PRICE INT DEFAULT 0 NOT NULL				-- 주문금액

		, ICON_NEW INT DEFAULT 0 NOT NULL					-- NEW아이콘   ( PRODUCT_DETAIL테이블 참조 (0:미적용 1:적용) )
		, ICON_BEST INT DEFAULT 0 NOT NULL					-- BEST아이콘   ( PRODUCT_DETAIL테이블 참조 (0:미적용 1:적용) )
		, ICON_SOLDOUT INT DEFAULT 0 NOT NULL				-- SOLD OUT아이콘   ( PRODUCT_DETAIL테이블 참조 (0:미적용 1:적용) )
		, ICON_CUSTOM INT DEFAULT 0 NOT NULL				-- 사용자지정 아이콘   ( PRODUCT_DETAIL테이블 참조 (0:미적용 1:적용) )
		, ICON_ONEPLUS INT DEFAULT 0 NOT NULL				-- 1+1 아이콘   ( 적용된 프로모션참조 (0:미적용 1:적용) )
		, ICON_SET INT DEFAULT 0 NOT NULL					-- 세트상품 아이콘   ( 적용된 프로모션참조 (0:미적용 1:적용) )
		, ICON_TIME INT DEFAULT 0 NOT NULL					-- 타임세일아이콘   ( 적용된 프로모션참조 (0:미적용 1:적용) )
		, ICON_COUPON INT DEFAULT 0 NOT NULL				-- 쿠폰아이콘   
	)
	

		DECLARE @SET_ID VARCHAR(7) = ''
			, @SET_CNT INT = 0
			, @SET_ORDER_CNT INT = 0
	
		DECLARE @SAVE_POINT_VAL NUMERIC(10,3) = 0.02

	if (isnull(@M_ID,'') <> '')		/****************************************          회원이면                *************************************/
	BEGIN
		SELECT @SAVE_POINT_VAL = CASE WHEN M_GRADE = 'V' THEN 0.05
								  WHEN M_GRADE = 'G' THEN 0.03
								  ELSE 0.02 END
		FROM TB_MEMBER
		WHERE M_ID = @M_ID
	
		INSERT INTO #CARTLIST
		(
			CART_IDX
			, M_ID
			, M_NAME
			, M_GRADE
			, M_GBN
			, P_CODE 
			, P_COUNT
			, P_CATE_CODE
			, P_CATE_NAME
			, C_CATE_CODE
			, C_CATE_NAME
			, L_CATE_CODE
			, L_CATE_NAME
			, P_NAME
			, P_SUB_TITLE
			, SELLING_PRICE
			, DISCOUNT_RATE
			, DISCOUNT_PRICE
			, SOLDOUT_YN
			, MAIN_IMG
		)
		SELECT 
		  A.IDX
		, C.M_ID
		, C.M_NAME
		, C.M_GRADE
		, C.M_GBN
		, A.P_CODE
		, A.P_COUNT
		, B.P_CATE_CODE
		, CASE WHEN PCATE.DEPTH3_NAME IS NULL THEN PCATE.DEPTH2_NAME ELSE PCATE.DEPTH3_NAME END
		, B.C_CATE_CODE
		, CASE WHEN CCATE.DEPTH3_NAME IS NULL THEN CCATE.DEPTH2_NAME ELSE CCATE.DEPTH3_NAME END
		, B.L_CATE_CODE
		, CASE WHEN LCATE.DEPTH3_NAME IS NULL THEN LCATE.DEPTH2_NAME ELSE LCATE.DEPTH3_NAME END
		, B.P_NAME
		, B.P_SUB_TITLE
		, B.SELLING_PRICE
		, ISNULL(B.DISCOUNT_RATE,0)
		, ISNULL(B.DISCOUNT_PRICE,0)
		, ISNULL(B.SOLDOUT_YN,'N')		-- 품절여부는 N을 기본값으로
		, B.MAIN_IMG
		FROM TB_CART A, TB_PRODUCT_INFO B
			LEFT OUTER JOIN TB_CATEGORY PCATE
				ON PCATE.CATE_CODE = B.P_CATE_CODE
			LEFT OUTER JOIN TB_CATEGORY CCATE
				ON CCATE.CATE_CODE = B.C_CATE_CODE
			LEFT OUTER JOIN TB_CATEGORY LCATE
				ON LCATE.CATE_CODE = B.L_CATE_CODE
			, TB_MEMBER C
		WHERE A.M_ID = @M_ID
		AND A.P_CODE = B.P_CODE
		AND A.M_ID = C.M_ID
		AND B.DISPLAY_YN = 'Y'		-- 전시중인 상품만


		/*
			이부분에 프로모션 검색로직을...
				1. SET상품의 조건이 충족되는 상품들 검색후 처리
				3. 1+1상품 검색처리
				4. TIME SALE상품 검색처리
				5. 기획전(따로 검색해야함?)상품 검색처리
				6. 1~5까지 안걸린 상품은 상품테이블의 가격정보를 입력
		
		*/
		-- 1. SET 프로모션이 걸려있는게 있는지 검사

		SELECT TOP 1  @SET_ID = A.CD_PROMOTION_PRODUCT
			, @SET_CNT = ISNULL(A.PMO_ONEONE_MULTIPLE_CNT,2)
		FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		WHERE A.PMO_PRODUCT_CATEGORY = '01'

		IF @SET_ID <> ''
		BEGIN
			SELECT @SET_ORDER_CNT = COUNT(*)
			FROM #CARTLIST A
				INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
					ON A.P_CODE = B.P_CODE
					AND B.CD_PROMOTION_PRODUCT = @SET_ID
			
			IF @SET_ORDER_CNT >= @SET_CNT		--	SET조건을 충족시키면
			BEGIN
				UPDATE A
				SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
					, A.DISCOUNT_PRICE = B.RESULT_PRICE
					, A.EMP_DISCOUNT = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
					, A.EMP_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN C.PMO_TOTAL_CATEGORY ELSE C.PMO_TOTAL_RATE_OR_MONEY END
					, A.EMP_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_RATE,0) END
					, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_MONEY,0) END
				FROM #CARTLIST A
					INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
						ON A.P_CODE = B.P_CODE
						AND B.CD_PROMOTION_PRODUCT = @SET_ID
					LEFT OUTER JOIN VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL C WITH (NOLOCK)
						ON A.P_CODE = C.P_CODE
						AND C.CD_PROMOTION_PRODUCT = @SET_ID
						AND C.PMO_TOTAL_CATEGORY = '00'		-- 임직원할인폭 조건
						AND A.M_GBN = C.M_GBN
						AND A.M_GRADE = C.M_GRADE
			END
		END
		
		-- 2. SET 프로모션외의 다른프로모션이 걸린 상품이 있으면, 걸린 프로모션 적용
		UPDATE A
		SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
			, A.DISCOUNT_PRICE = B.RESULT_PRICE
			, A.EMP_DISCOUNT = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
			, A.EMP_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN C.PMO_TOTAL_CATEGORY ELSE C.PMO_TOTAL_RATE_OR_MONEY END
			, A.EMP_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_RATE,0) END
			, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_MONEY,0) END
		FROM #CARTLIST A
			INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
				AND B.PMO_PRODUCT_CATEGORY IN ('02','03')
			LEFT OUTER JOIN VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL C WITH (NOLOCK)
				ON A.P_CODE = C.P_CODE
				AND C.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
				AND C.PMO_TOTAL_CATEGORY = '00'		-- 임직원할인폭 조건
				AND A.M_GBN = C.M_GBN
				AND A.M_GRADE = C.M_GRADE
		WHERE A.PROMOTION_TYPE = '99'
		
		/*
			프로모션 적용끝	
		*/


		-- 프로모션이 안걸린(DISCOUNT_PRICE가 NULL인) 상품의 가격을 상품테이블의 가격으로 셋팅
		-- 프로모션이 걸리지 않은 상품의 임직원 할인폭을 조회저장
		UPDATE A
		SET A.DISCOUNT_RATE = ISNULL(B.DISCOUNT_RATE,0)
		, A.DISCOUNT_PRICE = ISNULL(B.DISCOUNT_PRICE,0)
		, A.EMP_DISCOUNT = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
		, A.EMP_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN C.PMO_TOTAL_CATEGORY ELSE C.PMO_TOTAL_RATE_OR_MONEY END
		, A.EMP_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_RATE,0) END
		, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_MONEY,0) END
		FROM #CARTLIST A
			LEFT JOIN TB_PRODUCT_INFO B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
			LEFT OUTER JOIN 
				( SELECT C.M_GBN, C.M_GRADE, C.PMO_TOTAL_CATEGORY
						, MAX(C.PMO_TOTAL_RATE_OR_MONEY) AS PMO_TOTAL_RATE_OR_MONEY
						, MAX(C.PMO_TOTAL_DISCOUNT_RATE) AS PMO_TOTAL_DISCOUNT_RATE
						, MAX(C.PMO_TOTAL_DISCOUNT_MONEY) AS PMO_TOTAL_DISCOUNT_MONEY
				  FROM VIEW_PROMOTION_TOTAL_INFO C  WITH (NOLOCK)
				  WHERE C.PMO_TOTAL_CATEGORY = '00'   -- 임직원할인폭 조건
				  GROUP BY C.M_GBN, C.M_GRADE, C.PMO_TOTAL_CATEGORY
				) AS C
				ON A.M_GBN = C.M_GBN
				AND A.M_GRADE = C.M_GRADE
		WHERE A.PROMOTION_TYPE = '99'
		
		
		-- 안전장치를 위해 할인가격이 0인것은 품절처리
		UPDATE A
		SET A.SOLDOUT_YN = 'Y'
		FROM #CARTLIST A
		WHERE A.DISCOUNT_PRICE < 1

		-- 임직원의 경우 임직원 할인대상 상품가격 조정
		UPDATE A
		SET A.EMP_DISCOUNT_AMT = 
				CASE WHEN A.EMP_PMO_TOTAL_RATE_OR_MONEY = 'R' THEN FLOOR(A.DISCOUNT_PRICE / 100.0 * A.EMP_PMO_TOTAL_DISCOUNT_RATE )
				ELSE A.EMP_PMO_TOTAL_DISCOUNT_MONEY END
			, A.EMP_DISCOUNT_PRICE = DISCOUNT_PRICE - 
				CASE WHEN A.EMP_PMO_TOTAL_RATE_OR_MONEY = 'R' THEN FLOOR(A.DISCOUNT_PRICE / 100.0 * A.EMP_PMO_TOTAL_DISCOUNT_RATE )
				ELSE A.EMP_PMO_TOTAL_DISCOUNT_MONEY END
		FROM #CARTLIST A
		WHERE A.M_GBN = 'S'
		AND A.EMP_DISCOUNT = 1
		AND A.EMP_PMO_TOTAL_RATE_OR_MONEY IS NOT NULL

		UPDATE A
		SET A.EMP_DISCOUNT_AMT = 0
			, A.EMP_DISCOUNT_PRICE = A.DISCOUNT_PRICE
		FROM #CARTLIST A
		WHERE A.M_GBN = 'S'
		AND A.EMP_PMO_TOTAL_RATE_OR_MONEY IS NULL

		
		-- 할인율,할인금액을 계산하고, 상품별 주문금액 산정
		-- 적립될 포인트 계산 (일단 3%로 고정)
		UPDATE A
		SET A.DISCOUNT_RATE = 100 - ROUND( A.DISCOUNT_PRICE * 100.0 / A.SELLING_PRICE , 1)
		FROM #CARTLIST A
		WHERE A.SELLING_PRICE > 0

		UPDATE A
		SET A.ORDER_PRICE = CASE WHEN A.EMP_DISCOUNT_PRICE = 0 THEN A.DISCOUNT_PRICE ELSE A.EMP_DISCOUNT_PRICE END * A.P_COUNT
			, A.P_POINT = FLOOR( CASE WHEN A.EMP_DISCOUNT_PRICE = 0 THEN A.DISCOUNT_PRICE ELSE A.EMP_DISCOUNT_PRICE END * A.P_COUNT * @SAVE_POINT_VAL )
		FROM #CARTLIST A

		
-- SELECT * FROM #CARTLIST


	END
	ELSE		/****************************************             비회원이면             *************************************/
	BEGIN
		INSERT INTO #CARTLIST
		(
			CART_IDX
			, M_ID
			, M_NAME
			, M_GRADE
			, M_GBN
			, P_CODE 
			, P_COUNT
			, P_CATE_CODE
			, P_CATE_NAME
			, C_CATE_CODE
			, C_CATE_NAME
			, L_CATE_CODE
			, L_CATE_NAME
			, P_NAME
			, SELLING_PRICE
			, DISCOUNT_RATE
			, DISCOUNT_PRICE
			, SOLDOUT_YN
			, MAIN_IMG
		)
		SELECT A.IDX
		, '' as M_ID
		, '' as M_NAME
		, '' as M_GRADE
		, '' as M_GBN
		, A.P_CODE
		, A.P_COUNT
		, B.P_CATE_CODE
		, CASE WHEN PCATE.DEPTH3_NAME IS NULL THEN PCATE.DEPTH2_NAME ELSE PCATE.DEPTH3_NAME END
		, B.C_CATE_CODE
		, CASE WHEN CCATE.DEPTH3_NAME IS NULL THEN CCATE.DEPTH2_NAME ELSE CCATE.DEPTH3_NAME END
		, B.L_CATE_CODE
		, CASE WHEN LCATE.DEPTH3_NAME IS NULL THEN LCATE.DEPTH2_NAME ELSE LCATE.DEPTH3_NAME END
		, B.P_NAME
		, B.SELLING_PRICE
		, ISNULL(B.DISCOUNT_RATE,0)
		, ISNULL(B.DISCOUNT_PRICE,0)
		, ISNULL(B.SOLDOUT_YN,'N')		-- 품절여부는 N을 기본값으로
		, B.MAIN_IMG
		FROM TB_CART A, TB_PRODUCT_INFO B
			LEFT OUTER JOIN TB_CATEGORY PCATE
				ON PCATE.CATE_CODE = B.P_CATE_CODE
			LEFT OUTER JOIN TB_CATEGORY CCATE
				ON CCATE.CATE_CODE = B.C_CATE_CODE
			LEFT OUTER JOIN TB_CATEGORY LCATE
				ON LCATE.CATE_CODE = B.L_CATE_CODE
		WHERE A.SESSION_ID = @SESSION_ID
		AND A.P_CODE = B.P_CODE
		AND B.DISPLAY_YN = 'Y'		-- 전시중인 상품만










		/*
			이부분에 프로모션 검색로직을...
				1. SET상품의 조건이 충족되는 상품들 검색후 처리
				3. 1+1상품 검색처리
				4. TIME SALE상품 검색처리
				5. 기획전(따로 검색해야함?)상품 검색처리
				6. 1~5까지 안걸린 상품은 상품테이블의 가격정보를 입력
		
		*/
		-- 1. SET 프로모션이 걸려있는게 있는지 검사

		SELECT TOP 1  @SET_ID = A.CD_PROMOTION_PRODUCT
			, @SET_CNT = ISNULL(A.PMO_ONEONE_MULTIPLE_CNT,2)
		FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		WHERE A.PMO_PRODUCT_CATEGORY = '01'

		IF @SET_ID <> ''
		BEGIN
			SELECT @SET_ORDER_CNT = COUNT(*)
			FROM #CARTLIST A
				INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
					ON A.P_CODE = B.P_CODE
					AND B.CD_PROMOTION_PRODUCT = @SET_ID
			
			IF @SET_ORDER_CNT >= @SET_CNT		--	SET조건을 충족시키면
			BEGIN
				UPDATE A
				SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
					, A.DISCOUNT_PRICE = B.RESULT_PRICE
					, A.EMP_DISCOUNT = 0
					, A.EMP_PMO_TOTAL_RATE_OR_MONEY = NULL
					, A.EMP_PMO_TOTAL_DISCOUNT_RATE = 0
					, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = 0
				FROM #CARTLIST A
					INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
						ON A.P_CODE = B.P_CODE
						AND B.CD_PROMOTION_PRODUCT = @SET_ID
			END
		END
		
		-- 2. SET 프로모션외의 다른프로모션이 걸린 상품이 있으면, 걸린 프로모션 적용
		UPDATE A
		SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
			, A.DISCOUNT_PRICE = B.RESULT_PRICE
			, A.EMP_DISCOUNT = 0
			, A.EMP_PMO_TOTAL_RATE_OR_MONEY = NULL
			, A.EMP_PMO_TOTAL_DISCOUNT_RATE = 0
			, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = 0
		FROM #CARTLIST A
			INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
				AND B.PMO_PRODUCT_CATEGORY IN ('02','03')
		WHERE A.PROMOTION_TYPE = '99'
		
		/*
			프로모션 적용끝	
		*/


		-- 프로모션이 안걸린(DISCOUNT_PRICE가 NULL인) 상품의 가격을 상품테이블의 가격으로 셋팅
		-- 프로모션이 걸리지 않은 상품의 임직원 할인폭을 조회저장
		UPDATE A
		SET A.DISCOUNT_RATE = ISNULL(B.DISCOUNT_RATE,0)
		, A.DISCOUNT_PRICE = ISNULL(B.DISCOUNT_PRICE,0)
		, A.EMP_DISCOUNT = 0
		, A.EMP_PMO_TOTAL_RATE_OR_MONEY = NULL
		, A.EMP_PMO_TOTAL_DISCOUNT_RATE = 0
		, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = 0
		FROM #CARTLIST A
			LEFT JOIN TB_PRODUCT_INFO B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
		WHERE A.PROMOTION_TYPE = '99'
		
		
		-- 안전장치를 위해 할인가격이 0인것은 품절처리
		UPDATE A
		SET A.SOLDOUT_YN = 'Y'
		FROM #CARTLIST A
		WHERE A.DISCOUNT_PRICE < 1












		-- 안전장치를 위해 할인가격이 0인것은 품절처리
		UPDATE A
		SET A.SOLDOUT_YN = 'Y'
		FROM #CARTLIST A
		WHERE A.DISCOUNT_PRICE < 1

		-- 상품별 주문금액 산정
		UPDATE A
		SET A.ORDER_PRICE = A.DISCOUNT_PRICE * A.P_COUNT
			, A.P_POINT = FLOOR( A.DISCOUNT_PRICE * A.P_COUNT * @SAVE_POINT_VAL )
		FROM #CARTLIST A
	END

	
	-- 아이콘 적용
	UPDATE A
	SET A.ICON_NEW = CASE WHEN CHARINDEX('N', B.ICON_YN) > 0 THEN 1 ELSE 0 END
		, A.ICON_BEST = CASE WHEN CHARINDEX('B', B.ICON_YN) > 0 THEN 1 ELSE 0 END
		, A.ICON_SOLDOUT = CASE WHEN CHARINDEX('S', B.ICON_YN) > 0 THEN 1 WHEN A.SOLDOUT_YN = 'Y' THEN 1 ELSE 0 END
		, A.ICON_CUSTOM = CASE WHEN CHARINDEX('C', B.ICON_YN) > 0 THEN 1 ELSE 0 END
		, A.ICON_SET = CASE WHEN A.PROMOTION_TYPE = '01' THEN 1 ELSE 0 END
		, A.ICON_ONEPLUS = CASE WHEN A.PROMOTION_TYPE = '02' THEN 1 ELSE 0 END
		, A.ICON_TIME = CASE WHEN A.PROMOTION_TYPE = '03' THEN 1 ELSE 0 END
		, A.ICON_COUPON = CASE WHEN ISNULL(E.P_CODE, '') <> '' THEN 1 ELSE 0 END	--쿠폰
	FROM #CARTLIST A
		INNER JOIN TB_PRODUCT_INFO B
			ON A.P_CODE = B.P_CODE
		LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST E 
			ON A.P_CODE = E.P_CODE 


	-- 정렬순서는 프로모션 걸린게 우선, 나머지는 상품명으로
	SELECT * 
	FROM #CARTLIST
	WHERE SELLING_PRICE > 0
	ORDER BY CASE WHEN PROMOTION_TYPE = '01' THEN 1 ELSE 2 END ASC, CART_IDX ASC


	DROP TABLE #CARTLIST;
/*


SELECT * FROM TB_MEMBER 

SELECT *
FROM TB_CART

SELECT * FROM TB_PRODUCT_INFO

*/


	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_PROMOTION_TOTAL_BY_PRODUCT_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 송선우 (swsong2@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 특정 상품에 적용된 모든 전체할인 프로모션정책을 가져온다
                
 * Modified  :   2015.08.05
 * Modified  :   
 * Modified  :  
 * EXEC SP_PROMOTION_TOTAL_BY_PRODUCT_SEL 'RAA00001' , 'A' ,'V'
 ============================================================*/  

CREATE PROC [dbo].[SP_PROMOTION_TOTAL_BY_PRODUCT_SEL]
	 @P_CODE VARCHAR(10)
    ,@MEM_GBN VARCHAR(1)
    ,@MEM_GRADE VARCHAR(1)
AS

SET NOCOUNT ON 

SELECT 
	 PMO_TOTAL_CATEGORY --00 : 임직원 전용할인 , 03: 등급기준 할인
	,PMO_TOTAL_RATE_OR_MONEY -- R: 정률할인 , M:정액할인
	,PMO_TOTAL_DISCOUNT_RATE  -- 할인율
	,PMO_TOTAL_DISCOUNT_MONEY -- 할인액 
	,M_GBN
	,M_GRADE
	,CASE M_GRADE WHEN 'B' THEN '브론즈' WHEN 'S' THEN '실버' WHEN 'G' THEN '골드'  WHEN 'V' THEN 'VIP' END AS  M_GRADE_DESC 
FROM [VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL] 
WHERE P_CODE = @P_CODE 
      AND ( M_GBN =@MEM_GBN AND M_GRADE=@MEM_GRADE )
GO
/****** Object:  StoredProcedure [dbo].[SP_PROMOTION_TOTAL_BY_PRODUCT_DUMMY_ALL_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : SP_PROMOTION_TOTAL_BY_PRODUCT_ALL_SEL 의 EF Complex Type을 만들기 위한 DummySP
                  
 * Modified  :   2015.08.08  
 * Modified  :     
 * Modified  :    exec SP_PROMOTION_TOTAL_BY_PRODUCT_DUMMY_ALL_SEL
 ============================================================*/    
  
CREATE PROC [dbo].[SP_PROMOTION_TOTAL_BY_PRODUCT_DUMMY_ALL_SEL]  
    @P_CODE VARCHAR(10)  
    ,@MEM_GBN VARCHAR(1)  
    ,@MEM_GRADE VARCHAR(1)  
AS  
  
SET NOCOUNT ON   
  
DECLARE @PRODUCT_CODE AS VARCHAR(10)
SET @PRODUCT_CODE = '' 
SELECT   
  @PRODUCT_CODE AS P_CODE  
 ,PMO_TOTAL_CATEGORY --00 : 임직원 전용할인 , 03: 등급기준 할인  
 ,PMO_TOTAL_RATE_OR_MONEY -- R: 정률할인 , M:정액할인  
 ,PMO_TOTAL_DISCOUNT_RATE  -- 할인율  
 ,PMO_TOTAL_DISCOUNT_MONEY -- 할인액   
 ,M_GBN  
 ,M_GRADE  
 ,CASE M_GRADE WHEN 'B' THEN '브론즈' WHEN 'S' THEN '실버' WHEN 'G' THEN '골드'  WHEN 'V' THEN 'VIP' END AS  M_GRADE_DESC   
FROM [VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL]   
WHERE 1=0
GO
/****** Object:  StoredProcedure [dbo].[SP_PROMOTION_TOTAL_BY_PRODUCT_ALL_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 특정 상품에 적용된 모든 전체할인 프로모션정책을 가져온다  (상품별 프로모션에 소속된 상품과 그렇지 않은 상품 모두)  
                    
 * Modified  :   2015.08.08  , 08.09  
 * Modified  :       
 * Modified  :      
 * EXEC SP_PROMOTION_TOTAL_BY_PRODUCT_ALL_SEL 'RAA00040' , 'A' ,'V'   
 * EXEC SP_PROMOTION_TOTAL_BY_PRODUCT_ALL_SEL 'RAA00009' , 'S' ,'V'   
 * EXEC SP_PROMOTION_TOTAL_BY_PRODUCT_DUMMY_ALL_SEL 'RAA00009' , 'S' ,'V'   
 ============================================================*/      
    
CREATE PROC [dbo].[SP_PROMOTION_TOTAL_BY_PRODUCT_ALL_SEL]    
     @P_CODE VARCHAR(10)    
    ,@MEM_GBN VARCHAR(1)    
    ,@MEM_GRADE VARCHAR(1)    
AS    
    
--SET NOCOUNT ON     
   
   
  
   
DECLARE @D_ROW_COUNT INT   
  
CREATE TABLE #TEMP_ALL_PROMOTION_TOTAL_BY_PRODUCT   
(  
    IDX INT NOT NULL IDENTITY(1,1)  
   ,P_CODE VARCHAR(10)  
   ,PMO_TOTAL_CATEGORY VARCHAR(2)  
   ,PMO_TOTAL_RATE_OR_MONEY VARCHAR(1)  
   ,PMO_TOTAL_DISCOUNT_RATE TINYINT   
   ,PMO_TOTAL_DISCOUNT_MONEY INT  
   ,M_GBN VARCHAR(1)  
   ,M_GRADE VARCHAR(1)  
   ,M_GRADE_DESC VARCHAR(10)  
)  
   
--[1]  먼저 상품별 프로모션에 소속된 상품들중 전체할인정책의 적용을 받는것들만 임시테이블에 INSERT   
INSERT #TEMP_ALL_PROMOTION_TOTAL_BY_PRODUCT  
(  
    P_CODE   
   ,PMO_TOTAL_CATEGORY  
   ,PMO_TOTAL_RATE_OR_MONEY   
   ,PMO_TOTAL_DISCOUNT_RATE   
   ,PMO_TOTAL_DISCOUNT_MONEY   
   ,M_GBN   
   ,M_GRADE   
   ,M_GRADE_DESC   
)  
SELECT     
  P_CODE  
 ,PMO_TOTAL_CATEGORY --00 : 임직원 전용할인 , 03: 등급기준 할인    
 ,PMO_TOTAL_RATE_OR_MONEY -- R: 정률할인 , M:정액할인    
 ,PMO_TOTAL_DISCOUNT_RATE  -- 할인율    
 ,PMO_TOTAL_DISCOUNT_MONEY -- 할인액     
 ,M_GBN    
 ,M_GRADE    
 ,CASE M_GRADE WHEN 'B' THEN '브론즈' WHEN 'S' THEN '실버' WHEN 'G' THEN '골드'  WHEN 'V' THEN 'VIP' END AS  M_GRADE_DESC     
  
FROM [VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL]     
WHERE P_CODE = @P_CODE     
      AND ( M_GBN =@MEM_GBN AND M_GRADE=@MEM_GRADE )    
     
  
    
SET @D_ROW_COUNT =  @@ROWCOUNT  
  
  
--[2] 위에서 SELECT 된 프로모션이 있다면 더이상 진행하지 않음   
------- 이렇게 되면 별다른 부하없이 필요한 ROW만 SELECT 가능함  
IF @D_ROW_COUNT = 0   
BEGIN   
  
      --[3] @P_CODE에 해당되는 상품이 [프로모션에 소속되지 않은 상품들] 중에 존재한다면?  
  IF(EXISTS(SELECT P_CODE FROM VIEW_PRODUCT_NO_PRD_PROMOTION_LIST WHERE P_CODE=@P_CODE ))     
  BEGIN      
     
  -- @P_CODE에 해당되는 그 상품에 대해서만 임시테이블에 INSERT 한다   
  INSERT #TEMP_ALL_PROMOTION_TOTAL_BY_PRODUCT  
  (  
    P_CODE   
      ,PMO_TOTAL_CATEGORY  
      ,PMO_TOTAL_RATE_OR_MONEY   
      ,PMO_TOTAL_DISCOUNT_RATE   
      ,PMO_TOTAL_DISCOUNT_MONEY   
      ,M_GBN   
      ,M_GRADE   
      ,M_GRADE_DESC   
  )    
   SELECT   
            @P_CODE  
           ,PMO_TOTAL_CATEGORY --00 : 임직원 전용할인 , 03: 등급기준 할인    
     ,PMO_TOTAL_RATE_OR_MONEY -- R: 정률할인 , M:정액할인    
     ,PMO_TOTAL_DISCOUNT_RATE  -- 할인율    
     ,PMO_TOTAL_DISCOUNT_MONEY -- 할인액     
     ,M_GBN    
     ,M_GRADE    
     ,CASE M_GRADE WHEN 'B' THEN '브론즈' WHEN 'S' THEN '실버' WHEN 'G' THEN '골드'  WHEN 'V' THEN 'VIP' END AS  M_GRADE_DESC     
   FROM    
   TB_PROMOTION_BY_TOTAL D WITH(NOLOCK) INNER JOIN  TB_PROMOTION_BY_TOTAL_MEM_GRADE E WITH(NOLOCK)  
   ON D.CD_PROMOTION_TOTAL = E.CD_PROMOTION_TOTAL     
   AND ( D.USABLE_YN ='Y' AND D.USABLE_YN IS NOT NULL )      
   AND ( D.PMO_TOTAL_DATE_FROM <= GETDATE() AND D.PMO_TOTAL_DATE_TO >=GETDATE() )   
   AND ( E.M_GBN =@MEM_GBN AND E.M_GRADE=@MEM_GRADE )   
   END   
END   
        
-- Entity Framework에서 임시테이블을 인식하게 하기 위한 trick --------  
IF 1 = 2 BEGIN  
    SELECT  
         cast(null as varchar(10))   as P_CODE  
        ,cast(null as varchar(2))    as PMO_TOTAL_CATEGORY  
        ,cast(null as varchar(1))    as PMO_TOTAL_RATE_OR_MONEY  
        ,cast(null as tinyint)       as PMO_TOTAL_DISCOUNT_RATE  
        ,cast(null as int)           as PMO_TOTAL_DISCOUNT_MONEY  
        ,cast(null as varchar(1))    as M_GBN  
        ,cast(null as varchar(1))    as M_GRADE  
        ,cast(null as varchar(10))   as M_GRADE_DESC  
    WHERE  
        1 = 2    
END  
  
 --[4]마지막으로 결과테이블을 SELECT  한다   
 SELECT     
      P_CODE   
     ,PMO_TOTAL_CATEGORY  
     ,PMO_TOTAL_RATE_OR_MONEY   
     ,PMO_TOTAL_DISCOUNT_RATE   
     ,PMO_TOTAL_DISCOUNT_MONEY   
     ,M_GBN   
     ,M_GRADE   
     ,M_GRADE_DESC   
 FROM #TEMP_ALL_PROMOTION_TOTAL_BY_PRODUCT
GO
/****** Object:  StoredProcedure [dbo].[SP_PROMOTION_BY_PRODUCT_PRICE_LIST_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 상품별 할인 프로모션 - 상품 리스트 가져오기(FRONT)    
 * Modified  :   2015.07.15  , 8/8 - 리스트상에 쿠폰의 존재유무까지 보이도록 수정   
 * Modified  :       
 * Modified  :      
 ============================================================*/      
    
    
 --EXEC [SP_ADMIN_PROMOTION_BY_TOTAL_DETAIL_SEL] 1    
CREATE PROCEDURE  [dbo].[SP_PROMOTION_BY_PRODUCT_PRICE_LIST_SEL]    
  @CD_PROMOTION_PRODUCT VARCHAR(7)    
AS    
    
BEGIN    
--SET FMTONLY OFF --complex type 생성시 필요    
--IF 1=0 BEGIN    
--   SET FMTONLY OFF    
--END    
    
   SET NOCOUNT ON   
   
   DECLARE @PMO_PRODUCT_CATEGORY VARCHAR(2)
   
   SELECT @PMO_PRODUCT_CATEGORY = PMO_PRODUCT_CATEGORY  
   FROM TB_PROMOTION_BY_PRODUCT WITH(NOLOCK)
   WHERE CD_PROMOTION_PRODUCT= @CD_PROMOTION_PRODUCT 
   
   
   IF @PMO_PRODUCT_CATEGORY = '05' -- 아웃렛이면 
   BEGIN 
	   SELECT     
		 A.IDX     
		,A.RESULT_PRICE    
		,A.P_CATE_CODE     
		,A.C_CATE_CODE     
		,A.L_CATE_CODE     
		,A.P_CODE     
		,A.RE_SORT     
		,A.DISPLAY_YN    
		,A.MV_URL    
		,A.P_TAG    
		,A.SOLDOUT_YN    
		,A.ICON_YN     
		,A.P_NAME    
		,A.P_SUB_TITLE    
		,A.P_COUNT    
		,A.SELLING_PRICE    
		,A.DISCOUNT_RATE        
		,A.DISCOUNT_PRICE    
		,A.MAIN_IMG    
		,A.OTHER_IMG1    
		,CONVERT(VARCHAR(10),A.INS_DATE,121) AS REGDATE    
		--,A.P_CATE_CODE    
		,A.SELLING_COUNT    
		,A.P_VIEW_COUNT     
		,A.WITH_PRODUCT_LIST    
		,A.P_OUTLET_YN    
		,A.PMO_PRODUCT_CATEGORY    
		,E.P_CODE AS COUPON_CODE   
	       
	   FROM     
		  dbo.VIEW_PRODUCT_VS_PROMOTION_LIST A WITH(NOLOCK)  
		  LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST E ON A.P_CODE = E.P_CODE  -- 쿠폰이 있으면 가져옴    
	   WHERE CD_PROMOTION_PRODUCT = @CD_PROMOTION_PRODUCT
			 AND P_OUTLET_YN = 'Y'    
    END
    ELSE --------------------------------------------------------------아웃렛이 아니면
    BEGIN
	 SELECT     
		 A.IDX     
		,A.RESULT_PRICE    
		,A.P_CATE_CODE     
		,A.C_CATE_CODE     
		,A.L_CATE_CODE     
		,A.P_CODE     
		,A.RE_SORT     
		,A.DISPLAY_YN    
		,A.MV_URL    
		,A.P_TAG    
		,A.SOLDOUT_YN    
		,A.ICON_YN     
		,A.P_NAME    
		,A.P_SUB_TITLE    
		,A.P_COUNT    
		,A.SELLING_PRICE    
		,A.DISCOUNT_RATE        
		,A.DISCOUNT_PRICE    
		,A.MAIN_IMG    
		,A.OTHER_IMG1    
		,CONVERT(VARCHAR(10),A.INS_DATE,121) AS REGDATE    
		--,A.P_CATE_CODE    
		,A.SELLING_COUNT    
		,A.P_VIEW_COUNT     
		,A.WITH_PRODUCT_LIST    
		,A.P_OUTLET_YN    
		,A.PMO_PRODUCT_CATEGORY    
		,E.P_CODE AS COUPON_CODE   
	       
	   FROM     
		  dbo.VIEW_PRODUCT_VS_PROMOTION_LIST A WITH(NOLOCK)  
		  LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST E ON A.P_CODE = E.P_CODE  -- 쿠폰이 있으면 가져옴    
	   WHERE CD_PROMOTION_PRODUCT = @CD_PROMOTION_PRODUCT
			  
    END    
     -- PMO_PRODUCT_CATEGORY = '01' AND PROMOTION_PRODUCT_YN = 'Y'    
    
   SET NOCOUNT OFF    
     
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PRODUCT_WITH_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품별 관련 상품 리스트 
 * Modified  :   2015.08.06
 * Modified  :   2015.08.28
 ============================================================*/  
 --EXEC SP_PRODUCT_WITH_SEL '55555555,35555555,CSTONE00'
 --EXEC SP_PRODUCT_WITH_SEL 'RAB04061,RAB04058'
CREATE PROCEDURE [dbo].[SP_PRODUCT_WITH_SEL]

@P_CODE_LIST				VARCHAR(1000) =''			--상품코드 , 리스트

AS
	SET NOCOUNT ON

	DECLARE @V_SQL NVARCHAR(MAX);

	DECLARE @string varchar(1000)
	DECLARE @pos numeric(20)
	DECLARE @piece varchar(50)
	DECLARE @NUM INT
	SET @string = @P_CODE_LIST
	SET @NUM = 0
	


	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)


	IF @string <> '' 
	BEGIN
		SET @pos = patindex('%,%' , @string)
		while @pos <> 0
		begin
			SET @piece = LEFT(@string, @pos-1)

			SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX ';
			SET @V_SQL  =@V_SQL + ' FROM VIEW_PRODUCT_VS_PROMOTION_LIST WITH (NOLOCK) '
			SET @V_SQL  =@V_SQL + '    WHERE DISPLAY_YN=''Y'' ';
			SET @V_SQL = @V_SQL + ' AND isnull(P_OUTLET_YN,'''') != ''Y'' '
			SET @V_SQL = @V_SQL + ' AND ( P_CODE = ''' + @piece + ''' ) '	

			SET @string = stuff(@string, 1, @pos, NULL)
			SET @pos = charindex(',' , @string)
			SET @NUM = @NUM + 1
			PRINT @V_SQL
			EXEC(@V_SQL);
		END

			SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX ';
			SET @V_SQL  =@V_SQL + ' FROM VIEW_PRODUCT_VS_PROMOTION_LIST WITH (NOLOCK) '
			SET @V_SQL  =@V_SQL + '    WHERE DISPLAY_YN=''Y'' ';
			SET @V_SQL = @V_SQL + ' AND isnull(P_OUTLET_YN,'''') != ''Y'' '
			SET @V_SQL = @V_SQL + ' AND ( P_CODE = ''' + @string + ''' ) '	
		PRINT @V_SQL
		EXEC(@V_SQL);
	END
	
	
	--PRINT @V_SQL

	--제품정보 리스트 조회
	SELECT    A.IDX 
			 ,A.RESULT_PRICE
			 ,A.P_CATE_CODE 
			 ,A.C_CATE_CODE 
			 ,A.L_CATE_CODE 
			 ,A.P_CODE 
			 ,A.RE_SORT 
			 ,A.DISPLAY_YN
			 ,A.MV_URL
			 ,A.P_TAG
			 ,A.SOLDOUT_YN
			 ,A.ICON_YN 
			 ,A.P_NAME
			 ,A.P_SUB_TITLE
		 	 ,A.P_COUNT
			 ,A.SELLING_PRICE
			 ,A.DISCOUNT_RATE			 
			 ,A.DISCOUNT_PRICE
			 ,A.MAIN_IMG
			 ,A.OTHER_IMG1
			 ,CONVERT(VARCHAR(10),A.INS_DATE,121) AS REGDATE
			 ,A.SELLING_COUNT
			 ,A.SELLING_MONTH_COUNT
			 ,A.P_VIEW_COUNT	
			 ,A.WITH_PRODUCT_LIST
			 ,A.P_OUTLET_YN
			 ,A.PMO_PRODUCT_CATEGORY
			 ,E.P_CODE AS COUPON_CODE
			 
	FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T ON A.IDX = T.IDX_SEQ 
		LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST E ON A.P_CODE = E.P_CODE 
	WHERE A.DISPLAY_YN='Y' 
	ORDER BY T.SEQ 

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_PRODUCT_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품 리스트 
 * Modified  :   2015.07.10
 * Modified  :   2015.07.15
 * Modified  :   2015.07.16
 * Modified  :   2015.08.04
 * Modified  :   2015.08.05
 * Modified  :   2015.08.28
 * Modified  :   2015.09.03
 * Modified  :   2015.09.04
 ============================================================*/  
  --exec [SP_PRODUCT_SEL] 1,10,'101100100','','','','N'
  --exec [SP_PRODUCT_SEL] 1,10,'101101100','','','DOWN','N'
CREATE PROCEDURE [dbo].[SP_PRODUCT_SEL]

@PAGE					INT	= 1					--현재 PAGE
,@PAGESIZE				INT	= 10				--페이지 사이즈
,@P_CATE_CODE			CHAR(9) =''				--유형별 카테고리 ( 여러개 가능)
,@C_CATE_CODE			CHAR(9) =''				--피부고민별 카테고리 
,@L_CATE_CODE			CHAR(9) =''				--라인별 카테고리 
,@SORT_GBN				VARCHAR(10) =''			--NEW, LIKE ,UP, DOWN (신상품,인기,최고가,최저가)
,@P_OUTLET_YN			VARCHAR(1)  =''			--아울렛 상품 구분 아울렛상품:Y
,@P_CATE_CODE_3DEPTH	VARCHAR(150) =''		--유형별 카테고리 ( 여러개 가능)

AS
	SET NOCOUNT ON

	
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	
	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX ';
	SET @V_SQL  =@V_SQL + ' FROM VIEW_PRODUCT_VS_PROMOTION_LIST WITH (NOLOCK) '
	SET @V_SQL  =@V_SQL + '    WHERE DISPLAY_YN=''Y'' ';
		
		
	IF @P_OUTLET_YN = 'Y' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND P_OUTLET_YN = ''Y'' '
		END 
	ELSE
		BEGIN
		SET @V_SQL = @V_SQL + ' AND ISNULL(P_OUTLET_YN,''N'') != ''Y'' '
		END 

	--다중검색일경우
	IF @C_CATE_CODE = '' AND  @L_CATE_CODE = '' 
	BEGIN
		IF @P_CATE_CODE_3DEPTH <> '' 
			BEGIN
			set @P_CATE_CODE_3DEPTH		= REPLACE(@P_CATE_CODE_3DEPTH,',',''',''')
			SET @V_SQL = @V_SQL + ' AND ( P_CATE_CODE IN (''' + @P_CATE_CODE_3DEPTH + ''') ) '	
			END 

		ELSE IF @P_CATE_CODE <> '' 
			BEGIN
				IF SUBSTRING(@P_CATE_CODE,4,3) = '100'
				BEGIN
				SET @V_SQL = @V_SQL + ' AND ( SUBSTRING(P_CATE_CODE,0,4) = ''' + SUBSTRING(@P_CATE_CODE,0,4) + ''' ) '	
				END
				ELSE IF SUBSTRING(@P_CATE_CODE,7,3) = '100'
				BEGIN
				SET @V_SQL = @V_SQL + ' AND ( SUBSTRING(P_CATE_CODE,0,7) = ''' + SUBSTRING(@P_CATE_CODE,0,7) + ''' ) '	
				END
				ELSE
				BEGIN
				SET @V_SQL = @V_SQL + ' AND ( P_CATE_CODE = ''' + @P_CATE_CODE + ''' ) '	
				END
			END 
     END
		
	IF @C_CATE_CODE <> '' 
		BEGIN
		--SET @V_SQL = @V_SQL + ' AND C_CATE_CODE = '''+@C_CATE_CODE+''' '
		SET @V_SQL = @V_SQL + ' AND ( C_CATE_CODE = '''+@C_CATE_CODE+''') '
		END 
	
	IF @L_CATE_CODE <> '' 
		BEGIN
		--SET @V_SQL = @V_SQL + ' AND L_CATE_CODE = '''+@L_CATE_CODE+''' '
		SET @V_SQL = @V_SQL + ' AND (L_CATE_CODE = '''+@L_CATE_CODE+''' ) '
		END 			

	SET @V_SQL  =@V_SQL + '	ORDER BY '
	
	IF @SORT_GBN = 'NEW' 
		BEGIN
		SET @V_SQL = @V_SQL + ' RE_SORT DESC '
		END 	
	
	IF @SORT_GBN = 'LIKE' 
		BEGIN
		SET @V_SQL = @V_SQL + ' P_VIEW_COUNT DESC '
		END 	

	IF @SORT_GBN = 'UP' 
		BEGIN
		SET @V_SQL = @V_SQL + ' RESULT_PRICE DESC '
		END 	

	IF @SORT_GBN = 'DOWN' 
		BEGIN
		SET @V_SQL = @V_SQL + ' RESULT_PRICE '
		END 

	IF @SORT_GBN = '' OR @SORT_GBN IS NULL
		BEGIN
		SET @V_SQL = @V_SQL + ' RE_SORT DESC '
		END 			


	
	EXEC(@V_SQL);
	PRINT @V_SQL


	SET ROWCOUNT 0
	


	--제품정보 리스트 조회
	SELECT   A.IDX 
			 ,A.RESULT_PRICE
			 ,A.P_CATE_CODE 
			 ,A.C_CATE_CODE 
			 ,A.L_CATE_CODE 
			 ,A.P_CODE 
			 ,A.RE_SORT 
			 ,A.DISPLAY_YN
			 ,A.MV_URL
			 ,A.P_TAG
			 ,A.SOLDOUT_YN
			 ,A.ICON_YN 
			 ,A.P_NAME
			 ,A.P_SUB_TITLE
		 	 ,A.P_COUNT
			 ,A.SELLING_PRICE
			 ,A.DISCOUNT_RATE			 
			 ,A.DISCOUNT_PRICE
			 ,A.MAIN_IMG
			 ,A.OTHER_IMG1
			 ,CONVERT(VARCHAR(10),A.INS_DATE,121) AS REGDATE
			 --,A.P_CATE_CODE
			 ,A.SELLING_COUNT
			 ,A.P_VIEW_COUNT	
			 ,A.WITH_PRODUCT_LIST
			 ,A.P_OUTLET_YN
			 ,A.PMO_PRODUCT_CATEGORY
			 ,E.P_CODE AS COUPON_CODE
			 --,B.DEPTH_FLAG
			 --,B.DEPTH2_NAME
			 --,B.DEPTH3_NAME
			 --,C.DEPTH2_NAME AS SKIN_NAME
			 --,C.DEPTH2_NAME AS LINE_NAME
	FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T ON A.IDX = T.IDX_SEQ 
		LEFT OUTER JOIN (SELECT CATE_CODE, DEPTH2_NAME, DEPTH3_NAME, DEPTH_FLAG FROM TB_CATEGORY WHERE DISPLAY_YN = 'Y') B ON A.P_CATE_CODE = B.CATE_CODE
		LEFT OUTER JOIN (SELECT CATE_CODE, DEPTH2_NAME FROM TB_CATEGORY WHERE DISPLAY_YN = 'Y') C ON A.C_CATE_CODE = C.CATE_CODE
		LEFT OUTER JOIN (SELECT CATE_CODE, DEPTH2_NAME FROM TB_CATEGORY WHERE DISPLAY_YN = 'Y') D ON A.L_CATE_CODE = D.CATE_CODE
		LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST E ON A.P_CODE = E.P_CODE 
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ
	
	DROP TABLE #TEMPLIST ;

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_PRODUCT_SEARCH_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품 검색 리스트 
 * Modified  :   2015.07.24
 * Modified  :   2015.08.05
 ============================================================*/  
  --exec [SP_PRODUCT_SEARCH_SEL] 1,10,'101100100','','','','N'
  --exec [SP_PRODUCT_SEARCH_SEL] 1,10,'NEW','에센셜'
CREATE PROCEDURE [dbo].[SP_PRODUCT_SEARCH_SEL]

@PAGE					INT	= 1					--현재 PAGE
,@PAGESIZE				INT	= 10				--페이지 사이즈
,@SORT_GBN				VARCHAR(10) =''			--NEW, LIKE ,UP, DOWN (신상품,인기,최고가,최저가)
,@SEARCH_KEYWORD		VARCHAR(50)  =''		--상품명,상품코드,태그

AS
	SET NOCOUNT ON

	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX ';
	SET @V_SQL  =@V_SQL + ' FROM VIEW_PRODUCT_VS_PROMOTION_LIST WITH (NOLOCK) '
	SET @V_SQL  =@V_SQL + '    WHERE DISPLAY_YN=''Y'' ';
		
	IF @SEARCH_KEYWORD <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND ( P_NAME LIKE ''%'+@SEARCH_KEYWORD+'%'' OR P_CODE LIKE ''%'+@SEARCH_KEYWORD+'%'' OR P_TAG LIKE ''%'+@SEARCH_KEYWORD+'%'' ) '
		END 
	
	SET @V_SQL  =@V_SQL + '	ORDER BY '
	
	IF @SORT_GBN = 'NEW' 
		BEGIN
		SET @V_SQL = @V_SQL + ' RE_SORT DESC '
		END 	
	
	IF @SORT_GBN = 'LIKE' 
		BEGIN
		SET @V_SQL = @V_SQL + ' P_VIEW_COUNT DESC '
		END 	

	IF @SORT_GBN = 'UP' 
		BEGIN
		SET @V_SQL = @V_SQL + ' RESULT_PRICE DESC '
		END 	

	IF @SORT_GBN = 'DOWN' 
		BEGIN
		SET @V_SQL = @V_SQL + ' RESULT_PRICE '
		END 

	IF @SORT_GBN = '' OR @SORT_GBN IS NULL
		BEGIN
		SET @V_SQL = @V_SQL + ' RE_SORT DESC '
		END 			


	
	EXEC(@V_SQL);
	PRINT @V_SQL


	SET ROWCOUNT 0
	


	--제품정보 리스트 조회
	SELECT   A.IDX 
			 ,A.RESULT_PRICE
			 ,A.P_CATE_CODE 
			 ,A.C_CATE_CODE 
			 ,A.L_CATE_CODE 
			 ,A.P_CODE 
			 ,A.RE_SORT 
			 ,A.DISPLAY_YN
			 ,A.MV_URL
			 ,A.P_TAG
			 ,A.SOLDOUT_YN
			 ,A.ICON_YN 
			 ,A.P_NAME
			 ,A.P_SUB_TITLE
		 	 ,A.P_COUNT
			 ,A.SELLING_PRICE
			 ,A.DISCOUNT_RATE			 
			 ,A.DISCOUNT_PRICE
			 ,A.MAIN_IMG
			 ,A.OTHER_IMG1
			 ,CONVERT(VARCHAR(10),A.INS_DATE,121) AS REGDATE
			 --,A.P_CATE_CODE
			 ,A.SELLING_COUNT
			 ,A.P_VIEW_COUNT	
			 ,A.WITH_PRODUCT_LIST
			 ,A.P_OUTLET_YN
			 ,A.PMO_PRODUCT_CATEGORY
			 ,E.P_CODE AS COUPON_CODE
			 --,B.DEPTH_FLAG
			 --,B.DEPTH2_NAME
			 --,B.DEPTH3_NAME
			 --,C.DEPTH2_NAME AS SKIN_NAME
			 --,C.DEPTH2_NAME AS LINE_NAME
	FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T ON A.IDX = T.IDX_SEQ 
		LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST E ON A.P_CODE = E.P_CODE 
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ
	
	DROP TABLE #TEMPLIST ;

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_PRODUCT_MYPAGE_SKIKTYPE_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품 마이페이지 나의 스킨타입 제품 리스트 
 * Modified  :   2015.08.05
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_PRODUCT_MYPAGE_SKIKTYPE_SEL]

@CATE_CODE				VARCHAR(9) =''			--뷰티의 스키타입 

AS
	SET NOCOUNT ON

	--제품정보 리스트 조회
	SELECT TOP 10 A.IDX 
			 ,A.RESULT_PRICE
			 ,A.P_CATE_CODE 
			 ,A.C_CATE_CODE 
			 ,A.L_CATE_CODE 
			 ,A.P_CODE 
			 ,A.RE_SORT 
			 ,A.DISPLAY_YN
			 ,A.MV_URL
			 ,A.P_TAG
			 ,A.SOLDOUT_YN
			 ,A.ICON_YN 
			 ,A.P_NAME
			 ,A.P_SUB_TITLE
		 	 ,A.P_COUNT
			 ,A.SELLING_PRICE
			 ,A.DISCOUNT_RATE			 
			 ,A.DISCOUNT_PRICE
			 ,A.MAIN_IMG
			 ,A.OTHER_IMG1
			 ,CONVERT(VARCHAR(10),A.INS_DATE,121) AS REGDATE
			 ,A.SELLING_COUNT
			 ,A.SELLING_MONTH_COUNT
			 ,A.P_VIEW_COUNT	
			 ,A.WITH_PRODUCT_LIST
			 ,A.P_OUTLET_YN
			 ,A.PMO_PRODUCT_CATEGORY
			 ,E.P_CODE AS COUPON_CODE
			 
	FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST E ON A.P_CODE = E.P_CODE 
	WHERE A.DISPLAY_YN='Y' AND A.P_OUTLET_YN != 'Y' AND A.C_CATE_CODE = @CATE_CODE
	ORDER BY A.P_VIEW_COUNT DESC

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_PRODUCT_MYPAGE_MOBILE_SKIKTYPE_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 마이페이지 피부타입별 상품 리스트 
 * Modified  :   2015.08.11
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_PRODUCT_MYPAGE_MOBILE_SKIKTYPE_SEL]

@PAGE					INT	= 1					--현재 PAGE
,@PAGESIZE				INT	= 10				--페이지 사이즈
,@C_CATE_CODE			CHAR(9) =''				--피부고민별 카테고리 
,@SORT_GBN				VARCHAR(10) =''			--NEW, LIKE ,UP, DOWN (신상품,인기,최고가,최저가)

AS
	SET NOCOUNT ON

	
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	
	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX ';
	SET @V_SQL  =@V_SQL + ' FROM VIEW_PRODUCT_VS_PROMOTION_LIST WITH (NOLOCK) '
	SET @V_SQL  =@V_SQL + '    WHERE DISPLAY_YN=''Y'' ';
		
	
	IF @C_CATE_CODE <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND C_CATE_CODE = '''+@C_CATE_CODE+''' '
		END 
	
	SET @V_SQL  =@V_SQL + '	ORDER BY '
	
	IF @SORT_GBN = 'NEW' 
		BEGIN
		SET @V_SQL = @V_SQL + ' RE_SORT DESC '
		END 	
	
	IF @SORT_GBN = 'LIKE' 
		BEGIN
		SET @V_SQL = @V_SQL + ' P_VIEW_COUNT DESC '
		END 	

	IF @SORT_GBN = 'UP' 
		BEGIN
		SET @V_SQL = @V_SQL + ' RESULT_PRICE DESC '
		END 	

	IF @SORT_GBN = 'DOWN' 
		BEGIN
		SET @V_SQL = @V_SQL + ' RESULT_PRICE '
		END 

	IF @SORT_GBN = '' OR @SORT_GBN IS NULL
		BEGIN
		SET @V_SQL = @V_SQL + ' RE_SORT DESC '
		END 			


	
	EXEC(@V_SQL);
	PRINT @V_SQL


	SET ROWCOUNT 0
	


	--제품정보 리스트 조회
	SELECT   A.IDX 
			 ,A.RESULT_PRICE
			 ,A.P_CATE_CODE 
			 ,A.C_CATE_CODE 
			 ,A.L_CATE_CODE 
			 ,A.P_CODE 
			 ,A.RE_SORT 
			 ,A.DISPLAY_YN
			 ,A.MV_URL
			 ,A.P_TAG
			 ,A.SOLDOUT_YN
			 ,A.ICON_YN 
			 ,A.P_NAME
			 ,A.P_SUB_TITLE
		 	 ,A.P_COUNT
			 ,A.SELLING_PRICE
			 ,A.DISCOUNT_RATE			 
			 ,A.DISCOUNT_PRICE
			 ,A.MAIN_IMG
			 ,A.OTHER_IMG1
			 ,CONVERT(VARCHAR(10),A.INS_DATE,121) AS REGDATE
			 --,A.P_CATE_CODE
			 ,A.SELLING_COUNT
			 ,A.P_VIEW_COUNT	
			 ,A.WITH_PRODUCT_LIST
			 ,A.P_OUTLET_YN
			 ,A.PMO_PRODUCT_CATEGORY
			 ,E.P_CODE AS COUPON_CODE
			 --,B.DEPTH_FLAG
			 --,B.DEPTH2_NAME
			 --,B.DEPTH3_NAME
			 --,C.DEPTH2_NAME AS SKIN_NAME
			 --,C.DEPTH2_NAME AS LINE_NAME
	FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T ON A.IDX = T.IDX_SEQ 
		LEFT OUTER JOIN (SELECT CATE_CODE, DEPTH2_NAME, DEPTH3_NAME, DEPTH_FLAG FROM TB_CATEGORY WHERE DISPLAY_YN = 'Y') B ON A.P_CATE_CODE = B.CATE_CODE
		LEFT OUTER JOIN (SELECT CATE_CODE, DEPTH2_NAME FROM TB_CATEGORY WHERE DISPLAY_YN = 'Y') C ON A.C_CATE_CODE = C.CATE_CODE
		LEFT OUTER JOIN (SELECT CATE_CODE, DEPTH2_NAME FROM TB_CATEGORY WHERE DISPLAY_YN = 'Y') D ON A.L_CATE_CODE = D.CATE_CODE
		LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST_ON_Mobile E ON A.P_CODE = E.P_CODE 
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ
	
	DROP TABLE #TEMPLIST ;

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_PRODUCT_MYPAGE_MOBILE_SKIKTYPE_CNT]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 마이페이지 피부타입별 상품 총 카운트 
 * Modified  :   2015.08.11
 ============================================================*/  

CREATE PROCEDURE [dbo].[SP_PRODUCT_MYPAGE_MOBILE_SKIKTYPE_CNT]
 @C_CATE_CODE			CHAR(9) =''			--피부고민별 카테고리 

AS

	SET NOCOUNT ON

	SELECT COUNT(IDX) AS COUNT
	FROM VIEW_PRODUCT_VS_PROMOTION_LIST WITH (NOLOCK)
	WHERE DISPLAY_YN='Y'
		AND C_CATE_CODE = @C_CATE_CODE
			--AND P_OUTLET_YN != 'Y'

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_PRODUCT_MOBILE_WITH_SEL]    Script Date: 09/11/2015 16:07:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품별 관련 상품 리스트 [모바일] 
 * Modified  :   2015.08.06
 * Modified  :   2015.08.28
 ============================================================*/  
 --EXEC [SP_PRODUCT_MOBILE_WITH_SEL] '55555555,35555555,CSTONE00'
CREATE PROCEDURE [dbo].[SP_PRODUCT_MOBILE_WITH_SEL]

@P_CODE_LIST				VARCHAR(1000) =''			--상품코드 , 리스트

AS
	SET NOCOUNT ON

	DECLARE @V_SQL NVARCHAR(MAX);
	

	DECLARE @string varchar(1000)
	DECLARE @pos numeric(20)
	DECLARE @piece varchar(50)
	DECLARE @NUM INT
	SET @string = @P_CODE_LIST
	SET @NUM = 0

	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)


	IF @string <> '' 
	BEGIN
		SET @pos = patindex('%,%' , @string)
		while @pos <> 0
		begin
			SET @piece = LEFT(@string, @pos-1)

			SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX ';
			SET @V_SQL  =@V_SQL + ' FROM VIEW_PRODUCT_VS_PROMOTION_LIST WITH (NOLOCK) '
			SET @V_SQL  =@V_SQL + '    WHERE DISPLAY_YN=''Y'' ';
			SET @V_SQL = @V_SQL + ' AND isnull(P_OUTLET_YN,'''') != ''Y'' '
			SET @V_SQL = @V_SQL + ' AND ( P_CODE = ''' + @piece + ''' ) '	

			SET @string = stuff(@string, 1, @pos, NULL)
			SET @pos = charindex(',' , @string)
			SET @NUM = @NUM + 1
			PRINT @V_SQL
			EXEC(@V_SQL);
		END

			SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX ';
			SET @V_SQL  =@V_SQL + ' FROM VIEW_PRODUCT_VS_PROMOTION_LIST WITH (NOLOCK) '
			SET @V_SQL  =@V_SQL + '    WHERE DISPLAY_YN=''Y'' ';
			SET @V_SQL = @V_SQL + ' AND isnull(P_OUTLET_YN,'''') != ''Y'' '
			SET @V_SQL = @V_SQL + ' AND ( P_CODE = ''' + @string + ''' ) '	
		PRINT @V_SQL
		EXEC(@V_SQL);
	END

	--제품정보 리스트 조회
	SELECT    A.IDX 
			 ,A.RESULT_PRICE
			 ,A.P_CATE_CODE 
			 ,A.C_CATE_CODE 
			 ,A.L_CATE_CODE 
			 ,A.P_CODE 
			 ,A.RE_SORT 
			 ,A.DISPLAY_YN
			 ,A.MV_URL
			 ,A.P_TAG
			 ,A.SOLDOUT_YN
			 ,A.ICON_YN 
			 ,A.P_NAME
			 ,A.P_SUB_TITLE
		 	 ,A.P_COUNT
			 ,A.SELLING_PRICE
			 ,A.DISCOUNT_RATE			 
			 ,A.DISCOUNT_PRICE
			 ,A.MAIN_IMG
			 ,A.OTHER_IMG1
			 ,CONVERT(VARCHAR(10),A.INS_DATE,121) AS REGDATE
			 ,A.SELLING_COUNT
			 ,A.SELLING_MONTH_COUNT
			 ,A.P_VIEW_COUNT	
			 ,A.WITH_PRODUCT_LIST
			 ,A.P_OUTLET_YN
			 ,A.PMO_PRODUCT_CATEGORY
			 ,E.P_CODE AS COUPON_CODE
			 
	FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T ON A.IDX = T.IDX_SEQ 
		LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST_ON_Mobile E ON A.P_CODE = E.P_CODE 
	WHERE A.DISPLAY_YN='Y' 
	ORDER BY A.IDX DESC

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_PRODUCT_MOBILE_SEL]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 모바일 상품 리스트 
 * Modified  :   2015.08.05
 * Modified  :   2015.09.04
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_PRODUCT_MOBILE_SEL]

@PAGE					INT	= 1					--현재 PAGE
,@PAGESIZE				INT	= 10				--페이지 사이즈
,@P_CATE_CODE			CHAR(9) =''				--유형별 카테고리 ( 여러개 가능)
,@C_CATE_CODE			CHAR(9) =''				--피부고민별 카테고리 
,@L_CATE_CODE			CHAR(9) =''				--라인별 카테고리 
,@SORT_GBN				VARCHAR(10) =''			--NEW, LIKE ,UP, DOWN (신상품,인기,최고가,최저가)
,@P_OUTLET_YN			VARCHAR(1)  =''			--아울렛 상품 구분 아울렛상품:Y
,@P_CATE_CODE_3DEPTH	VARCHAR(150) =''		--유형별 카테고리 ( 여러개 가능)

AS
	SET NOCOUNT ON

	
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	
	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX ';
	SET @V_SQL  =@V_SQL + ' FROM VIEW_PRODUCT_VS_PROMOTION_LIST WITH (NOLOCK) '
	SET @V_SQL  =@V_SQL + '    WHERE DISPLAY_YN=''Y'' ';
		
		
	IF @P_OUTLET_YN = 'Y' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND P_OUTLET_YN = ''Y'' '
		END 
	ELSE
		BEGIN
		SET @V_SQL = @V_SQL + ' AND ISNULL(P_OUTLET_YN,''N'') != ''Y'' '
		END 

	--다중검색일경우
	IF @P_CATE_CODE_3DEPTH <> '' 
		BEGIN
		set @P_CATE_CODE_3DEPTH		= REPLACE(@P_CATE_CODE_3DEPTH,',',''',''')
		SET @V_SQL = @V_SQL + ' AND ( P_CATE_CODE IN (''' + @P_CATE_CODE_3DEPTH + ''') ) '	
		END 

	ELSE IF @P_CATE_CODE <> '' 
		BEGIN
			IF SUBSTRING(@P_CATE_CODE,4,3) = '100'
			BEGIN
			SET @V_SQL = @V_SQL + ' AND ( SUBSTRING(P_CATE_CODE,0,4) = ''' + SUBSTRING(@P_CATE_CODE,0,4) + ''' ) '	
			END
			ELSE IF SUBSTRING(@P_CATE_CODE,7,3) = '100'
			BEGIN
			SET @V_SQL = @V_SQL + ' AND ( SUBSTRING(P_CATE_CODE,0,7) = ''' + SUBSTRING(@P_CATE_CODE,0,7) + ''' ) '	
			END
			ELSE
			BEGIN
			SET @V_SQL = @V_SQL + ' AND ( P_CATE_CODE = ''' + @P_CATE_CODE + ''' ) '	
			END
		END 

		
	IF @C_CATE_CODE <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND C_CATE_CODE = '''+@C_CATE_CODE+''' '
		END 
	
	IF @L_CATE_CODE <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND L_CATE_CODE = '''+@L_CATE_CODE+''' '
		END 			

	SET @V_SQL  =@V_SQL + '	ORDER BY '
	
	IF @SORT_GBN = 'NEW' 
		BEGIN
		SET @V_SQL = @V_SQL + ' RE_SORT DESC '
		END 	
	
	IF @SORT_GBN = 'LIKE' 
		BEGIN
		SET @V_SQL = @V_SQL + ' P_VIEW_COUNT DESC '
		END 	

	IF @SORT_GBN = 'UP' 
		BEGIN
		SET @V_SQL = @V_SQL + ' RESULT_PRICE DESC '
		END 	

	IF @SORT_GBN = 'DOWN' 
		BEGIN
		SET @V_SQL = @V_SQL + ' RESULT_PRICE '
		END 

	IF @SORT_GBN = '' OR @SORT_GBN IS NULL
		BEGIN
		SET @V_SQL = @V_SQL + ' RE_SORT DESC '
		END 			


	
	EXEC(@V_SQL);
	PRINT @V_SQL


	SET ROWCOUNT 0
	


	--제품정보 리스트 조회
	SELECT   A.IDX 
			 ,A.RESULT_PRICE
			 ,A.P_CATE_CODE 
			 ,A.C_CATE_CODE 
			 ,A.L_CATE_CODE 
			 ,A.P_CODE 
			 ,A.RE_SORT 
			 ,A.DISPLAY_YN
			 ,A.MV_URL
			 ,A.P_TAG
			 ,A.SOLDOUT_YN
			 ,A.ICON_YN 
			 ,A.P_NAME
			 ,A.P_SUB_TITLE
		 	 ,A.P_COUNT
			 ,A.SELLING_PRICE
			 ,A.DISCOUNT_RATE			 
			 ,A.DISCOUNT_PRICE
			 ,A.MAIN_IMG
			 ,A.OTHER_IMG1
			 ,CONVERT(VARCHAR(10),A.INS_DATE,121) AS REGDATE
			 --,A.P_CATE_CODE
			 ,A.SELLING_COUNT
			 ,A.P_VIEW_COUNT	
			 ,A.WITH_PRODUCT_LIST
			 ,A.P_OUTLET_YN
			 ,A.PMO_PRODUCT_CATEGORY
			 ,E.P_CODE AS COUPON_CODE
			 --,B.DEPTH_FLAG
			 --,B.DEPTH2_NAME
			 --,B.DEPTH3_NAME
			 --,C.DEPTH2_NAME AS SKIN_NAME
			 --,C.DEPTH2_NAME AS LINE_NAME
	FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T ON A.IDX = T.IDX_SEQ 
		LEFT OUTER JOIN (SELECT CATE_CODE, DEPTH2_NAME, DEPTH3_NAME, DEPTH_FLAG FROM TB_CATEGORY WHERE DISPLAY_YN = 'Y') B ON A.P_CATE_CODE = B.CATE_CODE
		LEFT OUTER JOIN (SELECT CATE_CODE, DEPTH2_NAME FROM TB_CATEGORY WHERE DISPLAY_YN = 'Y') C ON A.C_CATE_CODE = C.CATE_CODE
		LEFT OUTER JOIN (SELECT CATE_CODE, DEPTH2_NAME FROM TB_CATEGORY WHERE DISPLAY_YN = 'Y') D ON A.L_CATE_CODE = D.CATE_CODE
		LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST_ON_Mobile E ON A.P_CODE = E.P_CODE 
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ
	
	DROP TABLE #TEMPLIST ;

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_PRODUCT_MOBILE_SEARCH_SEL]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품 모바일 검색 리스트 
 * Modified  :   2015.08.05
 ============================================================*/  
--exec [SP_PRODUCT_MOBILE_SEARCH_SEL] 1,10,'NEW','상품'
CREATE PROCEDURE [dbo].[SP_PRODUCT_MOBILE_SEARCH_SEL]

@PAGE					INT	= 1					--현재 PAGE
,@PAGESIZE				INT	= 10				--페이지 사이즈
,@SORT_GBN				VARCHAR(10) =''			--NEW, LIKE ,UP, DOWN (신상품,인기,최고가,최저가)
,@SEARCH_KEYWORD		VARCHAR(50)  =''		--상품명,상품코드,태그

AS
	SET NOCOUNT ON

	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX ';
	SET @V_SQL  =@V_SQL + ' FROM VIEW_PRODUCT_VS_PROMOTION_LIST WITH (NOLOCK) '
	SET @V_SQL  =@V_SQL + '    WHERE DISPLAY_YN=''Y'' ';
		
	IF @SEARCH_KEYWORD <> '' 
		BEGIN
		SET @V_SQL = @V_SQL + ' AND ( P_NAME LIKE ''%'+@SEARCH_KEYWORD+'%'' OR P_CODE LIKE ''%'+@SEARCH_KEYWORD+'%'' OR P_TAG LIKE ''%'+@SEARCH_KEYWORD+'%'' ) '
		END 
	
	SET @V_SQL  =@V_SQL + '	ORDER BY '
	
	IF @SORT_GBN = 'NEW' 
		BEGIN
		SET @V_SQL = @V_SQL + ' RE_SORT DESC '
		END 	
	
	IF @SORT_GBN = 'LIKE' 
		BEGIN
		SET @V_SQL = @V_SQL + ' P_VIEW_COUNT DESC '
		END 	

	IF @SORT_GBN = 'UP' 
		BEGIN
		SET @V_SQL = @V_SQL + ' RESULT_PRICE DESC '
		END 	

	IF @SORT_GBN = 'DOWN' 
		BEGIN
		SET @V_SQL = @V_SQL + ' RESULT_PRICE '
		END 

	IF @SORT_GBN = '' OR @SORT_GBN IS NULL
		BEGIN
		SET @V_SQL = @V_SQL + ' RE_SORT DESC '
		END 			


	
	EXEC(@V_SQL);
	PRINT @V_SQL


	SET ROWCOUNT 0
	


	--제품정보 리스트 조회
	SELECT   A.IDX 
			 ,A.RESULT_PRICE
			 ,A.P_CATE_CODE 
			 ,A.C_CATE_CODE 
			 ,A.L_CATE_CODE 
			 ,A.P_CODE 
			 ,A.RE_SORT 
			 ,A.DISPLAY_YN
			 ,A.MV_URL
			 ,A.P_TAG
			 ,A.SOLDOUT_YN
			 ,A.ICON_YN 
			 ,A.P_NAME
			 ,A.P_SUB_TITLE
		 	 ,A.P_COUNT
			 ,A.SELLING_PRICE
			 ,A.DISCOUNT_RATE			 
			 ,A.DISCOUNT_PRICE
			 ,A.MAIN_IMG
			 ,A.OTHER_IMG1
			 ,CONVERT(VARCHAR(10),A.INS_DATE,121) AS REGDATE
			 --,A.P_CATE_CODE
			 ,A.SELLING_COUNT
			 ,A.P_VIEW_COUNT	
			 ,A.WITH_PRODUCT_LIST
			 ,A.P_OUTLET_YN
			 ,A.PMO_PRODUCT_CATEGORY
			 ,E.P_CODE AS COUPON_CODE
			 --,B.DEPTH_FLAG
			 --,B.DEPTH2_NAME
			 --,B.DEPTH3_NAME
			 --,C.DEPTH2_NAME AS SKIN_NAME
			 --,C.DEPTH2_NAME AS LINE_NAME
	FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		INNER JOIN #TEMPLIST T ON A.IDX = T.IDX_SEQ 
		LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST_ON_Mobile E ON A.P_CODE = E.P_CODE 
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ
	
	DROP TABLE #TEMPLIST ;

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_PRODUCT_MOBILE_DETAIL_VIEW]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품상세내용 보기 
 * Modified  :   2015.08.05
 * Modified  :   2015.08.06
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_PRODUCT_MOBILE_DETAIL_VIEW]
@P_CODE				VARCHAR(10) = ''		--상품코드

AS

 SET NOCOUNT ON

		--상품조회수 증가
		update TB_PRODUCT_INFO set P_VIEW_COUNT = P_VIEW_COUNT + 1 where P_CODE = @P_CODE ;
 
 		--상품상세 관리 VIEW
		SELECT A.IDX
		,A.P_CATE_CODE 
		,A.C_CATE_CODE
		,A.L_CATE_CODE
		,A.P_CODE
		,A.P_NAME
		,A.P_SUB_TITLE
		,A.P_COUNT
		,A.SELLING_PRICE
		,A.RESULT_PRICE
		,A.DISCOUNT_RATE
		,A.DISCOUNT_PRICE
		,A.SOLDOUT_YN
		,A.P_INFO_DETAIL_WEB
		,A.P_INFO_DETAIL_MOBILE
		,A.MV_URL
		,A.P_COMPONENT_INFO
		,A.P_TAG
		,A.MAIN_IMG
		,A.OTHER_IMG1
		,A.OTHER_IMG2
		,A.OTHER_IMG3
		,A.RE_SORT
		,A.DISPLAY_YN
		,A.ICON_YN
		,A.WITH_PRODUCT_LIST	 
		,A.PMO_PRODUCT_CATEGORY
		,A.CD_PROMOTION_PRODUCT
		,E.P_CODE AS COUPON_CODE	
		,B.CATE_CODE
		,B.DEPTH_FLAG
		,B.DEPTH1_NAME
		,B.DEPTH2_NAME
		,B.DEPTH3_NAME			 
		FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK) 
			LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST_ON_Mobile E ON A.P_CODE = E.P_CODE 
			LEFT OUTER JOIN (SELECT CATE_CODE,DEPTH1_NAME, DEPTH2_NAME, DEPTH3_NAME, DEPTH_FLAG FROM TB_CATEGORY WHERE DISPLAY_YN = 'Y') B ON A.P_CATE_CODE = B.CATE_CODE
		WHERE A.P_CODE = @P_CODE 

 SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_PRODUCT_MAIN_SEL]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품 메인 리스트 
 * Modified  :   2015.08.03
 * Modified  :   2015.08.04
 * Modified  :   2015.08.05
 * Modified  :   2015.09.04
 ============================================================*/  
CREATE PROCEDURE [dbo].[SP_PRODUCT_MAIN_SEL]

@CATE_CODE				VARCHAR(3) =''			--뷰티:101, 헬스:102, 셀렉샵:103

AS
	SET NOCOUNT ON

	--제품정보 리스트 조회
	SELECT TOP 10   A.IDX 
			 ,A.RESULT_PRICE
			 ,A.P_CATE_CODE 
			 ,A.C_CATE_CODE 
			 ,A.L_CATE_CODE 
			 ,A.P_CODE 
			 ,A.RE_SORT 
			 ,A.DISPLAY_YN
			 ,A.MV_URL
			 ,A.P_TAG
			 ,A.SOLDOUT_YN
			 ,A.ICON_YN 
			 ,A.P_NAME
			 ,A.P_SUB_TITLE
		 	 ,A.P_COUNT
			 ,A.SELLING_PRICE
			 ,A.DISCOUNT_RATE			 
			 ,A.DISCOUNT_PRICE
			 ,A.MAIN_IMG
			 ,A.OTHER_IMG1
			 ,CONVERT(VARCHAR(10),A.INS_DATE,121) AS REGDATE
			 ,A.SELLING_COUNT
			 ,A.SELLING_MONTH_COUNT
			 ,A.P_VIEW_COUNT	
			 ,A.WITH_PRODUCT_LIST
			 ,A.P_OUTLET_YN
			 ,A.PMO_PRODUCT_CATEGORY
			 ,E.P_CODE AS COUPON_CODE
			 
	FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST_ON_Mobile E ON A.P_CODE = E.P_CODE 
	WHERE A.DISPLAY_YN='Y' AND ISNULL(A.P_OUTLET_YN,'N') != 'Y' AND LEFT(A.P_CATE_CODE,3) = @CATE_CODE
	ORDER BY A.SELLING_MONTH_COUNT DESC

	SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_PRODUCT_DETAIL_VIEW]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================  
 * Author  : 황성웅 (admin@cstone.co.kr)  
 * Company  : 코너스톤 인터랙티브  
 * Description : 상품상세내용 보기 
 * Modified  :   2015.07.10
 * Modified  :   2015.07.16
 * Modified  :   2015.08.04
 * Modified  :   2015.08.05
 * Modified  :   2015.08.06
 ============================================================*/  
 --EXEC [SP_PRODUCT_DETAIL_VIEW] '1111114'
CREATE PROCEDURE [dbo].[SP_PRODUCT_DETAIL_VIEW]
@P_CODE				VARCHAR(10) = ''		--상품코드

AS

 SET NOCOUNT ON

		--상품조회수 증가
		update TB_PRODUCT_INFO set P_VIEW_COUNT = P_VIEW_COUNT + 1 where P_CODE = @P_CODE ;
 
 		--상품상세 관리 VIEW
		SELECT A.IDX
		,A.P_CATE_CODE 
		,A.C_CATE_CODE
		,A.L_CATE_CODE
		,A.P_CODE
		,A.P_NAME
		,A.P_SUB_TITLE
		,A.P_COUNT
		,A.SELLING_PRICE
		,A.RESULT_PRICE
		,A.DISCOUNT_RATE
		,A.DISCOUNT_PRICE
		,A.SOLDOUT_YN
		,A.P_INFO_DETAIL_WEB
		,A.P_INFO_DETAIL_MOBILE
		,A.MV_URL
		,A.P_COMPONENT_INFO
		,A.P_TAG
		,A.MAIN_IMG
		,A.OTHER_IMG1
		,A.OTHER_IMG2
		,A.OTHER_IMG3
		,A.RE_SORT
		,A.DISPLAY_YN
		,A.ICON_YN
		,A.WITH_PRODUCT_LIST	 
		,A.PMO_PRODUCT_CATEGORY
		,A.CD_PROMOTION_PRODUCT
		,E.P_CODE AS COUPON_CODE	
		,B.CATE_CODE
		,B.DEPTH_FLAG
		,B.DEPTH1_NAME
		,B.DEPTH2_NAME
		,B.DEPTH3_NAME		 
		FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK) 
			LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST E ON A.P_CODE = E.P_CODE 
			LEFT OUTER JOIN (SELECT CATE_CODE,DEPTH1_NAME, DEPTH2_NAME, DEPTH3_NAME, DEPTH_FLAG FROM TB_CATEGORY WHERE DISPLAY_YN = 'Y') B ON A.P_CATE_CODE = B.CATE_CODE
		WHERE A.P_CODE = @P_CODE 

 SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_EXP_DETAIL]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2015-08-12
-- Description:	체험단 리뷰 상세
-- ussage: exec SP_REVIEW_EXP_DETAIL
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_EXP_DETAIL]
	@IDX INT,
	@P_CODE VARCHAR(10) = NULL
AS
BEGIN
	SET NOCOUNT ON;
	
	Declare @T Table (
		IDX INT,
		EXHIBIT_NAME VARCHAR(200),
		DATE_TIME VARCHAR(50),
		WEB_BANNER VARCHAR(255),
		MOBILE_BANNER VARCHAR(255),
		LINK_URL VARCHAR(MAX)
	);
	
	DECLARE @EXH_IDX INT;
	DECLARE @EXHIBIT_NAME VARCHAR(200);
	DECLARE @DATE_TIME VARCHAR(50);
	DECLARE @WEB_BANNER VARCHAR(255);
	DECLARE @MOBILE_BANNER VARCHAR(255);
	DECLARE @LINK_URL VARCHAR(MAX);
	
	INSERT @T EXEC SP_EXHIBIT_PCODE_LINK @P_CODE;
	
	SELECT  
		@EXH_IDX = IDX,
		@EXHIBIT_NAME = EXHIBIT_NAME,
		@DATE_TIME = DATE_TIME,
		@WEB_BANNER = WEB_BANNER,
		@MOBILE_BANNER = MOBILE_BANNER,
		@LINK_URL = LINK_URL
	FROM @T;
	
	UPDATE TB_REVIEW_EXP_ARTICLE
	 SET VIEW_CNT = VIEW_CNT + 1
	WHERE IDX=@IDX;
	

	SELECT
		IDX,
		M_ID,
		(
			LEFT(M_ID, LEN(M_ID) - LEN(M_ID)/2) +  SUBSTRING('**************', 1, LEN(M_ID)/2)
		) 
		AS M_ID_LBL,
		M_NAME,		
		M_SEX,
		(
			CASE M_SEX
			 WHEN '1' THEN '남자'
			 WHEN '2' THEN '여자'
			 ELSE ''
			END						
		) AS M_SEX_LBL,
		M_BIRTHDAY,						
		(
			CONVERT(varchar, DATEDIFF(yyyy,convert(datetime, M_BIRTHDAY, 0),GETDATE()) /10 * 10)
		) AS M_BIRTHDAY_LBL,
		P_CODE,
		P_NAME,
		P_SUB_TITLE,
		P_MAIN_IMG,
		C_CATE_CODE,
		IS_BEST,
		SKIN_TYPE,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN '건성'
				WHEN '20' THEN '중성'
				WHEN '30' THEN '지복합성'
				ELSE ''
			END 
		) AS SKIN_TYPE_LBL,
		(
			CASE SKIN_TYPE
				WHEN '10' THEN 'dry'
				WHEN '20' THEN 'normal'
				WHEN '30' THEN 'oily'
				ELSE ''
			END 
		) AS SKIN_TYPE_CSS,
		COMMENT,
		
		TITLE,
		SUB_IMG_1,
		SUB_IMG_2,
		SUB_IMG_3,
		TAG,
		VIEW_CNT,
		EXP_MASTER_IDX,
		
		INS_DATE,
		
		@EXH_IDX AS EXHIBIT_IDX,
		@EXHIBIT_NAME AS EXHIBIT_NAME,
		@DATE_TIME AS EXHIBIT_DATE ,
		@WEB_BANNER AS EXHIBIT_WEB_BANNER,
		@MOBILE_BANNER AS EXHIBIT_MOBILE_BANNER,
		@LINK_URL AS EXHIBIT_LINK_URL
	FROM TB_REVIEW_EXP_ARTICLE A WITH (NOLOCK)
	WHERE IDX=@IDX;
	

	
	SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_STEP2_COUPON_SEARCH]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_STEP2_COUPON_SEARCH
[주문페이지] 사용가능한 쿠폰 조회

파라미터 설명
@M_ID	VARCHAR(13)		-- 회원ID
@P_CODE	VARCHAR(10)		-- 상품코드 (배송비쿠폰조회시 TRANS로 전송)
@DEVICE_GBN CHAR(1)		-- 디바이스구분 (P:PC[기본값], M:모바일)

SELECT * FROM TB_ORDER_MASTER_TMP
SELECT * FROM TB_ORDER_DETAIL_TMP

exec SP_ORDER_STEP2_COUPON_SEARCH 'test_b1s','1111117','P'
exec SP_ORDER_STEP2_COUPON_SEARCH 'test_b1s','1111117','M'


exec SP_ORDER_STEP2_COUPON_SEARCH 'test_b1s','TRANS'

*/
CREATE PROCEDURE [dbo].[SP_ORDER_STEP2_COUPON_SEARCH]
 @M_ID		VARCHAR(13)		-- 회원ID
,@P_CODE	VARCHAR(10)		-- 상품코드 (배송비쿠폰조회시 TRANS로 전송)
,@DEVICE_GBN CHAR(1) = 'P'	-- 디바이스구분 (P:PC[기본값], M:모바일)
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @DEVICE_GBN1 CHAR(1) = 'P'


	IF @P_CODE = 'TRANS'
	BEGIN
		SELECT A.IDX_COUPON_NUMBER		-- 쿠폰번호
			, A.CD_COUPON
			, A.COUPON_NAME				-- 쿠폰명
			, '(배송비무료)' AS BENEFIT	-- 혜택
			, A.RATE_OR_MONEY
			, A.COUPON_MONEY
			, A.COUPON_DISCOUNT_RATE
		FROM VIEW_USABLE_COUPON_LIST A WITH (NOLOCK)
		WHERE A.M_ID = @M_ID
		AND A.COUPON_GBN = 'S'
		AND A.USE_STATUS  = 5
		AND A.USABLE_DEVICE_GBN IN ( @DEVICE_GBN, @DEVICE_GBN1 )
	END
	ELSE BEGIN
		SELECT A.IDX_COUPON_NUMBER		-- 쿠폰번호
			, A.CD_COUPON
			, A.COUPON_NAME				-- 쿠폰명
			, CASE WHEN A.RATE_OR_MONEY = 'R' THEN CONVERT(VARCHAR,A.COUPON_DISCOUNT_RATE) + '%할인'
					ELSE  REPLACE( CONVERT( VARCHAR, CONVERT( MONEY, A.COUPON_MONEY ), 1 ), '.00', '' ) + '원할인' END   AS BENEFIT	-- 혜택
			, A.RATE_OR_MONEY
			, A.COUPON_MONEY
			, A.COUPON_DISCOUNT_RATE
		FROM VIEW_USABLE_COUPON_LIST A WITH (NOLOCK)
			LEFT JOIN VIEW_USABLE_COUPON_PRODUCT_LIST B WITH (NOLOCK)
				ON A.IDX_COUPON_NUMBER = B.IDX_COUPON_NUMBER
		WHERE A.M_ID = @M_ID
		AND B.P_CODE = @P_CODE
		AND A.USE_STATUS  = 5
		AND A.USABLE_DEVICE_GBN IN ( @DEVICE_GBN, @DEVICE_GBN1 )
	END
	


	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_STEP2_COUPON_APPLY]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_STEP2_COUPON_APPLY
[주문페이지] 특정상품에 쿠폰 적용

파라미터 설명
@M_ID	VARCHAR(13)			-- 회원ID
@ORDER_DETAIL_IDX	INT		-- 쿠폰을 적용할 상세주문번호
@IDX_COUPON_NUMBER	INT		-- 적용할 쿠폰번호 ( 0이 전달되면 기존에 적용된 쿠폰할인제거)


SELECT * FROM TB_ORDER_MASTER_TMP
SELECT * FROM TB_ORDER_DETAIL_TMP

exec SP_ORDER_STEP2_COUPON_APPLY 'test_b1s',466,100062244
exec SP_ORDER_STEP2_COUPON_APPLY 'test_b1s',1,0

exec SP_ORDER_STEP2_COUPON_SEARCH 'test_b1s','1111114','M'
exec SP_ORDER_STEP2_COUPON_SEARCH 'test_b1s','1111111','M'

select * from VIEW_USABLE_COUPON_LIST
where m_id = 'test_b1s'

100062244

DECLARE @ORDER_IDX INT = 292
SELECT * FROM TB_ORDER_MASTER_TMP WHERE ORDER_IDX = @ORDER_IDX
SELECT * FROM TB_ORDER_DETAIL_TMP WHERE ORDER_IDX = @ORDER_IDX

*/
CREATE PROCEDURE [dbo].[SP_ORDER_STEP2_COUPON_APPLY]
@M_ID	VARCHAR(13)			-- 회원ID
,@ORDER_DETAIL_IDX	INT	=0	-- 쿠폰을 적용할 상세주문번호
,@IDX_COUPON_NUMBER	INT	=0	-- 적용할 쿠폰번호
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @SAVE_POINT_VAL NUMERIC(10,3) = 0.0
	
	SELECT @SAVE_POINT_VAL = CASE WHEN M_GRADE = 'V' THEN 0.05
								  WHEN M_GRADE = 'G' THEN 0.03
								  ELSE 0.02 END
	FROM TB_MEMBER
	WHERE M_ID = @M_ID

	DECLARE @ORDER_IDX INT = 0
	IF @IDX_COUPON_NUMBER > 0
	BEGIN
		-- 전달된 쿠폰이 실제 존재하는지 검사
		DECLARE @IDX_COUPON_NUMBER_RE INT = 0
		
		SELECT TOP 1 @IDX_COUPON_NUMBER_RE = ISNULL(A.IDX_COUPON_NUMBER,0)
		FROM VIEW_USABLE_COUPON_LIST A WITH (NOLOCK)
		WHERE A.M_ID = @M_ID
		AND A.IDX_COUPON_NUMBER = @IDX_COUPON_NUMBER
		AND A.USE_STATUS  = 5
		AND A.COUPON_GBN = 'M'
		
		IF @IDX_COUPON_NUMBER_RE = 0
		BEGIN
			 PRINT '쿠폰없음'
			RETURN
		END

		-- 전달된 쿠폰이 전달된 상품에 적용가능한지 검사
		SET @IDX_COUPON_NUMBER_RE = 0
		DECLARE @P_CODE VARCHAR(10) = ''
		SELECT @ORDER_IDX = A.ORDER_IDX
			, @P_CODE = A.P_CODE
		FROM TB_ORDER_DETAIL_TMP A WITH (NOLOCK)
		WHERE A.ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX
		
		SELECT TOP 1 @IDX_COUPON_NUMBER_RE = ISNULL(A.IDX_COUPON_NUMBER,0)
		FROM VIEW_USABLE_COUPON_PRODUCT_LIST A WITH (NOLOCK)
		WHERE A.M_ID = @M_ID
		AND A.IDX_COUPON_NUMBER = @IDX_COUPON_NUMBER
		AND A.P_CODE = @P_CODE

		IF @IDX_COUPON_NUMBER_RE = 0
		BEGIN
			 PRINT '적용대상 상품아님'
			RETURN
		END

		-- 쿠폰이 다른 상품에 이미 사용된것이면 기존사용내역을 CLEAR
		
		UPDATE A
		SET A.IDX_COUPON_NUMBER = NULL
			, A.CD_COUPON = NULL
			, A.RATE_OR_MONEY = NULL
			, A.COUPON_DISCOUNT_MONEY = 0
			, A.COUPON_DISCOUNT_RATE = 0
			, A.COUPON_DISCOUNT_AMT = 0
			, A.COUPON_DISCOUNT_PRICE = A.EMP_DISCOUNT_PRICE
		FROM TB_ORDER_DETAIL_TMP A
		WHERE A.ORDER_IDX = @ORDER_IDX
		AND A.IDX_COUPON_NUMBER = @IDX_COUPON_NUMBER
		
		
		-- 쿠폰적용
		DECLARE @CD_COUPON VARCHAR(6)
			, @RATE_OR_MONEY VARCHAR(1)
			, @COUPON_DISCOUNT_MONEY INT
			, @COUPON_DISCOUNT_RATE INT

		SELECT TOP 1
			@CD_COUPON = CD_COUPON
			, @RATE_OR_MONEY = RATE_OR_MONEY
			, @COUPON_DISCOUNT_MONEY = COUPON_MONEY
			, @COUPON_DISCOUNT_RATE = COUPON_DISCOUNT_RATE
		FROM VIEW_USABLE_COUPON_LIST A WITH (NOLOCK)
		WHERE A.IDX_COUPON_NUMBER = @IDX_COUPON_NUMBER

		
		UPDATE A
		SET A.IDX_COUPON_NUMBER = @IDX_COUPON_NUMBER
			, A.CD_COUPON = @CD_COUPON
			, A.RATE_OR_MONEY = @RATE_OR_MONEY
			, A.COUPON_DISCOUNT_MONEY = @COUPON_DISCOUNT_MONEY
			, A.COUPON_DISCOUNT_RATE = @COUPON_DISCOUNT_RATE
		FROM TB_ORDER_DETAIL_TMP A
		WHERE A.ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX

		-- DETAIL 업데이트
		UPDATE A
		SET A.COUPON_DISCOUNT_PRICE = CASE WHEN A.IDX_COUPON_NUMBER IS NULL THEN A.EMP_DISCOUNT_PRICE
										   WHEN A.RATE_OR_MONEY = 'R' THEN FLOOR(A.EMP_DISCOUNT_PRICE / 100.0 * ( 100 - A.COUPON_DISCOUNT_RATE ) )
										   ELSE A.ORDER_PRICE - A.COUPON_DISCOUNT_MONEY END
			, A.USE_POINT = 0
		FROM TB_ORDER_DETAIL_TMP A
		WHERE A.ORDER_IDX = @ORDER_IDX

		UPDATE A
		SET A.COUPON_DISCOUNT_PRICE = 0
		FROM TB_ORDER_DETAIL_TMP A
		WHERE A.ORDER_IDX = @ORDER_IDX
		AND A.COUPON_DISCOUNT_PRICE < 0
		
		UPDATE A
		SET A.COUPON_DISCOUNT_AMT = CASE WHEN A.IDX_COUPON_NUMBER IS NULL THEN 0
										   WHEN A.RATE_OR_MONEY = 'R' THEN (A.EMP_DISCOUNT_PRICE - A.COUPON_DISCOUNT_PRICE ) * A.P_COUNT
										   ELSE 
												CASE WHEN A.COUPON_DISCOUNT_MONEY > A.ORDER_PRICE THEN A.ORDER_PRICE ELSE A.COUPON_DISCOUNT_MONEY END
										   END
										   
										   
		FROM TB_ORDER_DETAIL_TMP A
		WHERE A.ORDER_IDX = @ORDER_IDX
	END
	ELSE BEGIN
		SELECT @ORDER_IDX = A.ORDER_IDX
		FROM TB_ORDER_DETAIL_TMP A WITH (NOLOCK)
		WHERE A.ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX


		UPDATE A
		SET A.IDX_COUPON_NUMBER = NULL
			, A.CD_COUPON = NULL
			, A.RATE_OR_MONEY = NULL
			, A.COUPON_DISCOUNT_MONEY = 0
			, A.COUPON_DISCOUNT_RATE = 0
			, A.COUPON_DISCOUNT_AMT = 0
			, A.COUPON_DISCOUNT_PRICE = A.EMP_DISCOUNT_PRICE
		FROM TB_ORDER_DETAIL_TMP A
		WHERE A.ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX
	END


	-- DETAIL과 MASTER정보 갱신
	UPDATE A
	SET A.GRADE_DISCOUNT_AMT = 0
	FROM TB_ORDER_DETAIL_TMP A
	WHERE A.ORDER_IDX = @ORDER_IDX
	AND A.GRADE_PMO_TOTAL_RATE_OR_MONEY IS NULL

	UPDATE A
	SET A.GRADE_DISCOUNT_AMT = 
			CASE WHEN A.GRADE_PMO_TOTAL_RATE_OR_MONEY = 'R' 
				THEN ( ( ( A.COUPON_DISCOUNT_PRICE * A.P_COUNT ) - A.USE_POINT )  - FLOOR( ( ( A.COUPON_DISCOUNT_PRICE * A.P_COUNT ) - A.USE_POINT ) / 100.0 * ( 100 - A.GRADE_PMO_TOTAL_DISCOUNT_RATE ) ) ) 
			ELSE ( A.GRADE_PMO_TOTAL_DISCOUNT_MONEY * A.P_COUNT ) END
	FROM TB_ORDER_DETAIL_TMP A
	WHERE A.ORDER_IDX = @ORDER_IDX
	AND A.GRADE_DISCOUNT = 1
	AND A.GRADE_PMO_TOTAL_RATE_OR_MONEY IS NOT NULL

	UPDATE A
	SET A.POINT_ACCML = FLOOR( ( ( A.EMP_DISCOUNT_PRICE * A.P_COUNT ) - A.COUPON_DISCOUNT_AMT - A.USE_POINT - A.GRADE_DISCOUNT_AMT ) * @SAVE_POINT_VAL )
		, A.REAL_PAY_PRICE = ( A.ORDER_PRICE - A.COUPON_DISCOUNT_AMT - A.USE_POINT - A.GRADE_DISCOUNT_AMT )
	FROM TB_ORDER_DETAIL_TMP A
	WHERE A.ORDER_IDX = @ORDER_IDX


	/*
		상품의 가격들을 SUM하여 TB_ORDER_MASTER_TMP에 업데이트
	*/
	;
	WITH SRC AS (
	SELECT MAX(ORDER_IDX) AS ORDER_IDX
		, SUM(SELLING_PRICE) AS SELLING_PRICE
		, SUM(DISCOUNT_PRICE * P_COUNT) AS DISCOUNT_PRICE		
		, SUM(ORDER_PRICE) AS ORDER_PRICE
		, SUM(COUPON_DISCOUNT_AMT) AS COUPON_DISCOUNT_AMT
		, SUM(USE_POINT) AS USE_POINT
		, SUM(GRADE_DISCOUNT_AMT) AS GRADE_DISCOUNT_AMT
		, SUM(EMP_DISCOUNT_AMT) AS EMP_DISCOUNT_AMT
		, SUM(REAL_PAY_PRICE) AS REAL_PAY_PRICE
		, SUM(POINT_ACCML) AS POINT_ACCML
	FROM TB_ORDER_DETAIL_TMP
	WHERE ORDER_IDX = @ORDER_IDX
	)
--	SELECT * FROM TB_ORDER_MASTER_TMP
	UPDATE A
	SET A.TOTAL_ORDER_PRICE = SRC.DISCOUNT_PRICE
		, A.COUPON_DISCOUNT_AMT = SRC.COUPON_DISCOUNT_AMT
		, A.GRADE_DISCOUNT_AMT = SRC.GRADE_DISCOUNT_AMT
		, A.POINT_USE_PRICE = SRC.USE_POINT
		, A.EMP_DISCOUNT_AMT = SRC.EMP_DISCOUNT_AMT
		, A.DISCOUNT_AMT = SRC.COUPON_DISCOUNT_AMT + SRC.GRADE_DISCOUNT_AMT + SRC.EMP_DISCOUNT_AMT + SRC.USE_POINT
		, A.TOTAL_PAY_PRICE = SRC.REAL_PAY_PRICE
		, A.ACCML_POINT = SRC.POINT_ACCML
	FROM TB_ORDER_MASTER_TMP A, SRC
	WHERE A.ORDER_IDX = SRC.ORDER_IDX
	AND A.ORDER_IDX = @ORDER_IDX

	UPDATE A
	SET A.TRANS_COUPON = NULL
	FROM TB_ORDER_MASTER_TMP A
	WHERE A.ORDER_IDX = @ORDER_IDX

	UPDATE A
	SET A.TRANS_PRICE = CASE WHEN A.TOTAL_PAY_PRICE - A.TRANS_PRICE >= 30000 THEN 0 WHEN ISNULL(A.TRANS_COUPON,0) > 0 THEN 0 ELSE 2500 END
		, A.TOTAL_PAY_PRICE = A.TOTAL_PAY_PRICE + CASE WHEN A.TOTAL_PAY_PRICE - A.TRANS_PRICE >= 30000 THEN 0 WHEN ISNULL(A.TRANS_COUPON,0) > 0 THEN 0 ELSE 2500 END
	FROM TB_ORDER_MASTER_TMP A
	WHERE A.ORDER_IDX = @ORDER_IDX



	--SELECT A.COUPON_DISCOUNT_AMT
	--FROM TB_ORDER_DETAIL_TMP A WITH (NOLOCK)
	--WHERE A.ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX

/*
SELECT	
	COUPON_DISCOUNT_AMT, GRADE_PMO_TOTAL_DISCOUNT_RATE
	,FLOOR(A.COUPON_DISCOUNT_AMT / 100.0 * ( 100 - A.GRADE_PMO_TOTAL_DISCOUNT_RATE ) ),
			CASE WHEN A.GRADE_PMO_TOTAL_RATE_OR_MONEY = 'R' THEN ( A.COUPON_DISCOUNT_AMT  - FLOOR(A.COUPON_DISCOUNT_AMT / 100.0 * ( 100 - A.GRADE_PMO_TOTAL_DISCOUNT_RATE ) ) ) * A.P_COUNT
			ELSE ( A.GRADE_PMO_TOTAL_DISCOUNT_MONEY * A.P_COUNT ) END
	FROM TB_ORDER_DETAIL_TMP A
	WHERE A.ORDER_IDX = 1
	
exec SP_ORDER_STEP2_COUPON_APPLY 'test_b1s',5,100009089
exec SP_ORDER_STEP2_COUPON_APPLY 'test_b1s',2,100019360


DECLARE @ORDER_IDX INT = 2
SELECT * FROM TB_ORDER_MASTER_TMP WHERE ORDER_IDX = @ORDER_IDX
SELECT * FROM TB_ORDER_DETAIL_TMP WHERE ORDER_IDX = @ORDER_IDX

*/

	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_GET_BACK_SAVED_POINT_ON_CANCEL_AFTER_FIRM_ORDER]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-20
-- Description:	구매확정 후 취소시 적립했던 포인트 강제 수거
-- ussage: exec SP_POINT_GET_BACK_SAVED_POINT_ON_CANCEL_AFTER_FIRM_ORDER
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_GET_BACK_SAVED_POINT_ON_CANCEL_AFTER_FIRM_ORDER]
	 @M_ID	varchar(13) = NULL -- 회원아이디
	,@POINT INT = NULL --취소되어 반환되어 재적립하는 포인트
	,@ORDER_CODE VARCHAR(20) = NULL -- 주문코드
	,@ORDER_DETAIL_IDX INT = NULL -- 주문상세일련번호
	,@P_NAME VARCHAR(100) = NULL -- 상품이름
	
	,@RET_NUM VARCHAR OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) OUTPUT -- 반환메세지
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @CODE VARCHAR(3) = 'U02';
	
	EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, '구매확정 후 취소시 적립했던 포인트 강제 수거 시작', @ORDER_CODE, @ORDER_DETAIL_IDX;
	
	/**
		회원 확인
	*/
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(1);
	END
	
	/**
		적립테이블에 계정 존재여부 확인
	*/
	IF NOT EXISTS( SELECT M_ID FROM TB_POINT_SAVE WITH (NOLOCK) WHERE M_ID=@M_ID)
	BEGIN
		SET @RET_NUM = '2';
		SET @RET_MESSAGE = @M_ID + ' 계정이 적립포인트 테이블 상에 존재하지 않습니다';
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(2);		
	END
	
	/**
	주문과 관련 최근 포인트 코드 체크


	주문시전체취소	: S07
	주문시부분취소 : S06
	주문확정후포인트적립 : S00
	구매확정 후 취소시 구매시 사용했던 포인트 재적립 : S08
	구매확정 후 취소시 적립했던 포인트 강제 수거 : U02
	*/
		DECLARE @LAST_CODE_IN_ORDER VARCHAR(3);

		SELECT TOP 1 @LAST_CODE_IN_ORDER=CODE FROM 
		(
			SELECT 
					SAVE_CODE AS CODE
					,SAVE_POINT AS POINT
					,SAVE_SUM_POINT AS SUM_POINT
					,INS_DATE
					,ORDER_CODE
					,ORDER_DETAIL_IDX
				FROM TB_POINT_SAVE AS PS WITH(NOLOCK)
			WHERE M_ID=@M_ID and SAVE_CODE IN ('S00','S06','S07', 'S08' ) AND ORDER_CODE=@ORDER_CODE AND ORDER_DETAIL_IDX=@ORDER_DETAIL_IDX
			UNION ALL
			SELECT 
					USE_CODE AS CODE
					,USE_POINT
					,SAVE_SUM_POINT
					,INS_DATE
					,ORDER_CODE
					,ORDER_DETAIL_IDX
				FROM TB_POINT_USE WITH(NOLOCK)	
			WHERE M_ID=@M_ID AND USE_CODE IN ('U02' ) AND ORDER_CODE=@ORDER_CODE AND ORDER_DETAIL_IDX=@ORDER_DETAIL_IDX
			) AS A
		ORDER BY INS_DATE DESC
		
	IF @LAST_CODE_IN_ORDER = @CODE
	BEGIN 
		SET @RET_NUM = '4';
		SET @RET_MESSAGE = '포인트 변경 요청이 주문과 관련된 최근 포인트 상태값과 동일합니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
	
		RETURN(4);	
	END 
	--//주문과 관련 최근 포인트 코드 체크
	
	SET NOCOUNT OFF;
	
	
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
	
	EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
	RETURN(0);
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_SAVE_AFTER_FIRM_ORDER]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-06-26
-- Description:	구매금액에 적립률 적용
-- ussage: exec SP_POINT_SAVE_AFTER_FIRM_ORDER '회원아이디',적립포인트,'주문코드'
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_SAVE_AFTER_FIRM_ORDER]
 @M_ID	varchar(13) = NULL -- 회원아이디
,@POINT INT = NULL --적립포인트
,@ORDER_CODE VARCHAR(20) = NULL -- 주문코드
,@ORDER_DETAIL_IDX INT = NULL -- 주문상세일련번호
,@P_NAME VARCHAR(100) = NULL -- 상품이름
,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	
	DECLARE @CODE VARCHAR(3) = 'S00';
	
	EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, '구매확정후 포인트 적립 시작', @ORDER_CODE, @ORDER_DETAIL_IDX;
	
	/**
		회원 확인
	*/
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(1);
	END
	
	/**
		적립포인트 체크
	*/
	IF @POINT <= 0 OR @POINT IS NULL
	BEGIN 
		SET @RET_NUM = '3';
		SET @RET_MESSAGE = '적립포인트가 유효하지 않습니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(3);
	END
	
	/**
	주문과 관련 최근 포인트 코드 체크


	주문시전체취소	: S07
	주문시부분취소 : S06
	주문확정후포인트적립 : S00
	구매확정 후 취소시 구매시 사용했던 포인트 재적립 : S08
	구매확정 후 취소시 적립했던 포인트 강제 수거 : U02
	*/
		DECLARE @LAST_CODE_IN_ORDER VARCHAR(3);

		SELECT TOP 1 @LAST_CODE_IN_ORDER=CODE FROM 
		(
			SELECT 
					SAVE_CODE AS CODE
					,SAVE_POINT AS POINT
					,SAVE_SUM_POINT AS SUM_POINT
					,INS_DATE
					,ORDER_CODE
					,ORDER_DETAIL_IDX
				FROM TB_POINT_SAVE AS PS WITH(NOLOCK)
			WHERE M_ID=@M_ID and SAVE_CODE IN ('S00','S06','S07', 'S08' ) AND ORDER_CODE=@ORDER_CODE AND ORDER_DETAIL_IDX=@ORDER_DETAIL_IDX
			UNION ALL
			SELECT 
					USE_CODE AS CODE
					,USE_POINT
					,SAVE_SUM_POINT
					,INS_DATE
					,ORDER_CODE
					,ORDER_DETAIL_IDX
				FROM TB_POINT_USE WITH(NOLOCK)	
			WHERE M_ID=@M_ID AND USE_CODE IN ('U02' ) AND ORDER_CODE=@ORDER_CODE AND ORDER_DETAIL_IDX=@ORDER_DETAIL_IDX
			) AS A
		ORDER BY INS_DATE DESC
		
	IF @LAST_CODE_IN_ORDER = @CODE
	BEGIN 
		SET @RET_NUM = '4';
		SET @RET_MESSAGE = '포인트 변경 요청이 주문과 관련된 최근 포인트 상태값과 동일합니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(4);	
	END 
	--//주문과 관련 최근 포인트 코드 체크
	
	/**
		현재 총 누적 적립금
	*/
	DECLARE @TOTAL_MY_SAVE_POINT INT;
	exec @TOTAL_MY_SAVE_POINT = SP_POINT_SAVE_TOTAL @M_ID

	/**
		현재 총 누적 적립금 증가 및 갱신
	*/
	SET @TOTAL_MY_SAVE_POINT = @TOTAL_MY_SAVE_POINT + @POINT 
	

	-- try
	BEGIN TRY
		/**
			적립 테이블에 추가
		*/
		INSERT INTO TB_POINT_SAVE 
		(M_ID,SAVE_POINT,SAVE_SUM_POINT,SAVE_CODE,EXPIRE_YN,ORDER_CODE,ORDER_DETAIL_IDX, P_NAME) 
		VALUES 
		(@M_ID,@POINT,@TOTAL_MY_SAVE_POINT, @CODE,'N',@ORDER_CODE,@ORDER_DETAIL_IDX,@P_NAME);
		
		/**
			회원테이블의 마이 포인트 갱신
		*/
		EXEC SP_POINT_MEMBER_UPDATE @M_ID, @TOTAL_MY_SAVE_POINT;
	END TRY
	BEGIN CATCH			
		PRINT ERROR_MESSAGE();
		SET @RET_NUM = '2';
		SET @RET_MESSAGE = ERROR_MESSAGE();
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(2);	
	END CATCH
		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
	EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
	RETURN(0);
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_REVIEW_SAVE]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2015-08-07
-- Description:	상품리뷰 일반 포인트 적립
-- ussage: exec SP_POINT_REVIEW_NORMAL_SAVE '회원아이디'
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_REVIEW_SAVE]
	@CODE VARCHAR(3)
	,@M_ID	varchar(13) = NULL -- 회원아이디
	,@REVIEW_IDX INT = NULL -- 상품리뷰번호
	,@ORDER_CODE VARCHAR(20)
	,@ORDER_DETAIL_IDX INT
	,@P_NAME VARCHAR(100)
	,@RET_NUM VARCHAR OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) OUTPUT -- 반환 메세지
AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	
	/*
		코드테이블에서 정책상 정해진 포인트 참조하기
	*/
	DECLARE @SAVE_POINT INT;
	
	SELECT @SAVE_POINT = SAVE_AMOUNT 
		FROM TB_POINT_SAVE_CODES WITH (NOLOCK) 
	WHERE CODE=@CODE;	
	
	
	EXEC SP_POINT_LOG @CODE, @M_ID, @SAVE_POINT, '상품리뷰 일반 포인트 적립 시작', @ORDER_CODE, @ORDER_DETAIL_IDX;

	/**
		회원 확인
	*/
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @SAVE_POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(1);
	END
	
	/**
		상품리뷰 아이디 확인
	*/
	IF NOT EXISTS( SELECT IDX FROM TB_REVIEW_PRODUCT WITH (NOLOCK) WHERE M_ID=@M_ID AND IDX=@REVIEW_IDX AND IS_DISPLAY='Y')
	BEGIN
		SET @RET_NUM = '2';
		SET @RET_MESSAGE = '존재하지 않는 상품리뷰 아이디입니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @SAVE_POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(2);
	END
	

	
	/**
		현재 총 누적 적립금
	*/
	DECLARE @TOTAL_MY_SAVE_POINT INT;
	EXEC @TOTAL_MY_SAVE_POINT = SP_POINT_SAVE_TOTAL @M_ID;

	/**
		현재 총 누적 적립금 증가 및 갱신
	*/
	SET @TOTAL_MY_SAVE_POINT = @TOTAL_MY_SAVE_POINT + @SAVE_POINT;
	
	/**
		트랜젝션 시작
	*/
	BEGIN TRANSACTION SaveReviewPoint;
	
	BEGIN TRY
		
		/**
			적립 테이블에 추가
		*/
		INSERT INTO TB_POINT_SAVE 
		(
			M_ID
			,SAVE_POINT
			,SAVE_SUM_POINT
			,SAVE_CODE
			,EXPIRE_YN
			,REVIEW_IDX
			,ORDER_CODE
			,ORDER_DETAIL_IDX
			,P_NAME
		) 
		VALUES 
		(
			@M_ID
			,@SAVE_POINT
			,@TOTAL_MY_SAVE_POINT
			,@CODE
			,'N'
			,@REVIEW_IDX
			,@ORDER_CODE
			,@ORDER_DETAIL_IDX
			,@P_NAME
		);
		
		/**
			회원테이블의 마이 포인트 갱신
		*/
		EXEC SP_POINT_MEMBER_UPDATE @M_ID, @TOTAL_MY_SAVE_POINT;

	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT > 0
			ROLLBACK TRANSACTION SaveReviewPoint;
			
		PRINT ERROR_MESSAGE();
		SET @RET_NUM = '3';
		SET @RET_MESSAGE = ERROR_MESSAGE();
		EXEC SP_POINT_LOG @CODE, @M_ID, @SAVE_POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		
		RETURN(3);	
	END CATCH
	
	IF @@TRANCOUNT > 0
		COMMIT TRANSACTION SaveReviewPoint;

	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
	
	RETURN(0);
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_RESAVE_USED_POINT_ON_CANCEL_AFTER_FIRM_ORDER]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-20
-- Description:	구매확정 후 취소시 구매시 사용했던 포인트 재적립
-- ussage: exec SP_POINT_RESAVE_USED_POINT_ON_CANCEL_AFTER_FIRM_ORDER
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_RESAVE_USED_POINT_ON_CANCEL_AFTER_FIRM_ORDER]
	 @M_ID	varchar(13) = NULL -- 회원아이디
	,@POINT INT = NULL --취소되어 반환되어 재적립하는 포인트
	,@ORDER_CODE VARCHAR(20) = NULL -- 주문코드
	,@ORDER_DETAIL_IDX INT = NULL -- 주문상세일련번호
	,@P_NAME VARCHAR(100) = NULL -- 상품이름
	
	,@RET_NUM VARCHAR OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) OUTPUT -- 반환메세지
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @CODE VARCHAR(3) = 'S08';
	
	EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, '구매확정 후 취소시 구매시 사용했던 포인트 재적립 시작', @ORDER_CODE, @ORDER_DETAIL_IDX;
	
	/**
		회원 확인
	*/
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(1);
	END
	
	/**
		적립포인트 체크
	*/
	IF @POINT <= 0 OR @POINT IS NULL
	BEGIN 
		SET @RET_NUM = '3';
		SET @RET_MESSAGE = '적립포인트가 유효하지 않습니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(3);
	END
	
	/**
	주문과 관련 최근 포인트 코드 체크


	주문시전체취소	: S07
	주문시부분취소 : S06
	주문확정후포인트적립 : S00
	구매확정 후 취소시 구매시 사용했던 포인트 재적립 : S08
	구매확정 후 취소시 적립했던 포인트 강제 수거 : U02
	*/
		DECLARE @LAST_CODE_IN_ORDER VARCHAR(3);

		SELECT TOP 1 @LAST_CODE_IN_ORDER=CODE FROM 
		(
			SELECT 
					SAVE_CODE AS CODE
					,SAVE_POINT AS POINT
					,SAVE_SUM_POINT AS SUM_POINT
					,INS_DATE
					,ORDER_CODE
					,ORDER_DETAIL_IDX
				FROM TB_POINT_SAVE AS PS WITH(NOLOCK)
			WHERE M_ID=@M_ID and SAVE_CODE IN ('S00','S06','S07', 'S08' ) AND ORDER_CODE=@ORDER_CODE AND ORDER_DETAIL_IDX=@ORDER_DETAIL_IDX
			UNION ALL
			SELECT 
					USE_CODE AS CODE
					,USE_POINT
					,SAVE_SUM_POINT
					,INS_DATE
					,ORDER_CODE
					,ORDER_DETAIL_IDX
				FROM TB_POINT_USE WITH(NOLOCK)	
			WHERE M_ID=@M_ID AND USE_CODE IN ('U02' ) AND ORDER_CODE=@ORDER_CODE AND ORDER_DETAIL_IDX=@ORDER_DETAIL_IDX
			) AS A
		ORDER BY INS_DATE DESC
		
	IF @LAST_CODE_IN_ORDER = @CODE
	BEGIN 
		SET @RET_NUM = '4';
		SET @RET_MESSAGE = '포인트 변경 요청이 주문과 관련된 최근 포인트 상태값과 동일합니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(4);	
	END 
	--//주문과 관련 최근 포인트 코드 체크
	
	
	/**
		현재 총 누적 적립금
	*/
	DECLARE @TOTAL_MY_SAVE_POINT INT;
	exec @TOTAL_MY_SAVE_POINT = SP_POINT_SAVE_TOTAL @M_ID;

	/**
		현재 총 누적 적립금 증가 및 갱신
	*/
	SET @TOTAL_MY_SAVE_POINT = @TOTAL_MY_SAVE_POINT + @POINT;
	

	BEGIN TRY
	
		/**
			적립 테이블에 추가
		*/
		INSERT INTO TB_POINT_SAVE 
		(M_ID,SAVE_POINT,SAVE_SUM_POINT,SAVE_CODE,EXPIRE_YN,ORDER_CODE,ORDER_DETAIL_IDX,P_NAME ) 
		VALUES 
		(@M_ID,@POINT,@TOTAL_MY_SAVE_POINT, @CODE,'N',@ORDER_CODE,@ORDER_DETAIL_IDX,@P_NAME );
		
		/**
			회원테이블의 마이 포인트 갱신
		*/
		EXEC SP_POINT_MEMBER_UPDATE @M_ID, @TOTAL_MY_SAVE_POINT;

	END TRY
	BEGIN CATCH

			
		SET @RET_NUM = '3';
		SET @RET_MESSAGE = ERROR_MESSAGE();
		
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		
		RETURN(3);	
	END CATCH
	

	
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
	EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
	RETURN(0);
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_MY_HISTORY_SEL]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-08-07
-- Description:	나의 포인트 내역
-- ussage: exec SP_POINT_MY_HISTORY_SEL '회원아이디'
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_MY_HISTORY_SEL]
	@M_ID varchar(13) = NULL -- 회원아이디
	,@PAGE				INT = 1		--현재 PAGE
	,@PAGESIZE			INT = 10		--페이지 사이즈
	
	,@TOTAL_POINT INT OUTPUT
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN

	SET NOCOUNT ON;
	
	/**
		To Create Complex Type
	*/
	IF (1=0) 
	BEGIN 
		SET FMTONLY OFF 
			BEGIN
				-- declaration + dummy query 
				-- to allow EF obtain complex data type:
				DECLARE @MyStoredProcResult TABLE(
						KIND VARCHAR(4)
						,POINT INT 
						,SUM_POINT INT
						,INS_DATE DATETIME
						,EXPIRE_YN VARCHAR(1)
						,ADDITION_REASON VARCHAR(100)
						,DETAIL VARCHAR(100)
						,ADM_NAME VARCHAR(30)
						,ORDER_CODE VARCHAR(20)
						,ORDER_DETAIL_IDX INT
						,P_NAME VARCHAR(100)
					);
				SELECT * FROM @MyStoredProcResult WHERE (1=0)
			END
	END   
	
	/**
		회원 확인
	
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		RETURN(1);
	END
*/
	----------------------------------------
	
	DECLARE @LISTCOUNT INT	

	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @V_SQL NVARCHAR(MAX);
	 
	-----------------------------

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY
		,KIND VARCHAR(4)
		,POINT INT 
		,SUM_POINT INT
		,INS_DATE DATETIME
		,EXPIRE_YN VARCHAR(1)
		,ADDITION_REASON VARCHAR(100)
		,DETAIL VARCHAR(100)
		,ADM_NAME VARCHAR(30)
		,ORDER_CODE VARCHAR(20)
		,ORDER_DETAIL_IDX INT
		,P_NAME VARCHAR(100)
	)

	DECLARE @M_GBN VARCHAR(1);
	DECLARE @M_GRADE VARCHAR(1);


	/**
		회원 구분, 등급 
	*/
	SELECT @M_GBN = M_GBN, @M_GRADE = M_GRADE 
	FROM TB_MEMBER WITH(NOLOCK)
	WHERE M_ID = @M_ID;
	
	SET @LISTCOUNT = @PAGE * @PAGESIZE;
	SET ROWCOUNT @LISTCOUNT;
	
	/**
		적립 + 사용 
	*/
	INSERT INTO #TEMPLIST 
	(KIND, POINT, SUM_POINT, INS_DATE, EXPIRE_YN, ADDITION_REASON, DETAIL,ADM_NAME,ORDER_CODE,ORDER_DETAIL_IDX,P_NAME)
	SELECT KIND, POINT, SUM_POINT, INS_DATE, EXPIRE_YN, ADDITION_REASON, DETAIL,ADM_NAME,ORDER_CODE,ORDER_DETAIL_IDX,P_NAME
	FROM (
		SELECT 
				'적립' AS KIND
				,SAVE_POINT AS POINT
				,SAVE_SUM_POINT AS SUM_POINT
				,INS_DATE
				,EXPIRE_YN
				,ADDITION_REASON
				,(
				CASE
				WHEN SAVE_CODE='S00' THEN  (SELECT DETAIL  FROM TB_POINT_SAVE_CODES WHERE M_GBN=@M_GBN AND M_GRADE=@M_GRADE)
				WHEN SAVE_CODE<>'S00' THEN (SELECT DETAIL FROM TB_POINT_SAVE_CODES WHERE CODE=SAVE_CODE)
				ELSE NULL
				END
				)AS DETAIL
				,ADM_NAME
				,ORDER_CODE
				,ORDER_DETAIL_IDX
				,P_NAME
			FROM TB_POINT_SAVE AS PS WITH(NOLOCK)
			WHERE M_ID=@M_ID
		UNION ALL
			SELECT 
				(
					CASE
						WHEN EXPIRE_YN='Y' THEN '소멸'
						WHEN EXPIRE_YN='N' THEN '차감'
						ELSE NULL
					END
				) AS KIND
				,-USE_POINT
				,SAVE_SUM_POINT
				,INS_DATE
				,NULL
				,ADDITION_REASON
				,(SELECT DETAIL FROM TB_POINT_USE_CODES WHERE CODE=USE_CODE) AS DETAIL
				,ADM_NAME
				,ORDER_CODE
				,ORDER_DETAIL_IDX
				,P_NAME
			FROM TB_POINT_USE WITH(NOLOCK)	
			WHERE M_ID=@M_ID
	) A
	ORDER BY INS_DATE DESC;
	
	SET ROWCOUNT 0 ; --기본값 복원 
	
	SELECT 	
		KIND
		,POINT
		,SUM_POINT
		,INS_DATE
		,EXPIRE_YN
		,ADDITION_REASON
		,DETAIL
		,ADM_NAME
		,ORDER_CODE
		,ORDER_DETAIL_IDX
		,P_NAME
	from #TEMPLIST as t with (nolock)
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;
	
	EXEC @TOTAL_POINT = SP_POINT_SAVE_TOTAL @M_ID;
	
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  drop table #TEMPLIST ;
	  --print 'drop...'
	END
	
    SET NOCOUNT OFF
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_STEP1]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_STEP1
장바구니에서 특정제품들을 골라서 주문화면으로 이동.
이때 TB_ORDER_MASTER_TMP에 데이터 입력
파라미터 설명
@M_ID : 회원ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
@SESSION_ID : 세션ID (@M_ID과 @SESSION_ID 둘중 하나만 입력)
@P_CODE_LIST : P_CODE를 ,로 구분조합하여 전달 (EX:PCODE1,PCODE2,PCODE3)
@P_COUNT_LIST : 각 상품의 담을 갯수를 ,로 구분조합하여 전달 (EX:1,2,3)  기본값=1


SELECT * FROM TB_CART

SELECT * 
--	UPDATE A SET A.M_GRADE = 'V'
FROM TB_MEMBER A
WHERE M_ID = 'KMG5302'

SELECT * FROM TB_PRODUCT_INFO

exec SP_ORDER_STEP1 'test_v099','','RAA00108','1'

exec SP_ORDER_STEP1 'test_b1s','','RAA00122,RAA00125','1'

exec SP_ORDER_STEP1 'test_b1s','','1111111,1111112,1111113,1111114,1111115,1111116','1'

exec SP_ORDER_STEP1 '','0342R78G324FV','1111111,1111112,1111113,1111114','2,2,2,2'

DECLARE @ORDER_IDX INT = 475
SELECT * FROM TB_ORDER_MASTER_TMP WHERE ORDER_IDX = @ORDER_IDX
SELECT * FROM TB_ORDER_DETAIL_TMP WHERE ORDER_IDX = @ORDER_IDX


SELECT * FROM TB_ORDER_MASTER_TMP ORDER BY ORDER_IDX DESC
SELECT * FROM TB_ORDER_DETAIL_TMP ORDER BY ORDER_IDX DESC

	TRUNCATE TABLE TB_ORDER_MASTER_TMP
	TRUNCATE TABLE TB_ORDER_DETAIL_TMP
	
27	101101101	101201100	101301100	1111111	테스트상품1	5	50000	5	46000	NULL	5<p>&nbsp;</p>	5<p>&nbsp;</p>	5	5	55	A20150708153237035_702.jpg	NULL	NULL	NULL	NULL	NULL	18	Y	NULL	0	0	NULL	NULL	2015-07-08 15:56:29.073	2015-06-18 21:52:05.703
28	101101102	101201100	101301100	1111112	테스트상품2	5	30000	55	28000	NULL	<p>상품정보(web)&nbsp;</p>	<p>&nbsp;</p>	NULL	NULL	555	A20150708153219659_948.jpg	NULL	NULL	NULL	NULL	NULL	19	Y	NULL	0	0	NULL	NULL	2015-07-08 15:56:29.060	2015-06-22 19:27:02.080
*/
CREATE PROCEDURE [dbo].[SP_ORDER_STEP1]
 @M_ID	VARCHAR(13)	= '' 
,@SESSION_ID	VARCHAR(50)	= '' 
,@P_CODE_LIST VARCHAR(4000)
,@P_COUNT_LIST VARCHAR(4000)

-- ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

	SET NOCOUNT ON


		--TRUNCATE TABLE TB_ORDER_MASTER_TMP
		--TRUNCATE TABLE TB_ORDER_DETAIL_TMP


	--DECLARE @M_ID	VARCHAR(13)	= 'test_b1s'
	--, @SESSION_ID	VARCHAR(50)	= ''
	--, @P_CODE_LIST VARCHAR(1000) = '1111111,1111113,1111114,1111115,1111117'
	--, @P_COUNT_LIST VARCHAR(1000) = '1,1,1,1,1,1'


	/*
		STEP1. 넘어온 상품을 임시테이블로 구성
	*/
	IF OBJECT_ID('tempdb..#CARTTMP') is not null
	BEGIN
	  DROP TABLE #CARTTMP;
	END

	CREATE TABLE #CARTTMP  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY
		, M_ID VARCHAR(13)  -- 회원ID
		, SESSION_ID VARCHAR(50)	-- 세션ID
		, P_CODE VARCHAR(50) NOT NULL		-- 상품코드   ( TB_PRODUCT_INFO 참조 )
		, P_COUNT INT	DEFAULT 1 NOT NULL	--	상품갯수
	)

	SET @P_CODE_LIST = RTRIM(LTRIM(@P_CODE_LIST))
	SET @P_COUNT_LIST = RTRIM(LTRIM(@P_COUNT_LIST))

	DECLARE @P_CODE_LIST_CUT VARCHAR(100)
	DECLARE @P_COUNT_LIST_CUT VARCHAR(100)

	WHILE LEN(@P_CODE_LIST) > 0
	BEGIN
		IF CHARINDEX(',',@P_CODE_LIST) > 0
		BEGIN
			SET @P_CODE_LIST_CUT = LEFT(@P_CODE_LIST, CHARINDEX(',',@P_CODE_LIST) - 1 )
			SET @P_CODE_LIST = SUBSTRING( @P_CODE_LIST, CHARINDEX(',',@P_CODE_LIST)+1, LEN(@P_CODE_LIST) )
		END
		ELSE BEGIN
			SET @P_CODE_LIST_CUT = @P_CODE_LIST
			SET @P_CODE_LIST = ''
		END
		
		IF CHARINDEX(',',@P_COUNT_LIST) > 0
		BEGIN
			SET @P_COUNT_LIST_CUT = LEFT(@P_COUNT_LIST, CHARINDEX(',',@P_COUNT_LIST) - 1 )
			SET @P_COUNT_LIST = SUBSTRING( @P_COUNT_LIST, CHARINDEX(',',@P_COUNT_LIST)+1, LEN(@P_COUNT_LIST) )
		END
		ELSE BEGIN
			SET @P_COUNT_LIST_CUT = @P_COUNT_LIST
			SET @P_COUNT_LIST = ''
		END
		IF @P_COUNT_LIST_CUT = ''
			SET @P_COUNT_LIST_CUT = '1'

		-- #CARTTMP 담는 액션 실행
		INSERT INTO #CARTTMP 
			( M_ID, SESSION_ID, P_CODE, P_COUNT )
		VALUES
			( @M_ID, @SESSION_ID, @P_CODE_LIST_CUT, @P_COUNT_LIST_CUT )

	END

	/*
		STEP2. TB_ORDER_MASTER_TMP에 들어갈 기본정보 입력
	*/
	DECLARE @ORDER_IDX INT					-- 저장시 자동 부여될 주문번호
	, @MEMBER_ORDER_GBN CHAR(1)
	, @M_NAME VARCHAR(30) = ''
	, @M_GRADE VARCHAR(1) = ''
	, @M_GBN VARCHAR(1) = ''
	, @SENDER_NAME VARCHAR(30) = ''			-- 보낸사람명
	, @SENDER_POST VARCHAR(7) = ''			-- 보낸사람_우편번호
	, @SENDER_ADDR1 VARCHAR(255) = ''       -- 보낸사람_주소
	, @SENDER_ADDR2 VARCHAR(255) = ''       -- 보낸사람_상세주소
	, @SENDER_TEL VARCHAR(20) = ''			-- 보낸사람_TEL
	, @SENDER_HP VARCHAR(20) = ''			-- 보낸사람_HP
	, @SENDER_EMAIL VARCHAR(200) = ''       -- 보낸사람_EMAIL
	, @RECEIVER_NAME VARCHAR(30) = ''		-- 받는사람명
	, @RECEIVER_POST VARCHAR(7) = ''		-- 받는사람_우편번호
	, @RECEIVER_ADDR1 VARCHAR(255) = ''     -- 받는사람_주소1
	, @RECEIVER_ADDR2 VARCHAR(255) = ''     -- 받는사람_주소2
	, @RECEIVER_TEL VARCHAR(20) = ''		-- 받는사람_TEL
	, @RECEIVER_HP VARCHAR(20) = ''			-- 받는사람_HP

	
	IF @M_ID <> ''								/****************************************          회원이면                *************************************/
	BEGIN
		SET @MEMBER_ORDER_GBN = '1'
	
		SELECT @M_NAME = M_NAME
			, @M_GRADE = M_GRADE
			, @M_GBN = M_GBN
			, @SENDER_NAME = M_NAME
			, @SENDER_POST = M_ZIPCODE
			, @SENDER_ADDR1 = M_ADDR1
			, @SENDER_ADDR2 = M_ADDR2
			, @SENDER_TEL = M_PHONE
			, @SENDER_HP = M_MOBILE
			, @SENDER_EMAIL = M_EMAIL
			, @RECEIVER_NAME = M_NAME
			, @RECEIVER_POST = M_ZIPCODE
			, @RECEIVER_ADDR1 = M_ADDR1
			, @RECEIVER_ADDR2 = M_ADDR2
			, @RECEIVER_TEL = M_PHONE
			, @RECEIVER_HP = M_MOBILE

		FROM TB_MEMBER
		WHERE M_ID = @M_ID
	END
	ELSE BEGIN								/****************************************          비회원이면                *************************************/
		SET @MEMBER_ORDER_GBN = '2'
	
	
	END

	INSERT INTO TB_ORDER_MASTER_TMP (
		MEMBER_ORDER_GBN		-- 회원주문여부(1:회원주문 2:비회원주문)
		, M_ID
		, M_NAME
		, M_GRADE
		, M_GBN
		, SESSION_ID
		, SENDER_NAME
		, SENDER_POST
		, SENDER_ADDR1
		, SENDER_ADDR2
		, SENDER_TEL
		, SENDER_HP
		, SENDER_EMAIL
		, RECEIVER_NAME
		, RECEIVER_POST
		, RECEIVER_ADDR1
		, RECEIVER_ADDR2
		, RECEIVER_TEL
		, RECEIVER_HP
	)
	VALUES (
		@MEMBER_ORDER_GBN
		, @M_ID
		, @M_NAME
		, @M_GRADE
		, @M_GBN
		, @SESSION_ID
		, @SENDER_NAME
		, @SENDER_POST
		, @SENDER_ADDR1
		, @SENDER_ADDR2
		, @SENDER_TEL
		, @SENDER_HP
		, @SENDER_EMAIL
		, @RECEIVER_NAME
		, @RECEIVER_POST
		, @RECEIVER_ADDR1
		, @RECEIVER_ADDR2
		, @RECEIVER_TEL
		, @RECEIVER_HP
	)

	SELECT @ORDER_IDX = SCOPE_IDENTITY()


	/*
		STEP3. 넘어온 상품들을 부여된 주문번호로 TB_ORDER_DETAIL_TMP에 저장
	*/
	IF OBJECT_ID('tempdb..#CARTLIST') is not null
	BEGIN
	  DROP TABLE #CARTLIST;
	END

	CREATE TABLE #CARTLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY
		, P_CODE VARCHAR(50) NOT NULL		-- 상품코드   ( TB_PRODUCT_INFO 참조 )
		, P_COUNT INT	DEFAULT 1 NOT NULL	--	상품갯수
		, P_CATE_CODE CHAR(9)
		, C_CATE_CODE CHAR(9)
		, L_CATE_CODE CHAR(9)
		, P_NAME VARCHAR(100)
		, P_SUB_TITLE VARCHAR(200)
		, SELLING_PRICE INT
		, DISCOUNT_RATE INT
		, DISCOUNT_PRICE INT
		, P_POINT INT
		, SOLDOUT_YN VARCHAR(1)
		, MAIN_IMG VARCHAR(100)
		, PROMOTION_TYPE CHAR(2) DEFAULT '99' NOT NULL		-- 프로모션 타입 (99:일반상품, 01:SET, 02:1+1, 03:TIME SALE등 일반할인)
		, CD_PROMOTION_PRODUCT VARCHAR(7)					-- 적용된 프로모션 ID (TB_PROMOTION_BY_PRODUCT테이블 참조)
		, EMP_DISCOUNT INT DEFAULT 1 NOT NULL				-- 임직원할인 대상여부 (0:비대상, 1:대상)
		, EMP_PMO_TOTAL_RATE_OR_MONEY VARCHAR(1)			-- 임직원 할인율 또는 할인금액 구분
		, EMP_PMO_TOTAL_DISCOUNT_RATE INT					-- 임직원 할인율
		, EMP_PMO_TOTAL_DISCOUNT_MONEY	INT					-- 임직원 할인금액
		, EMP_DISCOUNT_AMT INT DEFAULT 0 NOT NULL			-- 임직원 할인받은 금액
		, EMP_DISCOUNT_PRICE INT DEFAULT 0 NOT NULL			-- 임직원할인가 (구매가능한 상품가)

		, ORDER_PRICE INT DEFAULT 0 NOT NULL				-- 구매기준금액 => 상품가(또는 임직원가)에 수량을 곱한 값

		, COUPON_DISCOUNT_AMT INT DEFAULT 0 NOT NULL		-- 쿠폰_할인금액
		, COUPON_DISCOUNT_PRICE INT DEFAULT 0 NOT NULL		-- 쿠폰할인이 적용된 구매가
		, USE_POINT INT DEFAULT 0 NOT NULL					-- 포인트 사용액

		, GRADE_DISCOUNT INT DEFAULT 1 NOT NULL				-- 등급할인 대상여부 (0:비대상, 1:대상)
		, GRADE_PMO_TOTAL_RATE_OR_MONEY VARCHAR(1)			-- 등급 할인율 또는 할인금액 구분
		, GRADE_PMO_TOTAL_DISCOUNT_RATE INT					-- 등급 할인율
		, GRADE_PMO_TOTAL_DISCOUNT_MONEY	INT				-- 등급 할인금액
		, GRADE_DISCOUNT_AMT INT DEFAULT 0 NOT NULL			-- 등급 할인받은 금액

		, ICON_NEW INT DEFAULT 0 NOT NULL					-- NEW아이콘   ( PRODUCT_DETAIL테이블 참조 (0:미적용 1:적용) )
		, ICON_BEST INT DEFAULT 0 NOT NULL					-- BEST아이콘   ( PRODUCT_DETAIL테이블 참조 (0:미적용 1:적용) )
		, ICON_SOLDOUT INT DEFAULT 0 NOT NULL				-- SOLD OUT아이콘   ( PRODUCT_DETAIL테이블 참조 (0:미적용 1:적용) )
		, ICON_CUSTOM INT DEFAULT 0 NOT NULL				-- 사용자지정 아이콘   ( PRODUCT_DETAIL테이블 참조 (0:미적용 1:적용) )
		, ICON_ONEPLUS INT DEFAULT 0 NOT NULL				-- 1+1 아이콘   ( 적용된 프로모션참조 (0:미적용 1:적용) )
		, ICON_SET INT DEFAULT 0 NOT NULL					-- 세트상품 아이콘   ( 적용된 프로모션참조 (0:미적용 1:적용) )
		, ICON_TIME INT DEFAULT 0 NOT NULL					-- 기타프로모션아이콘   ( 적용된 프로모션참조 (0:미적용 1:적용) )
		, ICON_COUPON INT DEFAULT 0 NOT NULL				-- 쿠폰아이콘   
	)
	
	INSERT INTO #CARTLIST
	(
		P_CODE 
		, P_COUNT
		, P_CATE_CODE
		, C_CATE_CODE
		, L_CATE_CODE
		, P_NAME
		, P_SUB_TITLE
		, SELLING_PRICE
		, DISCOUNT_RATE
		, DISCOUNT_PRICE
		, SOLDOUT_YN
		, MAIN_IMG
	)
	SELECT A.P_CODE
	, A.P_COUNT
	, B.P_CATE_CODE
	, B.C_CATE_CODE
	, B.L_CATE_CODE
	, B.P_NAME
	, B.P_SUB_TITLE
	, B.SELLING_PRICE
	, ISNULL(B.DISCOUNT_RATE,0)
	, ISNULL(B.DISCOUNT_PRICE,0)
	, ISNULL(B.SOLDOUT_YN,'N')		-- 품절여부는 N을 기본값으로
	, B.MAIN_IMG
	FROM #CARTTMP A, TB_PRODUCT_INFO B
	WHERE A.P_CODE = B.P_CODE
	AND B.DISPLAY_YN = 'Y'		-- 전시중인 상품만










	DECLARE @SET_ID VARCHAR(7) = ''
		, @SET_CNT INT = 0
		, @SET_ORDER_CNT INT = 0
	DECLARE @SAVE_POINT_VAL NUMERIC(10,3) = 0.02

	IF @MEMBER_ORDER_GBN = '1'				/****************************************          회원이면 START                *************************************/
	BEGIN

		
		SELECT @SAVE_POINT_VAL = CASE WHEN M_GRADE = 'V' THEN 0.05
									  WHEN M_GRADE = 'G' THEN 0.03
									  ELSE 0.02 END
		FROM TB_MEMBER
		WHERE M_ID = @M_ID

		
		/*
			이부분에 프로모션 검색로직을...
				1. SET상품의 조건이 충족되는 상품들 검색후 처리
				3. 1+1상품 검색처리
				4. TIME SALE상품 검색처리
				5. 기획전(따로 검색해야함?)상품 검색처리
				6. 1~5까지 안걸린 상품은 상품테이블의 가격정보를 입력
		
		*/
		-- 1. SET 프로모션이 걸려있는게 있는지 검사

		SELECT TOP 1  @SET_ID = A.CD_PROMOTION_PRODUCT
			, @SET_CNT = ISNULL(A.PMO_ONEONE_MULTIPLE_CNT,2)
		FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		WHERE A.PMO_PRODUCT_CATEGORY = '01'

		IF @SET_ID <> ''
		BEGIN
			SELECT @SET_ORDER_CNT = COUNT(*)
			FROM #CARTLIST A
				INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
					ON A.P_CODE = B.P_CODE
					AND B.CD_PROMOTION_PRODUCT = @SET_ID

			IF @SET_ORDER_CNT >= @SET_CNT
			BEGIN
				UPDATE A
				SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
					, A.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
					, A.DISCOUNT_PRICE = B.RESULT_PRICE
					, A.EMP_DISCOUNT = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
					, A.EMP_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN C.PMO_TOTAL_CATEGORY ELSE C.PMO_TOTAL_RATE_OR_MONEY END
					, A.EMP_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_RATE,0) END
					, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_MONEY,0) END
					, A.GRADE_DISCOUNT = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
					, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN D.PMO_TOTAL_CATEGORY ELSE D.PMO_TOTAL_RATE_OR_MONEY END
					, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_RATE,0) END
					, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_MONEY,0) END
				FROM #CARTLIST A
					INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
						ON A.P_CODE = B.P_CODE
						AND B.CD_PROMOTION_PRODUCT = @SET_ID
					LEFT OUTER JOIN VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL C WITH (NOLOCK)
						ON A.P_CODE = C.P_CODE
						AND C.CD_PROMOTION_PRODUCT = @SET_ID
						AND C.PMO_TOTAL_CATEGORY = '00'		-- 임직원할인폭 조건
						AND C.M_GBN = @M_GBN
						AND C.M_GRADE = @M_GRADE
					LEFT OUTER JOIN VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL D WITH (NOLOCK)
						ON A.P_CODE = D.P_CODE
						AND D.CD_PROMOTION_PRODUCT = @SET_ID
						AND D.PMO_TOTAL_CATEGORY = '03'		-- 등급할인폭 조건
						AND D.M_GBN = @M_GBN
						AND D.M_GRADE = @M_GRADE

			END
		END
		
		-- 2. SET 프로모션외의 다른프로모션이 걸린 상품이 있으면, 걸린 프로모션 적용
		UPDATE A
		SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
			, A.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
			, A.DISCOUNT_PRICE = B.RESULT_PRICE
			, A.EMP_DISCOUNT = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
			, A.EMP_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN C.PMO_TOTAL_CATEGORY ELSE C.PMO_TOTAL_RATE_OR_MONEY END
			, A.EMP_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_RATE,0) END
			, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_MONEY,0) END
			, A.GRADE_DISCOUNT = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
			, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN D.PMO_TOTAL_CATEGORY ELSE D.PMO_TOTAL_RATE_OR_MONEY END
			, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_RATE,0) END
			, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_MONEY,0) END
		FROM #CARTLIST A
			INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
				AND B.PMO_PRODUCT_CATEGORY IN ('02','03')
			LEFT OUTER JOIN VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL C WITH (NOLOCK)
				ON A.P_CODE = C.P_CODE
				AND C.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
				AND C.PMO_TOTAL_CATEGORY = '00'		-- 임직원할인폭 조건
				AND C.M_GBN = @M_GBN
				AND C.M_GRADE = @M_GRADE
			LEFT OUTER JOIN VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL D WITH (NOLOCK)
				ON A.P_CODE = D.P_CODE
				AND D.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
				AND D.PMO_TOTAL_CATEGORY = '03'		-- 등급할인폭 조건
				AND D.M_GBN = @M_GBN
				AND D.M_GRADE = @M_GRADE
		WHERE A.PROMOTION_TYPE = '99'


		-- 프로모션이 안걸린(DISCOUNT_PRICE가 NULL인) 상품의 가격을 상품테이블의 가격으로 셋팅
		-- 프로모션이 걸리지 않은 상품의 등급합인,임직원 할인폭을 조회저장
		UPDATE A
		SET A.DISCOUNT_RATE = ISNULL(B.DISCOUNT_RATE,0)
		, A.DISCOUNT_PRICE = ISNULL(B.DISCOUNT_PRICE,0)
		, A.EMP_DISCOUNT = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
		, A.EMP_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN C.PMO_TOTAL_CATEGORY ELSE C.PMO_TOTAL_RATE_OR_MONEY END
		, A.EMP_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_RATE,0) END
		, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_MONEY,0) END
		, A.GRADE_DISCOUNT = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
		, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN D.PMO_TOTAL_CATEGORY ELSE D.PMO_TOTAL_RATE_OR_MONEY END
		, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_RATE,0) END
		, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_MONEY,0) END
		FROM #CARTLIST A
			LEFT JOIN TB_PRODUCT_INFO B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
			LEFT OUTER JOIN 
				( SELECT C.M_GBN, C.M_GRADE, C.PMO_TOTAL_CATEGORY
						, MAX(C.PMO_TOTAL_RATE_OR_MONEY) AS PMO_TOTAL_RATE_OR_MONEY
						, MAX(C.PMO_TOTAL_DISCOUNT_RATE) AS PMO_TOTAL_DISCOUNT_RATE
						, MAX(C.PMO_TOTAL_DISCOUNT_MONEY) AS PMO_TOTAL_DISCOUNT_MONEY
				  FROM VIEW_PROMOTION_TOTAL_INFO C  WITH (NOLOCK)
				  WHERE C.PMO_TOTAL_CATEGORY = '00'   -- 임직원할인폭 조건
				  GROUP BY C.M_GBN, C.M_GRADE, C.PMO_TOTAL_CATEGORY
				) AS C
				ON C.M_GBN = @M_GBN
				AND C.M_GRADE = @M_GRADE
			LEFT OUTER JOIN 
				( SELECT D.M_GBN, D.M_GRADE, D.PMO_TOTAL_CATEGORY
						, MAX(D.PMO_TOTAL_RATE_OR_MONEY) AS PMO_TOTAL_RATE_OR_MONEY
						, MAX(D.PMO_TOTAL_DISCOUNT_RATE) AS PMO_TOTAL_DISCOUNT_RATE
						, MAX(D.PMO_TOTAL_DISCOUNT_MONEY) AS PMO_TOTAL_DISCOUNT_MONEY
				  FROM VIEW_PROMOTION_TOTAL_INFO D  WITH (NOLOCK)
				  WHERE D.PMO_TOTAL_CATEGORY = '03'   -- 등급할인폭 조건
				  GROUP BY D.M_GBN, D.M_GRADE, D.PMO_TOTAL_CATEGORY
				) AS D
				ON C.M_GBN = @M_GBN
				AND C.M_GRADE = @M_GRADE
		WHERE A.PROMOTION_TYPE = '99'
		--		exec SP_ORDER_STEP1 'test_v099','','RAA00108','1'

		/*
			프로모션 적용끝	
		*/

		-- 안전장치를 위해 할인가격이 0인것은 품절처리
		UPDATE A
		SET A.SOLDOUT_YN = 'Y'
		FROM #CARTLIST A
		WHERE A.DISCOUNT_PRICE < 1		



		-- 임직원의 경우 임직원 할인대상 상품가격 조정
		IF @M_GBN = 'S'
		BEGIN
			UPDATE A
			SET A.EMP_DISCOUNT_AMT = 
					CASE WHEN A.EMP_PMO_TOTAL_RATE_OR_MONEY = 'R' THEN FLOOR(A.DISCOUNT_PRICE / 100.0 * A.EMP_PMO_TOTAL_DISCOUNT_RATE )
					ELSE A.EMP_PMO_TOTAL_DISCOUNT_MONEY END
				, A.EMP_DISCOUNT_PRICE = DISCOUNT_PRICE - 
					CASE WHEN A.EMP_PMO_TOTAL_RATE_OR_MONEY = 'R' THEN FLOOR(A.DISCOUNT_PRICE / 100.0 * A.EMP_PMO_TOTAL_DISCOUNT_RATE )
					ELSE A.EMP_PMO_TOTAL_DISCOUNT_MONEY END
			FROM #CARTLIST A
			WHERE A.EMP_DISCOUNT = 1
			AND A.EMP_PMO_TOTAL_RATE_OR_MONEY IS NOT NULL

			UPDATE A
			SET A.EMP_DISCOUNT_AMT = 0
				, A.EMP_DISCOUNT_PRICE = A.DISCOUNT_PRICE
			FROM #CARTLIST A
			WHERE A.EMP_PMO_TOTAL_RATE_OR_MONEY IS NULL
		END	
		ELSE BEGIN
			UPDATE A
			SET A.EMP_DISCOUNT_AMT = 0
				, A.EMP_DISCOUNT_PRICE = A.DISCOUNT_PRICE
			FROM #CARTLIST A
		END

		UPDATE A
		SET A.ORDER_PRICE = A.EMP_DISCOUNT_PRICE * A.P_COUNT
			, A.COUPON_DISCOUNT_AMT = 0
			, A.COUPON_DISCOUNT_PRICE = A.EMP_DISCOUNT_PRICE
			, A.USE_POINT = 0
		FROM #CARTLIST A

		-- 등급할인대상 상품가격 조정
		UPDATE A
		SET A.GRADE_DISCOUNT_AMT = 
				CASE WHEN A.GRADE_PMO_TOTAL_RATE_OR_MONEY = 'R' THEN ( A.EMP_DISCOUNT_PRICE - FLOOR(A.EMP_DISCOUNT_PRICE / 100.0 * ( 100 - A.GRADE_PMO_TOTAL_DISCOUNT_RATE ) ) ) * A.P_COUNT
				ELSE ( A.GRADE_PMO_TOTAL_DISCOUNT_MONEY * A.P_COUNT ) END
		FROM #CARTLIST A
		WHERE A.GRADE_DISCOUNT = 1
		AND A.GRADE_PMO_TOTAL_RATE_OR_MONEY IS NOT NULL

		UPDATE A
		SET A.GRADE_DISCOUNT_AMT = 0
		FROM #CARTLIST A
		WHERE A.GRADE_PMO_TOTAL_RATE_OR_MONEY IS NULL




		-- 할인율,할인금액을 계산하고, 상품별 주문금액 산정
		-- 적립될 포인트 계산 (일단 3%로 고정)
		UPDATE A
		SET A.DISCOUNT_RATE = 100 - ROUND( A.EMP_DISCOUNT_AMT * 100.0 / A.SELLING_PRICE , 1)
		FROM #CARTLIST A
		WHERE A.SELLING_PRICE > 0

		--UPDATE A
		---- SET A.P_POINT = FLOOR( ( CASE WHEN A.EMP_DISCOUNT_PRICE = 0 THEN A.DISCOUNT_PRICE ELSE A.EMP_DISCOUNT_PRICE END - A.GRADE_DISCOUNT_PRICE )  * A.P_COUNT * 0.03 )
		--SET A.P_POINT = FLOOR( A.GRADE_DISCOUNT_PRICE * A.P_COUNT * 0.03 )
		--FROM #CARTLIST A
		--WHERE A.SELLING_PRICE > 0




	END				/****************************************          회원이면 END                *************************************/
	ELSE BEGIN			/****************************************          비회원이면                *************************************/

		/*
			이부분에 프로모션 검색로직을...
				1. SET상품의 조건이 충족되는 상품들 검색후 처리
				3. 1+1상품 검색처리
				4. TIME SALE상품 검색처리
				5. 기획전(따로 검색해야함?)상품 검색처리
				6. 1~5까지 안걸린 상품은 상품테이블의 가격정보를 입력
		
		*/
		-- 1. SET 프로모션이 걸려있는게 있는지 검사

		SELECT TOP 1  @SET_ID = A.CD_PROMOTION_PRODUCT
			, @SET_CNT = ISNULL(A.PMO_ONEONE_MULTIPLE_CNT,2)
		FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		WHERE A.PMO_PRODUCT_CATEGORY = '01'

		IF @SET_ID <> ''
		BEGIN
			SELECT @SET_ORDER_CNT = COUNT(*)
			FROM #CARTLIST A
				INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
					ON A.P_CODE = B.P_CODE
					AND B.CD_PROMOTION_PRODUCT = @SET_ID

			IF @SET_ORDER_CNT >= @SET_CNT
			BEGIN
				UPDATE A
				SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
					, A.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
					, A.DISCOUNT_PRICE = B.RESULT_PRICE
					, A.EMP_DISCOUNT = 0
					, A.EMP_PMO_TOTAL_RATE_OR_MONEY = NULL
					, A.EMP_PMO_TOTAL_DISCOUNT_RATE = 0
					, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = 0
					, A.GRADE_DISCOUNT = 0
					, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = NULL
					, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = 0
					, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = 0
				FROM #CARTLIST A
					INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
						ON A.P_CODE = B.P_CODE
						AND B.CD_PROMOTION_PRODUCT = @SET_ID

			END
		END
		
		-- 2. SET 프로모션외의 다른프로모션이 걸린 상품이 있으면, 걸린 프로모션 적용
		UPDATE A
		SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
			, A.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
			, A.DISCOUNT_PRICE = B.RESULT_PRICE
			, A.EMP_DISCOUNT = 0
			, A.EMP_PMO_TOTAL_RATE_OR_MONEY = NULL
			, A.EMP_PMO_TOTAL_DISCOUNT_RATE = 0
			, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = 0
			, A.GRADE_DISCOUNT = 0
			, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = NULL
			, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = 0
			, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = 0
		FROM #CARTLIST A
			INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
				AND B.PMO_PRODUCT_CATEGORY IN ('02','03')
		WHERE A.PROMOTION_TYPE = '99'


		-- 프로모션이 안걸린(DISCOUNT_PRICE가 NULL인) 상품의 가격을 상품테이블의 가격으로 셋팅
		-- 프로모션이 걸리지 않은 상품의 등급합인,임직원 할인폭을 조회저장
		UPDATE A
		SET A.DISCOUNT_RATE = ISNULL(B.DISCOUNT_RATE,0)
		, A.DISCOUNT_PRICE = ISNULL(B.DISCOUNT_PRICE,0)
		, A.EMP_DISCOUNT = 0
		, A.EMP_PMO_TOTAL_RATE_OR_MONEY = NULL
		, A.EMP_PMO_TOTAL_DISCOUNT_RATE = 0
		, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = 0
		, A.GRADE_DISCOUNT = 0
		, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = NULL
		, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = 0
		, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = 0
		FROM #CARTLIST A
			LEFT JOIN TB_PRODUCT_INFO B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
		WHERE A.PROMOTION_TYPE = '99'
		

		/*
			프로모션 적용끝	
		*/

		-- 안전장치를 위해 할인가격이 0인것은 품절처리
		UPDATE A
		SET A.SOLDOUT_YN = 'Y'
		FROM #CARTLIST A
		WHERE A.DISCOUNT_PRICE < 1


		UPDATE A
		SET A.EMP_DISCOUNT = 0
			, A.EMP_DISCOUNT_AMT = 0
			, A.EMP_DISCOUNT_PRICE = A.DISCOUNT_PRICE
			, A.COUPON_DISCOUNT_AMT = 0
			, A.COUPON_DISCOUNT_PRICE = A.DISCOUNT_PRICE
			, A.USE_POINT = 0
			, A.GRADE_DISCOUNT = 0
			, A.GRADE_DISCOUNT_AMT = 0
			, A.ORDER_PRICE = A.DISCOUNT_PRICE * A.P_COUNT
		FROM #CARTLIST A
		WHERE A.SELLING_PRICE > 0
	
	END			/****************************************          비회원이면                *************************************/



	-- 아이콘 적용
	UPDATE A
	SET A.ICON_NEW = CASE WHEN CHARINDEX('N', B.ICON_YN) > 0 THEN 1 ELSE 0 END
		, A.ICON_BEST = CASE WHEN CHARINDEX('B', B.ICON_YN) > 0 THEN 1 ELSE 0 END
		, A.ICON_SOLDOUT = CASE WHEN CHARINDEX('S', B.ICON_YN) > 0 THEN 1 WHEN A.SOLDOUT_YN = 'Y' THEN 1 ELSE 0 END
		, A.ICON_CUSTOM = CASE WHEN CHARINDEX('C', B.ICON_YN) > 0 THEN 1 ELSE 0 END
		, A.ICON_SET = CASE WHEN A.PROMOTION_TYPE = '01' THEN 1 ELSE 0 END
		, A.ICON_ONEPLUS = CASE WHEN A.PROMOTION_TYPE = '02' THEN 1 ELSE 0 END
		, A.ICON_TIME = CASE WHEN A.PROMOTION_TYPE = '03' THEN 1 ELSE 0 END
		, A.ICON_COUPON = CASE WHEN ISNULL(E.P_CODE, '') <> '' THEN 1 ELSE 0 END	--쿠폰
	FROM #CARTLIST A
		INNER JOIN TB_PRODUCT_INFO B
			ON A.P_CODE = B.P_CODE
		LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST E 
			ON A.P_CODE = E.P_CODE 


	-- 정렬순서는 프로모션 걸린게 우선, 나머지는 상품명으로해서 TB_ORDER_DETAIL_TMP에 저장
	INSERT INTO TB_ORDER_DETAIL_TMP (
		ORDER_IDX
		, P_CODE
		, P_COUNT
		, P_CATE_CODE
		, P_CATE_NAME
		, C_CATE_CODE
		, C_CATE_NAME
		, L_CATE_CODE
		, L_CATE_NAME
		, P_NAME
		, P_SUB_TITLE
		, P_IMG1_S
		
		, ICON_NEW
		, ICON_BEST
		, ICON_SOLDOUT
		, ICON_CUSTOM
		, ICON_ONEPLUS
		, ICON_SET
		, ICON_TIME
		, ICON_COUPON
		
		, SELLING_PRICE
		, DISCOUNT_RATE
		, DISCOUNT_PRICE

		, PROMOTION_TYPE
		, CD_PROMOTION_PRODUCT
		, EMP_DISCOUNT
		, EMP_PMO_TOTAL_RATE_OR_MONEY
		, EMP_PMO_TOTAL_DISCOUNT_RATE
		, EMP_PMO_TOTAL_DISCOUNT_MONEY
		, EMP_DISCOUNT_AMT
		, EMP_DISCOUNT_PRICE

		, ORDER_PRICE

		, COUPON_DISCOUNT_AMT
		, COUPON_DISCOUNT_PRICE
		, USE_POINT

		, GRADE_DISCOUNT
		, GRADE_PMO_TOTAL_RATE_OR_MONEY
		, GRADE_PMO_TOTAL_DISCOUNT_RATE
		, GRADE_PMO_TOTAL_DISCOUNT_MONEY
		, GRADE_DISCOUNT_AMT

		, POINT_ACCML
		, REAL_PAY_PRICE
	)
	SELECT 
		@ORDER_IDX
		, A.P_CODE
		, A.P_COUNT
		, A.P_CATE_CODE
		, CASE WHEN PCATE.DEPTH3_NAME IS NULL THEN PCATE.DEPTH2_NAME ELSE PCATE.DEPTH3_NAME END
		, A.C_CATE_CODE
		, CASE WHEN CCATE.DEPTH3_NAME IS NULL THEN CCATE.DEPTH2_NAME ELSE CCATE.DEPTH3_NAME END
		, A.L_CATE_CODE
		, CASE WHEN LCATE.DEPTH3_NAME IS NULL THEN LCATE.DEPTH2_NAME ELSE LCATE.DEPTH3_NAME END
		, A.P_NAME
		, A.P_SUB_TITLE
		, A.MAIN_IMG

		, A.ICON_NEW
		, A.ICON_BEST
		, A.ICON_SOLDOUT
		, A.ICON_CUSTOM
		, A.ICON_ONEPLUS
		, A.ICON_SET
		, A.ICON_TIME
		, A.ICON_COUPON

		, A.SELLING_PRICE
		, A.DISCOUNT_RATE
		, A.DISCOUNT_PRICE

		, A.PROMOTION_TYPE
		, A.CD_PROMOTION_PRODUCT
		, A.EMP_DISCOUNT
		, A.EMP_PMO_TOTAL_RATE_OR_MONEY
		, ISNULL(A.EMP_PMO_TOTAL_DISCOUNT_RATE,0)
		, ISNULL(A.EMP_PMO_TOTAL_DISCOUNT_MONEY,0)
		, A.EMP_DISCOUNT_AMT
		, A.EMP_DISCOUNT_PRICE

		, A.ORDER_PRICE

		, 0
		, A.COUPON_DISCOUNT_PRICE
		, 0

		, A.GRADE_DISCOUNT
		, A.GRADE_PMO_TOTAL_RATE_OR_MONEY
		, ISNULL(A.GRADE_PMO_TOTAL_DISCOUNT_RATE,0)
		, ISNULL(A.GRADE_PMO_TOTAL_DISCOUNT_MONEY,0)
		, A.GRADE_DISCOUNT_AMT

		, FLOOR( ( ( A.EMP_DISCOUNT_PRICE * A.P_COUNT ) - A.COUPON_DISCOUNT_AMT - A.USE_POINT - A.GRADE_DISCOUNT_AMT ) * @SAVE_POINT_VAL )
--		, ( CASE WHEN A.EMP_DISCOUNT_PRICE = 0 THEN A.DISCOUNT_PRICE ELSE A.EMP_DISCOUNT_PRICE END - A.GRADE_DISCOUNT_PRICE )  * A.P_COUNT
		, ( A.ORDER_PRICE - A.COUPON_DISCOUNT_AMT - A.USE_POINT - A.GRADE_DISCOUNT_AMT )
	FROM #CARTLIST A
		LEFT OUTER JOIN TB_CATEGORY PCATE
			ON PCATE.CATE_CODE = A.P_CATE_CODE
		LEFT OUTER JOIN TB_CATEGORY CCATE
			ON CCATE.CATE_CODE = A.C_CATE_CODE
		LEFT OUTER JOIN TB_CATEGORY LCATE
			ON LCATE.CATE_CODE = A.L_CATE_CODE
	WHERE SOLDOUT_YN = 'N'
	AND A.SELLING_PRICE > 0
	ORDER BY CASE WHEN PROMOTION_TYPE = '01' THEN 1 ELSE 2 END ASC, A.SEQ ASC 


 --SELECT * FROM #CARTLIST A


-- SELECT * FROM #CARTLIST

	/*
		STEP4. 상품의 가격들을 SUM하여 TB_ORDER_MASTER_TMP에 업데이트
	*/
	;
	WITH SRC AS (
	SELECT MAX(ORDER_IDX) AS ORDER_IDX
		, SUM(SELLING_PRICE) AS SELLING_PRICE
		, SUM(DISCOUNT_PRICE * P_COUNT) AS DISCOUNT_PRICE		
		, SUM(ORDER_PRICE) AS ORDER_PRICE
		, SUM(COUPON_DISCOUNT_AMT) AS COUPON_DISCOUNT_AMT
		, SUM(USE_POINT) AS USE_POINT
		, SUM(GRADE_DISCOUNT_AMT) AS GRADE_DISCOUNT_AMT
		, SUM(EMP_DISCOUNT_AMT  * P_COUNT) AS EMP_DISCOUNT_AMT
		, SUM(REAL_PAY_PRICE) AS REAL_PAY_PRICE
		, SUM(POINT_ACCML) AS POINT_ACCML
	FROM TB_ORDER_DETAIL_TMP
	WHERE ORDER_IDX = @ORDER_IDX
	)
--	SELECT * FROM TB_ORDER_MASTER_TMP
	UPDATE A
	SET A.TOTAL_ORDER_PRICE = SRC.DISCOUNT_PRICE
		, A.COUPON_DISCOUNT_AMT = SRC.COUPON_DISCOUNT_AMT
		, A.GRADE_DISCOUNT_AMT = SRC.GRADE_DISCOUNT_AMT
		, A.POINT_USE_PRICE = SRC.USE_POINT
		, A.EMP_DISCOUNT_AMT = SRC.EMP_DISCOUNT_AMT
		, A.DISCOUNT_AMT = SRC.COUPON_DISCOUNT_AMT + SRC.GRADE_DISCOUNT_AMT + SRC.EMP_DISCOUNT_AMT + SRC.USE_POINT
		, A.TOTAL_PAY_PRICE = SRC.REAL_PAY_PRICE
		, A.ACCML_POINT = SRC.POINT_ACCML
	FROM TB_ORDER_MASTER_TMP A, SRC
	WHERE A.ORDER_IDX = SRC.ORDER_IDX
	AND A.ORDER_IDX = @ORDER_IDX

	UPDATE A
	SET A.TRANS_PRICE = CASE WHEN A.TOTAL_PAY_PRICE - A.TRANS_PRICE >= 30000 THEN 0 WHEN ISNULL(A.TRANS_COUPON,0) > 0 THEN 0 ELSE 2500 END
		, A.TOTAL_PAY_PRICE = A.TOTAL_PAY_PRICE + CASE WHEN A.TOTAL_PAY_PRICE - A.TRANS_PRICE >= 30000 THEN 0 WHEN ISNULL(A.TRANS_COUPON,0) > 0 THEN 0 ELSE 2500 END
	FROM TB_ORDER_MASTER_TMP A
	WHERE A.ORDER_IDX = @ORDER_IDX


	-- 생성된 TB_ORDER_MASTER_TMP테이블의 @ORDER_IDX 리턴
	SELECT @ORDER_IDX AS ORDER_IDX

/*
  SELECT * FROM TB_ORDER_MASTER_TMP

  SELECT * FROM TB_ORDER_DETAIL_TMP

		TRUNCATE TABLE TB_ORDER_MASTER_TMP
		TRUNCATE TABLE TB_ORDER_DETAIL_TMP
*/



/*


SELECT * FROM TB_MEMBER 
WHERE M_ID = @M_ID

SELECT *
FROM TB_CART
WHERE M_ID = @M_ID

SELECT * FROM TB_PRODUCT_INFO

*/


	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_CANCEL_PART_ORDER]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-06
-- Description:	주문시 부분 취소
-- ussage: exec SP_POINT_CANCEL_PART_ORDER '회원아이디','포인트','주문코드','주문상세일련번호','반환값','반환메세지'
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_CANCEL_PART_ORDER]
	 @M_ID	varchar(13) = NULL -- 회원아이디
	,@POINT INT = NULL --취소되어 반환되어 재적립하는 포인트
	,@ORDER_CODE VARCHAR(20) = NULL -- 주문코드
	,@ORDER_DETAIL_IDX INT = NULL -- 주문상세일련번호
	,@P_NAME VARCHAR(100) = NULL -- 상품이름
	,@RET_NUM VARCHAR OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) OUTPUT -- 반환메세지
AS
BEGIN

	SET NOCOUNT ON;
	
	DECLARE @CODE VARCHAR(3) = 'S06';
	
	EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, '주문시 부분 취소 시작', @ORDER_CODE, @ORDER_DETAIL_IDX;
	
	/**
		회원 확인
	*/
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(1);
	END
	
	/**
		적립포인트 체크
	*/
	IF @POINT <= 0 OR @POINT IS NULL
	BEGIN 
		SET @RET_NUM = '3';
		SET @RET_MESSAGE = '적립포인트가 유효하지 않습니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(3);
	END
	
	
	/**
	주문과 관련 최근 포인트 코드 체크


	주문시전체취소	: S07
	주문시부분취소 : S06
	주문확정후포인트적립 : S00
	구매확정 후 취소시 구매시 사용했던 포인트 재적립 : S08
	구매확정 후 취소시 적립했던 포인트 강제 수거 : U02
	*/
		DECLARE @LAST_CODE_IN_ORDER VARCHAR(3);

		SELECT TOP 1 @LAST_CODE_IN_ORDER=CODE FROM 
		(
			SELECT 
					SAVE_CODE AS CODE
					,SAVE_POINT AS POINT
					,SAVE_SUM_POINT AS SUM_POINT
					,INS_DATE
					,ORDER_CODE
					,ORDER_DETAIL_IDX
				FROM TB_POINT_SAVE AS PS WITH(NOLOCK)
			WHERE M_ID=@M_ID and SAVE_CODE IN ('S00','S06','S07', 'S08' ) AND ORDER_CODE=@ORDER_CODE AND ORDER_DETAIL_IDX=@ORDER_DETAIL_IDX
			UNION ALL
			SELECT 
					USE_CODE AS CODE
					,USE_POINT
					,SAVE_SUM_POINT
					,INS_DATE
					,ORDER_CODE
					,ORDER_DETAIL_IDX
				FROM TB_POINT_USE WITH(NOLOCK)	
			WHERE M_ID=@M_ID AND USE_CODE IN ('U02' ) AND ORDER_CODE=@ORDER_CODE AND ORDER_DETAIL_IDX=@ORDER_DETAIL_IDX
			) AS A
		ORDER BY INS_DATE DESC
		
	IF @LAST_CODE_IN_ORDER = @CODE
	BEGIN 
		SET @RET_NUM = '4';
		SET @RET_MESSAGE = '포인트 변경 요청이 주문과 관련된 최근 포인트 상태값과 동일합니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(4);	
	END 
	--//주문과 관련 최근 포인트 코드 체크
	
	
	/**
		현재 총 누적 적립금
	*/
	DECLARE @TOTAL_MY_SAVE_POINT INT;
	exec @TOTAL_MY_SAVE_POINT = SP_POINT_SAVE_TOTAL @M_ID;

	/**
		현재 총 누적 적립금 증가 및 갱신
	*/
	SET @TOTAL_MY_SAVE_POINT = @TOTAL_MY_SAVE_POINT + @POINT;
	
	
	BEGIN TRY
	
		/**
			적립 테이블에 추가
		*/
		INSERT INTO TB_POINT_SAVE 
		(M_ID,SAVE_POINT,SAVE_SUM_POINT,SAVE_CODE,EXPIRE_YN,ORDER_CODE,ORDER_DETAIL_IDX,P_NAME ) 
		VALUES 
		(@M_ID,@POINT,@TOTAL_MY_SAVE_POINT, @CODE,'N',@ORDER_CODE,@ORDER_DETAIL_IDX,@P_NAME );
		
		/**
			회원테이블의 마이 포인트 갱신
		*/
		EXEC SP_POINT_MEMBER_UPDATE @M_ID, @TOTAL_MY_SAVE_POINT;

	END TRY
	BEGIN CATCH

		PRINT ERROR_MESSAGE();
		SET @RET_NUM = '2';
		SET @RET_MESSAGE = ERROR_MESSAGE();
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(2);	
	END CATCH

	
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
	EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
	RETURN(0);
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_CANCEL_ALL_ORDER]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-08
-- Description:	주문시 전체 취소
-- ussage: exec SP_POINT_CANCEL_ALL_ORDER '회원아이디','포인트','추가사유','주문코드','리뷰번호'
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_CANCEL_ALL_ORDER]
 @M_ID	varchar(13) = NULL -- 회원아이디
,@POINT INT = NULL --취소되어 반환되는 포인
,@ORDER_CODE VARCHAR(20) = NULL -- 주문 코드

,@RET_NUM VARCHAR OUTPUT -- 반환값
,@RET_MESSAGE VARCHAR(100) OUTPUT -- 반환 메세지
AS
BEGIN

	SET NOCOUNT ON;
	
	DECLARE @CODE VARCHAR(3) = 'S07';
	
	EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, '주문시 전체 취소 시작', @ORDER_CODE, NULL;
	
	/**
		회원 확인
	*/
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, NULL;
		RETURN(1);
	END
	
	/**
		적립포인트 체크
	*/
	IF @POINT <= 0 OR @POINT IS NULL
	BEGIN 
		SET @RET_NUM = '3';
		SET @RET_MESSAGE = '적립포인트가 유효하지 않습니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, NULL;
		RETURN(3);
	END
	
	/**
	주문과 관련 최근 포인트 코드 체크


	주문시전체취소	: S07
	주문시부분취소 : S06
	주문확정후포인트적립 : S00
	구매확정 후 취소시 구매시 사용했던 포인트 재적립 : S08
	구매확정 후 취소시 적립했던 포인트 강제 수거 : U02
	*/
		DECLARE @LAST_CODE_IN_ORDER VARCHAR(3);

		SELECT TOP 1 @LAST_CODE_IN_ORDER=CODE FROM 
		(
			SELECT 
					SAVE_CODE AS CODE
					,SAVE_POINT AS POINT
					,SAVE_SUM_POINT AS SUM_POINT
					,INS_DATE
					,ORDER_CODE
					,ORDER_DETAIL_IDX
				FROM TB_POINT_SAVE AS PS WITH(NOLOCK)
			WHERE M_ID=@M_ID and SAVE_CODE IN ('S00','S06','S07', 'S08' ) AND ORDER_CODE=@ORDER_CODE
			UNION ALL
			SELECT 
					USE_CODE AS CODE
					,USE_POINT
					,SAVE_SUM_POINT
					,INS_DATE
					,ORDER_CODE
					,ORDER_DETAIL_IDX
				FROM TB_POINT_USE WITH(NOLOCK)	
			WHERE M_ID=@M_ID AND USE_CODE IN ('U02' ) AND ORDER_CODE=@ORDER_CODE
			) AS A
		ORDER BY INS_DATE DESC
		
	IF @LAST_CODE_IN_ORDER = @CODE
	BEGIN 
		SET @RET_NUM = '4';
		SET @RET_MESSAGE = '포인트 변경 요청이 주문과 관련된 최근 포인트 상태값과 동일합니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, NULL;
		RETURN(4);	
	END 
	--//주문과 관련 최근 포인트 코드 체크

	
	/**
		현재 총 누적 적립금
	*/
	DECLARE @TOTAL_MY_SAVE_POINT INT;
	exec @TOTAL_MY_SAVE_POINT = SP_POINT_SAVE_TOTAL @M_ID;

	/**
		현재 총 누적 적립금 증가 및 갱신
	*/
	SET @TOTAL_MY_SAVE_POINT = @TOTAL_MY_SAVE_POINT + @POINT;

	BEGIN TRY	
		/**
			적립 테이블에 추가
		*/
		INSERT INTO TB_POINT_SAVE 
		(M_ID,SAVE_POINT,SAVE_SUM_POINT,SAVE_CODE,EXPIRE_YN,ORDER_CODE ) 
		VALUES 
		(@M_ID,@POINT,@TOTAL_MY_SAVE_POINT, @CODE,'N',@ORDER_CODE );
		
		/**
			회원테이블의 마이 포인트 갱신
		*/
		EXEC SP_POINT_MEMBER_UPDATE @M_ID, @TOTAL_MY_SAVE_POINT;

	END TRY
	BEGIN CATCH

		PRINT ERROR_MESSAGE();
		SET @RET_NUM = '2';
		SET @RET_MESSAGE = ERROR_MESSAGE();
		
		EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, NULL;
		
		RETURN(2);	
	END CATCH

	
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
	EXEC SP_POINT_LOG @CODE, @M_ID, @POINT, @RET_MESSAGE, @ORDER_CODE, NULL;
	RETURN(0);
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_STEP2_TRANSCOUPON_APPLY]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_STEP2_TRANSCOUPON_APPLY
[주문페이지] 주문에 배송비쿠폰 적용

파라미터 설명
@M_ID	VARCHAR(13)			-- 회원ID
@ORDER_IDX	INT				-- 쿠폰을 적용할 주문번호
@IDX_COUPON_NUMBER	INT		-- 적용할 배송비 쿠폰번호 ( 0이 전달되면 기존에 적용된 쿠폰할인제거)


SELECT * FROM TB_ORDER_MASTER_TMP
SELECT * FROM TB_ORDER_DETAIL_TMP

exec SP_ORDER_STEP2_TRANSCOUPON_APPLY 'test_b1s',1,100029528
exec SP_ORDER_STEP2_TRANSCOUPON_APPLY 'test_b1s',1,0

exec SP_ORDER_STEP2_COUPON_SEARCH 'test_b1s','1111114','M'
exec SP_ORDER_STEP2_COUPON_SEARCH 'test_b1s','1111111','M'


DECLARE @ORDER_IDX INT = 1
SELECT * FROM TB_ORDER_MASTER_TMP WHERE ORDER_IDX = @ORDER_IDX
SELECT * FROM TB_ORDER_DETAIL_TMP WHERE ORDER_IDX = @ORDER_IDX

*/
CREATE PROCEDURE [dbo].[SP_ORDER_STEP2_TRANSCOUPON_APPLY]
@M_ID	VARCHAR(13)			-- 회원ID
,@ORDER_IDX	INT				-- 쿠폰을 적용할 주문번호
,@IDX_COUPON_NUMBER	INT		-- 적용할 배송비 쿠폰번호
AS
BEGIN
	SET NOCOUNT ON


	IF @IDX_COUPON_NUMBER > 0
	BEGIN
		-- 전달된 쿠폰이 실제 존재하는지 검사
		DECLARE @IDX_COUPON_NUMBER_RE INT = 0
		
		SELECT TOP 1 @IDX_COUPON_NUMBER_RE = ISNULL(A.IDX_COUPON_NUMBER,0)
		FROM VIEW_USABLE_COUPON_LIST A WITH (NOLOCK)
		WHERE A.M_ID = @M_ID
		AND A.IDX_COUPON_NUMBER = @IDX_COUPON_NUMBER
		AND A.COUPON_GBN = 'S'
		AND A.USE_STATUS  = 5
		
		IF @IDX_COUPON_NUMBER_RE = 0
		BEGIN
			-- PRINT '쿠폰없음'
			RETURN
		END

		UPDATE A
		SET TRANS_COUPON = @IDX_COUPON_NUMBER
		FROM TB_ORDER_MASTER_TMP A
		WHERE A.ORDER_IDX = @ORDER_IDX
	END
	ELSE BEGIN
		UPDATE A
		SET TRANS_COUPON = NULL
		FROM TB_ORDER_MASTER_TMP A
		WHERE A.ORDER_IDX = @ORDER_IDX
	END

	/*
		상품의 가격들을 SUM하여 TB_ORDER_MASTER_TMP에 업데이트
	*/
	;
	WITH SRC AS (
	SELECT MAX(ORDER_IDX) AS ORDER_IDX
		, SUM(SELLING_PRICE) AS SELLING_PRICE
		, SUM(DISCOUNT_PRICE * P_COUNT) AS DISCOUNT_PRICE		
		, SUM(ORDER_PRICE) AS ORDER_PRICE
		, SUM(COUPON_DISCOUNT_AMT) AS COUPON_DISCOUNT_AMT
		, SUM(USE_POINT) AS USE_POINT
		, SUM(GRADE_DISCOUNT_AMT) AS GRADE_DISCOUNT_AMT
		, SUM(EMP_DISCOUNT_AMT) AS EMP_DISCOUNT_AMT
		, SUM(REAL_PAY_PRICE) AS REAL_PAY_PRICE
		, SUM(POINT_ACCML) AS POINT_ACCML
	FROM TB_ORDER_DETAIL_TMP
	WHERE ORDER_IDX = @ORDER_IDX
	)
--	SELECT * FROM TB_ORDER_MASTER_TMP
	UPDATE A
	SET A.TOTAL_ORDER_PRICE = SRC.DISCOUNT_PRICE
		, A.COUPON_DISCOUNT_AMT = SRC.COUPON_DISCOUNT_AMT
		, A.GRADE_DISCOUNT_AMT = SRC.GRADE_DISCOUNT_AMT
		, A.POINT_USE_PRICE = SRC.USE_POINT
		, A.EMP_DISCOUNT_AMT = SRC.EMP_DISCOUNT_AMT
		, A.DISCOUNT_AMT = SRC.COUPON_DISCOUNT_AMT + SRC.GRADE_DISCOUNT_AMT + SRC.EMP_DISCOUNT_AMT + SRC.USE_POINT
		, A.TOTAL_PAY_PRICE = SRC.REAL_PAY_PRICE
		, A.ACCML_POINT = SRC.POINT_ACCML
	FROM TB_ORDER_MASTER_TMP A, SRC
	WHERE A.ORDER_IDX = SRC.ORDER_IDX
	AND A.ORDER_IDX = @ORDER_IDX

	UPDATE A
	SET A.TRANS_PRICE = CASE WHEN A.TOTAL_PAY_PRICE >= 30000 THEN 0 WHEN ISNULL(A.TRANS_COUPON,0) > 0 THEN 0 ELSE 2500 END
		, A.TOTAL_PAY_PRICE = A.TOTAL_PAY_PRICE + CASE WHEN A.TOTAL_PAY_PRICE >= 30000 THEN 0 WHEN ISNULL(A.TRANS_COUPON,0) > 0 THEN 0 ELSE 2500 END
	FROM TB_ORDER_MASTER_TMP A



/*
SELECT	
	COUPON_DISCOUNT_AMT, GRADE_PMO_TOTAL_DISCOUNT_RATE
	,FLOOR(A.COUPON_DISCOUNT_AMT / 100.0 * ( 100 - A.GRADE_PMO_TOTAL_DISCOUNT_RATE ) ),
			CASE WHEN A.GRADE_PMO_TOTAL_RATE_OR_MONEY = 'R' THEN ( A.COUPON_DISCOUNT_AMT  - FLOOR(A.COUPON_DISCOUNT_AMT / 100.0 * ( 100 - A.GRADE_PMO_TOTAL_DISCOUNT_RATE ) ) ) * A.P_COUNT
			ELSE ( A.GRADE_PMO_TOTAL_DISCOUNT_MONEY * A.P_COUNT ) END
	FROM TB_ORDER_DETAIL_TMP A
	WHERE A.ORDER_IDX = 1
	
exec SP_ORDER_STEP2_COUPON_APPLY 'test_b1s',5,100009089
exec SP_ORDER_STEP2_COUPON_APPLY 'test_b1s',2,100019360


DECLARE @ORDER_IDX INT = 2
SELECT * FROM TB_ORDER_MASTER_TMP WHERE ORDER_IDX = @ORDER_IDX
SELECT * FROM TB_ORDER_DETAIL_TMP WHERE ORDER_IDX = @ORDER_IDX

*/

	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_USE_FOR_EXPIRE]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-06-26
-- Description:	소멸용 포인트 사용
-- ussage: exec SP_POINT_USE_FOR_EXPIRE '회원아이디','제한시간','에러번호','에러메세지'
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_USE_FOR_EXPIRE]
	@M_ID varchar(13) = NULL -- 회원아이디
	,@EXPRIRE_LIMIT_SEC INT
	
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	
	BEGIN TRAN;
	
	BEGIN TRY
		
		DECLARE @CODE VARCHAR(3) = 'U03';	
		DECLARE @EXPIRE_TOTAL_POINT INT;--계정별 총 소멸 포인트
		
		/**
			소멸한 포인트 합산	
		*/
		SELECT @EXPIRE_TOTAL_POINT = SUM(SAVE_POINT + SAVE_OFFSET_POINT)
			FROM TB_POINT_SAVE  WITH (NOLOCK)
		WHERE M_ID=@M_ID 
			AND EXPIRE_YN='N'
			AND DATEDIFF( SS, INS_DATE, getdate())  > @EXPRIRE_LIMIT_SEC 
			AND SAVE_POINT+SAVE_OFFSET_POINT > 0;		
		
			
		/**
			합산한 포인트 유효할 경우
		*/
		IF @EXPIRE_TOTAL_POINT IS NOT NULL AND @EXPIRE_TOTAL_POINT > 0
		BEGIN

			/**
				사용 포인트 키발행
			*/
			DECLARE @CURRENT_USE_IDX INT; --현재 사용 포인트 IDX
			

			INSERT INTO TB_POINT_USE 
				(M_ID,USE_POINT,USE_CODE,EXPIRE_YN) 
			VALUES 
				(@M_ID, @EXPIRE_TOTAL_POINT,@CODE,'Y');
			
			SET @CURRENT_USE_IDX = SCOPE_IDENTITY();
			

			/**
				소멸할 포인트 ROW 추출
			*/

			DECLARE @Temp TABLE(
				SEQ INT IDENTITY(1,1) PRIMARY KEY
				,IDX INT
				,SAVE_POINT INT
				,SAVE_OFFSET_POINT INT
			);
			
			INSERT INTO @Temp (
				IDX, 
				SAVE_POINT,
				SAVE_OFFSET_POINT
			)SELECT IDX, 
					SAVE_POINT,
					SAVE_OFFSET_POINT
			FROM TB_POINT_SAVE WITH (NOLOCK)
			WHERE M_ID=@M_ID 
				AND EXPIRE_YN='N' 
				AND DATEDIFF( SS, INS_DATE, getdate())  > @EXPRIRE_LIMIT_SEC
				AND (SAVE_POINT + SAVE_OFFSET_POINT > 0)
			ORDER BY INS_DATE ASC;
			
			/**
			
				
			*/
			DECLARE @TOTAL INT = @@ROWCOUNT;
			DECLARE @CNT INT = 1;

			WHILE  @CNT <= @TOTAL
			BEGIN 
			
				DECLARE @CURRENT_SAVE_IDX INT; --현재 적립 IDX
				DECLARE @CURRENT_SAVE_POINT INT; --현재 적립포인트
				DECLARE @CURRENT_SAVE_OFFSET_POINT INT; --현재 차감포인트
				
				DECLARE @THIS_EXPIRE_POINT INT -- 소멸포인트
				
				
				/**
					
				*/
				SELECT 
						@CURRENT_SAVE_IDX = IDX,
						@CURRENT_SAVE_POINT = SAVE_POINT,
						@CURRENT_SAVE_OFFSET_POINT = SAVE_OFFSET_POINT
				FROM @Temp 
				WHERE SEQ=@CNT;
				
				SET @THIS_EXPIRE_POINT = @CURRENT_SAVE_POINT + @CURRENT_SAVE_OFFSET_POINT;

				
				/**
				
					차감 내역 추가
				*/
				INSERT INTO TB_POINT_SAVE_BY_USE
				(
					M_ID, 
					SAVE_POINT_IDX, 
					USE_POINT_IDX, 
					OFFSET_POINT
				) 
				VALUES 
				(
					@M_ID,
					@CURRENT_SAVE_IDX, 
					@CURRENT_USE_IDX, 
					@THIS_EXPIRE_POINT
				);
		
				/**
					적립 테이블의 SAVE_OFFSET_POINT 값 갱신
				*/
				UPDATE TB_POINT_SAVE 
				SET SAVE_OFFSET_POINT=-@CURRENT_SAVE_POINT, 
					EXPIRE_YN='Y'
				WHERE IDX = @CURRENT_SAVE_IDX;


				SET @CNT = @CNT + 1;
			END	 -- WHILE
			

			DECLARE @TOTAL_MY_SAVE_POINT INT;
			EXEC @TOTAL_MY_SAVE_POINT = SP_POINT_SAVE_TOTAL @M_ID;
			
			UPDATE TB_POINT_USE
			SET SAVE_SUM_POINT=@TOTAL_MY_SAVE_POINT
			WHERE IDX=@CURRENT_USE_IDX;
			
			/**
				회원 포인트 갱신
			*/
			EXEC SP_POINT_MEMBER_UPDATE @M_ID, @TOTAL_MY_SAVE_POINT, @RET_NUM OUTPUT, @RET_MESSAGE OUTPUT;
					
		END
	END TRY
	BEGIN CATCH
		
		--에러발생시 트랜젝션 롤백
		IF @@TRANCOUNT > 0
			ROLLBACK TRAN;

		DECLARE @LOG_MESSAGE VARCHAR(200) =   ERROR_MESSAGE();		
		EXEC SP_POINT_LOG @CODE, @M_ID, @EXPIRE_TOTAL_POINT,  @LOG_MESSAGE , NULL, NULL;
			
	END CATCH

	--정상시 트랜젝션 커밋
	IF @@TRANCOUNT > 0
		COMMIT TRAN;
			

END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_USE]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-06-26
-- Description:	구매시 포인트 사용
-- ussage: exec SP_POINT_USE '회원아이디','사용코드','사용한포인트','주문코드','주문상세일련번호','상품이름','추가설명','관리자아이디','관리자이름','소멸여부','에러번호','에러메세지'
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_USE]
	@M_ID varchar(13) = NULL -- 회원아이디
	,@USE_CODE VARCHAR(3) = NULL -- 사용코드
	,@USE_POINT INT = NULL --사용한포인트
	,@ORDER_CODE VARCHAR(20) = NULL -- 주문코드
	,@ORDER_DETAIL_IDX INT = NULL -- 주문상세일련번호
	,@P_NAME VARCHAR(100) = NULL -- 상품이름
	,@ADDITION_REASON VARCHAR(300) = NULL -- 추가설명
	,@ADMIN_ID VARCHAR(13) = NULL -- 관리자아이디
	,@ADMIN_NAME VARCHAR(30) = NULL -- 관리자이름	
	,@IS_EXPIRE VARCHAR(300) = 'N' --  소멸여부
	
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	
	BEGIN TRY
		DECLARE @LOG_MESSAGE VARCHAR(100) = '포인트 사용 시작 ' + @USE_CODE;
		EXEC SP_POINT_LOG @USE_CODE, @M_ID, @USE_POINT,  @LOG_MESSAGE , @ORDER_CODE, @ORDER_DETAIL_IDX;
		
		/**
			회원 확인
		
		IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
		BEGIN
			SET @RET_NUM = '1';
			SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
			RETURN(1);
		END
		

		/**
			적립테이블에 계정 존재여부 확인
		*/
		IF NOT EXISTS( SELECT M_ID FROM TB_POINT_SAVE WITH (NOLOCK) WHERE M_ID=@M_ID)
		BEGIN
			SET @RET_NUM = '2';
			SET @RET_MESSAGE = @M_ID + ' 계정이 적립포인트 테이블 상에 존재하지 않습니다';
			RETURN(2);		
		END
		*/
		
		
		/**
			사용코드 체크
		*/
		IF NOT EXISTS( SELECT CODE FROM TB_POINT_USE_CODES WITH (NOLOCK) WHERE CODE=@USE_CODE )
		BEGIN
			--PRINT '존재하지 않는 사용 코드입니다';
			SET @RET_NUM = '2';
			SET @RET_MESSAGE = '존재하지 않는 사용 코드입니다';
			EXEC SP_POINT_LOG @USE_CODE, @M_ID, @USE_POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
			RETURN(2);
		END	
		
		
		IF @USE_POINT <= 0 
		BEGIN
			--PRINT '사용포인트는 0 보다 커야합니다.';
			SET @RET_NUM = '3';
			SET @RET_MESSAGE = '사용포인트는 0 보다 커야합니다.';
			EXEC SP_POINT_LOG @USE_CODE, @M_ID, @USE_POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
			RETURN(3);
		END
		
		/**	
			사용한도 초과 여부 체크
		*/	
		DECLARE @TOTAL_MY_SAVE_POINT INT;
		
		EXEC @TOTAL_MY_SAVE_POINT = SP_POINT_SAVE_TOTAL @M_ID;
		
		IF @TOTAL_MY_SAVE_POINT < @USE_POINT
		BEGIN
			--PRINT '사용한도 초과입니다.'
			SET @RET_NUM = '4';
			SET @RET_MESSAGE = '사용한도 초과입니다.';
			EXEC SP_POINT_LOG @USE_CODE, @M_ID, @USE_POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
			RETURN(4);
		END 

		
		/**
			사용 포인트 키발행
		*/
		DECLARE @CURRENT_USE_IDX INT; --현재 사용 포인트 IDX

		INSERT INTO TB_POINT_USE (M_ID,USE_POINT,USE_CODE,EXPIRE_YN,ORDER_CODE,ADDITION_REASON, ADM_ID,ADM_NAME,ORDER_DETAIL_IDX,P_NAME) 
		VALUES (@M_ID, @USE_POINT,@USE_CODE,@IS_EXPIRE,@ORDER_CODE,@ADDITION_REASON,@ADMIN_ID,@ADMIN_NAME,@ORDER_DETAIL_IDX,@P_NAME);
		
		SET @CURRENT_USE_IDX = SCOPE_IDENTITY();

		/**
			사용 포인트 차감 반복
		*/
		DECLARE @CURRENT_USE_POINT INT; --현재 사용 포인트
		SET @CURRENT_USE_POINT = @USE_POINT;
		
		WHILE (@CURRENT_USE_POINT > 0) 
		BEGIN
			DECLARE @CURRENT_SAVE_IDX INT; --현재 적립 IDX
			DECLARE @CURRENT_SAVE_POINT INT; --현재 적립포인트
			DECLARE @CURRENT_SAVE_OFFSET_POINT INT; --현재 차감포인트
			DECLARE @THIS_USED_POINT INT; -- 현재적립에 사용한 포인트
			
			/**
				먼저 쌓인 적립 포인트부터 찾아서 사용
			*/
			--PRINT '@M_ID : ' + CAST(@M_ID AS VARCHAR);
			
			SELECT TOP 1 @CURRENT_SAVE_IDX=IDX, @CURRENT_SAVE_POINT=SAVE_POINT, @CURRENT_SAVE_OFFSET_POINT = SAVE_OFFSET_POINT
			FROM TB_POINT_SAVE WITH (NOLOCK)
			WHERE M_ID=@M_ID AND EXPIRE_YN='N' AND (SAVE_POINT + SAVE_OFFSET_POINT > 0)
			ORDER BY INS_DATE ASC;

			--입력 사용 포인트를 합산한 총 누적 차감 포인트
			DECLARE @TOTAL_SAVE_OFFSET_POINT INT; 
			SET @TOTAL_SAVE_OFFSET_POINT = ABS(@CURRENT_SAVE_OFFSET_POINT) + @CURRENT_USE_POINT;
			
			/**
				총 누적 차감 포인트가 적립 포인트보다 초과일 경우,
				다음 입력 포인트값, 총 차감값, 현재 적립행에 사용된 포인트값을 구한다
			*/
			IF @TOTAL_SAVE_OFFSET_POINT > @CURRENT_SAVE_POINT 
				BEGIN
					SET @THIS_USED_POINT = @CURRENT_SAVE_POINT + @CURRENT_SAVE_OFFSET_POINT
					SET @CURRENT_SAVE_OFFSET_POINT = -@CURRENT_SAVE_POINT;
					SET @CURRENT_USE_POINT = @CURRENT_USE_POINT - @THIS_USED_POINT;
				END
			/**
				총 누적 차감 포인트가 적립 포인트보다 아래일 경우
			*/
			ELSE
				BEGIN
					SET @THIS_USED_POINT = @CURRENT_USE_POINT
					SET @CURRENT_SAVE_OFFSET_POINT = -@TOTAL_SAVE_OFFSET_POINT;
					SET @CURRENT_USE_POINT = 0;
				END

			/**
			
				차감 내역 추가
			*/
			INSERT INTO TB_POINT_SAVE_BY_USE
			(M_ID, SAVE_POINT_IDX, USE_POINT_IDX, OFFSET_POINT) 
			VALUES
			(@M_ID,@CURRENT_SAVE_IDX, @CURRENT_USE_IDX, @THIS_USED_POINT);

			/**
				적립 테이블의 SAVE_OFFSET_POINT 값 갱신
			*/
			UPDATE TB_POINT_SAVE 
			SET SAVE_OFFSET_POINT=@CURRENT_SAVE_OFFSET_POINT, EXPIRE_YN=@IS_EXPIRE
			WHERE IDX = @CURRENT_SAVE_IDX;

			/**
				현재까지 적립한 총 포인트값
			*/
			exec @TOTAL_MY_SAVE_POINT = SP_POINT_SAVE_TOTAL @M_ID;

			/**
			
				현재 사용 포인트의 누적 총포인트 갱신
			*/
			UPDATE TB_POINT_USE
			SET SAVE_SUM_POINT=@TOTAL_MY_SAVE_POINT
			WHERE IDX=@CURRENT_USE_IDX;
			
			/**
				회원테이블의 마이 포인트 갱신
			*/
			EXEC SP_POINT_MEMBER_UPDATE @M_ID, @TOTAL_MY_SAVE_POINT, @RET_NUM OUTPUT, @RET_MESSAGE OUTPUT;
		END --END WHILE	
	END TRY
	BEGIN CATCH

		SET @RET_NUM = '5';
		SET @RET_MESSAGE = ERROR_MESSAGE();
		EXEC SP_POINT_LOG @USE_CODE, @M_ID, @USE_POINT, @RET_MESSAGE, @ORDER_CODE, @ORDER_DETAIL_IDX;
		RETURN(5);		
	END CATCH	

		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
	
	SET @LOG_MESSAGE  = '포인트 사용 성공 ' + @USE_CODE;
	EXEC SP_POINT_LOG @USE_CODE, @M_ID, @USE_POINT,  @LOG_MESSAGE , @ORDER_CODE, @ORDER_DETAIL_IDX;
	
	RETURN(0);
END
GO
/****** Object:  StoredProcedure [dbo].[SP_MEMBER_DUP_CHK]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-09
-- Description:	회원-계정중복체크
-- ussage: exec [SP_MEMBER_DUP_CHK] 'id' ,@ERR_CODE
-- =============================================
CREATE PROCEDURE [dbo].[SP_MEMBER_DUP_CHK]
 @M_ID	varchar(13)	='' 
,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

	SET NOCOUNT ON ; -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	SET ROWCOUNT 0 ;
	----------------------------------------
	set @ERR_CODE =0; -- 일단 오류없음

	if(len(@M_ID)<4 or len(@M_ID)>13)
		set @ERR_CODE =1; -- ID 길이오류
	else
		if(exists(select M_ID from VIEW_MEMBER_TOTAL with(nolock) where M_ID=@M_ID))
			set @ERR_CODE =10; -- ID 중복오류

			
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_EXHIBIT_TAB_PRODUCT_LIST]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 [SP_EXHIBIT_TAB_PRODUCT_LIST]
기획전의 탭에 상품 등록

SELECT * FROM TB_EXHIBIT
SELECT * FROM TB_EXHIBIT_TAB
SELECT * FROM TB_EXHIBIT_TAB_PRODUCT
SELECT * FROM TB_PRODUCT_INFO

EXEC [SP_EXHIBIT_TAB_PRODUCT_LIST] 1

*/
CREATE PROC [dbo].[SP_EXHIBIT_TAB_PRODUCT_LIST]
@TAB_IDX INT		-- 조회하려는 기획전의 TAB_IDX
AS
BEGIN

	SELECT D.IDX, D.DISPLAY_ORDER, A.P_CODE, A.P_NAME, A.P_SUB_TITLE
		, A.SELLING_PRICE, A.DISCOUNT_PRICE
		, CASE WHEN B.PROMOTION_PRODUCT_YN = 'Y' THEN '있음' ELSE '없음' END AS PROMOTION_YN
		, CASE WHEN C.P_CODE IS NULL THEN '없음' ELSE '있음' END AS COUPON_YN
		, A.MAIN_IMG
		, A.OTHER_IMG1
		,B.SOLDOUT_YN
		,B.ICON_YN 
		,B.PMO_PRODUCT_CATEGORY
		,E.P_CODE AS COUPON_CODE
	FROM TB_PRODUCT_INFO A WITH (NOLOCK)
		INNER JOIN TB_EXHIBIT_TAB_PRODUCT D WITH (NOLOCK)
			ON A.P_CODE = D.P_CODE
			AND D.TAB_IDX = @TAB_IDX
		LEFT JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
			ON A.P_CODE = B.P_CODE
		LEFT JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST_ALL C WITH (NOLOCK)
			ON A.P_CODE = C.P_CODE
		LEFT OUTER JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST E WITH (NOLOCK) 
		    ON A.P_CODE = E.P_CODE 
	WHERE A.DISPLAY_YN = 'Y'
	ORDER BY D.DISPLAY_ORDER, A.P_NAME


END
GO
/****** Object:  StoredProcedure [dbo].[SP_MEMBER_INS]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-07
-- Description:	회원- 신규가입
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_MEMBER_INS]
	 @M_ID	varchar(13)	='' -- 회원계정
	,@M_NAME varchar(30)  =''
	,@M_PWD varchar(100)  =''
	,@M_GRADE varchar(1)  ='B' -- 등급기본:브론즈
	,@M_SEX varchar(1)  =''
	,@M_BIRTHDAY varchar(10)  =''
	,@M_MOBILE varchar(15)  =''
	,@M_PHONE varchar(15)  =''
	,@M_EMAIL varchar(100)  =''
	,@M_ZIPCODE varchar(7)  =''
	,@M_ADDR1 varchar(100)  =''
	,@M_ADDR2 varchar(100)  =''
	,@M_ISSMS char(1)  =''
	,@M_ISEMAIL char(1)  =''
	,@M_ISDM char(1)  =''
	,@M_JOIN_MODE varchar(5)  =''
	,@M_DI varchar(100)  =''
	,@M_AGREE varchar(1)  ='N'
	,@M_AGREE2 varchar(1)  ='N'

	,@M_SKIN_TROUBLE_CD char(9)  =''

	,@M_GBN varchar(1)  ='A'  --임직원구분 기본: 일반회원
	,@M_STAFF_COMPANY varchar(50)  =''
	,@M_STAFF_ID varchar(50)  =''

	,@M_DEVICE_GBN varchar(1)  ='W' -- W/M   W:PC , M:모바일

	,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.

AS
BEGIN

	IF exists(select M_ID from VIEW_MEMBER_TOTAL with(NOLOCK) where (M_ID=@M_ID) )
	begin
		set @ERR_CODE=10; -- 이미 존재하는 ID
		return -1 ;
	end
	IF exists(select M_ID from TB_MEMBER with(NOLOCK) where  (M_IS_RETIRE='N') AND (M_EMAIL=@M_EMAIL) )
	begin
		set @ERR_CODE=11; -- 이미 존재하는 EMAIL
		return -1 ;
	end
	
		
	--회원 신규가입
	INSERT into TB_MEMBER
		(M_ID,M_NAME,M_PWD,M_GRADE,M_SEX,M_BIRTHDAY,M_MOBILE,M_PHONE,M_EMAIL,M_ZIPCODE,M_ADDR1,M_ADDR2,M_ISSMS,M_ISEMAIL,M_ISDM
		,M_POINT,M_CREDATE,M_VISITCNT,M_LASTVISITDATE,M_UPDATEDATE
		,M_JOIN_MODE,M_DI,M_SKIN_TROUBLE_CD,M_AGREE,M_AGREE2
		,M_GBN,M_STAFF_COMPANY,M_STAFF_ID,M_STAFF_APPROV_DATE
		,M_IS_RETIRE,M_DEL_DATE,M_DEL_POINT,M_DEL_REASON,M_DEVICE_GBN)
	values
		(@M_ID,@M_NAME,@M_PWD,@M_GRADE,@M_SEX,@M_BIRTHDAY,@M_MOBILE,@M_PHONE,@M_EMAIL,@M_ZIPCODE,@M_ADDR1,@M_ADDR2,@M_ISSMS,@M_ISEMAIL,@M_ISDM
		,0,getdate(),1,getdate(),getdate()
		,@M_JOIN_MODE,@M_DI,@M_SKIN_TROUBLE_CD,@M_AGREE,@M_AGREE2
		,@M_GBN,@M_STAFF_COMPANY,@M_STAFF_ID,null
		,'N',null,0,'',@M_DEVICE_GBN);

	SET @ERR_CODE = @@ERROR;



END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_CONFIG_CHECK__]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_CONFIG_CHECK
선택주문을 결제완료 전 또는 후에 포인트,쿠폰등의 조건이 부합되는지를 체크.

DECLARE @ORDER_IDX INT = 383
SELECT * FROM TB_ORDER_MASTER_TMP WHERE ORDER_IDX = @ORDER_IDX
SELECT * FROM TB_ORDER_DETAIL_TMP WHERE ORDER_IDX = @ORDER_IDX

EXEC SP_ORDER_CONFIG_CHECK 383

SELECT * FROM TB_ORDER_MASTER_TMP ORDER BY ORDER_IDX DESC

SELECT * FROM TB_ORDER_DETAIL_TMP ORDER BY ORDER_IDX DESC
*/
CREATE PROCEDURE [dbo].[SP_ORDER_CONFIG_CHECK__]
@ORDER_IDX INT			-- TB_ORDER_MASTER_TMP테이블의 PK
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @MEMBER_ORDER_GBN CHAR(1) = ''
		, @M_GRADE VARCHAR(1) = ''
		, @M_GBN VARCHAR(1) = ''
		, @SET_ID VARCHAR(7) = ''
		, @SET_CNT INT = 0
		, @SET_ORDER_CNT INT = 0
		
		, @CHK_ERROR_CNT INT = 0
	
	
	SELECT @MEMBER_ORDER_GBN = MEMBER_ORDER_GBN
		, @M_GRADE = M_GRADE
		, @M_GBN = M_GBN
	FROM TB_ORDER_MASTER_TMP WITH (NOLOCK)
	WHERE ORDER_IDX = @ORDER_IDX
	
	
	
	IF @MEMBER_ORDER_GBN = '2'
	BEGIN
		/*
			비회원주문건
			쿠폰,임직원,포인트할인등이 있으면 오류
			배송쿠폰도 마찬가지
		*/
		DECLARE @NOMEM_TRANS_COUPON INT = 0
			, @NOMEM_COUPON_DISCOUNT_AMT INT = 0
			, @NOMEM_POINT_USE_PRICE INT = 0
			, @NOMEM_GRADE_DISCOUNT_AMT INT = 0
			, @NOMEM_TOTAL_PAY_PRICE INT = 0
			, @NOMEM_PAY_GBN CHAR(1) = ''

		SELECT @NOMEM_TRANS_COUPON = ISNULL(TRANS_COUPON,0)
			, @NOMEM_COUPON_DISCOUNT_AMT = COUPON_DISCOUNT_AMT
			, @NOMEM_POINT_USE_PRICE = POINT_USE_PRICE
			, @NOMEM_TOTAL_PAY_PRICE = TOTAL_PAY_PRICE
			, @NOMEM_GRADE_DISCOUNT_AMT = GRADE_DISCOUNT_AMT
			, @NOMEM_PAY_GBN = PAY_GBN
		FROM TB_ORDER_MASTER_TMP WITH (NOLOCK)
		WHERE ORDER_IDX = @ORDER_IDX

		IF @NOMEM_TRANS_COUPON > 0
		BEGIN
			RAISERROR ('비회원은 배송쿠폰을 사용할수 없습니다.',16,1);
			RETURN
		END
		IF @NOMEM_COUPON_DISCOUNT_AMT > 0
		BEGIN
			RAISERROR ('비회원은 쿠폰할인이 적용될수 없습니다.',16,1);
			RETURN
		END
		IF @NOMEM_POINT_USE_PRICE > 0
		BEGIN
			RAISERROR ('비회원은 적립포인트 사용을 할수 없습니다.',16,1);
			RETURN
		END
		IF @NOMEM_GRADE_DISCOUNT_AMT > 0
		BEGIN
			RAISERROR ('비회원은 등급할인이 적용될수 없습니다.',16,1);
			RETURN
		END
		IF @NOMEM_PAY_GBN = ''
		BEGIN
			RAISERROR ('결제구분값 오류입니다.',16,1);
			RETURN
		END
		IF (@NOMEM_PAY_GBN = '4') AND (@NOMEM_TOTAL_PAY_PRICE > 0)
		BEGIN
			RAISERROR ('실 결제액이 존재하는데 포인트결제로 처리될 수 없습니다.',16,1);
			RETURN
		END
	END
	ELSE BEGIN
		/*
			회원주문건
			적립포인트사용시 차감될 포인트가 있는지
			쿠폰사용시 해당쿠폰이 미사용상태로 남아있는지
			배송쿠폰사용시 해당쿠폰이 미사용상태로 남아있는지
			비임직원이 임직원할인된건 없는지
			
		*/
		DECLARE @MEM_M_ID VARCHAR(13) = '', @MEM_M_POINT INT = 0
			, @MEM_M_GBN VARCHAR(1) = '', @MEM_TRANS_COUPON INT
			, @MEM_EMP_DISCOUNT_AMT INT = 0
			, @MEM_POINT_USE_PRICE INT = 0
			, @MEM_TOTAL_PAY_PRICE INT = 0
			, @MEM_PAY_GBN CHAR(1) = ''
		
		SELECT @MEM_M_ID = M_ID, @MEM_M_GBN = M_GBN
			, @MEM_TRANS_COUPON = ISNULL(TRANS_COUPON,0)
			, @MEM_EMP_DISCOUNT_AMT = EMP_DISCOUNT_AMT
			, @MEM_POINT_USE_PRICE = POINT_USE_PRICE
			, @MEM_TOTAL_PAY_PRICE = TOTAL_PAY_PRICE
			, @MEM_PAY_GBN = PAY_GBN
		FROM TB_ORDER_MASTER_TMP A WITH (NOLOCK)
		WHERE ORDER_IDX = @ORDER_IDX
		
		IF @MEM_PAY_GBN = ''
		BEGIN
			RAISERROR ('결제구분값 오류입니다.',16,1);
			RETURN
		END
		IF (@MEM_PAY_GBN = '4') AND (@MEM_TOTAL_PAY_PRICE > 0)
		BEGIN
			RAISERROR ('실 결제액이 존재하는데 포인트결제로 처리될 수 없습니다.',16,1);
			RETURN
		END
		IF @MEM_POINT_USE_PRICE > 0
		BEGIN
			SELECT @MEM_M_POINT = ISNULL(M_POINT,0)
			FROM TB_MEMBER WITH (NOLOCK)
			WHERE M_ID = @MEM_M_ID
			
			IF @MEM_POINT_USE_PRICE > @MEM_M_POINT
			BEGIN
				RAISERROR ('적립포인트가 결제에 사용된 포인트보다 작습니다.',16,1);
				RETURN
			END
		END
		IF ( ( @MEM_M_GBN = 'A' ) AND ( @MEM_EMP_DISCOUNT_AMT > 0 ) )
		BEGIN
			RAISERROR ('임직원 할인이 잘못 적용되었습니다.',16,1);
			RETURN
		END
		IF @MEM_TRANS_COUPON > 0
		BEGIN
			DECLARE @TRANS_COUPON_EXIST INT = 0
			
			SELECT TOP 1 @TRANS_COUPON_EXIST = ISNULL(A.IDX_COUPON_NUMBER,0)
			FROM VIEW_USABLE_COUPON_LIST A WITH (NOLOCK)
			WHERE A.M_ID = @MEM_M_ID
			AND A.IDX_COUPON_NUMBER = @MEM_TRANS_COUPON
			AND A.COUPON_GBN = 'S'
			AND A.USE_STATUS  = 5
			
			IF @TRANS_COUPON_EXIST = 0
			BEGIN
				RAISERROR ('주문에 사용된 배송쿠폰이 존재하지 않습니다.',16,1);
				RETURN
			END
		END
			
		DECLARE @BAD_COUPON_YN INT = 0
		
		SELECT @BAD_COUPON_YN = COUNT(*)
		FROM TB_ORDER_DETAIL_TMP A WITH (NOLOCK)
			LEFT JOIN VIEW_USABLE_COUPON_LIST B WITH (NOLOCK)
				ON A.IDX_COUPON_NUMBER = B.IDX_COUPON_NUMBER
				AND B.M_ID = @MEM_M_ID
				AND B.COUPON_GBN = 'M'
				AND B.USE_STATUS  = 5
		WHERE A.ORDER_IDX = @ORDER_IDX
		AND A.IDX_COUPON_NUMBER IS NOT NULL
		AND B.IDX_COUPON_NUMBER IS NULL

		IF @BAD_COUPON_YN > 0
		BEGIN
			RAISERROR ('주문에 사용된 상품쿠폰이 존재하지 않습니다.',16,1);
			RETURN
		END

	END

	/*
		주문테이블을 재구성
	
	*/
	IF OBJECT_ID('tempdb..#TB_ORDER_MASTER_CHK') is not null
	BEGIN
	  DROP TABLE #TB_ORDER_MASTER_CHK;
	END
	IF OBJECT_ID('tempdb..#TB_ORDER_DETAIL_CHK') is not null
	BEGIN
	  DROP TABLE #TB_ORDER_DETAIL_CHK;
	END	


	SELECT ORDER_IDX
			, MEMBER_ORDER_GBN
			, M_ID
			, M_GRADE
			, M_GBN
			, SESSION_ID
			, TOTAL_ORDER_PRICE
			, TRANS_PRICE
			, TRANS_COUPON
			, EMP_DISCOUNT_AMT
			, COUPON_DISCOUNT_AMT
			, POINT_USE_PRICE
			, GRADE_DISCOUNT_AMT
			, DISCOUNT_AMT
			, TOTAL_PAY_PRICE
			, ACCML_POINT
			INTO #TB_ORDER_MASTER_CHK
	FROM TB_ORDER_MASTER_TMP WITH (NOLOCK)
	WHERE ORDER_IDX = @ORDER_IDX



	SELECT ORDER_DETAIL_IDX
			, ORDER_IDX
			, P_CODE
			, P_NAME
			, P_SUB_TITLE
			, P_IMG1_S
			, ICON_NEW
			, ICON_BEST
			, ICON_SOLDOUT
			, ICON_CUSTOM
			, ICON_ONEPLUS
			, ICON_SET
			, ICON_TIME
			, ICON_COUPON
			, SELLING_PRICE
			, DISCOUNT_RATE
			, DISCOUNT_PRICE
			, PROMOTION_TYPE
			, CD_PROMOTION_PRODUCT
			, EMP_DISCOUNT
			, EMP_PMO_TOTAL_RATE_OR_MONEY
			, EMP_PMO_TOTAL_DISCOUNT_RATE
			, EMP_PMO_TOTAL_DISCOUNT_MONEY
			, EMP_DISCOUNT_AMT
			, EMP_DISCOUNT_PRICE
			, ORDER_PRICE
			, IDX_COUPON_NUMBER
			, CD_COUPON
			, RATE_OR_MONEY
			, COUPON_DISCOUNT_MONEY
			, COUPON_DISCOUNT_RATE
			, COUPON_DISCOUNT_AMT
			, COUPON_DISCOUNT_PRICE
			, USE_POINT
			, GRADE_DISCOUNT
			, GRADE_PMO_TOTAL_RATE_OR_MONEY
			, GRADE_PMO_TOTAL_DISCOUNT_RATE
			, GRADE_PMO_TOTAL_DISCOUNT_MONEY
			, GRADE_DISCOUNT_AMT
			, POINT_ACCML
			, POINT_ACCML_DATE
			, P_COUNT
			, REAL_PAY_PRICE
			, '' AS SOLDOUT_YN
			INTO #TB_ORDER_DETAIL_CHK
	FROM TB_ORDER_DETAIL_TMP WITH (NOLOCK)
	WHERE ORDER_IDX = @ORDER_IDX
	ORDER BY ORDER_DETAIL_IDX



	/*
		제품에 적용된 가격,프로모션,계산 등등을 확인
	*/
	IF @MEMBER_ORDER_GBN = '1'				/****************************************          회원이면 START                *************************************/
	BEGIN


		/*
			이부분에 프로모션 검색로직을...
				1. SET상품의 조건이 충족되는 상품들 검색후 처리
				3. 1+1상품 검색처리
				4. TIME SALE상품 검색처리
				5. 기획전(따로 검색해야함?)상품 검색처리
				6. 1~5까지 안걸린 상품은 상품테이블의 가격정보를 입력
		
		*/
		-- 1. SET 프로모션이 걸려있는게 있는지 검사

		SELECT TOP 1  @SET_ID = A.CD_PROMOTION_PRODUCT
			, @SET_CNT = ISNULL(A.PMO_ONEONE_MULTIPLE_CNT,2)
		FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		WHERE A.PMO_PRODUCT_CATEGORY = '01'

		IF @SET_ID <> ''
		BEGIN
			SELECT @SET_ORDER_CNT = COUNT(*)
			FROM #TB_ORDER_DETAIL_CHK A
				INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
					ON A.P_CODE = B.P_CODE
					AND B.CD_PROMOTION_PRODUCT = @SET_ID

			IF @SET_ORDER_CNT >= @SET_CNT
			BEGIN
				UPDATE A
				SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
					, A.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
					, A.DISCOUNT_PRICE = B.RESULT_PRICE
					, A.EMP_DISCOUNT = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
					, A.EMP_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN C.PMO_TOTAL_CATEGORY ELSE C.PMO_TOTAL_RATE_OR_MONEY END
					, A.EMP_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_RATE,0) END
					, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_MONEY,0) END
					, A.GRADE_DISCOUNT = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
					, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN D.PMO_TOTAL_CATEGORY ELSE D.PMO_TOTAL_RATE_OR_MONEY END
					, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_RATE,0) END
					, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_MONEY,0) END
				FROM #TB_ORDER_DETAIL_CHK A
					INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
						ON A.P_CODE = B.P_CODE
						AND B.CD_PROMOTION_PRODUCT = @SET_ID
					LEFT OUTER JOIN VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL C WITH (NOLOCK)
						ON A.P_CODE = C.P_CODE
						AND C.CD_PROMOTION_PRODUCT = @SET_ID
						AND C.PMO_TOTAL_CATEGORY = '00'		-- 임직원할인폭 조건
						AND C.M_GBN = @M_GBN
						AND C.M_GRADE = @M_GRADE
					LEFT OUTER JOIN VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL D WITH (NOLOCK)
						ON A.P_CODE = D.P_CODE
						AND D.CD_PROMOTION_PRODUCT = @SET_ID
						AND D.PMO_TOTAL_CATEGORY = '03'		-- 등급할인폭 조건
						AND D.M_GBN = @M_GBN
						AND D.M_GRADE = @M_GRADE

			END
		END
		
		-- 2. SET 프로모션외의 다른프로모션이 걸린 상품이 있으면, 걸린 프로모션 적용
		UPDATE A
		SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
			, A.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
			, A.DISCOUNT_PRICE = B.RESULT_PRICE
			, A.EMP_DISCOUNT = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
			, A.EMP_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN C.PMO_TOTAL_CATEGORY ELSE C.PMO_TOTAL_RATE_OR_MONEY END
			, A.EMP_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_RATE,0) END
			, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_MONEY,0) END
			, A.GRADE_DISCOUNT = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
			, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN D.PMO_TOTAL_CATEGORY ELSE D.PMO_TOTAL_RATE_OR_MONEY END
			, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_RATE,0) END
			, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_MONEY,0) END
		FROM #TB_ORDER_DETAIL_CHK A
			INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
				AND B.PMO_PRODUCT_CATEGORY IN ('02','03')
			LEFT OUTER JOIN VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL C WITH (NOLOCK)
				ON A.P_CODE = C.P_CODE
				AND C.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
				AND C.PMO_TOTAL_CATEGORY = '00'		-- 임직원할인폭 조건
				AND C.M_GBN = @M_GBN
				AND C.M_GRADE = @M_GRADE
			LEFT OUTER JOIN VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL D WITH (NOLOCK)
				ON A.P_CODE = D.P_CODE
				AND D.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
				AND D.PMO_TOTAL_CATEGORY = '03'		-- 등급할인폭 조건
				AND D.M_GBN = @M_GBN
				AND D.M_GRADE = @M_GRADE
		WHERE A.PROMOTION_TYPE = '99'


		-- 프로모션이 안걸린(DISCOUNT_PRICE가 NULL인) 상품의 가격을 상품테이블의 가격으로 셋팅
		-- 프로모션이 걸리지 않은 상품의 등급합인,임직원 할인폭을 조회저장
		UPDATE A
		SET A.DISCOUNT_RATE = ISNULL(B.DISCOUNT_RATE,0)
		, A.DISCOUNT_PRICE = ISNULL(B.DISCOUNT_PRICE,0)
		, A.EMP_DISCOUNT = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
		, A.EMP_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN C.PMO_TOTAL_CATEGORY ELSE C.PMO_TOTAL_RATE_OR_MONEY END
		, A.EMP_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_RATE,0) END
		, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_MONEY,0) END
		, A.GRADE_DISCOUNT = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
		, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN D.PMO_TOTAL_CATEGORY ELSE D.PMO_TOTAL_RATE_OR_MONEY END
		, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_RATE,0) END
		, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_MONEY,0) END
		FROM #TB_ORDER_DETAIL_CHK A
			LEFT JOIN TB_PRODUCT_INFO B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
			LEFT OUTER JOIN 
				( SELECT C.M_GBN, C.M_GRADE, C.PMO_TOTAL_CATEGORY
						, MAX(C.PMO_TOTAL_RATE_OR_MONEY) AS PMO_TOTAL_RATE_OR_MONEY
						, MAX(C.PMO_TOTAL_DISCOUNT_RATE) AS PMO_TOTAL_DISCOUNT_RATE
						, MAX(C.PMO_TOTAL_DISCOUNT_MONEY) AS PMO_TOTAL_DISCOUNT_MONEY
				  FROM VIEW_PROMOTION_TOTAL_INFO C  WITH (NOLOCK)
				  WHERE C.PMO_TOTAL_CATEGORY = '00'   -- 임직원할인폭 조건
				  GROUP BY C.M_GBN, C.M_GRADE, C.PMO_TOTAL_CATEGORY
				) AS C
				ON C.M_GBN = @M_GBN
				AND C.M_GRADE = @M_GRADE
			LEFT OUTER JOIN 
				( SELECT D.M_GBN, D.M_GRADE, D.PMO_TOTAL_CATEGORY
						, MAX(D.PMO_TOTAL_RATE_OR_MONEY) AS PMO_TOTAL_RATE_OR_MONEY
						, MAX(D.PMO_TOTAL_DISCOUNT_RATE) AS PMO_TOTAL_DISCOUNT_RATE
						, MAX(D.PMO_TOTAL_DISCOUNT_MONEY) AS PMO_TOTAL_DISCOUNT_MONEY
				  FROM VIEW_PROMOTION_TOTAL_INFO D  WITH (NOLOCK)
				  WHERE D.PMO_TOTAL_CATEGORY = '03'   -- 등급할인폭 조건
				  GROUP BY D.M_GBN, D.M_GRADE, D.PMO_TOTAL_CATEGORY
				) AS D
				ON C.M_GBN = @M_GBN
				AND C.M_GRADE = @M_GRADE
		WHERE A.PROMOTION_TYPE = '99'
		--		exec SP_ORDER_STEP1 'test_v099','','RAA00108','1'

		/*
			프로모션 적용끝	
		*/

		-- 안전장치를 위해 할인가격이 0인것은 품절처리
		UPDATE A
		SET A.SOLDOUT_YN = 'Y'
		FROM #TB_ORDER_DETAIL_CHK A
		WHERE A.DISCOUNT_PRICE < 1		



		-- 임직원의 경우 임직원 할인대상 상품가격 조정
		IF @M_GBN = 'S'
		BEGIN
			UPDATE A
			SET A.EMP_DISCOUNT_AMT = 
					CASE WHEN A.EMP_PMO_TOTAL_RATE_OR_MONEY = 'R' THEN FLOOR(A.DISCOUNT_PRICE / 100.0 * A.EMP_PMO_TOTAL_DISCOUNT_RATE )
					ELSE A.EMP_PMO_TOTAL_DISCOUNT_MONEY END
				, A.EMP_DISCOUNT_PRICE = DISCOUNT_PRICE - 
					CASE WHEN A.EMP_PMO_TOTAL_RATE_OR_MONEY = 'R' THEN FLOOR(A.DISCOUNT_PRICE / 100.0 * A.EMP_PMO_TOTAL_DISCOUNT_RATE )
					ELSE A.EMP_PMO_TOTAL_DISCOUNT_MONEY END
			FROM #TB_ORDER_DETAIL_CHK A
			WHERE A.EMP_DISCOUNT = 1
			AND A.EMP_PMO_TOTAL_RATE_OR_MONEY IS NOT NULL

			UPDATE A
			SET A.EMP_DISCOUNT_AMT = 0
				, A.EMP_DISCOUNT_PRICE = A.DISCOUNT_PRICE
			FROM #TB_ORDER_DETAIL_CHK A
			WHERE A.EMP_PMO_TOTAL_RATE_OR_MONEY IS NULL
		END	
		ELSE BEGIN
			UPDATE A
			SET A.EMP_DISCOUNT_AMT = 0
				, A.EMP_DISCOUNT_PRICE = A.DISCOUNT_PRICE
			FROM #TB_ORDER_DETAIL_CHK A
		END

		UPDATE A
		SET A.ORDER_PRICE = A.EMP_DISCOUNT_PRICE * A.P_COUNT
			, A.COUPON_DISCOUNT_AMT = 0
			, A.COUPON_DISCOUNT_PRICE = A.EMP_DISCOUNT_PRICE
			, A.USE_POINT = 0
		FROM #TB_ORDER_DETAIL_CHK A

		-- 등급할인대상 상품가격 조정
		UPDATE A
		SET A.GRADE_DISCOUNT_AMT = 
				CASE WHEN A.GRADE_PMO_TOTAL_RATE_OR_MONEY = 'R' THEN ( A.EMP_DISCOUNT_PRICE - FLOOR(A.EMP_DISCOUNT_PRICE / 100.0 * ( 100 - A.GRADE_PMO_TOTAL_DISCOUNT_RATE ) ) ) * A.P_COUNT
				ELSE ( A.GRADE_PMO_TOTAL_DISCOUNT_MONEY * A.P_COUNT ) END
		FROM #TB_ORDER_DETAIL_CHK A
		WHERE A.GRADE_DISCOUNT = 1
		AND A.GRADE_PMO_TOTAL_RATE_OR_MONEY IS NOT NULL

		UPDATE A
		SET A.GRADE_DISCOUNT_AMT = 0
		FROM #TB_ORDER_DETAIL_CHK A
		WHERE A.GRADE_PMO_TOTAL_RATE_OR_MONEY IS NULL




		-- 할인율,할인금액을 계산하고, 상품별 주문금액 산정
		-- 적립될 포인트 계산 (일단 3%로 고정)
		UPDATE A
		SET A.DISCOUNT_RATE = 100 - ROUND( A.EMP_DISCOUNT_AMT * 100.0 / A.SELLING_PRICE , 1)
		FROM #TB_ORDER_DETAIL_CHK A
		WHERE A.SELLING_PRICE > 0

		--UPDATE A
		---- SET A.P_POINT = FLOOR( ( CASE WHEN A.EMP_DISCOUNT_PRICE = 0 THEN A.DISCOUNT_PRICE ELSE A.EMP_DISCOUNT_PRICE END - A.GRADE_DISCOUNT_PRICE )  * A.P_COUNT * 0.03 )
		--SET A.P_POINT = FLOOR( A.GRADE_DISCOUNT_PRICE * A.P_COUNT * 0.03 )
		--FROM #CARTLIST A
		--WHERE A.SELLING_PRICE > 0


	END				/****************************************          회원이면 END                *************************************/
	ELSE BEGIN			/****************************************          비회원이면                *************************************/

		SELECT TOP 1  @SET_ID = A.CD_PROMOTION_PRODUCT
			, @SET_CNT = ISNULL(A.PMO_ONEONE_MULTIPLE_CNT,2)
		FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		WHERE A.PMO_PRODUCT_CATEGORY = '01'

		IF @SET_ID <> ''
		BEGIN
			SELECT @SET_ORDER_CNT = COUNT(*)
			FROM #TB_ORDER_DETAIL_CHK A
				INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
					ON A.P_CODE = B.P_CODE
					AND B.CD_PROMOTION_PRODUCT = @SET_ID

			IF @SET_ORDER_CNT >= @SET_CNT
			BEGIN
				UPDATE A
				SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
					, A.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
					, A.DISCOUNT_PRICE = B.RESULT_PRICE
					, A.EMP_DISCOUNT = 0
					, A.EMP_PMO_TOTAL_RATE_OR_MONEY = NULL
					, A.EMP_PMO_TOTAL_DISCOUNT_RATE = 0
					, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = 0
					, A.GRADE_DISCOUNT = 0
					, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = NULL
					, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = 0
					, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = 0
				FROM #TB_ORDER_DETAIL_CHK A
					INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
						ON A.P_CODE = B.P_CODE
						AND B.CD_PROMOTION_PRODUCT = @SET_ID

			END
		END
		
		-- 2. SET 프로모션외의 다른프로모션이 걸린 상품이 있으면, 걸린 프로모션 적용
		UPDATE A
		SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
			, A.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
			, A.DISCOUNT_PRICE = B.RESULT_PRICE
			, A.EMP_DISCOUNT = 0
			, A.EMP_PMO_TOTAL_RATE_OR_MONEY = NULL
			, A.EMP_PMO_TOTAL_DISCOUNT_RATE = 0
			, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = 0
			, A.GRADE_DISCOUNT = 0
			, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = NULL
			, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = 0
			, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = 0
		FROM #TB_ORDER_DETAIL_CHK A
			INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
				AND B.PMO_PRODUCT_CATEGORY IN ('02','03')
		WHERE A.PROMOTION_TYPE = '99'


		-- 프로모션이 안걸린(DISCOUNT_PRICE가 NULL인) 상품의 가격을 상품테이블의 가격으로 셋팅
		-- 프로모션이 걸리지 않은 상품의 등급합인,임직원 할인폭을 조회저장
		UPDATE A
		SET A.DISCOUNT_RATE = ISNULL(B.DISCOUNT_RATE,0)
		, A.DISCOUNT_PRICE = ISNULL(B.DISCOUNT_PRICE,0)
		, A.EMP_DISCOUNT = 0
		, A.EMP_PMO_TOTAL_RATE_OR_MONEY = NULL
		, A.EMP_PMO_TOTAL_DISCOUNT_RATE = 0
		, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = 0
		, A.GRADE_DISCOUNT = 0
		, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = NULL
		, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = 0
		, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = 0
		FROM #TB_ORDER_DETAIL_CHK A
			LEFT JOIN TB_PRODUCT_INFO B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
		WHERE A.PROMOTION_TYPE = '99'
		

		/*
			프로모션 적용끝	
		*/

		-- 안전장치를 위해 할인가격이 0인것은 품절처리
		UPDATE A
		SET A.SOLDOUT_YN = 'Y'
		FROM #TB_ORDER_DETAIL_CHK A
		WHERE A.DISCOUNT_PRICE < 1


		UPDATE A
		SET A.EMP_DISCOUNT = 0
			, A.EMP_DISCOUNT_AMT = 0
			, A.EMP_DISCOUNT_PRICE = A.DISCOUNT_PRICE
			, A.COUPON_DISCOUNT_AMT = 0
			, A.COUPON_DISCOUNT_PRICE = A.DISCOUNT_PRICE
			, A.USE_POINT = 0
			, A.GRADE_DISCOUNT = 0
			, A.GRADE_DISCOUNT_AMT = 0
			, A.ORDER_PRICE = A.DISCOUNT_PRICE * A.P_COUNT
		FROM #TB_ORDER_DETAIL_CHK A
		WHERE A.SELLING_PRICE > 0

	END					/****************************************          비회원이면                *************************************/

	DELETE FROM #TB_ORDER_DETAIL_CHK
	WHERE SOLDOUT_YN = 'Y'
	
	UPDATE A
	SET POINT_ACCML = FLOOR( ( ( A.EMP_DISCOUNT_PRICE * A.P_COUNT ) - A.COUPON_DISCOUNT_AMT - A.USE_POINT - A.GRADE_DISCOUNT_AMT ) * 0.03 )
	, REAL_PAY_PRICE = ( A.ORDER_PRICE - A.COUPON_DISCOUNT_AMT - A.USE_POINT - A.GRADE_DISCOUNT_AMT )
	FROM #TB_ORDER_DETAIL_CHK A
	

	;
	WITH SRC AS (
	SELECT MAX(ORDER_IDX) AS ORDER_IDX
		, SUM(SELLING_PRICE) AS SELLING_PRICE
		, SUM(DISCOUNT_PRICE * P_COUNT) AS DISCOUNT_PRICE		
		, SUM(ORDER_PRICE) AS ORDER_PRICE
		, SUM(COUPON_DISCOUNT_AMT) AS COUPON_DISCOUNT_AMT
		, SUM(USE_POINT) AS USE_POINT
		, SUM(GRADE_DISCOUNT_AMT) AS GRADE_DISCOUNT_AMT
		, SUM(EMP_DISCOUNT_AMT  * P_COUNT) AS EMP_DISCOUNT_AMT
		, SUM(REAL_PAY_PRICE) AS REAL_PAY_PRICE
		, SUM(POINT_ACCML) AS POINT_ACCML
	FROM #TB_ORDER_DETAIL_CHK
	)
	UPDATE A
	SET A.TOTAL_ORDER_PRICE = SRC.DISCOUNT_PRICE
		, A.COUPON_DISCOUNT_AMT = SRC.COUPON_DISCOUNT_AMT
		, A.GRADE_DISCOUNT_AMT = SRC.GRADE_DISCOUNT_AMT
		, A.POINT_USE_PRICE = SRC.USE_POINT
		, A.EMP_DISCOUNT_AMT = SRC.EMP_DISCOUNT_AMT
		, A.DISCOUNT_AMT = SRC.COUPON_DISCOUNT_AMT + SRC.GRADE_DISCOUNT_AMT + SRC.EMP_DISCOUNT_AMT + SRC.USE_POINT
		, A.TOTAL_PAY_PRICE = SRC.REAL_PAY_PRICE
		, A.ACCML_POINT = SRC.POINT_ACCML
	FROM #TB_ORDER_MASTER_CHK A, SRC
	WHERE A.ORDER_IDX = SRC.ORDER_IDX

	UPDATE A
	SET A.TRANS_PRICE = CASE WHEN A.TOTAL_PAY_PRICE >= 30000 THEN 0 WHEN ISNULL(A.TRANS_COUPON,0) > 0 THEN 0 ELSE 2500 END
		, A.TOTAL_PAY_PRICE = A.TOTAL_PAY_PRICE + CASE WHEN A.TOTAL_PAY_PRICE >= 30000 THEN 0 WHEN ISNULL(A.TRANS_COUPON,0) > 0 THEN 0 ELSE 2500 END
	FROM #TB_ORDER_MASTER_CHK A


	SET @CHK_ERROR_CNT = 0
	
	SELECT @CHK_ERROR_CNT = COUNT(*)
	FROM #TB_ORDER_DETAIL_CHK A
		INNER JOIN TB_ORDER_DETAIL_TMP B WITH (NOLOCK)
			ON A.ORDER_DETAIL_IDX = B.ORDER_DETAIL_IDX
	WHERE A.SELLING_PRICE <> B.SELLING_PRICE
	OR A.PROMOTION_TYPE <> B.PROMOTION_TYPE
	OR A.CD_PROMOTION_PRODUCT <> B.CD_PROMOTION_PRODUCT
	OR A.EMP_DISCOUNT <> B.EMP_DISCOUNT
	OR A.EMP_PMO_TOTAL_RATE_OR_MONEY <> B.EMP_PMO_TOTAL_RATE_OR_MONEY
	OR A.EMP_PMO_TOTAL_DISCOUNT_RATE <> B.EMP_PMO_TOTAL_DISCOUNT_RATE
	OR A.EMP_PMO_TOTAL_DISCOUNT_MONEY <> B.EMP_PMO_TOTAL_DISCOUNT_MONEY
	OR A.EMP_DISCOUNT_AMT <> B.EMP_DISCOUNT_AMT
	OR A.EMP_DISCOUNT_PRICE <> B.EMP_DISCOUNT_PRICE
	OR A.ORDER_PRICE <> B.ORDER_PRICE
	
	IF @CHK_ERROR_CNT > 0
	BEGIN
		RAISERROR ('상품금액의 조건이 변경되었습니다.',16,1);
		RETURN
	END

--		EXEC SP_ORDER_CONFIG_CHECK__ 350

/*
	SELECT *
	FROM TB_ORDER_MASTER_TMP WITH (NOLOCK)
	WHERE ORDER_IDX = @ORDER_IDX

	SELECT * FROM #TB_ORDER_MASTER_CHK


	SELECT *
	FROM TB_ORDER_DETAIL_TMP WITH (NOLOCK)
	WHERE ORDER_IDX = @ORDER_IDX
	ORDER BY ORDER_DETAIL_IDX 

	SELECT * FROM #TB_ORDER_DETAIL_CHK
	ORDER BY ORDER_DETAIL_IDX 
*/

	IF OBJECT_ID('tempdb..#TB_ORDER_MASTER_CHK') is not null
	BEGIN
	  DROP TABLE #TB_ORDER_MASTER_CHK;
	END
	IF OBJECT_ID('tempdb..#TB_ORDER_DETAIL_CHK') is not null
	BEGIN
	  DROP TABLE #TB_ORDER_DETAIL_CHK;
	END
	/*
		정상임을 리턴
	*/
	SELECT 'OK' as RESULT

/*

SELECT * FROM TB_ORDER_MASTER_TMP
SELECT * FROM TB_ORDER_DETAIL_TMP


exec SP_ORDER_CONFIG_CHECK 54


exec SP_ORDER_CONFIG_CHECK 7


*/	

	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_CONFIG_CHECK]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_CONFIG_CHECK
선택주문을 결제완료 전 또는 후에 포인트,쿠폰등의 조건이 부합되는지를 체크.

DECLARE @ORDER_IDX INT = 383
SELECT * FROM TB_ORDER_MASTER_TMP WHERE ORDER_IDX = @ORDER_IDX
SELECT * FROM TB_ORDER_DETAIL_TMP WHERE ORDER_IDX = @ORDER_IDX

EXEC SP_ORDER_CONFIG_CHECK 417

SELECT *
	FROM TB_ORDER_DETAIL_TMP A WITH (NOLOCK)
		INNER JOIN TB_PRODUCT_INFO B WITH (NOLOCK)
			ON A.P_CODE = B.P_CODE
			AND B.DISPLAY_YN = 'Y'		-- 전시중인 상품만
			AND B.SOLDOUT_YN = 'N'		-- 품절체크
	WHERE A.ORDER_IDX = 417
	ORDER BY A.ORDER_DETAIL_IDX


SELECT DISPLAY_YN, SOLDOUT_YN
FROM TB_PRODUCT_INFO
WHERE P_CODE = 'RAA00107'

SELECT * FROM TB_ORDER_MASTER_TMP ORDER BY ORDER_IDX DESC

SELECT * FROM TB_ORDER_DETAIL_TMP ORDER BY ORDER_IDX DESC
*/
CREATE PROCEDURE [dbo].[SP_ORDER_CONFIG_CHECK]
@ORDER_IDX INT			-- TB_ORDER_MASTER_TMP테이블의 PK
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @MEMBER_ORDER_GBN CHAR(1) = ''
		, @M_GRADE VARCHAR(1) = ''
		, @M_GBN VARCHAR(1) = ''
		, @SET_ID VARCHAR(7) = ''
		, @SET_CNT INT = 0
		, @SET_ORDER_CNT INT = 0
		
		, @CHK_ERROR_CNT INT = 0
	
	
	SELECT @MEMBER_ORDER_GBN = MEMBER_ORDER_GBN
		, @M_GRADE = M_GRADE
		, @M_GBN = M_GBN
	FROM TB_ORDER_MASTER_TMP WITH (NOLOCK)
	WHERE ORDER_IDX = @ORDER_IDX
	
	
	
	IF @MEMBER_ORDER_GBN = '2'
	BEGIN
		/*
			비회원주문건
			쿠폰,임직원,포인트할인등이 있으면 오류
			배송쿠폰도 마찬가지
		*/
		DECLARE @NOMEM_TRANS_COUPON INT = 0
			, @NOMEM_COUPON_DISCOUNT_AMT INT = 0
			, @NOMEM_POINT_USE_PRICE INT = 0
			, @NOMEM_GRADE_DISCOUNT_AMT INT = 0
			, @NOMEM_TOTAL_PAY_PRICE INT = 0
			, @NOMEM_PAY_GBN CHAR(1) = ''

		SELECT @NOMEM_TRANS_COUPON = ISNULL(TRANS_COUPON,0)
			, @NOMEM_COUPON_DISCOUNT_AMT = COUPON_DISCOUNT_AMT
			, @NOMEM_POINT_USE_PRICE = POINT_USE_PRICE
			, @NOMEM_TOTAL_PAY_PRICE = TOTAL_PAY_PRICE
			, @NOMEM_GRADE_DISCOUNT_AMT = GRADE_DISCOUNT_AMT
			, @NOMEM_PAY_GBN = PAY_GBN
		FROM TB_ORDER_MASTER_TMP WITH (NOLOCK)
		WHERE ORDER_IDX = @ORDER_IDX

		IF @NOMEM_TRANS_COUPON > 0
		BEGIN
			RAISERROR ('비회원은 배송쿠폰을 사용할수 없습니다.',16,1);
			RETURN
		END
		IF @NOMEM_COUPON_DISCOUNT_AMT > 0
		BEGIN
			RAISERROR ('비회원은 쿠폰할인이 적용될수 없습니다.',16,1);
			RETURN
		END
		IF @NOMEM_POINT_USE_PRICE > 0
		BEGIN
			RAISERROR ('비회원은 적립포인트 사용을 할수 없습니다.',16,1);
			RETURN
		END
		IF @NOMEM_GRADE_DISCOUNT_AMT > 0
		BEGIN
			RAISERROR ('비회원은 등급할인이 적용될수 없습니다.',16,1);
			RETURN
		END
		IF @NOMEM_PAY_GBN = ''
		BEGIN
			RAISERROR ('결제구분값 오류입니다.',16,1);
			RETURN
		END
		IF (@NOMEM_PAY_GBN = '4') AND (@NOMEM_TOTAL_PAY_PRICE > 0)
		BEGIN
			RAISERROR ('실 결제액이 존재하는데 포인트결제로 처리될 수 없습니다.',16,1);
			RETURN
		END
	END
	ELSE BEGIN
		/*
			회원주문건
			적립포인트사용시 차감될 포인트가 있는지
			쿠폰사용시 해당쿠폰이 미사용상태로 남아있는지
			배송쿠폰사용시 해당쿠폰이 미사용상태로 남아있는지
			비임직원이 임직원할인된건 없는지
			
		*/
		DECLARE @MEM_M_ID VARCHAR(13) = '', @MEM_M_POINT INT = 0
			, @MEM_M_GBN VARCHAR(1) = '', @MEM_TRANS_COUPON INT
			, @MEM_EMP_DISCOUNT_AMT INT = 0
			, @MEM_POINT_USE_PRICE INT = 0
			, @MEM_TOTAL_PAY_PRICE INT = 0
			, @MEM_PAY_GBN CHAR(1) = ''
		
		SELECT @MEM_M_ID = M_ID, @MEM_M_GBN = M_GBN
			, @MEM_TRANS_COUPON = ISNULL(TRANS_COUPON,0)
			, @MEM_EMP_DISCOUNT_AMT = EMP_DISCOUNT_AMT
			, @MEM_POINT_USE_PRICE = POINT_USE_PRICE
			, @MEM_TOTAL_PAY_PRICE = TOTAL_PAY_PRICE
			, @MEM_PAY_GBN = PAY_GBN
		FROM TB_ORDER_MASTER_TMP A WITH (NOLOCK)
		WHERE ORDER_IDX = @ORDER_IDX
		
		IF @MEM_PAY_GBN = ''
		BEGIN
			RAISERROR ('결제구분값 오류입니다.',16,1);
			RETURN
		END
		IF (@MEM_PAY_GBN = '4') AND (@MEM_TOTAL_PAY_PRICE > 0)
		BEGIN
			RAISERROR ('실 결제액이 존재하는데 포인트결제로 처리될 수 없습니다.',16,1);
			RETURN
		END
		IF @MEM_POINT_USE_PRICE > 0
		BEGIN
			SELECT @MEM_M_POINT = ISNULL(M_POINT,0)
			FROM TB_MEMBER WITH (NOLOCK)
			WHERE M_ID = @MEM_M_ID
			
			IF @MEM_POINT_USE_PRICE > @MEM_M_POINT
			BEGIN
				RAISERROR ('적립포인트가 결제에 사용된 포인트보다 작습니다.',16,1);
				RETURN
			END
		END
		IF ( ( @MEM_M_GBN = 'A' ) AND ( @MEM_EMP_DISCOUNT_AMT > 0 ) )
		BEGIN
			RAISERROR ('임직원 할인이 잘못 적용되었습니다.',16,1);
			RETURN
		END
		IF @MEM_TRANS_COUPON > 0
		BEGIN
			DECLARE @TRANS_COUPON_EXIST INT = 0
			
			SELECT TOP 1 @TRANS_COUPON_EXIST = ISNULL(A.IDX_COUPON_NUMBER,0)
			FROM VIEW_USABLE_COUPON_LIST A WITH (NOLOCK)
			WHERE A.M_ID = @MEM_M_ID
			AND A.IDX_COUPON_NUMBER = @MEM_TRANS_COUPON
			AND A.COUPON_GBN = 'S'
			AND A.USE_STATUS  = 5
			
			IF @TRANS_COUPON_EXIST = 0
			BEGIN
				RAISERROR ('주문에 사용된 배송쿠폰이 존재하지 않습니다.',16,1);
				RETURN
			END
		END
			
		DECLARE @BAD_COUPON_YN INT = 0
		
		SELECT @BAD_COUPON_YN = COUNT(*)
		FROM TB_ORDER_DETAIL_TMP A WITH (NOLOCK)
			LEFT JOIN VIEW_USABLE_COUPON_LIST B WITH (NOLOCK)
				ON A.IDX_COUPON_NUMBER = B.IDX_COUPON_NUMBER
				AND B.M_ID = @MEM_M_ID
				AND B.COUPON_GBN = 'M'
				AND B.USE_STATUS  = 5
		WHERE A.ORDER_IDX = @ORDER_IDX
		AND A.IDX_COUPON_NUMBER IS NOT NULL
		AND B.IDX_COUPON_NUMBER IS NULL

		IF @BAD_COUPON_YN > 0
		BEGIN
			RAISERROR ('주문에 사용된 상품쿠폰이 존재하지 않습니다.',16,1);
			RETURN
		END

	END

	/*
		주문테이블을 재구성
	
	*/
	IF OBJECT_ID('tempdb..#TB_ORDER_MASTER_CHK') is not null
	BEGIN
	  DROP TABLE #TB_ORDER_MASTER_CHK;
	END
	IF OBJECT_ID('tempdb..#TB_ORDER_DETAIL_CHK') is not null
	BEGIN
	  DROP TABLE #TB_ORDER_DETAIL_CHK;
	END	


	SELECT ORDER_IDX
			, MEMBER_ORDER_GBN
			, M_ID
			, M_GRADE
			, M_GBN
			, SESSION_ID
			, TOTAL_ORDER_PRICE
			, TRANS_PRICE
			, TRANS_COUPON
			, EMP_DISCOUNT_AMT
			, COUPON_DISCOUNT_AMT
			, POINT_USE_PRICE
			, GRADE_DISCOUNT_AMT
			, DISCOUNT_AMT
			, TOTAL_PAY_PRICE
			, ACCML_POINT
			INTO #TB_ORDER_MASTER_CHK
	FROM TB_ORDER_MASTER_TMP WITH (NOLOCK)
	WHERE ORDER_IDX = @ORDER_IDX



	SELECT A.ORDER_DETAIL_IDX
			, A.ORDER_IDX
			, A.P_CODE
			, A.P_NAME
			, A.P_SUB_TITLE
			, A.P_IMG1_S
			, A.ICON_NEW
			, A.ICON_BEST
			, A.ICON_SOLDOUT
			, A.ICON_CUSTOM
			, A.ICON_ONEPLUS
			, A.ICON_SET
			, A.ICON_TIME
			, A.ICON_COUPON
			, A.SELLING_PRICE
			, A.DISCOUNT_RATE
			, A.DISCOUNT_PRICE
			, A.PROMOTION_TYPE
			, A.CD_PROMOTION_PRODUCT
			, A.EMP_DISCOUNT
			, A.EMP_PMO_TOTAL_RATE_OR_MONEY
			, A.EMP_PMO_TOTAL_DISCOUNT_RATE
			, A.EMP_PMO_TOTAL_DISCOUNT_MONEY
			, A.EMP_DISCOUNT_AMT
			, A.EMP_DISCOUNT_PRICE
			, A.ORDER_PRICE
			, A.IDX_COUPON_NUMBER
			, A.CD_COUPON
			, A.RATE_OR_MONEY
			, A.COUPON_DISCOUNT_MONEY
			, A.COUPON_DISCOUNT_RATE
			, A.COUPON_DISCOUNT_AMT
			, A.COUPON_DISCOUNT_PRICE
			, A.USE_POINT
			, A.GRADE_DISCOUNT
			, A.GRADE_PMO_TOTAL_RATE_OR_MONEY
			, A.GRADE_PMO_TOTAL_DISCOUNT_RATE
			, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY
			, A.GRADE_DISCOUNT_AMT
			, A.POINT_ACCML
			, A.POINT_ACCML_DATE
			, A.P_COUNT
			, A.REAL_PAY_PRICE
			, '' AS SOLDOUT_YN
			INTO #TB_ORDER_DETAIL_CHK
	FROM TB_ORDER_DETAIL_TMP A WITH (NOLOCK)
		INNER JOIN TB_PRODUCT_INFO B WITH (NOLOCK)
			ON A.P_CODE = B.P_CODE
			AND ISNULL(B.DISPLAY_YN,'N') = 'Y'		-- 전시중인 상품만
			AND ISNULL(B.SOLDOUT_YN,'N') = 'N'		-- 품절체크
	WHERE A.ORDER_IDX = @ORDER_IDX
	ORDER BY A.ORDER_DETAIL_IDX

	DECLARE @ORDER_CNT INT = 0
		, @CHECK_CNT INT = 0
	
	SELECT @CHECK_CNT = COUNT(*)
	FROM #TB_ORDER_DETAIL_CHK
	
	IF @CHECK_CNT < 1
	BEGIN
		RAISERROR ('주문상품의 조건이 변경되었습니다.',16,1);
		RETURN
	END	

	SELECT @ORDER_CNT = COUNT(*)
	FROM TB_ORDER_DETAIL_TMP A WITH (NOLOCK)
	WHERE A.ORDER_IDX = @ORDER_IDX
	
	IF @CHECK_CNT <> @ORDER_CNT
	BEGIN
		RAISERROR ('주문상품의 조건이 변경되었습니다.',16,1);
		RETURN
	END	

	/*
		제품에 적용된 가격,프로모션,계산 등등을 확인
	*/
	IF @MEMBER_ORDER_GBN = '1'				/****************************************          회원이면 START                *************************************/
	BEGIN


		/*
			이부분에 프로모션 검색로직을...
				1. SET상품의 조건이 충족되는 상품들 검색후 처리
				3. 1+1상품 검색처리
				4. TIME SALE상품 검색처리
				5. 기획전(따로 검색해야함?)상품 검색처리
				6. 1~5까지 안걸린 상품은 상품테이블의 가격정보를 입력
		
		*/
		-- 1. SET 프로모션이 걸려있는게 있는지 검사

		SELECT TOP 1  @SET_ID = A.CD_PROMOTION_PRODUCT
			, @SET_CNT = ISNULL(A.PMO_ONEONE_MULTIPLE_CNT,2)
		FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		WHERE A.PMO_PRODUCT_CATEGORY = '01'

		IF @SET_ID <> ''
		BEGIN
			SELECT @SET_ORDER_CNT = COUNT(*)
			FROM #TB_ORDER_DETAIL_CHK A
				INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
					ON A.P_CODE = B.P_CODE
					AND B.CD_PROMOTION_PRODUCT = @SET_ID

			IF @SET_ORDER_CNT >= @SET_CNT
			BEGIN
				UPDATE A
				SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
					, A.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
					, A.DISCOUNT_PRICE = B.RESULT_PRICE
					, A.EMP_DISCOUNT = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
					, A.EMP_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN C.PMO_TOTAL_CATEGORY ELSE C.PMO_TOTAL_RATE_OR_MONEY END
					, A.EMP_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_RATE,0) END
					, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_MONEY,0) END
					, A.GRADE_DISCOUNT = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
					, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN D.PMO_TOTAL_CATEGORY ELSE D.PMO_TOTAL_RATE_OR_MONEY END
					, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_RATE,0) END
					, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_MONEY,0) END
				FROM #TB_ORDER_DETAIL_CHK A
					INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
						ON A.P_CODE = B.P_CODE
						AND B.CD_PROMOTION_PRODUCT = @SET_ID
					LEFT OUTER JOIN VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL C WITH (NOLOCK)
						ON A.P_CODE = C.P_CODE
						AND C.CD_PROMOTION_PRODUCT = @SET_ID
						AND C.PMO_TOTAL_CATEGORY = '00'		-- 임직원할인폭 조건
						AND C.M_GBN = @M_GBN
						AND C.M_GRADE = @M_GRADE
					LEFT OUTER JOIN VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL D WITH (NOLOCK)
						ON A.P_CODE = D.P_CODE
						AND D.CD_PROMOTION_PRODUCT = @SET_ID
						AND D.PMO_TOTAL_CATEGORY = '03'		-- 등급할인폭 조건
						AND D.M_GBN = @M_GBN
						AND D.M_GRADE = @M_GRADE

			END
		END
		
		-- 2. SET 프로모션외의 다른프로모션이 걸린 상품이 있으면, 걸린 프로모션 적용
		UPDATE A
		SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
			, A.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
			, A.DISCOUNT_PRICE = B.RESULT_PRICE
			, A.EMP_DISCOUNT = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
			, A.EMP_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN C.PMO_TOTAL_CATEGORY ELSE C.PMO_TOTAL_RATE_OR_MONEY END
			, A.EMP_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_RATE,0) END
			, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_MONEY,0) END
			, A.GRADE_DISCOUNT = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
			, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN D.PMO_TOTAL_CATEGORY ELSE D.PMO_TOTAL_RATE_OR_MONEY END
			, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_RATE,0) END
			, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_MONEY,0) END
		FROM #TB_ORDER_DETAIL_CHK A
			INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
				AND B.PMO_PRODUCT_CATEGORY IN ('02','03')
			LEFT OUTER JOIN VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL C WITH (NOLOCK)
				ON A.P_CODE = C.P_CODE
				AND C.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
				AND C.PMO_TOTAL_CATEGORY = '00'		-- 임직원할인폭 조건
				AND C.M_GBN = @M_GBN
				AND C.M_GRADE = @M_GRADE
			LEFT OUTER JOIN VIEW_PRODUCT_PRICE_VS_PROMOTION_TOTAL D WITH (NOLOCK)
				ON A.P_CODE = D.P_CODE
				AND D.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
				AND D.PMO_TOTAL_CATEGORY = '03'		-- 등급할인폭 조건
				AND D.M_GBN = @M_GBN
				AND D.M_GRADE = @M_GRADE
		WHERE A.PROMOTION_TYPE = '99'


		-- 프로모션이 안걸린(DISCOUNT_PRICE가 NULL인) 상품의 가격을 상품테이블의 가격으로 셋팅
		-- 프로모션이 걸리지 않은 상품의 등급합인,임직원 할인폭을 조회저장
		UPDATE A
		SET A.DISCOUNT_RATE = ISNULL(B.DISCOUNT_RATE,0)
		, A.DISCOUNT_PRICE = ISNULL(B.DISCOUNT_PRICE,0)
		, A.EMP_DISCOUNT = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
		, A.EMP_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN C.PMO_TOTAL_CATEGORY ELSE C.PMO_TOTAL_RATE_OR_MONEY END
		, A.EMP_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_RATE,0) END
		, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN C.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(C.PMO_TOTAL_DISCOUNT_MONEY,0) END
		, A.GRADE_DISCOUNT = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE 1 END
		, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN D.PMO_TOTAL_CATEGORY ELSE D.PMO_TOTAL_RATE_OR_MONEY END
		, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_RATE,0) END
		, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = CASE WHEN D.PMO_TOTAL_CATEGORY IS NULL THEN 0 ELSE ISNULL(D.PMO_TOTAL_DISCOUNT_MONEY,0) END
		FROM #TB_ORDER_DETAIL_CHK A
			LEFT JOIN TB_PRODUCT_INFO B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
			LEFT OUTER JOIN 
				( SELECT C.M_GBN, C.M_GRADE, C.PMO_TOTAL_CATEGORY
						, MAX(C.PMO_TOTAL_RATE_OR_MONEY) AS PMO_TOTAL_RATE_OR_MONEY
						, MAX(C.PMO_TOTAL_DISCOUNT_RATE) AS PMO_TOTAL_DISCOUNT_RATE
						, MAX(C.PMO_TOTAL_DISCOUNT_MONEY) AS PMO_TOTAL_DISCOUNT_MONEY
				  FROM VIEW_PROMOTION_TOTAL_INFO C  WITH (NOLOCK)
				  WHERE C.PMO_TOTAL_CATEGORY = '00'   -- 임직원할인폭 조건
				  GROUP BY C.M_GBN, C.M_GRADE, C.PMO_TOTAL_CATEGORY
				) AS C
				ON C.M_GBN = @M_GBN
				AND C.M_GRADE = @M_GRADE
			LEFT OUTER JOIN 
				( SELECT D.M_GBN, D.M_GRADE, D.PMO_TOTAL_CATEGORY
						, MAX(D.PMO_TOTAL_RATE_OR_MONEY) AS PMO_TOTAL_RATE_OR_MONEY
						, MAX(D.PMO_TOTAL_DISCOUNT_RATE) AS PMO_TOTAL_DISCOUNT_RATE
						, MAX(D.PMO_TOTAL_DISCOUNT_MONEY) AS PMO_TOTAL_DISCOUNT_MONEY
				  FROM VIEW_PROMOTION_TOTAL_INFO D  WITH (NOLOCK)
				  WHERE D.PMO_TOTAL_CATEGORY = '03'   -- 등급할인폭 조건
				  GROUP BY D.M_GBN, D.M_GRADE, D.PMO_TOTAL_CATEGORY
				) AS D
				ON C.M_GBN = @M_GBN
				AND C.M_GRADE = @M_GRADE
		WHERE A.PROMOTION_TYPE = '99'
		--		exec SP_ORDER_STEP1 'test_v099','','RAA00108','1'

		/*
			프로모션 적용끝	
		*/

		-- 안전장치를 위해 할인가격이 0인것은 품절처리
		UPDATE A
		SET A.SOLDOUT_YN = 'Y'
		FROM #TB_ORDER_DETAIL_CHK A
		WHERE A.DISCOUNT_PRICE < 1		



		-- 임직원의 경우 임직원 할인대상 상품가격 조정
		IF @M_GBN = 'S'
		BEGIN
			UPDATE A
			SET A.EMP_DISCOUNT_AMT = 
					CASE WHEN A.EMP_PMO_TOTAL_RATE_OR_MONEY = 'R' THEN FLOOR(A.DISCOUNT_PRICE / 100.0 * A.EMP_PMO_TOTAL_DISCOUNT_RATE )
					ELSE A.EMP_PMO_TOTAL_DISCOUNT_MONEY END
				, A.EMP_DISCOUNT_PRICE = DISCOUNT_PRICE - 
					CASE WHEN A.EMP_PMO_TOTAL_RATE_OR_MONEY = 'R' THEN FLOOR(A.DISCOUNT_PRICE / 100.0 * A.EMP_PMO_TOTAL_DISCOUNT_RATE )
					ELSE A.EMP_PMO_TOTAL_DISCOUNT_MONEY END
			FROM #TB_ORDER_DETAIL_CHK A
			WHERE A.EMP_DISCOUNT = 1
			AND A.EMP_PMO_TOTAL_RATE_OR_MONEY IS NOT NULL

			UPDATE A
			SET A.EMP_DISCOUNT_AMT = 0
				, A.EMP_DISCOUNT_PRICE = A.DISCOUNT_PRICE
			FROM #TB_ORDER_DETAIL_CHK A
			WHERE A.EMP_PMO_TOTAL_RATE_OR_MONEY IS NULL
		END	
		ELSE BEGIN
			UPDATE A
			SET A.EMP_DISCOUNT_AMT = 0
				, A.EMP_DISCOUNT_PRICE = A.DISCOUNT_PRICE
			FROM #TB_ORDER_DETAIL_CHK A
		END

		UPDATE A
		SET A.ORDER_PRICE = A.EMP_DISCOUNT_PRICE * A.P_COUNT
			, A.COUPON_DISCOUNT_AMT = 0
			, A.COUPON_DISCOUNT_PRICE = A.EMP_DISCOUNT_PRICE
			, A.USE_POINT = 0
		FROM #TB_ORDER_DETAIL_CHK A

		-- 등급할인대상 상품가격 조정
		UPDATE A
		SET A.GRADE_DISCOUNT_AMT = 
				CASE WHEN A.GRADE_PMO_TOTAL_RATE_OR_MONEY = 'R' THEN ( A.EMP_DISCOUNT_PRICE - FLOOR(A.EMP_DISCOUNT_PRICE / 100.0 * ( 100 - A.GRADE_PMO_TOTAL_DISCOUNT_RATE ) ) ) * A.P_COUNT
				ELSE ( A.GRADE_PMO_TOTAL_DISCOUNT_MONEY * A.P_COUNT ) END
		FROM #TB_ORDER_DETAIL_CHK A
		WHERE A.GRADE_DISCOUNT = 1
		AND A.GRADE_PMO_TOTAL_RATE_OR_MONEY IS NOT NULL

		UPDATE A
		SET A.GRADE_DISCOUNT_AMT = 0
		FROM #TB_ORDER_DETAIL_CHK A
		WHERE A.GRADE_PMO_TOTAL_RATE_OR_MONEY IS NULL




		-- 할인율,할인금액을 계산하고, 상품별 주문금액 산정
		-- 적립될 포인트 계산 (일단 3%로 고정)
		UPDATE A
		SET A.DISCOUNT_RATE = 100 - ROUND( A.EMP_DISCOUNT_AMT * 100.0 / A.SELLING_PRICE , 1)
		FROM #TB_ORDER_DETAIL_CHK A
		WHERE A.SELLING_PRICE > 0

		--UPDATE A
		---- SET A.P_POINT = FLOOR( ( CASE WHEN A.EMP_DISCOUNT_PRICE = 0 THEN A.DISCOUNT_PRICE ELSE A.EMP_DISCOUNT_PRICE END - A.GRADE_DISCOUNT_PRICE )  * A.P_COUNT * 0.03 )
		--SET A.P_POINT = FLOOR( A.GRADE_DISCOUNT_PRICE * A.P_COUNT * 0.03 )
		--FROM #CARTLIST A
		--WHERE A.SELLING_PRICE > 0


	END				/****************************************          회원이면 END                *************************************/
	ELSE BEGIN			/****************************************          비회원이면                *************************************/

		SELECT TOP 1  @SET_ID = A.CD_PROMOTION_PRODUCT
			, @SET_CNT = ISNULL(A.PMO_ONEONE_MULTIPLE_CNT,2)
		FROM VIEW_PRODUCT_VS_PROMOTION_LIST A WITH (NOLOCK)
		WHERE A.PMO_PRODUCT_CATEGORY = '01'

		IF @SET_ID <> ''
		BEGIN
			SELECT @SET_ORDER_CNT = COUNT(*)
			FROM #TB_ORDER_DETAIL_CHK A
				INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
					ON A.P_CODE = B.P_CODE
					AND B.CD_PROMOTION_PRODUCT = @SET_ID

			IF @SET_ORDER_CNT >= @SET_CNT
			BEGIN
				UPDATE A
				SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
					, A.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
					, A.DISCOUNT_PRICE = B.RESULT_PRICE
					, A.EMP_DISCOUNT = 0
					, A.EMP_PMO_TOTAL_RATE_OR_MONEY = NULL
					, A.EMP_PMO_TOTAL_DISCOUNT_RATE = 0
					, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = 0
					, A.GRADE_DISCOUNT = 0
					, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = NULL
					, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = 0
					, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = 0
				FROM #TB_ORDER_DETAIL_CHK A
					INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
						ON A.P_CODE = B.P_CODE
						AND B.CD_PROMOTION_PRODUCT = @SET_ID

			END
		END
		
		-- 2. SET 프로모션외의 다른프로모션이 걸린 상품이 있으면, 걸린 프로모션 적용
		UPDATE A
		SET A.PROMOTION_TYPE = B.PMO_PRODUCT_CATEGORY
			, A.CD_PROMOTION_PRODUCT = B.CD_PROMOTION_PRODUCT
			, A.DISCOUNT_PRICE = B.RESULT_PRICE
			, A.EMP_DISCOUNT = 0
			, A.EMP_PMO_TOTAL_RATE_OR_MONEY = NULL
			, A.EMP_PMO_TOTAL_DISCOUNT_RATE = 0
			, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = 0
			, A.GRADE_DISCOUNT = 0
			, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = NULL
			, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = 0
			, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = 0
		FROM #TB_ORDER_DETAIL_CHK A
			INNER JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
				AND B.PMO_PRODUCT_CATEGORY IN ('02','03')
		WHERE A.PROMOTION_TYPE = '99'


		-- 프로모션이 안걸린(DISCOUNT_PRICE가 NULL인) 상품의 가격을 상품테이블의 가격으로 셋팅
		-- 프로모션이 걸리지 않은 상품의 등급합인,임직원 할인폭을 조회저장
		UPDATE A
		SET A.DISCOUNT_RATE = ISNULL(B.DISCOUNT_RATE,0)
		, A.DISCOUNT_PRICE = ISNULL(B.DISCOUNT_PRICE,0)
		, A.EMP_DISCOUNT = 0
		, A.EMP_PMO_TOTAL_RATE_OR_MONEY = NULL
		, A.EMP_PMO_TOTAL_DISCOUNT_RATE = 0
		, A.EMP_PMO_TOTAL_DISCOUNT_MONEY = 0
		, A.GRADE_DISCOUNT = 0
		, A.GRADE_PMO_TOTAL_RATE_OR_MONEY = NULL
		, A.GRADE_PMO_TOTAL_DISCOUNT_RATE = 0
		, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY = 0
		FROM #TB_ORDER_DETAIL_CHK A
			LEFT JOIN TB_PRODUCT_INFO B WITH (NOLOCK)
				ON A.P_CODE = B.P_CODE
		WHERE A.PROMOTION_TYPE = '99'
		

		/*
			프로모션 적용끝	
		*/

		-- 안전장치를 위해 할인가격이 0인것은 품절처리
		UPDATE A
		SET A.SOLDOUT_YN = 'Y'
		FROM #TB_ORDER_DETAIL_CHK A
		WHERE A.DISCOUNT_PRICE < 1


		UPDATE A
		SET A.EMP_DISCOUNT = 0
			, A.EMP_DISCOUNT_AMT = 0
			, A.EMP_DISCOUNT_PRICE = A.DISCOUNT_PRICE
			, A.COUPON_DISCOUNT_AMT = 0
			, A.COUPON_DISCOUNT_PRICE = A.DISCOUNT_PRICE
			, A.USE_POINT = 0
			, A.GRADE_DISCOUNT = 0
			, A.GRADE_DISCOUNT_AMT = 0
			, A.ORDER_PRICE = A.DISCOUNT_PRICE * A.P_COUNT
		FROM #TB_ORDER_DETAIL_CHK A
		WHERE A.SELLING_PRICE > 0

	END					/****************************************          비회원이면                *************************************/

	DELETE FROM #TB_ORDER_DETAIL_CHK
	WHERE SOLDOUT_YN = 'Y'
	
	UPDATE A
	SET POINT_ACCML = FLOOR( ( ( A.EMP_DISCOUNT_PRICE * A.P_COUNT ) - A.COUPON_DISCOUNT_AMT - A.USE_POINT - A.GRADE_DISCOUNT_AMT ) * 0.03 )
	, REAL_PAY_PRICE = ( A.ORDER_PRICE - A.COUPON_DISCOUNT_AMT - A.USE_POINT - A.GRADE_DISCOUNT_AMT )
	FROM #TB_ORDER_DETAIL_CHK A
	

	;
	WITH SRC AS (
	SELECT MAX(ORDER_IDX) AS ORDER_IDX
		, SUM(SELLING_PRICE) AS SELLING_PRICE
		, SUM(DISCOUNT_PRICE * P_COUNT) AS DISCOUNT_PRICE		
		, SUM(ORDER_PRICE) AS ORDER_PRICE
		, SUM(COUPON_DISCOUNT_AMT) AS COUPON_DISCOUNT_AMT
		, SUM(USE_POINT) AS USE_POINT
		, SUM(GRADE_DISCOUNT_AMT) AS GRADE_DISCOUNT_AMT
		, SUM(EMP_DISCOUNT_AMT  * P_COUNT) AS EMP_DISCOUNT_AMT
		, SUM(REAL_PAY_PRICE) AS REAL_PAY_PRICE
		, SUM(POINT_ACCML) AS POINT_ACCML
	FROM #TB_ORDER_DETAIL_CHK
	)
	UPDATE A
	SET A.TOTAL_ORDER_PRICE = SRC.DISCOUNT_PRICE
		, A.COUPON_DISCOUNT_AMT = SRC.COUPON_DISCOUNT_AMT
		, A.GRADE_DISCOUNT_AMT = SRC.GRADE_DISCOUNT_AMT
		, A.POINT_USE_PRICE = SRC.USE_POINT
		, A.EMP_DISCOUNT_AMT = SRC.EMP_DISCOUNT_AMT
		, A.DISCOUNT_AMT = SRC.COUPON_DISCOUNT_AMT + SRC.GRADE_DISCOUNT_AMT + SRC.EMP_DISCOUNT_AMT + SRC.USE_POINT
		, A.TOTAL_PAY_PRICE = SRC.REAL_PAY_PRICE
		, A.ACCML_POINT = SRC.POINT_ACCML
	FROM #TB_ORDER_MASTER_CHK A, SRC
	WHERE A.ORDER_IDX = SRC.ORDER_IDX

	UPDATE A
	SET A.TRANS_PRICE = CASE WHEN A.TOTAL_PAY_PRICE >= 30000 THEN 0 WHEN ISNULL(A.TRANS_COUPON,0) > 0 THEN 0 ELSE 2500 END
		, A.TOTAL_PAY_PRICE = A.TOTAL_PAY_PRICE + CASE WHEN A.TOTAL_PAY_PRICE >= 30000 THEN 0 WHEN ISNULL(A.TRANS_COUPON,0) > 0 THEN 0 ELSE 2500 END
	FROM #TB_ORDER_MASTER_CHK A


	SET @CHK_ERROR_CNT = 0
	
	SELECT @CHK_ERROR_CNT = COUNT(*)
	FROM #TB_ORDER_DETAIL_CHK A
		INNER JOIN TB_ORDER_DETAIL_TMP B WITH (NOLOCK)
			ON A.ORDER_DETAIL_IDX = B.ORDER_DETAIL_IDX
	WHERE A.SELLING_PRICE <> B.SELLING_PRICE
	OR A.PROMOTION_TYPE <> B.PROMOTION_TYPE
	OR A.CD_PROMOTION_PRODUCT <> B.CD_PROMOTION_PRODUCT
	OR A.EMP_DISCOUNT <> B.EMP_DISCOUNT
	OR A.EMP_PMO_TOTAL_RATE_OR_MONEY <> B.EMP_PMO_TOTAL_RATE_OR_MONEY
	OR A.EMP_PMO_TOTAL_DISCOUNT_RATE <> B.EMP_PMO_TOTAL_DISCOUNT_RATE
	OR A.EMP_PMO_TOTAL_DISCOUNT_MONEY <> B.EMP_PMO_TOTAL_DISCOUNT_MONEY
	OR A.EMP_DISCOUNT_AMT <> B.EMP_DISCOUNT_AMT
	OR A.EMP_DISCOUNT_PRICE <> B.EMP_DISCOUNT_PRICE
	OR A.ORDER_PRICE <> B.ORDER_PRICE
	
	IF @CHK_ERROR_CNT > 0
	BEGIN
		RAISERROR ('상품금액의 조건이 변경되었습니다.',16,1);
		RETURN
	END

--		EXEC SP_ORDER_CONFIG_CHECK__ 350

/*
	SELECT *
	FROM TB_ORDER_MASTER_TMP WITH (NOLOCK)
	WHERE ORDER_IDX = @ORDER_IDX

	SELECT * FROM #TB_ORDER_MASTER_CHK


	SELECT *
	FROM TB_ORDER_DETAIL_TMP WITH (NOLOCK)
	WHERE ORDER_IDX = @ORDER_IDX
	ORDER BY ORDER_DETAIL_IDX 

	SELECT * FROM #TB_ORDER_DETAIL_CHK
	ORDER BY ORDER_DETAIL_IDX 
*/

	IF OBJECT_ID('tempdb..#TB_ORDER_MASTER_CHK') is not null
	BEGIN
	  DROP TABLE #TB_ORDER_MASTER_CHK;
	END
	IF OBJECT_ID('tempdb..#TB_ORDER_DETAIL_CHK') is not null
	BEGIN
	  DROP TABLE #TB_ORDER_DETAIL_CHK;
	END
	/*
		정상임을 리턴
	*/
	SELECT 'OK' as RESULT

/*

SELECT * FROM TB_ORDER_MASTER_TMP
SELECT * FROM TB_ORDER_DETAIL_TMP


exec SP_ORDER_CONFIG_CHECK 54


exec SP_ORDER_CONFIG_CHECK 7


*/	

	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_VIEW_PRODUCT_DETAIL_SEL]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 개별 쿠폰당 사용가능 상품리스트 RESULTSET 용 
                  
 * Modified  :   2015.07.22
 * Modified  :     
 * Modified  :    
 ============================================================*/   

CREATE PROC [dbo].[SP_COUPON_VIEW_PRODUCT_DETAIL_SEL]
 @M_ID VARCHAR(13)
,@IDX_COUPON_SERIAL INT


AS

    SET NOCOUNT ON 
    
    SELECT  
		  A.P_CODE --상품코드  
		 ,A.CD_COUPON --쿠폰마스터 코드  
		 ,A.IDX_COUPON_NUMBER --쿠폰번호  
		 ,A.M_ID --회원아이디  
		 ,A.P_NAME
		 ,A.MAIN_IMG
		 ,A.OTHER_IMG1
		 ,A.SELLING_PRICE
		 ,A.DISCOUNT_PRICE
		 ,A.P_SUB_TITLE
		 ,A.P_TAG
	FROM 
	  [VIEW_USABLE_COUPON_PRODUCT_LIST] A
	 
	WHERE M_ID=@M_ID AND IDX_COUPON_NUMBER = @IDX_COUPON_SERIAL
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_PRODUCT_LIST_SEL]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 개별 쿠폰당 사용가능 상품리스트 
                  
 * Modified  :   2015.07.22
 * Modified  :     
 * Modified  :  
 
 EXEC [SP_COUPON_PRODUCT_LIST_SEL]  'test_b1s', 100009089 , 1, 10 , '' ,'' 
 
 ============================================================*/   

CREATE PROC [dbo].[SP_COUPON_PRODUCT_LIST_SEL]
 @M_ID VARCHAR(13)
,@IDX_COUPON_SERIAL INT
,@PAGE				INT			--현재 PAGE
,@PAGESIZE			INT			--페이지 사이즈
,@SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드

AS


	SET NOCOUNT ON
	--SET FMTONLY OFF
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	
	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		TMP_P_CODE	VARCHAR(10) 
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @V_SQL  ='INSERT INTO #TEMPLIST (TMP_P_CODE) SELECT P_CODE ';
	SET @V_SQL  =@V_SQL + ' FROM [VIEW_USABLE_COUPON_PRODUCT_LIST] '
	SET @V_SQL  =@V_SQL + '    WHERE 1=1 AND M_ID=''' +@M_ID+ ''' '
	SET @V_SQL  =@V_SQL + '    AND IDX_COUPON_NUMBER ='+cast(@IDX_COUPON_SERIAL as varchar(12))+' ' -- P=PC AND 모바일 , M=모바일 전용 

	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
		BEGIN
		  SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
		END

		
	SET @V_SQL  =@V_SQL + '	ORDER BY P_CODE DESC' ;
	
	EXEC(@V_SQL);
	--PRINT @V_SQL



    SELECT  
		  A.P_CODE --상품코드  
		 ,A.CD_COUPON --쿠폰마스터 코드  
		 ,A.IDX_COUPON_NUMBER --쿠폰번호  
		 ,A.M_ID --회원아이디  
		 ,A.P_NAME
		 ,A.MAIN_IMG
		 ,A.OTHER_IMG1
		 ,A.SELLING_PRICE
		 ,A.DISCOUNT_PRICE
		 ,A.P_SUB_TITLE
		 ,A.P_TAG
	FROM 
	  [VIEW_USABLE_COUPON_PRODUCT_LIST] A
	  INNER JOIN #TEMPLIST T ON A.P_CODE = T.TMP_P_CODE AND A.IDX_COUPON_NUMBER=@IDX_COUPON_SERIAL
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_ISSUED_DETAIL_SEL]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description :   쿠폰상세정보
                  
 * Modified  :   2015.07.21
 * Modified  :     
 * Modified  :    
 ============================================================*/   

CREATE PROC [dbo].[SP_COUPON_ISSUED_DETAIL_SEL]
 @IDX_COUPON_NUMBER INT
 
AS


SET NOCOUNT ON 

SELECT  
  IDX_COUPON_NUMBER
 ,M_ID
 ,COUPON_NAME
 ,DOWNLOAD_DATE_FROM
 ,DOWNLOAD_DATE_TO
 ,COUPON_GBN  -- M= 지불쿠폰, S=배송쿠폰 
 ,RATE_OR_MONEY -- R=정률 ,M=정액  
 ,COUPON_MONEY  -- 쿠폰 금액   
 ,COUPON_DISCOUNT_RATE --쿠폰할인율 (정률제의 경우)  
 ,USABLE_DATE_FROM --사용가능기간(FROM)  
 ,USABLE_DATE_TO --사용가능기간(TO)
 ,USE_STATUS
 ,COUPON_AD_MSG --  쿠폰 광고메시지
 ,COUPON_USE_DESCRIPTION -- 쿠폰 사용조건 광고 DESCRIPTTION ( EX 30000~50000 이상 구매시 사용할 수 있습니다...)
FROM 
  dbo.VIEW_USABLE_COUPON_LIST
WHERE 
  IDX_COUPON_NUMBER=@IDX_COUPON_NUMBER
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_DOWNLOADABLE_ON_MOBILE_LIST]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================        
 * Author  : 송선우 (swsong2@cstone.co.kr)        
 * Company  : 코너스톤 인터랙티브        
 * Description : 다운로드 가능 쿠폰 리스트   (모바일버전- 모바일에서만 사용)  
                      
 * Modified  :   2015.08.25   
 * Modified  :         
 * Modified  :        
 ============================================================*/       
    
CREATE PROC [dbo].[SP_COUPON_DOWNLOADABLE_ON_MOBILE_LIST]    
 @M_ID VARCHAR(13)
,@PAGE				INT			--현재 PAGE
,@PAGESIZE			INT			--페이지 사이즈
,@SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드
     
AS    
    
SET NOCOUNT ON
	--SET FMTONLY OFF
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	
	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX_COUPON_NUMBER ';
	SET @V_SQL  =@V_SQL + ' FROM VIEW_USABLE_COUPON_LIST '
	SET @V_SQL  =@V_SQL + '    WHERE 1=1 AND (M_ID=''' +@M_ID+ ''' '
	SET @V_SQL  =@V_SQL + '    AND USE_STATUS=''1''   )'      -- 쿠폰사용단계 : 발행(다운로드가능) = 1 , 사용가능(인증,다운로드완료)= 5 , 사용완료 = 10  ;

	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
		BEGIN
		  SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
		END

		
	SET @V_SQL  =@V_SQL + '	ORDER BY IDX_COUPON_NUMBER DESC' ;
	
	EXEC(@V_SQL);
	--PRINT @V_SQL


	SELECT  
	  IDX_COUPON_NUMBER
	 ,M_ID
	 ,COUPON_NAME
	 ,DOWNLOAD_DATE_FROM
	 ,DOWNLOAD_DATE_TO
	 ,COUPON_GBN  -- M= 지불쿠폰, S=배송쿠폰 
	 ,RATE_OR_MONEY -- R=정률 ,M=정액  
	 ,COUPON_MONEY  -- 쿠폰 금액   
	 ,COUPON_DISCOUNT_RATE --쿠폰할인율 (정률제의 경우)  
	 ,USABLE_DATE_FROM --사용가능기간(FROM)  
	 ,USABLE_DATE_TO --사용가능기간(TO)
	 ,USE_STATUS
	 ,COUPON_AD_MSG --  쿠폰 광고메시지
	 ,COUPON_USE_DESCRIPTION -- 쿠폰 사용조건 광고 DESCRIPTTION ( EX 30000~50000 이상 구매시 사용할 수 있습니다...)
	FROM 
	  dbo.VIEW_USABLE_COUPON_LIST A
	  INNER JOIN #TEMPLIST T ON A.IDX_COUPON_NUMBER = T.IDX_SEQ 
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_DOWNLOADABLE_LIST]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 다운로드 가능 쿠폰 리스트   (PC 버전)
                    
 * Modified  :   2015.07.21  
 * Modified  :       
 * Modified  :      
 ============================================================*/     
  
CREATE PROC [dbo].[SP_COUPON_DOWNLOADABLE_LIST]  
 @M_ID VARCHAR(13)  
   
AS  
  
  
SET NOCOUNT ON   
  
SELECT    
  IDX_COUPON_NUMBER  
 ,M_ID  
 ,COUPON_NAME  
 ,DOWNLOAD_DATE_FROM  
 ,DOWNLOAD_DATE_TO  
 ,COUPON_GBN  -- M= 지불쿠폰, S=배송쿠폰   
 ,RATE_OR_MONEY -- R=정률 ,M=정액    
 ,COUPON_MONEY  -- 쿠폰 금액     
 ,COUPON_DISCOUNT_RATE --쿠폰할인율 (정률제의 경우)    
 ,USABLE_DATE_FROM --사용가능기간(FROM)    
 ,USABLE_DATE_TO --사용가능기간(TO)  
 ,USE_STATUS  
 ,COUPON_AD_MSG --  쿠폰 광고메시지  
 ,COUPON_USE_DESCRIPTION -- 쿠폰 사용조건 광고 DESCRIPTTION ( EX 30000~50000 이상 구매시 사용할 수 있습니다...)  
FROM   
  dbo.VIEW_USABLE_COUPON_LIST  
WHERE   
 M_ID =  @M_ID   
 AND   
 USABLE_DEVICE_GBN ='P' -- P=PC AND 모바일 , M=모바일 전용    
 AND  
 USE_STATUS = '1' ---- 쿠폰사용단계 : 발행(다운로드가능) = 1 , 사용가능(인증,다운로드완료)= 5 , 사용완료 = 10
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_DOWNLOADABLE_CNT]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 다운로드 가능 쿠폰 COUNT  
                 => 번호확인 필요한 쿠폰까지 포함
                    
 * Modified  :   2015.07.21  
 * Modified  :       
 * Modified  :      
 ============================================================*/     
  
CREATE PROC [dbo].[SP_COUPON_DOWNLOADABLE_CNT] 
 @M_ID VARCHAR(13)  
   
AS  
  
  
SET NOCOUNT ON   
  
SELECT    
  COUNT(IDX_COUPON_NUMBER) AS CNT  
FROM   
  dbo.VIEW_USABLE_COUPON_LIST  
WHERE   
 M_ID =  @M_ID   
 AND   
 USABLE_DEVICE_GBN ='P' -- P=PC AND 모바일 , M=모바일 전용    
 AND  
 USE_STATUS = '1' ---- 쿠폰사용단계 : 발행(다운로드가능) = 1 , 사용가능(인증,다운로드완료)= 5 , 사용완료 = 10
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_AVAILABLE_ON_MOBILE_LIST_SEL]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 사용 가능 쿠폰 리스트 - 모바일에서  
                  
 * Modified  :   2015.08.26
 * Modified  :     
 * Modified  :    
 ============================================================*/   

CREATE PROC [dbo].[SP_COUPON_AVAILABLE_ON_MOBILE_LIST_SEL]
 @M_ID VARCHAR(13)
,@PAGE				INT			--현재 PAGE
,@PAGESIZE			INT			--페이지 사이즈
,@SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드

AS


	SET NOCOUNT ON
	--SET FMTONLY OFF
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	
	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX_COUPON_NUMBER ';
	SET @V_SQL  =@V_SQL + ' FROM VIEW_USABLE_COUPON_LIST '
	SET @V_SQL  =@V_SQL + '    WHERE 1=1 AND (M_ID=''' +@M_ID+ ''' '
	--  SET @V_SQL  =@V_SQL + '    AND USABLE_DEVICE_GBN =''P'' ' -- P=PC AND 모바일 , M=모바일 전용 
	SET @V_SQL  =@V_SQL + '    AND USE_STATUS=''5''   )'      -- 쿠폰사용단계 : 발행(다운로드가능) = 1 , 사용가능(인증,다운로드완료)= 5 , 사용완료 = 10  ;

	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
		BEGIN
		  SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
		END

		
	SET @V_SQL  =@V_SQL + '	ORDER BY IDX_COUPON_NUMBER DESC' ;
	
	EXEC(@V_SQL);
	--PRINT @V_SQL


	SELECT  
	  IDX_COUPON_NUMBER
	 ,M_ID
	 ,COUPON_NAME
	 ,DOWNLOAD_DATE_FROM
	 ,DOWNLOAD_DATE_TO
	 ,COUPON_GBN  -- M= 지불쿠폰, S=배송쿠폰 
	 ,RATE_OR_MONEY -- R=정률 ,M=정액  
	 ,COUPON_MONEY  -- 쿠폰 금액   
	 ,COUPON_DISCOUNT_RATE --쿠폰할인율 (정률제의 경우)  
	 ,USABLE_DATE_FROM --사용가능기간(FROM)  
	 ,USABLE_DATE_TO --사용가능기간(TO)
	 ,USE_STATUS
	 ,COUPON_AD_MSG --  쿠폰 광고메시지
	 ,COUPON_USE_DESCRIPTION -- 쿠폰 사용조건 광고 DESCRIPTTION ( EX 30000~50000 이상 구매시 사용할 수 있습니다...)
	FROM 
	  dbo.VIEW_USABLE_COUPON_LIST A
	  INNER JOIN #TEMPLIST T ON A.IDX_COUPON_NUMBER = T.IDX_SEQ 
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_COMMON_CNT]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description :   쿠폰 DUMMY COUNT 
                  
 * Modified  :   2015.07.21
 * Modified  :     
 * Modified  :    
 ============================================================*/   

CREATE PROC [dbo].[SP_COUPON_COMMON_CNT]

AS


SET NOCOUNT ON 

SELECT  
  ISNULL(COUNT(*),0) AS CNT 
FROM 
  dbo.VIEW_USABLE_COUPON_LIST
WHERE 
  1=0
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_CLOSED_LIST_SEL]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================      
 * Author  : 송선우 (swsong2@cstone.co.kr)      
 * Company  : 코너스톤 인터랙티브      
 * Description : 사용 가능 쿠폰 리스트 (모바일에서 OR PC 에서 )  
                    
 * Modified  :   2015.08.18 
 * Modified  :       
 * Modified  :      
 ============================================================*/     
  
CREATE PROC [dbo].[SP_COUPON_CLOSED_LIST_SEL]  
 @M_ID VARCHAR(13)  
,@USABLE_DEVICE_GBN VARCHAR(1) --  디바이스구분 P=PC AND 모바일 , M=모바일 전용 
,@PAGE    INT   --현재 PAGE  
,@PAGESIZE   INT   --페이지 사이즈  
,@SEARCH_KEY  VARCHAR(100) ='' --검색 필드  
,@SEARCH_KEYWORD VARCHAR(100) ='' --검색 키워드  
  
AS  
  
  
 SET NOCOUNT ON  
 --SET FMTONLY OFF  
   
 DECLARE @LISTCOUNT INT  
 DECLARE @V_SQL NVARCHAR(MAX);  
   
   
 -- 기존에 사용하는 #TEMPLIST 있으면 DROP  
 IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL  
 BEGIN  
   DROP TABLE #TEMPLIST ;  
   PRINT 'DROP...'   
 END   
   
 CREATE TABLE #TEMPLIST  (  
  SEQ   INT IDENTITY(1,1) PRIMARY KEY,  
  IDX_SEQ INT  
 )  
  
 SET @LISTCOUNT = @PAGE * @PAGESIZE  
 SET ROWCOUNT @LISTCOUNT  
  
 SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX_COUPON_NUMBER ';  
 SET @V_SQL  =@V_SQL + ' FROM VIEW_CLOSED_COUPON_LIST '  
 SET @V_SQL  =@V_SQL + '    WHERE 1=1 AND (M_ID=''' +@M_ID+ ''' '  
 
 IF @USABLE_DEVICE_GBN = 'P'
 BEGIN	
	SET @V_SQL  =@V_SQL + '    AND USABLE_DEVICE_GBN =''P''' -- P=PC AND 모바일 , M=모바일 전용   
 END 
 SET @V_SQL  =@V_SQL + '      )'      
  
 IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''  
 BEGIN  
    SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '   
 END  
  
    
 SET @V_SQL  =@V_SQL + ' ORDER BY IDX_COUPON_NUMBER DESC' ;  
   
 EXEC(@V_SQL);  
 --PRINT @V_SQL  
  
  
 SELECT    
   IDX_COUPON_NUMBER  
  ,M_ID  
  ,COUPON_NAME  
  ,DOWNLOAD_DATE_FROM  
  ,DOWNLOAD_DATE_TO  
  ,COUPON_GBN  -- M= 지불쿠폰, S=배송쿠폰   
  ,RATE_OR_MONEY -- R=정률 ,M=정액    
  ,COUPON_MONEY  -- 쿠폰 금액     
  ,COUPON_DISCOUNT_RATE --쿠폰할인율 (정률제의 경우)    
  ,USABLE_DATE_FROM --사용가능기간(FROM)    
  ,USABLE_DATE_TO --사용가능기간(TO)  
  ,USE_STATUS  
  ,COUPON_AD_MSG --  쿠폰 광고메시지  
  ,COUPON_USE_DESCRIPTION -- 쿠폰 사용조건 광고 DESCRIPTTION ( EX 30000~50000 이상 구매시 사용할 수 있습니다...)  
 FROM   
   dbo.VIEW_CLOSED_COUPON_LIST A  
   INNER JOIN #TEMPLIST T ON A.IDX_COUPON_NUMBER = T.IDX_SEQ   
 WHERE T.SEQ > (@PAGE -1) * @PAGESIZE  
 ORDER BY T.SEQ
GO
/****** Object:  StoredProcedure [dbo].[SP_COUPON_AVAILABLE_LIST_SEL]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*============================================================    
 * Author  : 송선우 (swsong2@cstone.co.kr)    
 * Company  : 코너스톤 인터랙티브    
 * Description : 사용 가능 쿠폰 리스트 
                  
 * Modified  :   2015.07.22
 * Modified  :     
 * Modified  :    
 ============================================================*/   

CREATE PROC [dbo].[SP_COUPON_AVAILABLE_LIST_SEL]
 @M_ID VARCHAR(13)
,@PAGE				INT			--현재 PAGE
,@PAGESIZE			INT			--페이지 사이즈
,@SEARCH_KEY		VARCHAR(100) =''	--검색 필드
,@SEARCH_KEYWORD	VARCHAR(100) =''	--검색 키워드

AS


	SET NOCOUNT ON
	--SET FMTONLY OFF
	
	DECLARE @LISTCOUNT INT
	DECLARE @V_SQL NVARCHAR(MAX);
	
	
	-- 기존에 사용하는 #TEMPLIST 있으면 DROP
	IF OBJECT_ID('TEMPDB..#TEMPLIST') IS NOT NULL
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  PRINT 'DROP...' 
	END 
	
	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		IDX_SEQ	INT
	)

	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	SET @V_SQL  ='INSERT INTO #TEMPLIST (IDX_SEQ) SELECT IDX_COUPON_NUMBER ';
	SET @V_SQL  =@V_SQL + ' FROM VIEW_USABLE_COUPON_LIST '
	SET @V_SQL  =@V_SQL + '    WHERE 1=1 AND (M_ID=''' +@M_ID+ ''' '
	SET @V_SQL  =@V_SQL + '    AND USABLE_DEVICE_GBN =''P'' ' -- P=PC AND 모바일 , M=모바일 전용 
	SET @V_SQL  =@V_SQL + '    AND USE_STATUS=''5''   )'      -- 쿠폰사용단계 : 발행(다운로드가능) = 1 , 사용가능(인증,다운로드완료)= 5 , 사용완료 = 10  ;

	IF @SEARCH_KEY <> '' AND @SEARCH_KEYWORD <> ''
		BEGIN
		  SET @V_SQL = @V_SQL + ' AND (' + @SEARCH_KEY + ' LIKE ''%' + @SEARCH_KEYWORD + '%'') '	
		END

		
	SET @V_SQL  =@V_SQL + '	ORDER BY IDX_COUPON_NUMBER DESC' ;
	
	EXEC(@V_SQL);
	--PRINT @V_SQL


	SELECT  
	  IDX_COUPON_NUMBER
	 ,M_ID
	 ,COUPON_NAME
	 ,DOWNLOAD_DATE_FROM
	 ,DOWNLOAD_DATE_TO
	 ,COUPON_GBN  -- M= 지불쿠폰, S=배송쿠폰 
	 ,RATE_OR_MONEY -- R=정률 ,M=정액  
	 ,COUPON_MONEY  -- 쿠폰 금액   
	 ,COUPON_DISCOUNT_RATE --쿠폰할인율 (정률제의 경우)  
	 ,USABLE_DATE_FROM --사용가능기간(FROM)  
	 ,USABLE_DATE_TO --사용가능기간(TO)
	 ,USE_STATUS
	 ,COUPON_AD_MSG --  쿠폰 광고메시지
	 ,COUPON_USE_DESCRIPTION -- 쿠폰 사용조건 광고 DESCRIPTTION ( EX 30000~50000 이상 구매시 사용할 수 있습니다...)
	FROM 
	  dbo.VIEW_USABLE_COUPON_LIST A
	  INNER JOIN #TEMPLIST T ON A.IDX_COUPON_NUMBER = T.IDX_SEQ 
	WHERE T.SEQ > (@PAGE -1) * @PAGESIZE
	ORDER BY T.SEQ
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_FRONT_MEMBER_VIEW]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-01
-- Description:	관리자> 회원관리- 상세정보 1명
-- ussage: 
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_FRONT_MEMBER_VIEW]
	 @M_ID	varchar(13)	='' -- 회원계정
AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 

	SELECT 	
	[M_NO],
	[M_ID],
	[M_NAME],
	[M_PWD],
	[M_GRADE],
	[M_SEX],
	[M_BIRTHDAY],
	[M_MOBILE],
	[M_PHONE],
	[M_EMAIL],
	[M_ZIPCODE],
	[M_ADDR1],
	[M_ADDR2],
	[M_ISSMS],
	[M_ISEMAIL],
	[M_ISDM],
	[M_POINT],
	[M_CREDATE],
	[M_VISITCNT],
	[M_LASTVISITDATE],
	[M_UPDATEDATE],
	[M_JOIN_MODE],
	[M_DI],
	[M_SKIN_TROUBLE_CD],
	[M_AGREE],
	[M_AGREE2],
	[M_GBN],
	[M_STAFF_COMPANY],
	[M_STAFF_ID],
	[M_STAFF_APPROV_DATE],
	[M_IS_RETIRE],
	[M_DEL_DATE],
	[M_DEL_POINT],
	[M_DEL_REASON]
	--,
	--[ZZ_OLD_PWD_MD5],
	--[ZZ_ETC1],
	--[ZZ_ETC2],
	--[ZZ_ETC3]
	from VIEW_MEMBER_TOTAL  with (nolock)
	where M_ID=@M_ID ;

	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_EXHIBIT_TAB_PRODUCT_LIST]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_EXHIBIT_TAB_PRODUCT_LIST
어드민의 기획전관리페이지에서 기획전의 탭에 상품 등록

SELECT * FROM TB_EXHIBIT
SELECT * FROM TB_EXHIBIT_TAB
SELECT * FROM TB_EXHIBIT_TAB_PRODUCT
SELECT * FROM TB_PRODUCT_INFO

EXEC SP_ADMIN_EXHIBIT_TAB_PRODUCT_LIST 1

*/
CREATE PROC [dbo].[SP_ADMIN_EXHIBIT_TAB_PRODUCT_LIST]
@TAB_IDX INT		-- 조회하려는 기획전의 TAB_IDX
AS
BEGIN

	SELECT D.IDX, D.DISPLAY_ORDER, A.P_CODE, A.P_NAME, A.P_SUB_TITLE
		, A.SELLING_PRICE, A.DISCOUNT_PRICE
		, CASE WHEN B.PROMOTION_PRODUCT_YN = 'Y' THEN '있음' ELSE '없음' END AS PROMOTION_YN
		, CASE WHEN C.P_CODE IS NULL THEN '없음' ELSE '있음' END AS COUPON_YN
		, A.MAIN_IMG
	FROM TB_PRODUCT_INFO A WITH (NOLOCK)
		INNER JOIN TB_EXHIBIT_TAB_PRODUCT D WITH (NOLOCK)
			ON A.P_CODE = D.P_CODE
			AND D.TAB_IDX = @TAB_IDX
		LEFT JOIN VIEW_PRODUCT_VS_PROMOTION_LIST B WITH (NOLOCK)
			ON A.P_CODE = B.P_CODE
		LEFT JOIN VIEW_PRODUCT_VS_COUPON_FOR_PRODUCTLIST_ALL C WITH (NOLOCK)
			ON A.P_CODE = C.P_CODE
	ORDER BY D.DISPLAY_ORDER, A.P_NAME


END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_FRONT_MEMBER_SEL]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-07-01
-- Description:	관리자> 회원관리- 목록
-- ussage: exec SP_ADMIN_FRONT_MEMBER_SEL '2015-05-01','2015-05-30','B,S,G,','A','','','','M_ID','DESC',1,10
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_FRONT_MEMBER_SEL]
 @DATE_FROM	varchar(10)	='' -- YYYY-MM-DD  --가입기간
,@DATE_TO	varchar(10)	='' -- YYYY-MM-DD  --가입기간
,@GRADE_LIST varchar(20)	='' -- B,S,G,V
,@GBN varchar(1)	='' -- 임직원구분 A(일반회원)/S(임직원)/공란(전체)
,@IS_RETIRE varchar(1) =''   --  Y/N/공란(ALL)

,@SEARCH_COL	varchar(50)	='' 
,@SEARCH_KEYWORD	varchar(50)	='' 
,@SORT_COL	varchar(50)	='M_CREDATE' 
,@SORT_DIR	varchar(4)	='DESC' 

,@PAGE			INT	=1 --현재 PAGE
,@PAGESIZE		INT =10	--페이지 사이즈

AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	----------------------------------------
	DECLARE @v_SQL_WHERE VARCHAR(3000) ;
	DECLARE @v_SQL_ORDERBY VARCHAR(500) ;
	DECLARE @v_SQL VARCHAR(3000) ;
	 
	-----------------------------
	DECLARE @LISTCOUNT INT
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY,
		M_ID_TMP	varchar(13)
	)

	 
	set @v_SQL_WHERE = ' (1=1) '

	--IF @DATE_FROM<>'' AND @DATE_TO <>''  
	--	set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (M_CREDATE < ''' + @DATE_TO +' 23:59:59'' AND M_CREDATE > ''' + @DATE_FROM +''') '  

	IF @DATE_FROM<>'' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (M_CREDATE >= ''' + @DATE_FROM  +''') '  
	IF @DATE_TO <>''  
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (M_CREDATE <= ''' + @DATE_TO +' 23:59:59'') '  

	IF @GRADE_LIST <>'' 
	begin
		set @GRADE_LIST = REPLACE(@GRADE_LIST,',',''',''');
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (M_GRADE in(''' + @GRADE_LIST + ''')) '
    end

	IF @GBN <>'' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (M_GBN=''' + @GBN + ''') '
	IF @IS_RETIRE <>'' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (M_IS_RETIRE=''' + @IS_RETIRE + ''') '

	IF @SEARCH_COL <>'' AND @SEARCH_KEYWORD <> '' 
		set @v_SQL_WHERE = @v_SQL_WHERE + ' AND (' + @SEARCH_COL + ' like ''%' + @SEARCH_KEYWORD + '%'') '
 

	set @v_SQL_ORDERBY = ' ' + @SORT_COL  + ' ' + @SORT_DIR 
 
 -- print @v_SQL_WHERE;
	 
	-------------------------------------------------
	SET @LISTCOUNT = @PAGE * @PAGESIZE
	SET ROWCOUNT @LISTCOUNT

	set @v_SQL  ='insert into #TEMPLIST (M_ID_TMP) '
	set @v_SQL  =@v_SQL + ' SELECT  M_ID ';
	set @v_SQL  =@v_SQL + ' FROM VIEW_MEMBER_TOTAL WITH (NOLOCK) ';
	set @v_SQL  =@v_SQL + ' WHERE ' +  @v_SQL_WHERE ;
	set @v_SQL  =@v_SQL + '	ORDER BY ' + @v_SQL_ORDERBY ;
	exec(@v_SQL);


	SET ROWCOUNT 0 ;


	SELECT 	
	[M_NO],
	[M_ID],
	[M_NAME],
	[M_PWD],
	[M_GRADE],
	[M_SEX],
	[M_BIRTHDAY],
	[M_MOBILE],
	[M_PHONE],
	[M_EMAIL],
	[M_ZIPCODE],
	[M_ADDR1],
	[M_ADDR2],
	[M_ISSMS],
	[M_ISEMAIL],
	[M_ISDM],
	[M_POINT],
	[M_CREDATE],
	[M_VISITCNT],
	[M_LASTVISITDATE],
	[M_UPDATEDATE],
	[M_JOIN_MODE],
	[M_DI],
	[M_SKIN_TROUBLE_CD],
	[M_AGREE],
	[M_AGREE2],
	[M_GBN],
	[M_STAFF_COMPANY],
	[M_STAFF_ID],
	[M_STAFF_APPROV_DATE],
	[M_IS_RETIRE],
	[M_DEL_DATE],
	[M_DEL_POINT],
	[M_DEL_REASON]
	--,
	--[ZZ_OLD_PWD_MD5],
	--[ZZ_ETC1],
	--[ZZ_ETC2],
	--[ZZ_ETC3]
	from VIEW_MEMBER_TOTAL a with (nolock)
		inner join #TEMPLIST t on a.M_ID = t.M_ID_TMP
	where t.SEQ > (@PAGE -1) * @PAGESIZE
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_MEMBER_REPORT_MONTHLY]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		장수현
-- Create date: 2015-08-13
-- Description:	관리자> 회원통계 - 월별 가입/탈퇴 현황
-- ussage: exec [SP_ADMIN_MEMBER_REPORT_MONTHLY] '2015'
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_MEMBER_REPORT_MONTHLY]
@YEAR varchar(4) ='' -- 기준 년도: YYYY
AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 

	if(@YEAR='')
		select @YEAR = Convert(Varchar(4),getdate(),120); --현재년도 

	
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 

	CREATE TABLE #TEMPLIST  (
		SEQ			INT IDENTITY(1,1) PRIMARY KEY
		,YEAR_MON	varchar(7) -- YYYY-MM
		,MEMBER_CNT_REG	int default 0 --해당 년월 신규가입자수
		,MEMBER_CNT_REG_M	int default 0 --해당 년월 신규가입자수:MOBILE
		,MEMBER_CNT_REG_W	int default 0 --해당 년월 신규가입자수:PC
		,MEMBER_CNT_STAFF_APPROV	int default 0 --해당 년월 임직원승인수
		,MEMBER_CNT_RETIRE	int default 0 --해당 년월 탈퇴자수
	)
	--년월 코드 준비: YYYY-MM
	DECLARE @ii INT = 1;
	DECLARE @tmpYYYYMM VARCHAR(7) ='';

	WHILE @ii <= 12
	BEGIN
		set @tmpYYYYMM =@YEAR +'-'+  Right('00' +Convert(Varchar,@ii),2) ;
		insert into #TEMPLIST (YEAR_MON,MEMBER_CNT_REG,MEMBER_CNT_REG_M,MEMBER_CNT_REG_W,MEMBER_CNT_STAFF_APPROV,MEMBER_CNT_RETIRE) values(@tmpYYYYMM,0,0,0,0,0);
		SET @ii = @ii + 1;
	END;



	--년월별 회원수통계 업데이트 -가입자수 : 탈퇴회원도 포함되어야 함.
	update #TEMPLIST 
	set #TEMPLIST.MEMBER_CNT_REG = b.CNT
	from (	select Convert(Varchar(7),M_CREDATE,120) as YEAR_MON ,isnull(COUNT(M_ID),0) as CNT 
			from VIEW_MEMBER_TOTAL  with (nolock) 
			where Convert(Varchar(4),M_CREDATE,120) = @YEAR
			group by Convert(Varchar(7),M_CREDATE,120)
		) b 
	where #TEMPLIST.YEAR_MON=b.YEAR_MON ;

	--년월별 회원수통계 업데이트 -가입자수-모바일 : 탈퇴회원도 포함되어야 함.
	update #TEMPLIST 
	set #TEMPLIST.MEMBER_CNT_REG_M = b.CNT
	from (	select Convert(Varchar(7),M_CREDATE,120) as YEAR_MON ,isnull(COUNT(M_ID),0) as CNT 
			from VIEW_MEMBER_TOTAL  with (nolock) 
			where (Convert(Varchar(4),M_CREDATE,120) = @YEAR) AND (M_DEVICE_GBN='M')
			group by Convert(Varchar(7),M_CREDATE,120)
		) b 
	where #TEMPLIST.YEAR_MON=b.YEAR_MON ;

--년월별 회원수통계 업데이트 -가입자수-PC : 탈퇴회원도 포함되어야 함.
	update #TEMPLIST 
	set MEMBER_CNT_REG_W = MEMBER_CNT_REG - MEMBER_CNT_REG_M;  -- 모바일을 제외학고는 모두 PC로 간주
	


	--년월별 회원수통계 업데이트 -임직원 승인수 : 탈퇴회원도 포함되어야 함.
	update #TEMPLIST 
	set #TEMPLIST.MEMBER_CNT_STAFF_APPROV = b.CNT
	from (	select Convert(Varchar(7),M_STAFF_APPROV_DATE,120) as YEAR_MON ,isnull(COUNT(M_ID),0) as CNT 
			from VIEW_MEMBER_TOTAL  with (nolock) 
			where (M_GBN='S') AND (Convert(Varchar(4),M_STAFF_APPROV_DATE,120) = @YEAR)
			group by Convert(Varchar(7),M_STAFF_APPROV_DATE,120)
		) b 
	where #TEMPLIST.YEAR_MON=b.YEAR_MON ;

	--년월별 회원수통계 업데이트 -탈퇴회원 수 
	update #TEMPLIST 
	set #TEMPLIST.MEMBER_CNT_RETIRE = b.CNT
	from (	select Convert(Varchar(7),M_DEL_DATE,120) as YEAR_MON ,isnull(COUNT(M_ID),0) as CNT 
			from VIEW_MEMBER_TOTAL  with (nolock) 
			where (M_IS_RETIRE='Y') AND (Convert(Varchar(4),M_DEL_DATE,120) = @YEAR)
			group by Convert(Varchar(7),M_DEL_DATE,120)
		) b 
	where #TEMPLIST.YEAR_MON=b.YEAR_MON ;




	SELECT YEAR_MON,MEMBER_CNT_REG,MEMBER_CNT_REG_M,MEMBER_CNT_REG_W,MEMBER_CNT_STAFF_APPROV,MEMBER_CNT_RETIRE
	FROM #TEMPLIST t 
	order by t.SEQ ASC ;

	--set @intResult = @@ERROR ;

	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	begin
	  drop table #TEMPLIST ;
	  --print 'drop...'
	end 	 
		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET ROWCOUNT 0 ; --기본값 복원 

END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_POINT_SAVE]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-06
-- Description:	관리자 포인트 적립
-- ussage: exec SP_POINT_SAVE '회원아이디','10000','추가사유','주문코드','리뷰번호'
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_POINT_SAVE]
	 @M_ID	varchar(13) = NULL -- 회원아이디
	,@SAVE_POINT INT = NULL -- 적립포인트
	,@ADDITION_REASON VARCHAR(300) = NULL -- 추가 사유
	,@ADMIN_ID VARCHAR(13) = NULL -- 관리자 아이디
	,@ADMIN_NAME VARCHAR(30) = NULL -- 관리자 이름
	,@ORDER_CODE VARCHAR(20) = NULL -- 주문코드
	,@REVIEW_IDX INT = NULL -- 리뷰번호
	,@RET_NUM VARCHAR OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) OUTPUT -- 반환 메세지
AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 

	DECLARE @CODE VARCHAR(3)  = 'S04';
	
	EXEC SP_POINT_LOG @CODE, @M_ID, @SAVE_POINT, '관리자 포인트 적립', NULL, NULL;
	
	/**
		회원 확인
	*/
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		
		EXEC SP_POINT_LOG @CODE, @M_ID, @SAVE_POINT, @RET_MESSAGE, NULL, NULL;
		
		RETURN(1);
	END
		
	
	/**
		적립포인트 체크
	*/
	IF @SAVE_POINT <= 0 OR @SAVE_POINT IS NULL
	BEGIN 
		SET @RET_NUM = '3';
		SET @RET_MESSAGE = '적립포인트가 유효하지 않습니다.';
		
		EXEC SP_POINT_LOG @CODE, @M_ID, @SAVE_POINT, @RET_MESSAGE, NULL, NULL;
		
		RETURN(3);
	END
	
	/**
		현재 총 누적 적립금
	*/
	DECLARE @TOTAL_MY_SAVE_POINT INT;
	exec @TOTAL_MY_SAVE_POINT = SP_POINT_SAVE_TOTAL @M_ID

	/**
		현재 총 누적 적립금 증가 및 갱신
	*/
	SET @TOTAL_MY_SAVE_POINT = @TOTAL_MY_SAVE_POINT + @SAVE_POINT;
	
	/**
		트랜젝션 시작
	*/
	BEGIN TRANSACTION AdminSavePoint;
	
	BEGIN TRY
	
		/**
			적립 테이블에 추가
		*/
		INSERT INTO TB_POINT_SAVE 
			(M_ID,SAVE_POINT,SAVE_SUM_POINT,SAVE_CODE,EXPIRE_YN,ORDER_CODE,REVIEW_IDX, ADDITION_REASON, ADM_ID, ADM_NAME) 
		VALUES 
			(@M_ID,@SAVE_POINT,@TOTAL_MY_SAVE_POINT, @CODE,'N',@ORDER_CODE,@REVIEW_IDX, @ADDITION_REASON, @ADMIN_ID, @ADMIN_NAME );
		
		/**
			회원테이블의 마이 포인트 갱신
		*/
		EXEC SP_POINT_MEMBER_UPDATE @M_ID, @TOTAL_MY_SAVE_POINT;

	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT > 0
			ROLLBACK TRANSACTION AdminSavePoint;
			
		PRINT ERROR_MESSAGE();
		SET @RET_NUM = '2';
		SET @RET_MESSAGE = ERROR_MESSAGE();
		
		EXEC SP_POINT_LOG @CODE, @M_ID, @SAVE_POINT, @RET_MESSAGE, NULL, NULL;
		
		RETURN(2);	
	END CATCH
	
	IF @@TRANCOUNT > 0
		COMMIT TRANSACTION AdminSavePoint;

	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
	EXEC SP_POINT_LOG @CODE, @M_ID, @SAVE_POINT, @RET_MESSAGE, NULL, NULL;
	RETURN(0);
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_DETAIL_POINT_SET]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDER_DETAIL_POINT_SET
세부주문단위로 주문상태가 변경될때, 포인트를 정리하는 프로시져

세부주문건별로 TOBE상태가 다음으로 변경될때, 해당 조사식을 따른다
(결재완료로 변경되는 상황은 배제한다.)

구매확정 => 포인트 적립일자가 있는지 확인후, 없으면 SP_POINT_SAVE_AFTER_FIRM_ORDER 호출
취소,반품 => 1. 포인트 적립일자가 있는지 확인후(구매확정인지), 
				있으면 1) SP_POINT_GET_BACK_SAVED_POINT_ON_CANCEL_AFTER_FIRM_ORDER 호출
					   2) SP_POINT_RESAVE_USED_POINT_ON_CANCEL_AFTER_FIRM_ORDER 호출
				없으면 1) SP_POINT_CANCEL_PART_ORDER 호출
기타 상태 => 1. 포인트 적립일자가 있는지 확인후(구매확정인지), 
				있으면 SP_POINT_GET_BACK_SAVED_POINT_ON_CANCEL_AFTER_FIRM_ORDER 호출

파라미터 설명
@ORDER_DETAIL_IDX	-- 주문상세일련번호
@TOBE_STATUS		-- 바꾸려는 상태코드
@REG_ID				-- 처리자ID(관리자)

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL
SELECT * FROM TB_ORDER_LOG
exec SP_ADMIN_ORDER_DETAIL_POINT_SET 1,'50','Y','222'
exec SP_ADMIN_ORDER_DETAIL_POINT_SET 1,'50','N','222'


*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_DETAIL_POINT_SET]
 @ORDER_DETAIL_IDX	INT
,@TOBE_STATUS VARCHAR(2)
,@MASTER_CONTROL CHAR(1) = 'N'
,@REG_ID VARCHAR(13)
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @MEMBER_ORDER_GBN CHAR(1)
		, @M_ID VARCHAR(13)
		, @ASIS_STATUS VARCHAR(2)
		, @USE_POINT INT
		, @POINT_ACCML INT
		, @POINT_ACCML_DATE DATETIME
		, @ORDER_CODE VARCHAR(20)
		, @ORDER_IDX INT
		, @P_NAME VARCHAR(100)
		, @PAY_OK CHAR(1)
		, @RET_NUM VARCHAR
		, @RET_MESSAGE VARCHAR(100)

	SELECT @MEMBER_ORDER_GBN = OM.MEMBER_ORDER_GBN
		, @M_ID = OM.M_ID
		, @ASIS_STATUS = OD.ORDER_DETAIL_STATUS
		, @USE_POINT = OD.USE_POINT
		, @POINT_ACCML = OD.POINT_ACCML
		, @POINT_ACCML_DATE = OD.POINT_ACCML_DATE
		, @ORDER_CODE = OD.ORDER_CODE
		, @ORDER_IDX = OD.ORDER_IDX
		, @P_NAME = OD.P_NAME
	FROM TB_ORDER_MASTER OM WITH (NOLOCK)
		INNER JOIN TB_ORDER_DETAIL OD WITH (NOLOCK)
			ON OM.ORDER_IDX = OD.ORDER_IDX
			AND OD.ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX

	IF @TOBE_STATUS = @ASIS_STATUS
	BEGIN
		RAISERROR ('변경하려는 상태가 기존의 상태가 같습니다.',16,1);
		RETURN
	END

	IF @TOBE_STATUS = '60'		-- 구매확정으로 변경하려할때 START
	BEGIN
		
		SET @PAY_OK = 'N'

		IF @MEMBER_ORDER_GBN = '2'
		BEGIN
			SET @PAY_OK = 'Y'
		END
		
		IF ( @MEMBER_ORDER_GBN = '1' ) AND ( ISNULL(@POINT_ACCML_DATE,'') = '' ) AND ( @POINT_ACCML > 0 )
		BEGIN
		EXEC SP_POINT_SAVE_AFTER_FIRM_ORDER @M_ID,@POINT_ACCML,@ORDER_CODE,@ORDER_DETAIL_IDX,@P_NAME,@RET_NUM OUTPUT,@RET_MESSAGE OUTPUT

			IF ( @RET_NUM = '0' ) OR ( @RET_NUM = '4' )
			BEGIN
				UPDATE TD
				SET TD.POINT_ACCML_DATE = GETDATE()
				FROM TB_ORDER_DETAIL TD
				WHERE TD.ORDER_IDX = @ORDER_IDX
				AND TD.ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX
			
				SET @PAY_OK = 'Y'
			END
			ELSE BEGIN
				RAISERROR (@RET_MESSAGE,16,1);
				RETURN
			END
		END

	END							-- 구매확정으로 변경하려할때 END

	ELSE IF ( @TOBE_STATUS = '80' ) OR ( @TOBE_STATUS = '90' )		-- 취소 또는 반품으로 변경하려할때 START
	BEGIN

		SET @PAY_OK = 'N'

		IF @MEMBER_ORDER_GBN = '2'
		BEGIN
			SET @PAY_OK = 'Y'
		END
		
		IF ( @MEMBER_ORDER_GBN = '1' )  AND ( @USE_POINT > 0  ) AND ( ISNULL(@POINT_ACCML_DATE,'') = '' ) AND ( @MASTER_CONTROL = 'Y' )
		BEGIN
			EXEC SP_POINT_CANCEL_PART_ORDER @M_ID,@USE_POINT,@ORDER_CODE,@ORDER_DETAIL_IDX,@P_NAME,@RET_NUM OUTPUT,@RET_MESSAGE OUTPUT

			IF ( @RET_NUM <> '0' ) 
			BEGIN
				RAISERROR (@RET_MESSAGE,16,1);
				RETURN
			END

			SET @PAY_OK = 'Y'
		END


		IF ( @MEMBER_ORDER_GBN = '1' ) AND ( @POINT_ACCML > 0  ) AND ( ISNULL(@POINT_ACCML_DATE,'') <> '' )
		BEGIN

			EXEC SP_POINT_GET_BACK_SAVED_POINT_ON_CANCEL_AFTER_FIRM_ORDER @M_ID,@POINT_ACCML,@ORDER_CODE,@ORDER_DETAIL_IDX,@P_NAME,@RET_NUM OUTPUT,@RET_MESSAGE OUTPUT

			IF ( @RET_NUM = '0' ) OR ( @RET_NUM = '4' )
			BEGIN
				UPDATE TD
				SET TD.POINT_ACCML_DATE = NULL
				FROM TB_ORDER_DETAIL TD
				WHERE TD.ORDER_IDX = @ORDER_IDX
				AND TD.ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX
			
				SET @PAY_OK = 'Y'
			END
			ELSE BEGIN
				RAISERROR (@RET_MESSAGE,16,1);
				RETURN
			END


			IF ( @MASTER_CONTROL = 'Y' ) AND ( @USE_POINT > 0  )
			BEGIN
				EXEC SP_POINT_RESAVE_USED_POINT_ON_CANCEL_AFTER_FIRM_ORDER @M_ID,@USE_POINT,@ORDER_CODE,@ORDER_DETAIL_IDX,@P_NAME,@RET_NUM OUTPUT,@RET_MESSAGE OUTPUT

				IF ( @RET_NUM <> '0' ) 
				BEGIN
					RAISERROR (@RET_MESSAGE,16,1);
					RETURN
				END
			END


			SET @PAY_OK = 'Y'
		END

	END							-- 취소 또는 반품으로 변경하려할때 END


	ELSE BEGIN					-- 그외의 상태로 변경하려할때 START
	
		SET @PAY_OK = 'N'

		IF @MEMBER_ORDER_GBN = '2'
		BEGIN
			SET @PAY_OK = 'Y'
		END

		IF ( @MEMBER_ORDER_GBN = '1' ) AND ( ISNULL(@POINT_ACCML_DATE,'') <> '' ) AND ( @POINT_ACCML > 0  )
		BEGIN

			EXEC SP_POINT_GET_BACK_SAVED_POINT_ON_CANCEL_AFTER_FIRM_ORDER @M_ID,@POINT_ACCML,@ORDER_CODE,@ORDER_DETAIL_IDX,@P_NAME,@RET_NUM OUTPUT,@RET_MESSAGE OUTPUT

			IF ( @RET_NUM = '0' ) OR ( @RET_NUM = '4' )
			BEGIN
				UPDATE TD
				SET TD.POINT_ACCML_DATE = NULL
				FROM TB_ORDER_DETAIL TD
				WHERE TD.ORDER_IDX = @ORDER_IDX
				AND TD.ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX
			
				SET @PAY_OK = 'Y'
			END
			ELSE BEGIN
				RAISERROR (@RET_MESSAGE,16,1);
				RETURN
			END

		END
	
	END							-- 그외의 상태로 변경하려할때 END

	SET NOCOUNT OFF ;
END




/*


포인트정리

세부주문건별로 TOBE상태가 다음으로 변경될때, 해당 조사식을 따른다
(결재완료로 변경되는 상황은 배제한다.)

구매확정 => 포인트 적립일자가 있는지 확인후, 없으면 SP_POINT_SAVE_AFTER_FIRM_ORDER 호출
취소,반품 => 1. 포인트 적립일자가 있는지 확인후(구매확정인지), 
				있으면 1) SP_POINT_GET_BACK_SAVED_POINT_ON_CANCEL_AFTER_FIRM_ORDER 호출
					   2) SP_POINT_RESAVE_USED_POINT_ON_CANCEL_AFTER_FIRM_ORDER 호출
				없으면 1) SP_POINT_CANCEL_PART_ORDER 호출
기타 상태 => 1. 포인트 적립일자가 있는지 확인후(구매확정인지), 
				있으면 SP_POINT_GET_BACK_SAVED_POINT_ON_CANCEL_AFTER_FIRM_ORDER 호출



전체주문건별로 TOBE상태가 다음으로 변경될때, 해당 조사식을 따른다
(결재완료로 변경되는 상황은 배제한다.)
1. 세부주문건별로 LOOP처리하여 SP_ADMIN_ORDER_DETAIL_POINT_SET 로직을 수행. 
	단,SP_POINT_RESAVE_USED_POINT_ON_CANCEL_AFTER_FIRM_ORDER와 SP_POINT_CANCEL_PART_ORDER은 수행하지 않음. => @MASTER_CONTROL = 'N'
취소반품으로 변경시 SP_POINT_CANCEL_ALL_ORDER 호출



















----- sp 목록 ------

[1. 구매시 포인트 사용]

SP_POINT_USE_ON_ORDER
 @M_ID	varchar(13) = NULL -- 회원아이디
,@USE_POINT INT = NULL -- 사용포인트
,@ORDER_CODE VARCHAR(20) = NULL -- 주문 코드
,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지

@RET_NUM = 0 이면 에러없음( 이하 동일 )


[2. 주문시 전체 취소]

SP_POINT_CANCEL_ALL_ORDER
 @M_ID	varchar(13) = NULL -- 회원아이디
,@POINT INT = NULL --취소되어 반환되는 포인트
,@ORDER_CODE VARCHAR(20) = NULL -- 주문 코드
,@RET_NUM VARCHAR OUTPUT -- 반환값
,@RET_MESSAGE VARCHAR(100) OUTPUT -- 반환 메세지

[3. 주문시 부분 취소]

SP_POINT_CANCEL_PART_ORDER
	 @M_ID	varchar(13) = NULL -- 회원아이디
	,@POINT INT = NULL --취소되어 반환되어 재적립하는 포인트
	,@ORDER_CODE VARCHAR(20) = NULL -- 주문코드
	,@ORDER_DETAIL_IDX INT = NULL -- 주문상세일련번호
	,@P_NAME VARCHAR(100) = NULL -- 상품이름
	,@RET_NUM VARCHAR OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) OUTPUT -- 반환메세지


[4. 구매 확정후 적립 포인트]

SP_POINT_SAVE_AFTER_FIRM_ORDER
 @M_ID	varchar(13) = NULL -- 회원아이디
,@SAVE_POINT INT = NULL --적립포인트
,@ORDER_CODE VARCHAR(20) = NULL -- 주문코드
,@ORDER_DETAIL_IDX INT = NULL -- 주문상세일련번호
,@P_NAME VARCHAR(100) = NULL -- 상품이름
,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지


[5. 주문 확정후 취소시 사용했던 포인트 재적립]

SP_POINT_RESAVE_USED_POINT_ON_CANCEL_AFTER_FIRM_ORDER
	 @M_ID	varchar(13) = NULL -- 회원아이디
	,@POINT INT = NULL --취소되어 반환되어 재적립하는 포인트
	,@ORDER_CODE VARCHAR(20) = NULL -- 주문코드
	,@ORDER_DETAIL_IDX INT = NULL -- 주문상세일련번호
	,@P_NAME VARCHAR(100) = NULL -- 상품이름
	,@RET_NUM VARCHAR OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) OUTPUT -- 반환메세지


[6. 주문 확정후 취소시 적립했던 포인트 회수]

SP_POINT_GET_BACK_SAVED_POINT_ON_CANCEL_AFTER_FIRM_ORDER
	 @M_ID	varchar(13) = NULL -- 회원아이디
	,@POINT INT = NULL --취소되어 반환되어 재적립하는 포인트
	,@ORDER_CODE VARCHAR(20) = NULL -- 주문코드
	,@ORDER_DETAIL_IDX INT = NULL -- 주문상세일련번호
	,@P_NAME VARCHAR(100) = NULL -- 상품이름
	,@RET_NUM VARCHAR OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) OUTPUT -- 반환메세지


*/
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_POINT_USE]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-07
-- Description:	관리자 포인트 사용
-- ussage: exec SP_ADMIN_POINT_USE '회원아이디','10000','추가사유','주문코드','리뷰번호'
-- =============================================
CREATE PROCEDURE [dbo].[SP_ADMIN_POINT_USE]
	@M_ID varchar(13) = NULL -- 회원아이디
	,@USE_POINT INT = NULL --사용한포인트
	,@ADDITION_REASON VARCHAR(300) = NULL -- 추가 사유
	,@ADMIN_ID VARCHAR(13) = NULL -- 관리자 아이디
	,@ADMIN_NAME VARCHAR(30) = NULL -- 관리자 이름
	,@ORDER_CODE VARCHAR(20) = NULL -- 주문코드

	,@RET_NUM VARCHAR OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	
	DECLARE @CODE VARCHAR(3) = 'U00';
	
	EXEC SP_POINT_LOG @CODE, @M_ID, @USE_POINT, '관리자 포인트 사용 시작', NULL, NULL;
	
	/**
		회원 확인
	*/
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		EXEC SP_POINT_LOG @CODE, @M_ID, @USE_POINT, @RET_MESSAGE, NULL, NULL;
		RETURN(1);
	END
	
	/**
		적립테이블에 계정 존재여부 확인
	*/
	IF NOT EXISTS( SELECT M_ID FROM TB_POINT_SAVE WITH (NOLOCK) WHERE M_ID=@M_ID)
	BEGIN
		SET @RET_NUM = '2';
		SET @RET_MESSAGE = @M_ID + ' 계정이 적립포인트 테이블 상에 존재하지 않습니다';
		EXEC SP_POINT_LOG @CODE, @M_ID, @USE_POINT, @RET_MESSAGE, NULL, NULL;
		RETURN(2);		
	END
	
	/**
		트랜젝션 시작
	*/
	BEGIN TRANSACTION AdminUsePoint;	
	BEGIN TRY
		
		exec SP_POINT_USE @M_ID,@CODE,@USE_POINT,@ORDER_CODE,NULL, NULL,@ADDITION_REASON,@ADMIN_ID,@ADMIN_NAME ,'N',@RET_NUM OUTPUT,@RET_MESSAGE OUTPUT;
		
	END TRY
	BEGIN CATCH
		--에러발생시 트랜젝션 롤백
		IF @@TRANCOUNT > 0
			ROLLBACK TRANSACTION AdminUsePoint;
			

		SET @RET_NUM = '2';
		SET @RET_MESSAGE = ERROR_MESSAGE();
		
		EXEC SP_POINT_LOG @CODE, @M_ID, @USE_POINT, @RET_MESSAGE, NULL, NULL;
		
		RETURN(2);	
	END CATCH
	--정상시 트랜젝션 커밋
	IF @@TRANCOUNT > 0
		COMMIT TRANSACTION AdminUsePoint;
		
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	
	SET @RET_NUM = '0';
	SET @RET_MESSAGE = 'SUCCESS';
	EXEC SP_POINT_LOG @CODE, @M_ID, @USE_POINT, @RET_MESSAGE, NULL, NULL;
	
	RETURN(0);	
		
END
GO
/****** Object:  StoredProcedure [dbo].[SP_AGENT_ORDER_CONFIRM_COMPLETE]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_AGENT_ORDER_CONFIRM_COMPLETE
배송완료일로부터 14일이 지난건(15일째되는날)을 자동으로 구매확정 설정

EXEC SP_AGENT_ORDER_CONFIRM_COMPLETE

SELECT *
FROM TB_ORDER_DETAIL



SELECT M_POINT FROM TB_MEMBER
WHERE M_ID = 'test_b1s'
23378
*/
CREATE PROCEDURE [dbo].[SP_AGENT_ORDER_CONFIRM_COMPLETE]
AS
BEGIN
	SET NOCOUNT ON

	IF OBJECT_ID('tempdb..#DELIVERY_TMP') is not null
	BEGIN
	  DROP TABLE #DELIVERY_TMP ;
	END

	SELECT TD.ORDER_IDX, TD.ORDER_DETAIL_IDX INTO #DELIVERY_TMP
	FROM TB_ORDER_DETAIL TD WITH (NOLOCK)
	WHERE TD.ORDER_DETAIL_STATUS = '50'
	AND CONVERT( VARCHAR(10), TD.DELIVERY_DATE, 121 ) <= CONVERT( VARCHAR(10), DATEADD( DAY, -17, GETDATE() ), 121 )

	-- 선택된 주문건을 CURSOR처리
	DECLARE @MEMBER_ORDER_GBN CHAR(1)
		, @M_ID VARCHAR(13)
		, @POINT_ACCML INT
		, @POINT_ACCML_DATE DATETIME
		, @ORDER_CODE VARCHAR(20)
		, @ORDER_IDX INT
		, @ORDER_DETAIL_IDX INT
		, @P_NAME VARCHAR(100)
		, @PAY_OK CHAR(1)
		, @RET_NUM VARCHAR
		, @RET_MESSAGE VARCHAR(100)
	
	DECLARE ORDER_CURSOR CURSOR FOR

	SELECT OM.MEMBER_ORDER_GBN, OM.M_ID, OD.POINT_ACCML, OD.POINT_ACCML_DATE, OD.ORDER_CODE, OD.ORDER_IDX, OD.ORDER_DETAIL_IDX, OD.P_NAME
	FROM #DELIVERY_TMP DT WITH (NOLOCK)
		INNER JOIN TB_ORDER_MASTER OM WITH (NOLOCK)
			ON DT.ORDER_IDX = OM.ORDER_IDX
		INNER JOIN TB_ORDER_DETAIL OD WITH (NOLOCK)
			ON DT.ORDER_IDX = OD.ORDER_IDX
			AND DT.ORDER_DETAIL_IDX = OD.ORDER_DETAIL_IDX

	OPEN ORDER_CURSOR
	FETCH NEXT FROM ORDER_CURSOR INTO @MEMBER_ORDER_GBN, @M_ID, @POINT_ACCML, @POINT_ACCML_DATE, @ORDER_CODE, @ORDER_IDX, @ORDER_DETAIL_IDX, @P_NAME
	WHILE (@@FETCH_STATUS=0)
	BEGIN 
		SET @PAY_OK = 'N'
		
		IF @MEMBER_ORDER_GBN = '2'
		BEGIN
			SET @PAY_OK = 'Y'
		END
		
		IF ( @MEMBER_ORDER_GBN = '1' ) AND ( ISNULL(@POINT_ACCML_DATE,'') = '' )
		BEGIN
			EXEC SP_POINT_SAVE_AFTER_FIRM_ORDER @M_ID,@POINT_ACCML,@ORDER_CODE,@ORDER_DETAIL_IDX,@P_NAME,@RET_NUM OUTPUT,@RET_MESSAGE OUTPUT
			--PRINT @RET_NUM
			--PRINT @RET_MESSAGE
			IF ( @RET_NUM = '0' ) OR ( @RET_NUM = '4' )
			BEGIN
				UPDATE TD
				SET TD.POINT_ACCML_DATE = GETDATE()
				FROM TB_ORDER_DETAIL TD
				WHERE TD.ORDER_IDX = @ORDER_IDX
				AND TD.ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX
			
				SET @PAY_OK = 'Y'
			END
		END
		
		IF @PAY_OK = 'Y'
		BEGIN
			UPDATE TD
			SET TD.ORDER_DETAIL_STATUS = '60'
				, TD.ORDER_DETAIL_STATUS_DATE = GETDATE()
			FROM TB_ORDER_DETAIL TD
			WHERE TD.ORDER_IDX = @ORDER_IDX
			AND TD.ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX
		
		END
		
		FETCH NEXT FROM ORDER_CURSOR INTO @MEMBER_ORDER_GBN, @M_ID, @POINT_ACCML, @POINT_ACCML_DATE, @ORDER_CODE, @ORDER_IDX, @ORDER_DETAIL_IDX, @P_NAME
	END
	CLOSE ORDER_CURSOR
	DEALLOCATE ORDER_CURSOR

	;
	WITH SRC AS (
	SELECT SC.ORDER_IDX
		, CASE WHEN SC.ORDER_DETAIL_STATUS = 1 THEN SC.MAX_ORDER_DETAIL_STATUS ELSE '99' END AS ORDER_STAT
	FROM (
		SELECT TD.ORDER_IDX
			, MAX(ORDER_DETAIL_STATUS) AS MAX_ORDER_DETAIL_STATUS
			, COUNT(DISTINCT ORDER_DETAIL_STATUS) AS ORDER_DETAIL_STATUS
		FROM TB_ORDER_DETAIL TD WITH (NOLOCK)
			INNER JOIN #DELIVERY_TMP DT
				ON TD.ORDER_IDX = DT.ORDER_IDX
		GROUP BY TD.ORDER_IDX
		) SC
	)
	UPDATE TM
	SET TM.ORDER_STATUS = SRC.ORDER_STAT
	FROM TB_ORDER_MASTER TM
		INNER JOIN SRC
			ON TM.ORDER_IDX = SRC.ORDER_IDX

	
	
	
	IF OBJECT_ID('tempdb..#DELIVERY_TMP') is not null
	BEGIN
	  DROP TABLE #DELIVERY_TMP ;
	END


	SET NOCOUNT OFF ;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_USE_ON_ORDER]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-08
-- Description:	구매수단으로 가용 포인트 사용
-- ussage: exec SP_POINT_USE_ON_ORDER '회원아이디','사용포인트','주문코드','에러번호' OUTPUT,'에러메세지' OUTPUT
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_USE_ON_ORDER]
	 @M_ID	varchar(13) = NULL -- 회원아이디
	,@USE_POINT INT = NULL -- 사용포인트
	,@ORDER_CODE VARCHAR(20) = NULL -- 주문 코드
	
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @CODE VARCHAR(3) = 'U01';
	
	EXEC SP_POINT_LOG @CODE, @M_ID, @USE_POINT, '구매수단으로 가용 포인트 사용 시작', @ORDER_CODE, NULL;
	
	/**
		회원 확인
	*/
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		RETURN(1);
	END
		
	/**
		적립테이블에 계정 존재여부 확인
	*/
	IF NOT EXISTS( SELECT M_ID FROM TB_POINT_SAVE WITH (NOLOCK) WHERE M_ID=@M_ID)
	BEGIN
		SET @RET_NUM = '2';
		SET @RET_MESSAGE = @M_ID + ' 계정이 적립포인트 테이블 상에 존재하지 않습니다';
		RETURN(2);		
	END
	
	/**
		해당 주문에 대해서 이미 사용한 포인트 이력이 존재하는지 체크한다.
	*/
	IF EXISTS (SELECT IDX FROM TB_POINT_USE WITH (NOLOCK) WHERE USE_CODE=@CODE AND ORDER_CODE=@ORDER_CODE AND M_ID=@M_ID)
	BEGIN
		SET @RET_NUM = '3';
		SET @RET_MESSAGE = '해당 주문에 대해서 이미 포인트를 사용했습니다.';
		RETURN(3);	
	END
	
	/**
		포인트 사용 실행
	*/
	EXEC SP_POINT_USE @M_ID,@CODE,@USE_POINT,@ORDER_CODE, NULL, NULL, NULL, NULL, NULL,'N' ,@RET_NUM OUTPUT,@RET_MESSAGE OUTPUT;

	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_REVIEW_PHOTO_SAVE]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2015-08-07
-- Description:	상품리뷰 포토 포인트 적립
-- ussage: exec SP_POINT_REVIEW_PHOTO_SAVE '회원아이디'
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_REVIEW_PHOTO_SAVE]
	@M_ID	varchar(13) = NULL -- 회원아이디
	,@REVIEW_IDX INT = NULL -- 상품리뷰번호
	,@ORDER_CODE VARCHAR(20)
	,@ORDER_DETAIL_IDX INT
	,@P_NAME VARCHAR(100)
	,@RET_NUM VARCHAR OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) OUTPUT -- 반환 메세지
AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 

	DECLARE @CODE VARCHAR(3)  = 'S02';
	
	EXEC SP_POINT_REVIEW_SAVE @CODE, @M_ID,@REVIEW_IDX,@ORDER_CODE,@ORDER_DETAIL_IDX,@P_NAME,@RET_NUM OUTPUT,@RET_MESSAGE OUTPUT

	RETURN(0);
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_REVIEW_NORMAL_SAVE]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2015-08-07
-- Description:	상품리뷰 일반 포인트 적립
-- ussage: exec SP_POINT_REVIEW_NORMAL_SAVE '회원아이디'
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_REVIEW_NORMAL_SAVE]
	@M_ID	varchar(13) = NULL -- 회원아이디
	,@REVIEW_IDX INT = NULL -- 상품리뷰번호
	,@ORDER_CODE VARCHAR(20)
	,@ORDER_DETAIL_IDX INT
	,@P_NAME VARCHAR(100)
	,@RET_NUM VARCHAR OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) OUTPUT -- 반환 메세지
AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 

	DECLARE @CODE VARCHAR(3)  = 'S03';
	
	EXEC SP_POINT_REVIEW_SAVE @CODE, @M_ID,@REVIEW_IDX,@ORDER_CODE,@ORDER_DETAIL_IDX,@P_NAME,@RET_NUM OUTPUT,@RET_MESSAGE OUTPUT
	
	
	RETURN(0);
END
GO
/****** Object:  StoredProcedure [dbo].[SP_POINT_EXPIRE]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-06-29
-- Description:	포인트 소멸
-- ussage: exec SP_POINT_EXPIRE
-- =============================================
CREATE PROCEDURE [dbo].[SP_POINT_EXPIRE]
AS
BEGIN

	SET NOCOUNT ON  -- ON : 저장 프로시저의 영향을 받은 행 수 반환 안함 
	
	EXEC SP_POINT_LOG 'U03', NULL, NULL,  '소멸시작' , NULL, NULL;
	
	/**
		try	
	*/
	BEGIN TRY
	
		DECLARE @RET_NUM VARCHAR  = NULL  -- 반환값
		DECLARE @RET_MESSAGE VARCHAR(100) = NULL  -- 반환 메세지
	
		
		/**
			제한시간
		*/
		DECLARE @EXPRIRE_LIMIT_SEC INT = 60*60 * 24 * 365 * 2;
		--SET @EXPRIRE_LIMIT_SEC = 10; --60*60 * 24 * 5
		--SET @EXPRIRE_LIMIT_SEC = 60*60 * 24 * 32
			
		/**
			소멸한 적립포인트중에 원래 0 이거나 차감 되어서 0 인 경우는 미리 갱신하다
		*/
		UPDATE TB_POINT_SAVE
		SET EXPIRE_YN='Y'
		WHERE  EXPIRE_YN='N' 
			AND DATEDIFF( SS, INS_DATE, getdate())  > @EXPRIRE_LIMIT_SEC
			AND SAVE_POINT + SAVE_OFFSET_POINT <= 0;
		
		
		IF OBJECT_ID('tempdb..#TEMPLIST') is not null
		begin
		  drop table #TEMPLIST ;
		  --print 'drop...'
		end 

		CREATE TABLE #TEMPLIST  (
			ID INT IDENTITY(1,1)
			,M_ID VARCHAR(13)
			,M_POINT INT
			PRIMARY KEY (ID)
		)
		/**
			소멸할 포인트가 있는 회원 목록 조회
		*/
		INSERT INTO #TEMPLIST
			SELECT M_ID, M_POINT
			FROM TB_MEMBER  WITH (NOLOCK)
		WHERE M_IS_RETIRE<>'Y' 
			AND M_POINT > 0
		
		
		DECLARE @TOTAL INT = 0; -- 최대 카운트
		DECLARE @COUNT INT = 1; -- 현재 카운트
		
		SELECT @TOTAL = COUNT(*) FROM #TEMPLIST WITH (NOLOCK) ;
		
		
		/**
			소멸 루프
		*/
		WHILE @COUNT <= @TOTAL
		BEGIN
			DECLARE @M_ID VARCHAR(13); --계정

			/**
				회원아이디 조회
			*/
			SELECT @M_ID = M_ID
				FROM #TEMPLIST WITH (NOLOCK)
			WHERE ID=@COUNT;
			
			EXEC SP_POINT_USE_FOR_EXPIRE @M_ID,@EXPRIRE_LIMIT_SEC, @RET_NUM OUTPUT, @RET_MESSAGE OUTPUT;
			
			SET @COUNT = @COUNT + 1;		
			
		END -- END WHILE
	END TRY
	BEGIN CATCH

		DECLARE @MESSAGE VARCHAR(200)= ERROR_MESSAGE();
		EXEC SP_POINT_LOG 'U03', NULL, NULL,  @MESSAGE , NULL, NULL;
		RETURN(6);			
	END CATCH
	
	
	IF OBJECT_ID('tempdb..#TEMPLIST') is not null
	BEGIN
	  DROP TABLE #TEMPLIST ;
	  --print 'drop...'
	END 	 
	
	SET NOCOUNT OFF ; -- OFF : 저장 프로시저의 영향을 받은 행 수 반환 함 : 기본값 복원 
	
	EXEC SP_POINT_LOG 'U03', NULL, NULL,  '소멸종료' , NULL, NULL;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_REVIEW_PRODUCT_INS]    Script Date: 09/11/2015 16:07:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		김도영
-- Create date: 2016-07-17
-- Description:	신규 상품 리뷰 작성
-- ussage: exec SP_REVIEW_PRODUCT_INS
-- =============================================
CREATE PROCEDURE [dbo].[SP_REVIEW_PRODUCT_INS]
	@M_ID VARCHAR(13) = NULL -- 회원아이디
	,@ORDER_DETAIL_IDX INT = NULL --주문 상세 번호
	,@P_CODE VARCHAR(10) = NULL -- 상품코드
	,@SKIN_TYPE CHAR(2) = NULL -- 피부타입
	,@COMMENT TEXT = NULL -- 내용
	,@ADD_IMAGE VARCHAR(100) = NULL  --첨부이미지
	,@MEDIA_GBN VARCHAR(2) = NULL --매체
	,@RET_NUM VARCHAR  = NULL OUTPUT -- 반환값
	,@RET_MESSAGE VARCHAR(100) = NULL OUTPUT -- 반환 메세지
AS
BEGIN
	SET NOCOUNT ON;
	
	/**
		리뷰 작성여부
	*/
	IF EXISTS ( SELECT IDX FROM TB_REVIEW_PRODUCT WITH (NOLOCK) WHERE M_ID=@M_ID AND ORDER_DETAIL_IDX =@ORDER_DETAIL_IDX  )
	BEGIN 
		SET @RET_NUM = '1';
		SET @RET_MESSAGE = '이미 해당 주문상품에 대한 리뷰를 작성했습니다.';
		RETURN(1);
	END
	
	/**
		주문 상세 확인
	*/
	IF NOT EXISTS( 
		SELECT ORDER_DETAIL_IDX 
			FROM TB_ORDER_DETAIL AS D WITH (NOLOCK) 
					INNER JOIN
				TB_ORDER_MASTER AS M WITH (NOLOCK)
				ON D.ORDER_IDX = M.ORDER_IDX
		WHERE ORDER_DETAIL_IDX = @ORDER_DETAIL_IDX AND M_ID=@M_ID  )
	BEGIN
		SET @RET_NUM = '2';
		SET @RET_MESSAGE = '본인 주문한 상품이 아니거나 존재하지 않는 주문 상품입니다.';
		RETURN(2);
	END


	/**
		회원 확인
	*/
	IF NOT EXISTS( SELECT M_ID FROM TB_MEMBER WITH (NOLOCK) WHERE M_ID=@M_ID AND M_IS_RETIRE='N')
	BEGIN
		SET @RET_NUM = '3';
		SET @RET_MESSAGE = '존재하지 않거나 탈퇴한 회원 아이디입니다.';
		RETURN(3);
	END
	
	/**
		회원 정보 추가
	*/
	DECLARE @M_NAME VARCHAR(30);
	DECLARE @M_SEX CHAR(1);
	DECLARE @M_BIRTHDAY VARCHAR(10);
	
	SELECT 
		@M_NAME = M_NAME, 
		@M_SEX = M_SEX,
		@M_BIRTHDAY = M_BIRTHDAY
	FROM TB_MEMBER WITH (NOLOCK)
		WHERE M_ID=@M_ID;
		
	/**
	
		상품코드 확인
	*/
	IF NOT EXISTS (SELECT P_CODE FROM TB_PRODUCT_INFO WITH (NOLOCK) WHERE P_CODE=@P_CODE )
	BEGIN
		SET @RET_NUM = '4';
		SET @RET_MESSAGE = '존재하지 않는 상품코드입니다';
		RETURN(4);
	END
	
	/**
		상품정보 추가
	*/	
	DECLARE @P_NAME VARCHAR(100);
	DECLARE @C_CATE_CODE CHAR(9);
	DECLARE @P_MAIN_IMG VARCHAR(100);
	DECLARE @P_SUB_TITLE VARCHAR(200);
	
	SELECT 
		@P_NAME = P_NAME, 
		@C_CATE_CODE = C_CATE_CODE,
		@P_MAIN_IMG = MAIN_IMG,
		@P_SUB_TITLE = P_SUB_TITLE 
	FROM TB_PRODUCT_INFO WITH (NOLOCK)
		WHERE P_CODE=@P_CODE;
	
	--뷰티/헬스 구분
	DECLARE @CATE_GBN VARCHAR(3);	
	SET @CATE_GBN = SUBSTRING(@C_CATE_CODE, 1, 3);
	
	--포토리뷰 여부
	DECLARE @IS_PHOTO VARCHAR(1);	
	SET @IS_PHOTO = 'N';
	IF @ADD_IMAGE IS NOT NULL
		BEGIN
			SET @IS_PHOTO = 'Y';
		END 

	/**
		try	
	*/
	BEGIN TRY
		
		INSERT INTO TB_REVIEW_PRODUCT (
				M_ID, 
				M_NAME, 
				M_SEX, 
				M_BIRTHDAY,
				ORDER_DETAIL_IDX,
				P_CODE,
				P_NAME,
				P_SUB_TITLE,
				C_CATE_CODE,
				P_MAIN_IMG,
				CATE_GBN,
				SKIN_TYPE,
				COMMENT,
				ADD_IMAGE,
				IS_PHOTO,
				IS_AGREE,
				MEDIA_GBN	
			)
			VALUES(
				@M_ID, 
				@M_NAME, 
				@M_SEX,
				@M_BIRTHDAY,
				@ORDER_DETAIL_IDX,
				@P_CODE,
				@P_NAME,
				@P_SUB_TITLE,
				@C_CATE_CODE,
				@P_MAIN_IMG,
				@CATE_GBN,
				@SKIN_TYPE,
				@COMMENT,
				@ADD_IMAGE,
				@IS_PHOTO,
				'Y'	,
				@MEDIA_GBN	
			)
			
			DECLARE @REVIEW_IDX INT = SCOPE_IDENTITY();
			
			/**
				리뷰포인트 적립
			*/
			IF @IS_PHOTO = 'Y'
				BEGIN
					EXEC SP_POINT_REVIEW_PHOTO_SAVE @M_ID,@REVIEW_IDX, NULL, @ORDER_DETAIL_IDX, @P_NAME, NULL, NULL;
				END
			ELSE
				BEGIN
					EXEC SP_POINT_REVIEW_NORMAL_SAVE @M_ID,@REVIEW_IDX, NULL, @ORDER_DETAIL_IDX, @P_NAME, NULL, NULL;
				END
			
			
	END TRY
	BEGIN CATCH
		PRINT ERROR_MESSAGE();
		SET @RET_NUM = '2';
		SET @RET_MESSAGE = ERROR_MESSAGE();
		RETURN(2);		
	END CATCH
		
    SET NOCOUNT OFF;
    
    SET @RET_NUM = 0;
    SET @RET_MESSAGE = 'SUCCESS';
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ORDER_PAY]    Script Date: 09/11/2015 16:07:26 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ORDER_PAY
주문화면에서 결제완료되었을때의 액션
이때 TB_ORDER_MASTER로 데이터 입력
파라미터 설명
 @ORDER_IDX	INT				-- 임시테이블의 ORDER_IDX
 , @PAY_GBN CHAR(1)				-- 결제수단   ( 1:신용카드 2:실시간계좌이체 3:가상계좌, 4:포인트결제 )
 , @CARD_GBN CHAR(2)			-- 카드사구분
 , @INSTLMT_AT CHAR(1)			-- 할부여부
 , @BANK_CODE CHAR(2)			-- 은행코드
 , @PAT_TID VARCHAR(250)		-- 결제 TID
 , @REAL_ACCOUNT_AT CHAR(1)		-- 실시간계좌사용여부
 , @CASHRECEIPT_SE_CODE CHAR(1)	-- 현금영수증발급여부구분
 , @CASHRECEIPT_RESULT_CODE VARCHAR(10)		-- 현금영수증발급결과코드
 , @HTTP_USER_AGENT VARCHAR(1000)	-- 사용자브라우저
 , @PAT_GUBUN VARCHAR(10)			-- 결제방법구분 (Mobile :모바일, Web : 웹페이지)
 , @SVR_DOMAIN VARCHAR(50)			-- 서버도메인(www.aboutme.co.kr, m.aboutme.co.kr)
 , @VACT_Num VARCHAR(20) = ''		-- 가상계좌결제관련 - 입금계좌번호
 , @VACT_BankCode VARCHAR(2) = ''	-- 가상계좌결제관련 - 입금은행코드
 , @VACT_Name VARCHAR(20) = ''		-- 가상계좌결제관련 - 예금주명
 , @VACT_InputName VARCHAR(20) = ''	-- 가상계좌결제관련 - 송금자명
 , @VACT_Date VARCHAR(8) = ''		-- 가상계좌결제관련 - 송금일자
 , @VACT_Time VARCHAR(6) = ''		-- 가상계좌결제관련 - 송금시각
 , @ESCROW_YN CHAR(1) = 'N'			-- 에스크로 여부 

SELECT * FROM TB_CART

SELECT * 
--	UPDATE A SET A.M_GRADE = 'V'
FROM TB_MEMBER A
WHERE M_ID = 'KMG5302'

SELECT * FROM TB_PRODUCT_INFO

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL

SELECT ORDER_DETAIL_IDX, ORDER_IDX, P_COUNT,DISCOUNT_PRICE,EMP_DISCOUNT_PRICE, ORDER_PRICE, COUPON_DISCOUNT_AMT, USE_POINT, GRADE_DISCOUNT_AMT, POINT_ACCML, REAL_PAY_PRICE
FROM TB_ORDER_DETAIL

SELECT ORDER_DETAIL_IDX, ORDER_IDX, P_COUNT,DISCOUNT_PRICE,EMP_DISCOUNT_PRICE, ORDER_PRICE, COUPON_DISCOUNT_AMT, USE_POINT, GRADE_DISCOUNT_AMT, POINT_ACCML, REAL_PAY_PRICE
FROM TB_ORDER_DETAIL_TMP



	TRUNCATE TABLE TB_ORDER_MASTER
	TRUNCATE TABLE TB_ORDER_DETAIL

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_MASTER_TMP


exec SP_ORDER_PAY 1,'1','33','N','99','FSU23GHRFHSDE','','','','HTTP_USER_AGENT에 대한 값','Web','www.aboutme.co.kr'

27	101101101	101201100	101301100	1111111	테스트상품1	5	50000	5	46000	NULL	5<p>&nbsp;</p>	5<p>&nbsp;</p>	5	5	55	A20150708153237035_702.jpg	NULL	NULL	NULL	NULL	NULL	18	Y	NULL	0	0	NULL	NULL	2015-07-08 15:56:29.073	2015-06-18 21:52:05.703
28	101101102	101201100	101301100	1111112	테스트상품2	5	30000	55	28000	NULL	<p>상품정보(web)&nbsp;</p>	<p>&nbsp;</p>	NULL	NULL	555	A20150708153219659_948.jpg	NULL	NULL	NULL	NULL	NULL	19	Y	NULL	0	0	NULL	NULL	2015-07-08 15:56:29.060	2015-06-22 19:27:02.080
*/
CREATE PROCEDURE [dbo].[SP_ORDER_PAY]
 @ORDER_IDX	INT				-- 임시테이블의 ORDER_IDX
 , @PAY_GBN CHAR(1)				-- 결제수단   ( 1:신용카드 2:실시간계좌이체 3:가상계좌, 4:포인트결제 )
 , @CARD_GBN CHAR(2)			-- 카드사구분
 , @INSTLMT_AT CHAR(1)			-- 할부여부
 , @BANK_CODE CHAR(2)			-- 은행코드
 , @PAT_TID VARCHAR(250)		-- 결제 TID
 , @REAL_ACCOUNT_AT CHAR(1)		-- 실시간계좌사용여부
 , @CASHRECEIPT_SE_CODE CHAR(1)	-- 현금영수증발급여부구분
 , @CASHRECEIPT_RESULT_CODE VARCHAR(10)		-- 현금영수증발급결과코드
 , @HTTP_USER_AGENT VARCHAR(1000)	-- 사용자브라우저
 , @PAT_GUBUN VARCHAR(10)			-- 결제방법구분 (Mobile :모바일, Web : 웹페이지)
 , @SVR_DOMAIN VARCHAR(50)			-- 서버도메인(www.aboutme.co.kr, m.aboutme.co.kr)
 , @VACT_Num VARCHAR(20) = ''		-- 가상계좌결제관련 - 입금계좌번호
 , @VACT_BankCode VARCHAR(2) = ''	-- 가상계좌결제관련 - 입금은행코드
 , @VACT_Name VARCHAR(20) = ''		-- 가상계좌결제관련 - 예금주명
 , @VACT_InputName VARCHAR(20) = ''	-- 가상계좌결제관련 - 송금자명
 , @VACT_Date VARCHAR(8) = ''		-- 가상계좌결제관련 - 송금일자
 , @VACT_Time VARCHAR(6) = ''		-- 가상계좌결제관련 - 송금시각
 , @ESCROW_YN CHAR(1) = 'N'			-- 에스크로 여부 
 , @ORDER_STATUS_VALUE CHAR(2) = '20'   -- 모바일결제시 비동기방식이어서 실시간계좌이체시 결제대기 로 세팅

-- ,@ERR_CODE		INT OUTPUT	--처리중 오류코드, 0:오류없음.
AS
BEGIN

	SET NOCOUNT ON

	DECLARE @ORDER_CODE VARCHAR(20)
		, @REAL_ORDER_IDX INT
		, @ORDER_STATUS CHAR(2) = '10'

	IF @PAY_GBN = '3'
	BEGIN
		SET @ORDER_STATUS = '10'  --결제대기
	END
	ELSE BEGIN
		IF isnull(@ORDER_STATUS_VALUE,'') <> ''
		BEGIN
			SET @ORDER_STATUS = @ORDER_STATUS_VALUE
		END
		ELSE
		BEGIN
			SET @ORDER_STATUS = '20'   --결제완료
		END
	END
	
	/*
		최종처리
	*/
	-- 주문번호 생성
	INSERT INTO TB_ORDER_CODE ( REG_DATE )
	SELECT GETDATE()

	SELECT @ORDER_CODE = CONVERT(VARCHAR,GETDATE(),112) + '-' + CONVERT(VARCHAR, SCOPE_IDENTITY() )


	DECLARE @MEMBER_ORDER_GBN CHAR(1) = ''
		, @M_ID VARCHAR(13) = ''
		, @POINT_USE_PRICE INT = 0
	
	SELECT @MEMBER_ORDER_GBN = MEMBER_ORDER_GBN, @M_ID = M_ID, @POINT_USE_PRICE = POINT_USE_PRICE
	FROM TB_ORDER_MASTER_TMP A WITH (NOLOCK)
	WHERE ORDER_IDX = @ORDER_IDX
	
	IF @MEMBER_ORDER_GBN = '1'		-- 회원주문일 경우
	BEGIN
		-- 주문에 사용한 포인트 차감처리
		IF (isnull(@POINT_USE_PRICE,0) > 0)
		BEGIN
			DECLARE @RET_NUM VARCHAR
				,@RET_MESSAGE VARCHAR(100)
			EXEC SP_POINT_USE_ON_ORDER @M_ID,@POINT_USE_PRICE,@ORDER_CODE,@RET_NUM OUTPUT,@RET_MESSAGE OUTPUT
			
			IF @RET_NUM <> '0'
			BEGIN
				RAISERROR (@RET_MESSAGE,16,1);
				RETURN
			END
		END
		
		-- 주문에 사용한 배송쿠폰 사용처리
		UPDATE A
		SET A.USE_STATUS = 10
		FROM VIEW_USABLE_COUPON_LIST A
			INNER JOIN TB_ORDER_MASTER_TMP B
				ON A.M_ID = B.M_ID
				AND A.IDX_COUPON_NUMBER = B.TRANS_COUPON
				AND B.ORDER_IDX = @ORDER_IDX

		-- 주문에 사용한 상품쿠폰 사용처리
		UPDATE A
		SET A.USE_STATUS = 10
		FROM VIEW_USABLE_COUPON_LIST A
			INNER JOIN TB_ORDER_MASTER_TMP B
				ON A.M_ID = B.M_ID
				AND B.ORDER_IDX = @ORDER_IDX
			INNER JOIN TB_ORDER_DETAIL_TMP C
				ON B.ORDER_IDX = C.ORDER_IDX
				AND A.IDX_COUPON_NUMBER = C.IDX_COUPON_NUMBER

	END
	





	INSERT INTO TB_ORDER_MASTER (
		  ORDER_CODE
		, MEMBER_ORDER_GBN
		, M_ID
		, M_NAME
		, M_GRADE
		, M_GBN
		, SESSION_ID
		, NOMEMBER_PASS
		, ORDER_DATE
		, ORDER_STATUS
		, TOTAL_ORDER_PRICE
		, TRANS_PRICE
		, TRANS_COUPON

		, EMP_DISCOUNT_AMT
		, COUPON_DISCOUNT_AMT
		, POINT_USE_PRICE
		, GRADE_DISCOUNT_AMT
		, DISCOUNT_AMT

		, TOTAL_PAY_PRICE
		, FREEGIFT_GBN
		, FREEGIFT_NAME
		, ACCML_POINT
		, PAY_GBN -- 결제수단   ( 1:신용카드 2:실시간계좌이체 3:가상계좌, 4:포인트결제 )
		, ESCROW_YN
		, CARD_GBN -- 카드사구분
		, INSTLMT_AT -- 할부여부
		, BANK_CODE -- 은행코드
		, PAT_TID -- 결제 TID
		, REAL_ACCOUNT_AT -- 실시간계좌사용여부
		, CASHRECEIPT_SE_CODE -- 현금영수증발급여부구분
		, CASHRECEIPT_RESULT_CODE -- 현금영수증발급결과코드
		, VACT_Num			-- 가상계좌관련 - 입금계좌번호
		, VACT_BankCode		-- 가상계좌결제관련 - 입금은행코드
		, VACT_Name			-- 가상계좌결제관련 - 예금주명
		, VACT_InputName	-- 가상계좌결제관련 - 송금자명
		, VACT_Date			-- 가상계좌결제관련 - 송금일자
		, VACT_Time			-- 가상계좌결제관련 - 송금시각
		, SENDER_NAME
		, SENDER_POST
		, SENDER_ADDR1
		, SENDER_ADDR2
		, SENDER_TEL
		, SENDER_HP
		, SENDER_EMAIL
		, RECEIVER_NAME
		, RECEIVER_POST
		, RECEIVER_ADDR1
		, RECEIVER_ADDR2
		, RECEIVER_TEL
		, RECEIVER_HP
		, ORDER_MEMO
		, OLD_ORDER_IDX
		, REG_DATE
		, HTTP_USER_AGENT
		, PAT_GUBUN
		, SVR_DOMAIN
	)
	SELECT 
		 @ORDER_CODE
		, A.MEMBER_ORDER_GBN
		, A.M_ID
		, A.M_NAME
		, A.M_GRADE
		, A.M_GBN
		, A.SESSION_ID
		, A.NOMEMBER_PASS
		, GETDATE()
		, @ORDER_STATUS
		, A.TOTAL_ORDER_PRICE
		, A.TRANS_PRICE
		, A.TRANS_COUPON

		, A.EMP_DISCOUNT_AMT
		, A.COUPON_DISCOUNT_AMT
		, A.POINT_USE_PRICE
		, A.GRADE_DISCOUNT_AMT
		, A.DISCOUNT_AMT

		, A.TOTAL_PAY_PRICE
		, A.FREEGIFT_GBN
		, A.FREEGIFT_NAME
		, A.ACCML_POINT
		, @PAY_GBN -- 결제수단   ( 1:신용카드 2:실시간계좌이체 3:가상계좌, 4:포인트결제 )
		, @ESCROW_YN
		, @CARD_GBN -- 카드사구분
		, @INSTLMT_AT -- 할부여부
		, @BANK_CODE -- 은행코드
		, @PAT_TID -- 결제 TID
		, @REAL_ACCOUNT_AT -- 실시간계좌사용여부
		, @CASHRECEIPT_SE_CODE -- 현금영수증발급여부구분
		, @CASHRECEIPT_RESULT_CODE -- 현금영수증발급결과코드

		, @VACT_Num			-- 가상계좌관련 - 입금계좌번호
		, @VACT_BankCode		-- 가상계좌결제관련 - 입금은행코드
		, @VACT_Name			-- 가상계좌결제관련 - 예금주명
		, @VACT_InputName	-- 가상계좌결제관련 - 송금자명
		, @VACT_Date			-- 가상계좌결제관련 - 송금일자
		, @VACT_Time			-- 가상계좌결제관련 - 송금시각

		, A.SENDER_NAME
		, A.SENDER_POST
		, A.SENDER_ADDR1
		, A.SENDER_ADDR2
		, A.SENDER_TEL
		, A.SENDER_HP
		, A.SENDER_EMAIL
		, A.RECEIVER_NAME
		, A.RECEIVER_POST
		, A.RECEIVER_ADDR1
		, A.RECEIVER_ADDR2
		, A.RECEIVER_TEL
		, A.RECEIVER_HP
		, A.ORDER_MEMO
		, @ORDER_IDX
		, GETDATE()
		, @HTTP_USER_AGENT
		, @PAT_GUBUN
		, @SVR_DOMAIN
	FROM TB_ORDER_MASTER_TMP A WITH (NOLOCK)
	WHERE ORDER_IDX = @ORDER_IDX

	SELECT @REAL_ORDER_IDX = SCOPE_IDENTITY()


	INSERT INTO TB_ORDER_DETAIL (
		ORDER_IDX
		, ORDER_CODE
		, ORDER_DETAIL_STATUS
		, P_CODE
		, P_CATE_CODE
		, P_CATE_NAME
		, C_CATE_CODE
		, C_CATE_NAME
		, L_CATE_CODE
		, L_CATE_NAME
		, P_NAME
		, P_SUB_TITLE
		, P_IMG1_S
		, ICON_NEW
		, ICON_BEST
		, ICON_SOLDOUT
		, ICON_CUSTOM
		, ICON_ONEPLUS
		, ICON_SET
		, ICON_TIME
		, ICON_COUPON
		, SELLING_PRICE
		, DISCOUNT_RATE
		, DISCOUNT_PRICE
		, PROMOTION_TYPE
		, CD_PROMOTION_PRODUCT
		, EMP_DISCOUNT
		, EMP_PMO_TOTAL_RATE_OR_MONEY
		, EMP_PMO_TOTAL_DISCOUNT_RATE
		, EMP_PMO_TOTAL_DISCOUNT_MONEY
		, EMP_DISCOUNT_AMT
		, EMP_DISCOUNT_PRICE
		, ORDER_PRICE
		, CD_COUPON
		, RATE_OR_MONEY
		, COUPON_DISCOUNT_MONEY
		, COUPON_DISCOUNT_RATE
		, COUPON_DISCOUNT_AMT
		, COUPON_DISCOUNT_PRICE
		, USE_POINT
		, GRADE_DISCOUNT
		, GRADE_PMO_TOTAL_RATE_OR_MONEY
		, GRADE_PMO_TOTAL_DISCOUNT_RATE
		, GRADE_PMO_TOTAL_DISCOUNT_MONEY
		, GRADE_DISCOUNT_AMT
		, POINT_ACCML
		, POINT_ACCML_DATE
		, P_COUNT
		, REAL_PAY_PRICE
		, REG_DATE
		, ORDER_DETAIL_STATUS_DATE
	)
	SELECT
		@REAL_ORDER_IDX
		, @ORDER_CODE
		, @ORDER_STATUS
		, A.P_CODE
		, A.P_CATE_CODE
		, A.P_CATE_NAME
		, A.C_CATE_CODE
		, A.C_CATE_NAME
		, A.L_CATE_CODE
		, A.L_CATE_NAME
		, A.P_NAME
		, A.P_SUB_TITLE
		, A.P_IMG1_S
		, A.ICON_NEW
		, A.ICON_BEST
		, A.ICON_SOLDOUT
		, A.ICON_CUSTOM
		, A.ICON_ONEPLUS
		, A.ICON_SET
		, A.ICON_TIME
		, A.ICON_COUPON
		, A.SELLING_PRICE
		, A.DISCOUNT_RATE
		, A.DISCOUNT_PRICE
		, A.PROMOTION_TYPE
		, A.CD_PROMOTION_PRODUCT
		, A.EMP_DISCOUNT
		, A.EMP_PMO_TOTAL_RATE_OR_MONEY
		, A.EMP_PMO_TOTAL_DISCOUNT_RATE
		, A.EMP_PMO_TOTAL_DISCOUNT_MONEY
		, A.EMP_DISCOUNT_AMT
		, A.EMP_DISCOUNT_PRICE
		, A.ORDER_PRICE
		, A.CD_COUPON
		, A.RATE_OR_MONEY
		, A.COUPON_DISCOUNT_MONEY
		, A.COUPON_DISCOUNT_RATE
		, A.COUPON_DISCOUNT_AMT
		, A.COUPON_DISCOUNT_PRICE
		, A.USE_POINT
		, A.GRADE_DISCOUNT
		, A.GRADE_PMO_TOTAL_RATE_OR_MONEY
		, A.GRADE_PMO_TOTAL_DISCOUNT_RATE
		, A.GRADE_PMO_TOTAL_DISCOUNT_MONEY
		, A.GRADE_DISCOUNT_AMT
		, A.POINT_ACCML
		, A.POINT_ACCML_DATE
		, A.P_COUNT
		, A.REAL_PAY_PRICE
		, GETDATE()
		, GETDATE()
	FROM TB_ORDER_DETAIL_TMP A
	WHERE ORDER_IDX = @ORDER_IDX
	ORDER BY ORDER_DETAIL_IDX


	-- 주문관련LOG 생성
	INSERT INTO TB_ORDER_LOG
	( ORDER_IDX, ORDER_CODE, PROCESS_MEMO )
	VALUES
	( @REAL_ORDER_IDX, @ORDER_CODE, '주문서 생성' )




	-- 판매량 업데이트
	UPDATE A
	SET A.SELLING_COUNT = ISNULL(A.SELLING_COUNT,0) + B.P_COUNT
	FROM TB_PRODUCT_INFO A
		INNER JOIN TB_ORDER_DETAIL_TMP B
			ON A.P_CODE = B.P_CODE
			AND B.ORDER_IDX = @ORDER_IDX



/*
 SELECT * FROM TB_ORDER_DETAIL
 SELECT * FROM TB_ORDER_MASTER

exec SP_ORDER_PAY 1,'1','33','N','99','FSU23GHRFHSDE','','',''

SELECT * FROM TB_ORDER_MASTER_TMP
SELECT * FROM TB_ORDER_DETAIL_TMP


		TRUNCATE TABLE TB_ORDER_MASTER
		TRUNCATE TABLE TB_ORDER_DETAIL
*/
	SELECT @ORDER_CODE as ORDER_CODE
	
	SET NOCOUNT OFF ;


END
GO
/****** Object:  StoredProcedure [dbo].[SP_ADMIN_ORDER_MASTER_POINT_SET]    Script Date: 09/11/2015 16:07:26 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
프로시져명 SP_ADMIN_ORDER_MASTER_POINT_SET
주문단위로 주문상태가 변경될때, 포인트를 정리하는 프로시져

전체주문건별로 TOBE상태가 다음으로 변경될때, 해당 조사식을 따른다
(결재완료로 변경되는 상황은 배제한다.)
1. 세부주문건별로 LOOP처리하여 SP_ADMIN_ORDER_DETAIL_POINT_SET 로직을 수행. 
	단,SP_POINT_RESAVE_USED_POINT_ON_CANCEL_AFTER_FIRM_ORDER와 SP_POINT_CANCEL_PART_ORDER은 수행하지 않음. => @MASTER_CONTROL = 'N'

취소반품으로 변경시 SP_POINT_CANCEL_ALL_ORDER 호출



파라미터 설명
@ORDER_IDX			-- 주문상세일련번호
@TOBE_STATUS		-- 바꾸려는 상태코드
@REG_ID				-- 처리자ID(관리자)

SELECT * FROM TB_ORDER_MASTER
SELECT * FROM TB_ORDER_DETAIL
SELECT * FROM TB_ORDER_LOG

exec SP_ADMIN_ORDER_MASTER_POINT_SET 1,'50','222'
exec SP_ADMIN_ORDER_MASTER_POINT_SET 1,'50','222'

*/
CREATE PROCEDURE [dbo].[SP_ADMIN_ORDER_MASTER_POINT_SET]
 @ORDER_IDX	INT
,@TOBE_STATUS VARCHAR(2)
,@REG_ID VARCHAR(13)
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @MEMBER_ORDER_GBN CHAR(1)
		, @M_ID VARCHAR(13)
		, @ASIS_STATUS VARCHAR(2)
		, @POINT_USE_PRICE INT
		, @ORDER_CODE VARCHAR(20)
		, @ORDER_DETAIL_IDX INT
		, @PAY_OK CHAR(1)
		, @RET_NUM VARCHAR
		, @RET_MESSAGE VARCHAR(100)

	SELECT @MEMBER_ORDER_GBN = MEMBER_ORDER_GBN
		, @M_ID = M_ID
		, @ASIS_STATUS = ORDER_STATUS
		, @POINT_USE_PRICE = ISNULL(POINT_USE_PRICE,0)
	FROM TB_ORDER_MASTER OM WITH (NOLOCK)

	IF @TOBE_STATUS = @ASIS_STATUS
	BEGIN
		RAISERROR ('변경하려는 상태가 기존의 상태가 같습니다.',16,1);
		RETURN
	END



	DECLARE ORDER_CURSOR CURSOR FOR

	SELECT OD.ORDER_DETAIL_IDX
	FROM TB_ORDER_DETAIL OD WITH (NOLOCK)
	WHERE OD.ORDER_IDX = @ORDER_IDX

	OPEN ORDER_CURSOR
	FETCH NEXT FROM ORDER_CURSOR INTO @ORDER_DETAIL_IDX
	WHILE (@@FETCH_STATUS=0)
	BEGIN 
		PRINT @ORDER_DETAIL_IDX
		EXEC SP_ADMIN_ORDER_DETAIL_POINT_SET @ORDER_DETAIL_IDX, @TOBE_STATUS, 'N', @REG_ID
		
		FETCH NEXT FROM ORDER_CURSOR INTO @ORDER_DETAIL_IDX
	END
	CLOSE ORDER_CURSOR
	DEALLOCATE ORDER_CURSOR


	IF ( @TOBE_STATUS = '80' ) OR ( @TOBE_STATUS = '90' )		-- 취소 또는 반품으로 변경하려할때 START
	BEGIN
	
		SET @PAY_OK = 'N'

		IF @MEMBER_ORDER_GBN = '2'
		BEGIN
			SET @PAY_OK = 'Y'
		END
		
		IF ( @MEMBER_ORDER_GBN = '1' ) AND ( @POINT_USE_PRICE > 0 )
		BEGIN
			EXEC SP_POINT_CANCEL_ALL_ORDER @M_ID,@POINT_USE_PRICE,@ORDER_CODE,@RET_NUM OUTPUT,@RET_MESSAGE OUTPUT

			IF ( @RET_NUM <> '0' ) 
			BEGIN
				RAISERROR (@RET_MESSAGE,16,1);
				RETURN
			END

			SET @PAY_OK = 'Y'
		
		
		END

	
	END															-- 취소 또는 반품으로 변경하려할때 END

	SET NOCOUNT OFF ;
END
GO
/****** Object:  Default [DF_MFLY_SEND_MSG_CONN_NO]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MSG] ADD  CONSTRAINT [DF_MFLY_SEND_MSG_CONN_NO]  DEFAULT ((-1)) FOR [CONN_NO]
GO
/****** Object:  Default [DF_MFLY_SEND_MSG_GRP_NO]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MSG] ADD  CONSTRAINT [DF_MFLY_SEND_MSG_GRP_NO]  DEFAULT ((0)) FOR [GRP_NO]
GO
/****** Object:  Default [DF_MFLY_SEND_MSG_PROC_GRP_NO]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MSG] ADD  CONSTRAINT [DF_MFLY_SEND_MSG_PROC_GRP_NO]  DEFAULT ((0)) FOR [PROC_GRP_NO]
GO
/****** Object:  Default [DF_MFLY_SEND_MSG_PROC_TIME]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MSG] ADD  CONSTRAINT [DF_MFLY_SEND_MSG_PROC_TIME]  DEFAULT ((0)) FOR [PROC_TIME]
GO
/****** Object:  Default [DF_MFLY_SEND_MSG_CANCEL_FLAG]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MSG] ADD  CONSTRAINT [DF_MFLY_SEND_MSG_CANCEL_FLAG]  DEFAULT ((0)) FOR [CANCEL_FLAG]
GO
/****** Object:  Default [DF_MFLY_SEND_MSG_RESULT_FLAG]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MSG] ADD  CONSTRAINT [DF_MFLY_SEND_MSG_RESULT_FLAG]  DEFAULT ((0)) FOR [RESULT_FLAG]
GO
/****** Object:  Default [DF_MFLY_SEND_MSG_RESULT_CODE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MSG] ADD  CONSTRAINT [DF_MFLY_SEND_MSG_RESULT_CODE]  DEFAULT ((0)) FOR [RESULT_CODE]
GO
/****** Object:  Default [DF_MFLY_SEND_MSG_ST_FLAG]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MSG] ADD  CONSTRAINT [DF_MFLY_SEND_MSG_ST_FLAG]  DEFAULT ((0)) FOR [ST_FLAG]
GO
/****** Object:  Default [DF_MFLY_SEND_MSG_ST_CNT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MSG] ADD  CONSTRAINT [DF_MFLY_SEND_MSG_ST_CNT]  DEFAULT ((0)) FOR [ST_CNT]
GO
/****** Object:  Default [DF_MFLY_SEND_MSG_ST_TIME]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MSG] ADD  CONSTRAINT [DF_MFLY_SEND_MSG_ST_TIME]  DEFAULT ((0)) FOR [ST_TIME]
GO
/****** Object:  Default [DF_MFLY_SEND_MMS_CONN_NO]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MMS] ADD  CONSTRAINT [DF_MFLY_SEND_MMS_CONN_NO]  DEFAULT ((-1)) FOR [CONN_NO]
GO
/****** Object:  Default [DF_MFLY_SEND_MMS_FILE_GRP_ID]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MMS] ADD  CONSTRAINT [DF_MFLY_SEND_MMS_FILE_GRP_ID]  DEFAULT ((0)) FOR [FILE_GRP_ID]
GO
/****** Object:  Default [DF_MFLY_SEND_MMS_GRP_NO]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MMS] ADD  CONSTRAINT [DF_MFLY_SEND_MMS_GRP_NO]  DEFAULT ((0)) FOR [GRP_NO]
GO
/****** Object:  Default [DF_MFLY_SEND_MMS_PROC_GRP_NO]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MMS] ADD  CONSTRAINT [DF_MFLY_SEND_MMS_PROC_GRP_NO]  DEFAULT ((0)) FOR [PROC_GRP_NO]
GO
/****** Object:  Default [DF_MFLY_SEND_MMS_PROC_TIME]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MMS] ADD  CONSTRAINT [DF_MFLY_SEND_MMS_PROC_TIME]  DEFAULT ((0)) FOR [PROC_TIME]
GO
/****** Object:  Default [DF_MFLY_SEND_MMS_CANCEL_FLAG]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MMS] ADD  CONSTRAINT [DF_MFLY_SEND_MMS_CANCEL_FLAG]  DEFAULT ((0)) FOR [CANCEL_FLAG]
GO
/****** Object:  Default [DF_MFLY_SEND_MMS_RESULT_FLAG]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MMS] ADD  CONSTRAINT [DF_MFLY_SEND_MMS_RESULT_FLAG]  DEFAULT ((0)) FOR [RESULT_FLAG]
GO
/****** Object:  Default [DF_MFLY_SEND_MMS_RESULT_CODE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MMS] ADD  CONSTRAINT [DF_MFLY_SEND_MMS_RESULT_CODE]  DEFAULT ((0)) FOR [RESULT_CODE]
GO
/****** Object:  Default [DF_MFLY_SEND_MMS_ST_FLAG]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MMS] ADD  CONSTRAINT [DF_MFLY_SEND_MMS_ST_FLAG]  DEFAULT ((0)) FOR [ST_FLAG]
GO
/****** Object:  Default [DF_MFLY_SEND_MMS_ST_CNT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MMS] ADD  CONSTRAINT [DF_MFLY_SEND_MMS_ST_CNT]  DEFAULT ((0)) FOR [ST_CNT]
GO
/****** Object:  Default [DF_MFLY_SEND_MMS_ST_TIME]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[MFLY_SEND_MMS] ADD  CONSTRAINT [DF_MFLY_SEND_MMS_ST_TIME]  DEFAULT ((0)) FOR [ST_TIME]
GO
/****** Object:  Default [DF__ADMIN_MEM__INS_D__0425A276]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[ADMIN_MEMBER_DEPT] ADD  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_ADMIN_MEMBER_INS_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[ADMIN_MEMBER] ADD  CONSTRAINT [DF_ADMIN_MEMBER_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_WISHLI__REG_D__42ACE4D4]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_WISHLIST] ADD  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_WINNER__VIEW___1F798287]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_WINNER] ADD  DEFAULT ((0)) FOR [VIEW_CNT]
GO
/****** Object:  Default [DF__TB_WINNER__DISPL__206DA6C0]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_WINNER] ADD  DEFAULT ('N') FOR [DISPLAY_YN]
GO
/****** Object:  Default [DF__TB_WINNER__REG_D__2161CAF9]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_WINNER] ADD  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_SHOPIN__DISPL__08961D2F]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_SHOPINFO] ADD  DEFAULT ((99)) FOR [DISPLAY_ORDER]
GO
/****** Object:  Default [DF__TB_SHOPIN__USE_Y__098A4168]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_SHOPINFO] ADD  DEFAULT ('N') FOR [USE_YN]
GO
/****** Object:  Default [DF__TB_SHOPIN__REG_D__0A7E65A1]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_SHOPINFO] ADD  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_SAMPLE__REG_D__328C56FB]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_SAMPLE_MEMBER] ADD  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_SAMPLE__FROM___2AEB3533]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_SAMPLE] ADD  DEFAULT ('00') FOR [FROM_TIME]
GO
/****** Object:  Default [DF__TB_SAMPLE__TO_TI__2BDF596C]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_SAMPLE] ADD  DEFAULT ('24') FOR [TO_TIME]
GO
/****** Object:  Default [DF__TB_SAMPLE__SAMPL__2CD37DA5]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_SAMPLE] ADD  DEFAULT ('A') FOR [SAMPLE_GBN]
GO
/****** Object:  Default [DF__TB_SAMPLE__DISPL__2DC7A1DE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_SAMPLE] ADD  DEFAULT ((99)) FOR [DISPLAY_ORDER]
GO
/****** Object:  Default [DF__TB_SAMPLE__USE_Y__2EBBC617]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_SAMPLE] ADD  DEFAULT ('N') FOR [USE_YN]
GO
/****** Object:  Default [DF__TB_SAMPLE__REG_D__2FAFEA50]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_SAMPLE] ADD  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF_TB_REVIEW_PRODUCT_IS_AGREE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_REVIEW_PRODUCT] ADD  CONSTRAINT [DF_TB_REVIEW_PRODUCT_IS_AGREE]  DEFAULT ('N') FOR [IS_AGREE]
GO
/****** Object:  Default [DF_TB_REVIEW_PRODUCT_IS_DISPLAY]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_REVIEW_PRODUCT] ADD  CONSTRAINT [DF_TB_REVIEW_PRODUCT_IS_DISPLAY]  DEFAULT ('Y') FOR [IS_DISPLAY]
GO
/****** Object:  Default [DF_TB_REVIEW_PRODUCT_IS_BEST]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_REVIEW_PRODUCT] ADD  CONSTRAINT [DF_TB_REVIEW_PRODUCT_IS_BEST]  DEFAULT ('N') FOR [IS_BEST]
GO
/****** Object:  Default [DF_TB_REVIEW_PRODUCT_COUNT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_REVIEW_PRODUCT] ADD  CONSTRAINT [DF_TB_REVIEW_PRODUCT_COUNT]  DEFAULT ((0)) FOR [VIEW_CNT]
GO
/****** Object:  Default [DF_TB_REVIEW_PRODUCT_INS_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_REVIEW_PRODUCT] ADD  CONSTRAINT [DF_TB_REVIEW_PRODUCT_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_REVIEW_PRODUCT_IS_SEL_BEST]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_REVIEW_PRODUCT] ADD  CONSTRAINT [DF_TB_REVIEW_PRODUCT_IS_SEL_BEST]  DEFAULT ('N') FOR [IS_MOST_CNT]
GO
/****** Object:  Default [DF_TB_REVIEW_EXP_MEMBER_INS_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_REVIEW_EXP_MEMBER] ADD  CONSTRAINT [DF_TB_REVIEW_EXP_MEMBER_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_REVIEW_EXP_MASTER_INST_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_REVIEW_EXP_MASTER] ADD  CONSTRAINT [DF_TB_REVIEW_EXP_MASTER_INST_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_REVIEW_EXP_ARTICLE_IS_BEST]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_REVIEW_EXP_ARTICLE] ADD  CONSTRAINT [DF_TB_REVIEW_EXP_ARTICLE_IS_BEST]  DEFAULT ('N') FOR [IS_BEST]
GO
/****** Object:  Default [DF_TB_REVIEW_EXP_ARTICLE_IS_DISPLAY]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_REVIEW_EXP_ARTICLE] ADD  CONSTRAINT [DF_TB_REVIEW_EXP_ARTICLE_IS_DISPLAY]  DEFAULT ('N') FOR [IS_DISPLAY]
GO
/****** Object:  Default [DF_TB_REVIEW_EXP_ARTICLE_VIEW_CNT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_REVIEW_EXP_ARTICLE] ADD  CONSTRAINT [DF_TB_REVIEW_EXP_ARTICLE_VIEW_CNT]  DEFAULT ((0)) FOR [VIEW_CNT]
GO
/****** Object:  Default [DF_TB_REVIEW_EXP_ARTICLE_INS_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_REVIEW_EXP_ARTICLE] ADD  CONSTRAINT [DF_TB_REVIEW_EXP_ARTICLE_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_RECALL__GUBUN__452A2A23]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_RECALL_BBS] ADD  DEFAULT ((1)) FOR [GUBUN]
GO
/****** Object:  Default [DF__TB_RECALL__STATU__461E4E5C]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_RECALL_BBS] ADD  DEFAULT ((1)) FOR [STATUS]
GO
/****** Object:  Default [DF__TB_RECALL__REG_D__47127295]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_RECALL_BBS] ADD  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_QNA__STATUS__163A3110]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_QNA] ADD  DEFAULT ('1') FOR [STATUS]
GO
/****** Object:  Default [DF__TB_QNA__REG_DATE__172E5549]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_QNA] ADD  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_PROMOT__INS_D__37703C52]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PROMOTION_PRODUCT_VS_TOTAL] ADD  CONSTRAINT [DF__TB_PROMOT__INS_D__37703C52]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__PMO_PRODU__INS_D__32AB8735]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PROMOTION_PRODUCT_CATEGORY] ADD  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_PROMOT__INS_D__4A78EF25]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PROMOTION_BY_TOTAL_NUMBERING] ADD  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_PROMOT__INS_D__2EDAF651]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PROMOTION_BY_TOTAL_MEM_GRADE] ADD  CONSTRAINT [DF__TB_PROMOT__INS_D__2EDAF651]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_PROMOT__INS_D__1975C517]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PROMOTION_BY_TOTAL_CATEGORY] ADD  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_PROMOT__INS_D__2CF2ADDF]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PROMOTION_BY_TOTAL] ADD  CONSTRAINT [DF__TB_PROMOT__INS_D__2CF2ADDF]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_PROMOT__INS_D__3493CFA7]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PROMOTION_BY_PRODUCT_PRICE] ADD  CONSTRAINT [DF__TB_PROMOT__INS_D__3493CFA7]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_PROMOT__INS_D__4C613797]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PROMOTION_BY_PRODUCT_NUMBERING] ADD  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_PROMOT__INS_D__30C33EC3]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PROMOTION_BY_PRODUCT] ADD  CONSTRAINT [DF__TB_PROMOT__INS_D__30C33EC3]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_PRODUCT_INFO_P_COUNT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PRODUCT_INFO] ADD  CONSTRAINT [DF_TB_PRODUCT_INFO_P_COUNT]  DEFAULT ((0)) FOR [P_COUNT]
GO
/****** Object:  Default [DF_TB_PRODUCT_INFO_SELLING_PRICE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PRODUCT_INFO] ADD  CONSTRAINT [DF_TB_PRODUCT_INFO_SELLING_PRICE]  DEFAULT ((0)) FOR [SELLING_PRICE]
GO
/****** Object:  Default [DF_TB_PRODUCT_INFO_DISCOUNT_RATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PRODUCT_INFO] ADD  CONSTRAINT [DF_TB_PRODUCT_INFO_DISCOUNT_RATE]  DEFAULT ((0)) FOR [DISCOUNT_RATE]
GO
/****** Object:  Default [DF_TB_PRODUCT_INFO_DISCOUNT_PRICE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PRODUCT_INFO] ADD  CONSTRAINT [DF_TB_PRODUCT_INFO_DISCOUNT_PRICE]  DEFAULT ((0)) FOR [DISCOUNT_PRICE]
GO
/****** Object:  Default [DF_TB_PRODUCT_INFO_SOLDOUT_YN]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PRODUCT_INFO] ADD  CONSTRAINT [DF_TB_PRODUCT_INFO_SOLDOUT_YN]  DEFAULT ('N') FOR [SOLDOUT_YN]
GO
/****** Object:  Default [DF_TB_PRODUCT_INFO_RE_SORT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PRODUCT_INFO] ADD  CONSTRAINT [DF_TB_PRODUCT_INFO_RE_SORT]  DEFAULT ((0)) FOR [RE_SORT]
GO
/****** Object:  Default [DF_TB_PRODUCT_INFO_DISPLAY_YN]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PRODUCT_INFO] ADD  CONSTRAINT [DF_TB_PRODUCT_INFO_DISPLAY_YN]  DEFAULT ('Y') FOR [DISPLAY_YN]
GO
/****** Object:  Default [DF_TB_PRODUCT_INFO_SELLING_COUNT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PRODUCT_INFO] ADD  CONSTRAINT [DF_TB_PRODUCT_INFO_SELLING_COUNT]  DEFAULT ((0)) FOR [SELLING_COUNT]
GO
/****** Object:  Default [DF_TB_PRODUCT_INFO_SELLING_MONTH_COUNT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PRODUCT_INFO] ADD  CONSTRAINT [DF_TB_PRODUCT_INFO_SELLING_MONTH_COUNT]  DEFAULT ((0)) FOR [SELLING_MONTH_COUNT]
GO
/****** Object:  Default [DF_TB_PRODUCT_INFO_P_VIEW_COUNT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PRODUCT_INFO] ADD  CONSTRAINT [DF_TB_PRODUCT_INFO_P_VIEW_COUNT]  DEFAULT ((0)) FOR [P_VIEW_COUNT]
GO
/****** Object:  Default [DF_TB_PRODUCT_INFO_P_OUTLET_YN]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PRODUCT_INFO] ADD  CONSTRAINT [DF_TB_PRODUCT_INFO_P_OUTLET_YN]  DEFAULT ('N') FOR [P_OUTLET_YN]
GO
/****** Object:  Default [DF_TB_PRODUCT_INFO_INS_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_PRODUCT_INFO] ADD  CONSTRAINT [DF_TB_PRODUCT_INFO_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_POPUP_IS_REMOVE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_POPUP] ADD  CONSTRAINT [DF_TB_POPUP_IS_REMOVE]  DEFAULT ('N') FOR [IS_REMOVE]
GO
/****** Object:  Default [DF_TB_POPUP_INS_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_POPUP] ADD  CONSTRAINT [DF_TB_POPUP_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_POINT_USE_USE_POINT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_POINT_USE] ADD  CONSTRAINT [DF_TB_POINT_USE_USE_POINT]  DEFAULT ((0)) FOR [USE_POINT]
GO
/****** Object:  Default [DF_TB_POINT_USE_SAVE_SUM_POINT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_POINT_USE] ADD  CONSTRAINT [DF_TB_POINT_USE_SAVE_SUM_POINT]  DEFAULT ((0)) FOR [SAVE_SUM_POINT]
GO
/****** Object:  Default [DF_TB_POINT_USE_EXPIRE_YN]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_POINT_USE] ADD  CONSTRAINT [DF_TB_POINT_USE_EXPIRE_YN]  DEFAULT ('N') FOR [EXPIRE_YN]
GO
/****** Object:  Default [DF_TB_POINT_USE_USE_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_POINT_USE] ADD  CONSTRAINT [DF_TB_POINT_USE_USE_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_POINT_SAVE_BY_USE_INS_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_POINT_SAVE_BY_USE] ADD  CONSTRAINT [DF_TB_POINT_SAVE_BY_USE_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_POINT_SAVE_SAVE_POINT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_POINT_SAVE] ADD  CONSTRAINT [DF_TB_POINT_SAVE_SAVE_POINT]  DEFAULT ((0)) FOR [SAVE_POINT]
GO
/****** Object:  Default [DF_TB_POINT_SAVE_SAVE_REMAIN_POINT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_POINT_SAVE] ADD  CONSTRAINT [DF_TB_POINT_SAVE_SAVE_REMAIN_POINT]  DEFAULT ((0)) FOR [SAVE_OFFSET_POINT]
GO
/****** Object:  Default [DF_TB_POINT_SAVE_SAVE_SUM_POINT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_POINT_SAVE] ADD  CONSTRAINT [DF_TB_POINT_SAVE_SAVE_SUM_POINT]  DEFAULT ((0)) FOR [SAVE_SUM_POINT]
GO
/****** Object:  Default [DF_Table_1_IS_EXPIRE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_POINT_SAVE] ADD  CONSTRAINT [DF_Table_1_IS_EXPIRE]  DEFAULT ('N') FOR [EXPIRE_YN]
GO
/****** Object:  Default [DF_TB_POINT_SAVE_SAVE_POINT_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_POINT_SAVE] ADD  CONSTRAINT [DF_TB_POINT_SAVE_SAVE_POINT_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_POINT_LOG_INS_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_POINT_LOG] ADD  CONSTRAINT [DF_TB_POINT_LOG_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_ORDER___M_GRA__2156DE01]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___M_GRA__2156DE01]  DEFAULT ('B') FOR [M_GRADE]
GO
/****** Object:  Default [DF__TB_ORDER___M_GBN__224B023A]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___M_GBN__224B023A]  DEFAULT ('A') FOR [M_GBN]
GO
/****** Object:  Default [DF__TB_ORDER___ORDER__233F2673]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___ORDER__233F2673]  DEFAULT (getdate()) FOR [ORDER_DATE]
GO
/****** Object:  Default [DF__TB_ORDER___ORDER__24334AAC]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___ORDER__24334AAC]  DEFAULT ('00') FOR [ORDER_STATUS]
GO
/****** Object:  Default [DF__TB_ORDER___TOTAL__25276EE5]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___TOTAL__25276EE5]  DEFAULT ((0)) FOR [TOTAL_ORDER_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___TRANS__261B931E]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___TRANS__261B931E]  DEFAULT ((0)) FOR [TRANS_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___EMP_D__270FB757]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___EMP_D__270FB757]  DEFAULT ((0)) FOR [EMP_DISCOUNT_AMT]
GO
/****** Object:  Default [DF__TB_ORDER___COUPO__2803DB90]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___COUPO__2803DB90]  DEFAULT ((0)) FOR [COUPON_DISCOUNT_AMT]
GO
/****** Object:  Default [DF__TB_ORDER___POINT__28F7FFC9]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___POINT__28F7FFC9]  DEFAULT ((0)) FOR [POINT_USE_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___GRADE__29EC2402]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___GRADE__29EC2402]  DEFAULT ((0)) FOR [GRADE_DISCOUNT_AMT]
GO
/****** Object:  Default [DF__TB_ORDER___DISCO__2AE0483B]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___DISCO__2AE0483B]  DEFAULT ((0)) FOR [DISCOUNT_AMT]
GO
/****** Object:  Default [DF__TB_ORDER___TOTAL__2BD46C74]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___TOTAL__2BD46C74]  DEFAULT ((0)) FOR [TOTAL_PAY_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___FREEG__2CC890AD]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___FREEG__2CC890AD]  DEFAULT ('N') FOR [FREEGIFT_GBN]
GO
/****** Object:  Default [DF__TB_ORDER___ACCML__2DBCB4E6]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___ACCML__2DBCB4E6]  DEFAULT ((0)) FOR [ACCML_POINT]
GO
/****** Object:  Default [DF__TB_ORDER___PAY_G__2EB0D91F]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___PAY_G__2EB0D91F]  DEFAULT ('1') FOR [PAY_GBN]
GO
/****** Object:  Default [DF_TB_ORDER_MASTER_TMP_ESCROW_YN]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF_TB_ORDER_MASTER_TMP_ESCROW_YN]  DEFAULT ('N') FOR [ESCROW_YN]
GO
/****** Object:  Default [DF_TB_ORDER_MASTER_TMP_CARD_GBN]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF_TB_ORDER_MASTER_TMP_CARD_GBN]  DEFAULT ('N') FOR [CARD_GBN]
GO
/****** Object:  Default [DF__TB_ORDER___REG_D__2FA4FD58]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER_TMP] ADD  CONSTRAINT [DF__TB_ORDER___REG_D__2FA4FD58]  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_ORDER___M_GRA__6324A15E]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF__TB_ORDER___M_GRA__6324A15E]  DEFAULT ('B') FOR [M_GRADE]
GO
/****** Object:  Default [DF__TB_ORDER___M_GBN__6418C597]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF__TB_ORDER___M_GBN__6418C597]  DEFAULT ('A') FOR [M_GBN]
GO
/****** Object:  Default [DF__TB_ORDER___ORDER__650CE9D0]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF__TB_ORDER___ORDER__650CE9D0]  DEFAULT (getdate()) FOR [ORDER_DATE]
GO
/****** Object:  Default [DF__TB_ORDER___TOTAL__66010E09]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF__TB_ORDER___TOTAL__66010E09]  DEFAULT ((0)) FOR [TOTAL_ORDER_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___TRANS__66F53242]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF__TB_ORDER___TRANS__66F53242]  DEFAULT ((0)) FOR [TRANS_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___EMP_D__67E9567B]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF__TB_ORDER___EMP_D__67E9567B]  DEFAULT ((0)) FOR [EMP_DISCOUNT_AMT]
GO
/****** Object:  Default [DF__TB_ORDER___COUPO__68DD7AB4]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF__TB_ORDER___COUPO__68DD7AB4]  DEFAULT ((0)) FOR [COUPON_DISCOUNT_AMT]
GO
/****** Object:  Default [DF__TB_ORDER___POINT__69D19EED]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF__TB_ORDER___POINT__69D19EED]  DEFAULT ((0)) FOR [POINT_USE_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___GRADE__6AC5C326]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF__TB_ORDER___GRADE__6AC5C326]  DEFAULT ((0)) FOR [GRADE_DISCOUNT_AMT]
GO
/****** Object:  Default [DF__TB_ORDER___DISCO__6BB9E75F]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF__TB_ORDER___DISCO__6BB9E75F]  DEFAULT ((0)) FOR [DISCOUNT_AMT]
GO
/****** Object:  Default [DF__TB_ORDER___TOTAL__6CAE0B98]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF__TB_ORDER___TOTAL__6CAE0B98]  DEFAULT ((0)) FOR [TOTAL_PAY_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___FREEG__6DA22FD1]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF__TB_ORDER___FREEG__6DA22FD1]  DEFAULT ('N') FOR [FREEGIFT_GBN]
GO
/****** Object:  Default [DF__TB_ORDER___ACCML__6E96540A]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF__TB_ORDER___ACCML__6E96540A]  DEFAULT ((0)) FOR [ACCML_POINT]
GO
/****** Object:  Default [DF__TB_ORDER___PAY_G__6F8A7843]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF__TB_ORDER___PAY_G__6F8A7843]  DEFAULT ('1') FOR [PAY_GBN]
GO
/****** Object:  Default [DF_TB_ORDER_MASTER_ESCROW_YN]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF_TB_ORDER_MASTER_ESCROW_YN]  DEFAULT ('N') FOR [ESCROW_YN]
GO
/****** Object:  Default [DF_TB_ORDER_MASTER_CARD_GBN]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF_TB_ORDER_MASTER_CARD_GBN]  DEFAULT ('N') FOR [CARD_GBN]
GO
/****** Object:  Default [DF__TB_ORDER___REG_D__707E9C7C]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_MASTER] ADD  CONSTRAINT [DF__TB_ORDER___REG_D__707E9C7C]  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_ORDER___REG_D__25FB978D]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_LOG] ADD  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_ORDER___ORDER__08AB2BC8]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___ORDER__08AB2BC8]  DEFAULT ('00') FOR [ORDER_DETAIL_STATUS]
GO
/****** Object:  Default [DF__TB_ORDER___ICON___099F5001]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___ICON___099F5001]  DEFAULT ((0)) FOR [ICON_NEW]
GO
/****** Object:  Default [DF__TB_ORDER___ICON___0A93743A]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___ICON___0A93743A]  DEFAULT ((0)) FOR [ICON_BEST]
GO
/****** Object:  Default [DF__TB_ORDER___ICON___0B879873]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___ICON___0B879873]  DEFAULT ((0)) FOR [ICON_SOLDOUT]
GO
/****** Object:  Default [DF__TB_ORDER___ICON___0C7BBCAC]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___ICON___0C7BBCAC]  DEFAULT ((0)) FOR [ICON_CUSTOM]
GO
/****** Object:  Default [DF__TB_ORDER___ICON___0D6FE0E5]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___ICON___0D6FE0E5]  DEFAULT ((0)) FOR [ICON_ONEPLUS]
GO
/****** Object:  Default [DF__TB_ORDER___ICON___0E64051E]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___ICON___0E64051E]  DEFAULT ((0)) FOR [ICON_SET]
GO
/****** Object:  Default [DF__TB_ORDER___ICON___0F582957]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___ICON___0F582957]  DEFAULT ((0)) FOR [ICON_TIME]
GO
/****** Object:  Default [DF_TB_ORDER_DETAIL_TMP_ICON_COUPON]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF_TB_ORDER_DETAIL_TMP_ICON_COUPON]  DEFAULT ((0)) FOR [ICON_COUPON]
GO
/****** Object:  Default [DF__TB_ORDER___SELLI__104C4D90]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___SELLI__104C4D90]  DEFAULT ((0)) FOR [SELLING_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___DISCO__114071C9]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___DISCO__114071C9]  DEFAULT ((0)) FOR [DISCOUNT_RATE]
GO
/****** Object:  Default [DF__TB_ORDER___DISCO__12349602]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___DISCO__12349602]  DEFAULT ((0)) FOR [DISCOUNT_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___PROMO__1328BA3B]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___PROMO__1328BA3B]  DEFAULT ('99') FOR [PROMOTION_TYPE]
GO
/****** Object:  Default [DF__TB_ORDER___EMP_D__141CDE74]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___EMP_D__141CDE74]  DEFAULT ((1)) FOR [EMP_DISCOUNT]
GO
/****** Object:  Default [DF__TB_ORDER___EMP_P__151102AD]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___EMP_P__151102AD]  DEFAULT ((0)) FOR [EMP_PMO_TOTAL_DISCOUNT_RATE]
GO
/****** Object:  Default [DF__TB_ORDER___EMP_P__160526E6]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___EMP_P__160526E6]  DEFAULT ((0)) FOR [EMP_PMO_TOTAL_DISCOUNT_MONEY]
GO
/****** Object:  Default [DF__TB_ORDER___EMP_D__16F94B1F]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___EMP_D__16F94B1F]  DEFAULT ((0)) FOR [EMP_DISCOUNT_AMT]
GO
/****** Object:  Default [DF__TB_ORDER___EMP_D__17ED6F58]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___EMP_D__17ED6F58]  DEFAULT ((0)) FOR [EMP_DISCOUNT_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___ORDER__18E19391]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___ORDER__18E19391]  DEFAULT ((0)) FOR [ORDER_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___COUPO__19D5B7CA]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___COUPO__19D5B7CA]  DEFAULT ((0)) FOR [COUPON_DISCOUNT_MONEY]
GO
/****** Object:  Default [DF__TB_ORDER___COUPO__1AC9DC03]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___COUPO__1AC9DC03]  DEFAULT ((0)) FOR [COUPON_DISCOUNT_RATE]
GO
/****** Object:  Default [DF__TB_ORDER___COUPO__1BBE003C]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___COUPO__1BBE003C]  DEFAULT ((0)) FOR [COUPON_DISCOUNT_AMT]
GO
/****** Object:  Default [DF__TB_ORDER___COUPO__1CB22475]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___COUPO__1CB22475]  DEFAULT ((0)) FOR [COUPON_DISCOUNT_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___USE_P__1DA648AE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___USE_P__1DA648AE]  DEFAULT ((0)) FOR [USE_POINT]
GO
/****** Object:  Default [DF__TB_ORDER___GRADE__1E9A6CE7]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___GRADE__1E9A6CE7]  DEFAULT ((1)) FOR [GRADE_DISCOUNT]
GO
/****** Object:  Default [DF__TB_ORDER___GRADE__1F8E9120]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___GRADE__1F8E9120]  DEFAULT ((0)) FOR [GRADE_PMO_TOTAL_DISCOUNT_RATE]
GO
/****** Object:  Default [DF__TB_ORDER___GRADE__2082B559]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___GRADE__2082B559]  DEFAULT ((0)) FOR [GRADE_PMO_TOTAL_DISCOUNT_MONEY]
GO
/****** Object:  Default [DF__TB_ORDER___GRADE__2176D992]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___GRADE__2176D992]  DEFAULT ((0)) FOR [GRADE_DISCOUNT_AMT]
GO
/****** Object:  Default [DF__TB_ORDER___POINT__226AFDCB]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___POINT__226AFDCB]  DEFAULT ((0)) FOR [POINT_ACCML]
GO
/****** Object:  Default [DF__TB_ORDER___P_COU__235F2204]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___P_COU__235F2204]  DEFAULT ((1)) FOR [P_COUNT]
GO
/****** Object:  Default [DF__TB_ORDER___REG_D__2453463D]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL_TMP] ADD  CONSTRAINT [DF__TB_ORDER___REG_D__2453463D]  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_ORDER___ICON___7E2D9D55]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___ICON___7E2D9D55]  DEFAULT ((0)) FOR [ICON_NEW]
GO
/****** Object:  Default [DF__TB_ORDER___ICON___7F21C18E]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___ICON___7F21C18E]  DEFAULT ((0)) FOR [ICON_BEST]
GO
/****** Object:  Default [DF__TB_ORDER___ICON___0015E5C7]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___ICON___0015E5C7]  DEFAULT ((0)) FOR [ICON_SOLDOUT]
GO
/****** Object:  Default [DF__TB_ORDER___ICON___010A0A00]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___ICON___010A0A00]  DEFAULT ((0)) FOR [ICON_CUSTOM]
GO
/****** Object:  Default [DF__TB_ORDER___ICON___01FE2E39]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___ICON___01FE2E39]  DEFAULT ((0)) FOR [ICON_ONEPLUS]
GO
/****** Object:  Default [DF__TB_ORDER___ICON___02F25272]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___ICON___02F25272]  DEFAULT ((0)) FOR [ICON_SET]
GO
/****** Object:  Default [DF__TB_ORDER___ICON___03E676AB]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___ICON___03E676AB]  DEFAULT ((0)) FOR [ICON_TIME]
GO
/****** Object:  Default [DF_TB_ORDER_DETAIL_ICON_COUPON]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF_TB_ORDER_DETAIL_ICON_COUPON]  DEFAULT ((0)) FOR [ICON_COUPON]
GO
/****** Object:  Default [DF__TB_ORDER___SELLI__0C26B6F1]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___SELLI__0C26B6F1]  DEFAULT ((0)) FOR [SELLING_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___DISCO__0D1ADB2A]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___DISCO__0D1ADB2A]  DEFAULT ((0)) FOR [DISCOUNT_RATE]
GO
/****** Object:  Default [DF__TB_ORDER___DISCO__0E0EFF63]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___DISCO__0E0EFF63]  DEFAULT ((0)) FOR [DISCOUNT_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___PROMO__0F03239C]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___PROMO__0F03239C]  DEFAULT ('99') FOR [PROMOTION_TYPE]
GO
/****** Object:  Default [DF__TB_ORDER___EMP_D__0FF747D5]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___EMP_D__0FF747D5]  DEFAULT ((1)) FOR [EMP_DISCOUNT]
GO
/****** Object:  Default [DF__TB_ORDER___EMP_P__10EB6C0E]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___EMP_P__10EB6C0E]  DEFAULT ((0)) FOR [EMP_PMO_TOTAL_DISCOUNT_RATE]
GO
/****** Object:  Default [DF__TB_ORDER___EMP_P__11DF9047]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___EMP_P__11DF9047]  DEFAULT ((0)) FOR [EMP_PMO_TOTAL_DISCOUNT_MONEY]
GO
/****** Object:  Default [DF__TB_ORDER___EMP_D__12D3B480]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___EMP_D__12D3B480]  DEFAULT ((0)) FOR [EMP_DISCOUNT_AMT]
GO
/****** Object:  Default [DF__TB_ORDER___EMP_D__13C7D8B9]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___EMP_D__13C7D8B9]  DEFAULT ((0)) FOR [EMP_DISCOUNT_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___ORDER__14BBFCF2]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___ORDER__14BBFCF2]  DEFAULT ((0)) FOR [ORDER_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___COUPO__15B0212B]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___COUPO__15B0212B]  DEFAULT ((0)) FOR [COUPON_DISCOUNT_MONEY]
GO
/****** Object:  Default [DF__TB_ORDER___COUPO__16A44564]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___COUPO__16A44564]  DEFAULT ((0)) FOR [COUPON_DISCOUNT_RATE]
GO
/****** Object:  Default [DF__TB_ORDER___COUPO__1798699D]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___COUPO__1798699D]  DEFAULT ((0)) FOR [COUPON_DISCOUNT_AMT]
GO
/****** Object:  Default [DF__TB_ORDER___COUPO__188C8DD6]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___COUPO__188C8DD6]  DEFAULT ((0)) FOR [COUPON_DISCOUNT_PRICE]
GO
/****** Object:  Default [DF__TB_ORDER___USE_P__1980B20F]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___USE_P__1980B20F]  DEFAULT ((0)) FOR [USE_POINT]
GO
/****** Object:  Default [DF__TB_ORDER___GRADE__1A74D648]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___GRADE__1A74D648]  DEFAULT ((1)) FOR [GRADE_DISCOUNT]
GO
/****** Object:  Default [DF__TB_ORDER___GRADE__1B68FA81]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___GRADE__1B68FA81]  DEFAULT ((0)) FOR [GRADE_PMO_TOTAL_DISCOUNT_RATE]
GO
/****** Object:  Default [DF__TB_ORDER___GRADE__1C5D1EBA]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___GRADE__1C5D1EBA]  DEFAULT ((0)) FOR [GRADE_PMO_TOTAL_DISCOUNT_MONEY]
GO
/****** Object:  Default [DF__TB_ORDER___GRADE__1D5142F3]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___GRADE__1D5142F3]  DEFAULT ((0)) FOR [GRADE_DISCOUNT_AMT]
GO
/****** Object:  Default [DF__TB_ORDER___POINT__1E45672C]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___POINT__1E45672C]  DEFAULT ((0)) FOR [POINT_ACCML]
GO
/****** Object:  Default [DF__TB_ORDER___P_COU__1F398B65]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___P_COU__1F398B65]  DEFAULT ((1)) FOR [P_COUNT]
GO
/****** Object:  Default [DF__TB_ORDER___ORDER__202DAF9E]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___ORDER__202DAF9E]  DEFAULT (getdate()) FOR [ORDER_DETAIL_STATUS_DATE]
GO
/****** Object:  Default [DF__TB_ORDER___EXCHA__2121D3D7]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___EXCHA__2121D3D7]  DEFAULT ('N') FOR [EXCHANGE_YN]
GO
/****** Object:  Default [DF__TB_ORDER___EXCHA__2215F810]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___EXCHA__2215F810]  DEFAULT ((0)) FOR [EXCHANGE_COUNT]
GO
/****** Object:  Default [DF__TB_ORDER___REG_D__230A1C49]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_DETAIL] ADD  CONSTRAINT [DF__TB_ORDER___REG_D__230A1C49]  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_ORDER___REG_D__2724C5F0]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_ORDER_CODE] ADD  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_NOTICE__VIEW___5F7E2DAC]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_NOTICE] ADD  DEFAULT ((0)) FOR [VIEW_CNT]
GO
/****** Object:  Default [DF__TB_NOTICE__DISPL__607251E5]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_NOTICE] ADD  DEFAULT ('N') FOR [DISPLAY_YN]
GO
/****** Object:  Default [DF__TB_NOTICE__REG_D__6166761E]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_NOTICE] ADD  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF_TB_MEMBER_STAFF_REQUST_INS_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER_STAFF_REQUST] ADD  CONSTRAINT [DF_TB_MEMBER_STAFF_REQUST_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_MEMBER_STAFF_REQUST_STATUS]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER_STAFF_REQUST] ADD  CONSTRAINT [DF_TB_MEMBER_STAFF_REQUST_STATUS]  DEFAULT ('접수') FOR [STATUS]
GO
/****** Object:  Default [DF_TB_MEMBER_STAFF_BASE_TMP_INS_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER_STAFF_BASE_TMP] ADD  CONSTRAINT [DF_TB_MEMBER_STAFF_BASE_TMP_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_MEMBER_STAFF_BASE_INS_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER_STAFF_BASE] ADD  CONSTRAINT [DF_TB_MEMBER_STAFF_BASE_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_MEMBER_RETIRE_M_POINT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER_RETIRE] ADD  CONSTRAINT [DF_TB_MEMBER_RETIRE_M_POINT]  DEFAULT ((0)) FOR [M_POINT]
GO
/****** Object:  Default [DF_TB_MEMBER_RETIRE_M_CREDATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER_RETIRE] ADD  CONSTRAINT [DF_TB_MEMBER_RETIRE_M_CREDATE]  DEFAULT (getdate()) FOR [M_CREDATE]
GO
/****** Object:  Default [DF_TB_MEMBER_RETIRE_M_VISITCNT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER_RETIRE] ADD  CONSTRAINT [DF_TB_MEMBER_RETIRE_M_VISITCNT]  DEFAULT ((0)) FOR [M_VISITCNT]
GO
/****** Object:  Default [DF_TB_MEMBER_RETIRE_M_LASTVISITDATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER_RETIRE] ADD  CONSTRAINT [DF_TB_MEMBER_RETIRE_M_LASTVISITDATE]  DEFAULT (getdate()) FOR [M_LASTVISITDATE]
GO
/****** Object:  Default [DF_TB_MEMBER_RETIRE_M_UPDATEDATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER_RETIRE] ADD  CONSTRAINT [DF_TB_MEMBER_RETIRE_M_UPDATEDATE]  DEFAULT (getdate()) FOR [M_UPDATEDATE]
GO
/****** Object:  Default [DF_TB_MEMBER_RETIRE_M_STAFF_FL]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER_RETIRE] ADD  CONSTRAINT [DF_TB_MEMBER_RETIRE_M_STAFF_FL]  DEFAULT ('A') FOR [M_GBN]
GO
/****** Object:  Default [DF_TB_MEMBER_RETIRE_M_IS_RETIRE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER_RETIRE] ADD  CONSTRAINT [DF_TB_MEMBER_RETIRE_M_IS_RETIRE]  DEFAULT ('N') FOR [M_IS_RETIRE]
GO
/****** Object:  Default [DF_TB_MEMBER_RETIRE_M_DEL_POINT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER_RETIRE] ADD  CONSTRAINT [DF_TB_MEMBER_RETIRE_M_DEL_POINT]  DEFAULT ((0)) FOR [M_DEL_POINT]
GO
/****** Object:  Default [DF_TB_MEMBER_REALNAME_CERT_LOG_INS_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER_REALNAME_LOG] ADD  CONSTRAINT [DF_TB_MEMBER_REALNAME_CERT_LOG_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_MEMBER_M_POINT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER] ADD  CONSTRAINT [DF_TB_MEMBER_M_POINT]  DEFAULT ((0)) FOR [M_POINT]
GO
/****** Object:  Default [DF_TB_MEMBER_M_CREDATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER] ADD  CONSTRAINT [DF_TB_MEMBER_M_CREDATE]  DEFAULT (getdate()) FOR [M_CREDATE]
GO
/****** Object:  Default [DF_TB_MEMBER_M_VISITCNT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER] ADD  CONSTRAINT [DF_TB_MEMBER_M_VISITCNT]  DEFAULT ((0)) FOR [M_VISITCNT]
GO
/****** Object:  Default [DF_TB_MEMBER_M_LASTVISITDATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER] ADD  CONSTRAINT [DF_TB_MEMBER_M_LASTVISITDATE]  DEFAULT (getdate()) FOR [M_LASTVISITDATE]
GO
/****** Object:  Default [DF_Table_2_M_LASTVISITDATE1]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER] ADD  CONSTRAINT [DF_Table_2_M_LASTVISITDATE1]  DEFAULT (getdate()) FOR [M_UPDATEDATE]
GO
/****** Object:  Default [DF_TB_MEMBER_M_STAFF_FL]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER] ADD  CONSTRAINT [DF_TB_MEMBER_M_STAFF_FL]  DEFAULT ('A') FOR [M_GBN]
GO
/****** Object:  Default [DF_TB_MEMBER_M_IS_RETIRE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER] ADD  CONSTRAINT [DF_TB_MEMBER_M_IS_RETIRE]  DEFAULT ('N') FOR [M_IS_RETIRE]
GO
/****** Object:  Default [DF_TB_MEMBER_M_DEL_POINT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MEMBER] ADD  CONSTRAINT [DF_TB_MEMBER_M_DEL_POINT]  DEFAULT ((0)) FOR [M_DEL_POINT]
GO
/****** Object:  Default [DF__TB_MAGAZI__CONTE__56FEC19B]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MAGAZINE] ADD  DEFAULT ('I') FOR [CONTENT_GBN]
GO
/****** Object:  Default [DF__TB_MAGAZI__DISPL__57F2E5D4]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MAGAZINE] ADD  DEFAULT ((99)) FOR [DISPLAY_ORDER]
GO
/****** Object:  Default [DF__TB_MAGAZI__USE_Y__58E70A0D]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MAGAZINE] ADD  DEFAULT ('N') FOR [USE_YN]
GO
/****** Object:  Default [DF__TB_MAGAZI__REG_D__59DB2E46]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_MAGAZINE] ADD  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF_TB_LOG_USER_INS_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_LOG_USER] ADD  CONSTRAINT [DF_TB_LOG_USER_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_LOG_ADMIN_INS_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_LOG_ADMIN] ADD  CONSTRAINT [DF_TB_LOG_ADMIN_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_FREE_GIFT_INFO_P_GIFT_COUNT]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_FREE_GIFT_INFO] ADD  CONSTRAINT [DF_TB_FREE_GIFT_INFO_P_GIFT_COUNT]  DEFAULT ((0)) FOR [GIFT_COUNT]
GO
/****** Object:  Default [DF_TB_FREE_GIFT_INFO_CONDITION_PRICE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_FREE_GIFT_INFO] ADD  CONSTRAINT [DF_TB_FREE_GIFT_INFO_CONDITION_PRICE]  DEFAULT ((0)) FOR [USED_COUNT]
GO
/****** Object:  Default [DF_TB_FREE_GIFT_INFO_START_PRICE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_FREE_GIFT_INFO] ADD  CONSTRAINT [DF_TB_FREE_GIFT_INFO_START_PRICE]  DEFAULT ((0)) FOR [START_PRICE]
GO
/****** Object:  Default [DF_TB_FREE_GIFT_INFO_END_PRICE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_FREE_GIFT_INFO] ADD  CONSTRAINT [DF_TB_FREE_GIFT_INFO_END_PRICE]  DEFAULT ((0)) FOR [END_PRICE]
GO
/****** Object:  Default [DF_TB_FREE_GIFT_INFO_DISPLAY_YN]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_FREE_GIFT_INFO] ADD  CONSTRAINT [DF_TB_FREE_GIFT_INFO_DISPLAY_YN]  DEFAULT ('N') FOR [DISPLAY_YN]
GO
/****** Object:  Default [DF_TB_FREE_GIFT_INFO_INS_DATE]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_FREE_GIFT_INFO] ADD  CONSTRAINT [DF_TB_FREE_GIFT_INFO_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_FAQ__VIEW_CNT__6BE40491]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_FAQ] ADD  DEFAULT ((0)) FOR [VIEW_CNT]
GO
/****** Object:  Default [DF__TB_FAQ__DISPLAY___6CD828CA]    Script Date: 09/11/2015 16:07:13 ******/
ALTER TABLE [dbo].[TB_FAQ] ADD  DEFAULT ('N') FOR [DISPLAY_YN]
GO
/****** Object:  Default [DF__TB_FAQ__REG_DATE__6DCC4D03]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_FAQ] ADD  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_EXHIBI__DISPL__7BDB408F]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EXHIBIT_TAB_PRODUCT] ADD  DEFAULT ((99)) FOR [DISPLAY_ORDER]
GO
/****** Object:  Default [DF__TB_EXHIBI__REG_D__7CCF64C8]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EXHIBIT_TAB_PRODUCT] ADD  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_EXHIBI__DISPL__5A7A4CC4]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EXHIBIT_TAB] ADD  DEFAULT ((99)) FOR [DISPLAY_ORDER]
GO
/****** Object:  Default [DF__TB_EXHIBI__REG_D__5B6E70FD]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EXHIBIT_TAB] ADD  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_EXHIBI__FROM___4FFCBE51]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EXHIBIT] ADD  CONSTRAINT [DF__TB_EXHIBI__FROM___4FFCBE51]  DEFAULT ('00') FOR [FROM_TIME]
GO
/****** Object:  Default [DF__TB_EXHIBI__TO_TI__50F0E28A]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EXHIBIT] ADD  CONSTRAINT [DF__TB_EXHIBI__TO_TI__50F0E28A]  DEFAULT ('24') FOR [TO_TIME]
GO
/****** Object:  Default [DF__TB_EXHIBI__EXHIB__51E506C3]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EXHIBIT] ADD  CONSTRAINT [DF__TB_EXHIBI__EXHIB__51E506C3]  DEFAULT ('A') FOR [EXHIBIT_GBN]
GO
/****** Object:  Default [DF_TB_EXHIBIT_DISPLAY_ORDER]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EXHIBIT] ADD  CONSTRAINT [DF_TB_EXHIBIT_DISPLAY_ORDER]  DEFAULT ((0)) FOR [DISPLAY_ORDER]
GO
/****** Object:  Default [DF__TB_EXHIBI__USE_Y__52D92AFC]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EXHIBIT] ADD  CONSTRAINT [DF__TB_EXHIBI__USE_Y__52D92AFC]  DEFAULT ('N') FOR [USE_YN]
GO
/****** Object:  Default [DF__TB_EXHIBI__REG_D__53CD4F35]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EXHIBIT] ADD  CONSTRAINT [DF__TB_EXHIBI__REG_D__53CD4F35]  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_EVENT___REG_D__31783731]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EVENT_MAIN] ADD  CONSTRAINT [DF__TB_EVENT___REG_D__31783731]  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF__TB_EVENT__FROM_T__2141CF68]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EVENT] ADD  CONSTRAINT [DF__TB_EVENT__FROM_T__2141CF68]  DEFAULT ('00') FOR [FROM_TIME]
GO
/****** Object:  Default [DF__TB_EVENT__TO_TIM__2235F3A1]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EVENT] ADD  CONSTRAINT [DF__TB_EVENT__TO_TIM__2235F3A1]  DEFAULT ('24') FOR [TO_TIME]
GO
/****** Object:  Default [DF__TB_EVENT__EVENT___232A17DA]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EVENT] ADD  CONSTRAINT [DF__TB_EVENT__EVENT___232A17DA]  DEFAULT ('A') FOR [EVENT_GBN]
GO
/****** Object:  Default [DF_TB_EVENT_DISPLAY_ORDER]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EVENT] ADD  CONSTRAINT [DF_TB_EVENT_DISPLAY_ORDER]  DEFAULT ((0)) FOR [DISPLAY_ORDER]
GO
/****** Object:  Default [DF__TB_EVENT__USE_YN__241E3C13]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EVENT] ADD  CONSTRAINT [DF__TB_EVENT__USE_YN__241E3C13]  DEFAULT ('N') FOR [USE_YN]
GO
/****** Object:  Default [DF__TB_EVENT__REG_DA__2512604C]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_EVENT] ADD  CONSTRAINT [DF__TB_EVENT__REG_DA__2512604C]  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF_TB_DISPLAY_INS_DATE]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_DISPLAY] ADD  CONSTRAINT [DF_TB_DISPLAY_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_COUPON__INS_D__25518C17]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_COUPON_PRODUCT] ADD  CONSTRAINT [DF__TB_COUPON__INS_D__25518C17]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_COUPON__INS_D__29221CFB]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_COUPON_PRICE_DETAIL] ADD  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_COUPON__INS_D__56DEC60A]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_COUPON_MASTER_NUMBERING] ADD  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF_TB_COUPON_MASTER_ISSUED_YN]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_COUPON_MASTER] ADD  CONSTRAINT [DF_TB_COUPON_MASTER_ISSUED_YN]  DEFAULT ('N') FOR [ISSUE_YN]
GO
/****** Object:  Default [DF__TB_COUPON__INS_D__208CD6FA]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_COUPON_MASTER] ADD  CONSTRAINT [DF__TB_COUPON__INS_D__208CD6FA]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_COUPON__INS_D__22751F6C]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_COUPON_KIND_CATEGORY] ADD  CONSTRAINT [DF__TB_COUPON__INS_D__22751F6C]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_COUPON__ISSUE__3EC74557]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_COUPON_ISSUED_DETAIL] ADD  CONSTRAINT [DF__TB_COUPON__ISSUE__3EC74557]  DEFAULT (getdate()) FOR [ISSUE_DATE]
GO
/****** Object:  Default [DF_TB_CATEGORY_RE_SORT]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_CATEGORY] ADD  CONSTRAINT [DF_TB_CATEGORY_RE_SORT]  DEFAULT ((0)) FOR [RE_SORT]
GO
/****** Object:  Default [DF_TB_CATEGORY_DISPLAY_YN]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_CATEGORY] ADD  CONSTRAINT [DF_TB_CATEGORY_DISPLAY_YN]  DEFAULT ('N') FOR [DISPLAY_YN]
GO
/****** Object:  Default [DF_TB_CATEGORY_INS_DATE]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_CATEGORY] ADD  CONSTRAINT [DF_TB_CATEGORY_INS_DATE]  DEFAULT (getdate()) FOR [INS_DATE]
GO
/****** Object:  Default [DF__TB_CART__P_COUNT__0B5CAFEA]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_CART] ADD  DEFAULT ((1)) FOR [P_COUNT]
GO
/****** Object:  Default [DF__TB_CART__REG_DAT__0C50D423]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_CART] ADD  DEFAULT (getdate()) FOR [REG_DATE]
GO
/****** Object:  Default [DF_TB_ADMIN_MEMBER_ADM_INS_DATE]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_ADMIN_MEMBER] ADD  CONSTRAINT [DF_TB_ADMIN_MEMBER_ADM_INS_DATE]  DEFAULT (getdate()) FOR [ADM_INS_DATE]
GO
/****** Object:  Default [DF_TB_ADMIN_MEMBER_ADM_USE_YN]    Script Date: 09/11/2015 16:07:14 ******/
ALTER TABLE [dbo].[TB_ADMIN_MEMBER] ADD  CONSTRAINT [DF_TB_ADMIN_MEMBER_ADM_USE_YN]  DEFAULT ('Y') FOR [ADM_USE_YN]
GO
